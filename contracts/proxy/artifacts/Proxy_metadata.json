{
	"compiler": {
		"version": "0.8.26+commit.8a97fa7a"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "implementation_",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"stateMutability": "payable",
				"type": "fallback"
			},
			{
				"inputs": [],
				"name": "implementation",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"details": "Proxy合约的所有调用都通过`delegatecall`操作码委托给另一个合约执行。后者被称为逻辑合约（Implementation）。 委托调用的返回值，会直接返回给Proxy的调用者",
			"kind": "dev",
			"methods": {
				"constructor": {
					"details": "初始化逻辑合约地址"
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/proxy/Proxy.sol": "Proxy"
		},
		"evmVersion": "cancun",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/proxy/Proxy.sol": {
			"keccak256": "0x931bf984b0b62495739dc3f67b056bebb58eb418409d8bcaeab8ccba06a6aaf6",
			"license": "MIT",
			"urls": [
				"bzz-raw://ac73fa6e2eea2f12b83e6a5fb5b23b04eaa4a94ee5168844151bd2213adddb63",
				"dweb:/ipfs/QmQ7tC2ZZKkR4dZv6xL5qyaVu9rQ3ML81wxT684RMZjZR6"
			]
		}
	},
	"version": 1
}