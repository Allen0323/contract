{
	"id": "76a04244aa85571fed612bf5c1149a25",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/ERC20/OwnershipLockedToke.sol": {
				"content": "// SPDX-License-Identifier: LGPL-3.0-only\r\npragma solidity ^0.8.6;\r\n\r\nimport \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\n\r\ncontract TokenLock is OwnableUpgradeable, IERC20 {\r\n  ERC20 public token;\r\n  uint256 public depositDeadline;\r\n  uint256 public lockDuration;\r\n\r\n  string public name;\r\n  string public symbol;\r\n  uint256 public override totalSupply;\r\n  mapping(address => uint256) public override balanceOf;\r\n\r\n  /// Withdraw amount exceeds sender's balance of the locked token\r\n  error ExceedsBalance();\r\n  /// Deposit is not possible anymore because the deposit period is over\r\n  error DepositPeriodOver();\r\n  /// Withdraw is not possible because the lock period is not over yet\r\n  error LockPeriodOngoing();\r\n  /// Could not transfer the designated ERC20 token\r\n  error TransferFailed();\r\n  /// ERC-20 function is not supported\r\n  error NotSupported();\r\n\r\n  function initialize(\r\n    address _owner,\r\n    address _token,\r\n    uint256 _depositDeadline,\r\n    uint256 _lockDuration,\r\n    string memory _name,\r\n    string memory _symbol\r\n  ) public initializer {\r\n    transferOwnership(_owner);\r\n    token = ERC20(_token);\r\n    depositDeadline = _depositDeadline;\r\n    lockDuration = _lockDuration;\r\n    name = _name;\r\n    symbol = _symbol;\r\n    totalSupply = 0;\r\n  }\r\n\r\n  /// @dev Deposit tokens to be locked until the end of the locking period\r\n  /// @param amount The amount of tokens to deposit\r\n  function deposit(uint256 amount) public {\r\n    if (block.timestamp > depositDeadline) {\r\n      revert DepositPeriodOver();\r\n    }\r\n\r\n    balanceOf[msg.sender] += amount;\r\n    totalSupply += amount;\r\n\r\n    if (!token.transferFrom(msg.sender, address(this), amount)) {\r\n      revert TransferFailed();\r\n    }\r\n\r\n    emit Transfer(msg.sender, address(this), amount);\r\n  }\r\n\r\n  /// @dev Withdraw tokens after the end of the locking period or during the deposit period\r\n  /// @param amount The amount of tokens to withdraw\r\n  function withdraw(uint256 amount) public {\r\n    if (\r\n      block.timestamp > depositDeadline &&\r\n      block.timestamp < depositDeadline + lockDuration\r\n    ) {\r\n      revert LockPeriodOngoing();\r\n    }\r\n    if (balanceOf[msg.sender] < amount) {\r\n      revert ExceedsBalance();\r\n    }\r\n\r\n    balanceOf[msg.sender] -= amount;\r\n    totalSupply -= amount;\r\n\r\n    if (!token.transfer(msg.sender, amount)) {\r\n      revert TransferFailed();\r\n    }\r\n\r\n    emit Transfer(address(this), msg.sender, amount);\r\n  }\r\n\r\n  /// @dev Returns the number of decimals of the locked token\r\n  function decimals() public view returns (uint8) {\r\n    return token.decimals();\r\n  }\r\n\r\n  /// @dev Lock claim tokens are non-transferrable: ERC-20 transfer is not supported\r\n  function transfer(address, uint256) external pure override returns (bool) {\r\n    revert NotSupported();\r\n  }\r\n\r\n  /// @dev Lock claim tokens are non-transferrable: ERC-20 allowance is not supported\r\n  function allowance(address, address)\r\n    external\r\n    pure\r\n    override\r\n    returns (uint256)\r\n  {\r\n    revert NotSupported();\r\n  }\r\n\r\n  /// @dev Lock claim tokens are non-transferrable: ERC-20 approve is not supported\r\n  function approve(address, uint256) external pure override returns (bool) {\r\n    revert NotSupported();\r\n  }\r\n\r\n  /// @dev Lock claim tokens are non-transferrable: ERC-20 transferFrom is not supported\r\n  function transferFrom(\r\n    address,\r\n    address,\r\n    uint256\r\n  ) external pure override returns (bool) {\r\n    revert NotSupported();\r\n  }\r\n}"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ContextUpgradeable} from \"../utils/ContextUpgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\n    /// @custom:storage-location erc7201:openzeppelin.storage.Ownable\n    struct OwnableStorage {\n        address _owner;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Ownable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant OwnableStorageLocation = 0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300;\n\n    function _getOwnableStorage() private pure returns (OwnableStorage storage $) {\n        assembly {\n            $.slot := OwnableStorageLocation\n        }\n    }\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    function __Ownable_init(address initialOwner) internal onlyInitializing {\n        __Ownable_init_unchained(initialOwner);\n    }\n\n    function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        OwnableStorage storage $ = _getOwnableStorage();\n        return $._owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        OwnableStorage storage $ = _getOwnableStorage();\n        address oldOwner = $._owner;\n        $._owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Storage of the initializable contract.\n     *\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n     * when using with upgradeable contracts.\n     *\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\n     */\n    struct InitializableStorage {\n        /**\n         * @dev Indicates that the contract has been initialized.\n         */\n        uint64 _initialized;\n        /**\n         * @dev Indicates that the contract is in the process of being initialized.\n         */\n        bool _initializing;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Initializable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\n\n    /**\n     * @dev The contract is already initialized.\n     */\n    error InvalidInitialization();\n\n    /**\n     * @dev The contract is not initializing.\n     */\n    error NotInitializing();\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint64 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n     * production.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        // Cache values to avoid duplicated sloads\n        bool isTopLevelCall = !$._initializing;\n        uint64 initialized = $._initialized;\n\n        // Allowed calls:\n        // - initialSetup: the contract is not in the initializing state and no previous version was\n        //                 initialized\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\n        //                 current contract is just being deployed\n        bool initialSetup = initialized == 0 && isTopLevelCall;\n        bool construction = initialized == 1 && address(this).code.length == 0;\n\n        if (!initialSetup && !construction) {\n            revert InvalidInitialization();\n        }\n        $._initialized = 1;\n        if (isTopLevelCall) {\n            $._initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            $._initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint64 version) {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing || $._initialized >= version) {\n            revert InvalidInitialization();\n        }\n        $._initialized = version;\n        $._initializing = true;\n        _;\n        $._initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        _checkInitializing();\n        _;\n    }\n\n    /**\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\n     */\n    function _checkInitializing() internal view virtual {\n        if (!_isInitializing()) {\n            revert NotInitializing();\n        }\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing) {\n            revert InvalidInitialization();\n        }\n        if ($._initialized != type(uint64).max) {\n            $._initialized = type(uint64).max;\n            emit Initialized(type(uint64).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint64) {\n        return _getInitializableStorage()._initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _getInitializableStorage()._initializing;\n    }\n\n    /**\n     * @dev Returns a pointer to the storage namespace.\n     */\n    // solhint-disable-next-line var-name-mixedcase\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\n        assembly {\n            $.slot := INITIALIZABLE_STORAGE\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"OwnableUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":\"OwnableUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"Initializable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"custom:oz-upgrades-unsafe-allow": "constructor constructor() {     _disableInitializers(); } ``` ====",
						"details": "This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ContextUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xbf61ab2ae1d575a17ea58fbb99ca232baddcc4e0eeea180e84cbc74b0c348b31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e0968705bad99747a8e5288aa008678c2be2f471f919dce3925a3cc4f1dee09\",\"dweb:/ipfs/QmbAFnCQfo4tw6ssfQSjhA5LzwHWNNryXN8bX7ty8jiqqn\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 654,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 660,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 662,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 664,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 666,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/ERC20/OwnershipLockedToke.sol": {
				"TokenLock": {
					"abi": [
						{
							"inputs": [],
							"name": "DepositPeriodOver",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ExceedsBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "LockPeriodOngoing",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotSupported",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferFailed",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "depositDeadline",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_depositDeadline",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_lockDuration",
									"type": "uint256"
								},
								{
									"internalType": "string",
									"name": "_name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "_symbol",
									"type": "string"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lockDuration",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token",
							"outputs": [
								{
									"internalType": "contract ERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Lock claim tokens are non-transferrable: ERC-20 allowance is not supported"
							},
							"approve(address,uint256)": {
								"details": "Lock claim tokens are non-transferrable: ERC-20 approve is not supported"
							},
							"decimals()": {
								"details": "Returns the number of decimals of the locked token"
							},
							"deposit(uint256)": {
								"details": "Deposit tokens to be locked until the end of the locking period",
								"params": {
									"amount": "The amount of tokens to deposit"
								}
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transfer(address,uint256)": {
								"details": "Lock claim tokens are non-transferrable: ERC-20 transfer is not supported"
							},
							"transferFrom(address,address,uint256)": {
								"details": "Lock claim tokens are non-transferrable: ERC-20 transferFrom is not supported"
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"withdraw(uint256)": {
								"details": "Withdraw tokens after the end of the locking period or during the deposit period",
								"params": {
									"amount": "The amount of tokens to withdraw"
								}
							}
						},
						"stateVariables": {
							"balanceOf": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply": {
								"details": "Returns the value of tokens in existence."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/ERC20/OwnershipLockedToke.sol\":264:3589  contract TokenLock is OwnableUpgradeable, IERC20 {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/ERC20/OwnershipLockedToke.sol\":264:3589  contract TokenLock is OwnableUpgradeable, IERC20 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      gt\n      tag_21\n      jumpi\n      dup1\n      0xb6b55f25\n      gt\n      tag_22\n      jumpi\n      dup1\n      0xb6b55f25\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xe001ff52\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xfc0c546a\n      eq\n      tag_20\n      jumpi\n      jump(tag_2)\n    tag_22:\n      dup1\n      0x715018a6\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_15\n      jumpi\n      jump(tag_2)\n    tag_21:\n      dup1\n      0x23b872dd\n      gt\n      tag_23\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x2e1a7d4d\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x61603d89\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_23:\n      dup1\n      0x04554443\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/ERC20/OwnershipLockedToke.sol\":376:403  uint256 public lockDuration */\n    tag_3:\n      tag_24\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20/OwnershipLockedToke.sol\":410:428  string public name */\n    tag_4:\n      tag_28\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20/OwnershipLockedToke.sol\":3242:3349  function approve(address, uint256) external pure override returns (bool) {... */\n    tag_5:\n      tag_32\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      tag_35\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20/OwnershipLockedToke.sol\":458:493  uint256 public override totalSupply */\n    tag_6:\n      tag_38\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      tag_40\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20/OwnershipLockedToke.sol\":3445:3586  function transferFrom(... */\n    tag_7:\n      tag_41\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_42\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      tag_44\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      tag_45\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20/OwnershipLockedToke.sol\":2066:2570  function withdraw(uint256 amount) public {... */\n    tag_8:\n      tag_46\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_47\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n      tag_49\n      jump\t// in\n    tag_46:\n      stop\n        /* \"contracts/ERC20/OwnershipLockedToke.sol\":2639:2723  function decimals() public view returns (uint8) {... */\n    tag_9:\n      tag_50\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      tag_52\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20/OwnershipLockedToke.sol\":341:371  uint256 public depositDeadline */\n    tag_10:\n      tag_54\n      tag_55\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      tag_56\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20/OwnershipLockedToke.sol\":498:551  mapping(address => uint256) public override balanceOf */\n    tag_11:\n      tag_57\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_58\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_58:\n      tag_60\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      tag_61\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3155:3256  function renounceOwnership() public virtual onlyOwner {... */\n    tag_12:\n      tag_62\n      tag_63\n      jump\t// in\n    tag_62:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2441:2585  function owner() public view virtual returns (address) {... */\n    tag_13:\n      tag_64\n      tag_65\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      tag_66\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20/OwnershipLockedToke.sol\":433:453  string public symbol */\n    tag_14:\n      tag_68\n      tag_69\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      tag_70\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20/OwnershipLockedToke.sol\":2815:2923  function transfer(address, uint256) external pure override returns (bool) {... */\n    tag_15:\n      tag_71\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_72\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_72:\n      tag_73\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      tag_74\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20/OwnershipLockedToke.sol\":1546:1913  function deposit(uint256 amount) public {... */\n    tag_16:\n      tag_75\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_76\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_76:\n      tag_77\n      jump\t// in\n    tag_75:\n      stop\n        /* \"contracts/ERC20/OwnershipLockedToke.sol\":3016:3151  function allowance(address, address)... */\n    tag_17:\n      tag_78\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_79\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_79:\n      tag_81\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      tag_82\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20/OwnershipLockedToke.sol\":1006:1411  function initialize(... */\n    tag_18:\n      tag_83\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_84\n      swap2\n      swap1\n      tag_85\n      jump\t// in\n    tag_84:\n      tag_86\n      jump\t// in\n    tag_83:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3405:3620  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_19:\n      tag_87\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_88\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_88:\n      tag_89\n      jump\t// in\n    tag_87:\n      stop\n        /* \"contracts/ERC20/OwnershipLockedToke.sol\":318:336  ERC20 public token */\n    tag_20:\n      tag_90\n      tag_91\n      jump\t// in\n    tag_90:\n      mload(0x40)\n      tag_92\n      swap2\n      swap1\n      tag_93\n      jump\t// in\n    tag_92:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20/OwnershipLockedToke.sol\":376:403  uint256 public lockDuration */\n    tag_25:\n      sload(0x02)\n      dup2\n      jump\t// out\n        /* \"contracts/ERC20/OwnershipLockedToke.sol\":410:428  string public name */\n    tag_29:\n      0x03\n      dup1\n      sload\n      tag_94\n      swap1\n      tag_95\n      jump\t// in\n    tag_94:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_96\n      swap1\n      tag_95\n      jump\t// in\n    tag_96:\n      dup1\n      iszero\n      tag_97\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_98\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_97)\n    tag_98:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_99:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_99\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_97:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/ERC20/OwnershipLockedToke.sol\":3242:3349  function approve(address, uint256) external pure override returns (bool) {... */\n    tag_35:\n        /* \"contracts/ERC20/OwnershipLockedToke.sol\":3309:3313  bool */\n      0x00\n        /* \"contracts/ERC20/OwnershipLockedToke.sol\":3329:3343  NotSupported() */\n      mload(0x40)\n      0xa038794000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC20/OwnershipLockedToke.sol\":458:493  uint256 public override totalSupply */\n    tag_39:\n      sload(0x05)\n      dup2\n      jump\t// out\n        /* \"contracts/ERC20/OwnershipLockedToke.sol\":3445:3586  function transferFrom(... */\n    tag_44:\n        /* \"contracts/ERC20/OwnershipLockedToke.sol\":3546:3550  bool */\n      0x00\n        /* \"contracts/ERC20/OwnershipLockedToke.sol\":3566:3580  NotSupported() */\n      mload(0x40)\n      0xa038794000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC20/OwnershipLockedToke.sol\":2066:2570  function withdraw(uint256 amount) public {... */\n    tag_49:\n        /* \"contracts/ERC20/OwnershipLockedToke.sol\":2144:2159  depositDeadline */\n      sload(0x01)\n        /* \"contracts/ERC20/OwnershipLockedToke.sol\":2126:2141  block.timestamp */\n      timestamp\n        /* \"contracts/ERC20/OwnershipLockedToke.sol\":2126:2159  block.timestamp > depositDeadline */\n      gt\n        /* \"contracts/ERC20/OwnershipLockedToke.sol\":2126:2218  block.timestamp > depositDeadline &&... */\n      dup1\n      iszero\n      tag_103\n      jumpi\n      pop\n        /* \"contracts/ERC20/OwnershipLockedToke.sol\":2206:2218  lockDuration */\n      sload(0x02)\n        /* \"contracts/ERC20/OwnershipLockedToke.sol\":2188:2203  depositDeadline */\n      sload(0x01)\n        /* \"contracts/ERC20/OwnershipLockedToke.sol\":2188:2218  depositDeadline + lockDuration */\n      tag_104\n      swap2\n      swap1\n      tag_105\n      jump\t// in\n    tag_104:\n        /* \"contracts/ERC20/OwnershipLockedToke.sol\":2170:2185  block.timestamp */\n      timestamp\n        /* \"contracts/ERC20/OwnershipLockedToke.sol\":2170:2218  block.timestamp < depositDeadline + lockDuration */\n      lt\n        /* \"contracts/ERC20/OwnershipLockedToke.sol\":2126:2218  block.timestamp > depositDeadline &&... */\n    tag_103:\n        /* \"contracts/ERC20/OwnershipLockedToke.sol\":2114:2269  if (... */\n      iszero\n      tag_106\n      jumpi\n        /* \"contracts/ERC20/OwnershipLockedToke.sol\":2242:2261  LockPeriodOngoing() */\n      mload(0x40)\n      0x3c2c6e9d00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC20/OwnershipLockedToke.sol\":2114:2269  if (... */\n    tag_106:\n        /* \"contracts/ERC20/OwnershipLockedToke.sol\":2303:2309  amount */\n      dup1\n        /* \"contracts/ERC20/OwnershipLockedToke.sol\":2279:2288  balanceOf */\n      0x06\n        /* \"contracts/ERC20/OwnershipLockedToke.sol\":2279:2300  balanceOf[msg.sender] */\n      0x00\n        /* \"contracts/ERC20/OwnershipLockedToke.sol\":2289:2299  msg.sender */\n      caller\n        /* \"contracts/ERC20/OwnershipLockedToke.sol\":2279:2300  balanceOf[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/ERC20/OwnershipLockedToke.sol\":2279:2309  balanceOf[msg.sender] < amount */\n      lt\n        /* \"contracts/ERC20/OwnershipLockedToke.sol\":2275:2351  if (balanceOf[msg.sender] < amount) {... */\n      iszero\n      tag_107\n      jumpi\n        /* \"contracts/ERC20/OwnershipLockedToke.sol\":2327:2343  ExceedsBalance() */\n      mload(0x40)\n      0x7fa62f9d00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC20/OwnershipLockedToke.sol\":2275:2351  if (balanceOf[msg.sender] < amount) {... */\n    tag_107:\n        /* \"contracts/ERC20/OwnershipLockedToke.sol\":2384:2390  amount */\n      dup1\n        /* \"contracts/ERC20/OwnershipLockedToke.sol\":2359:2368  balanceOf */\n      0x06\n        /* \"contracts/ERC20/OwnershipLockedToke.sol\":2359:2380  balanceOf[msg.sender] */\n      0x00\n        /* \"contracts/ERC20/OwnershipLockedToke.sol\":2369:2379  msg.sender */\n      caller\n        /* \"contracts/ERC20/OwnershipLockedToke.sol\":2359:2380  balanceOf[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/ERC20/OwnershipLockedToke.sol\":2359:2390  balanceOf[msg.sender] -= amount */\n      dup3\n      dup3\n      sload\n      tag_108\n      swap2\n      swap1\n      tag_109\n      jump\t// in\n    tag_108:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC20/OwnershipLockedToke.sol\":2412:2418  amount */\n      dup1\n        /* \"contracts/ERC20/OwnershipLockedToke.sol\":2397:2408  totalSupply */\n      0x05\n      0x00\n        /* \"contracts/ERC20/OwnershipLockedToke.sol\":2397:2418  totalSupply -= amount */\n      dup3\n      dup3\n      sload\n      tag_110\n      swap2\n      swap1\n      tag_109\n      jump\t// in\n    tag_110:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC20/OwnershipLockedToke.sol\":2432:2437  token */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC20/OwnershipLockedToke.sol\":2432:2446  token.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/ERC20/OwnershipLockedToke.sol\":2447:2457  msg.sender */\n      caller\n        /* \"contracts/ERC20/OwnershipLockedToke.sol\":2459:2465  amount */\n      dup4\n        /* \"contracts/ERC20/OwnershipLockedToke.sol\":2432:2466  token.transfer(msg.sender, amount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_111\n      swap3\n      swap2\n      swap1\n      tag_112\n      jump\t// in\n    tag_111:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_114\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_114:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_115\n      swap2\n      swap1\n      tag_116\n      jump\t// in\n    tag_115:\n        /* \"contracts/ERC20/OwnershipLockedToke.sol\":2427:2508  if (!token.transfer(msg.sender, amount)) {... */\n      tag_117\n      jumpi\n        /* \"contracts/ERC20/OwnershipLockedToke.sol\":2484:2500  TransferFailed() */\n      mload(0x40)\n      0x90b8ec1800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC20/OwnershipLockedToke.sol\":2427:2508  if (!token.transfer(msg.sender, amount)) {... */\n    tag_117:\n        /* \"contracts/ERC20/OwnershipLockedToke.sol\":2545:2555  msg.sender */\n      caller\n        /* \"contracts/ERC20/OwnershipLockedToke.sol\":2521:2564  Transfer(address(this), msg.sender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC20/OwnershipLockedToke.sol\":2538:2542  this */\n      address\n        /* \"contracts/ERC20/OwnershipLockedToke.sol\":2521:2564  Transfer(address(this), msg.sender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/ERC20/OwnershipLockedToke.sol\":2557:2563  amount */\n      dup4\n        /* \"contracts/ERC20/OwnershipLockedToke.sol\":2521:2564  Transfer(address(this), msg.sender, amount) */\n      mload(0x40)\n      tag_118\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_118:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/ERC20/OwnershipLockedToke.sol\":2066:2570  function withdraw(uint256 amount) public {... */\n      pop\n      jump\t// out\n        /* \"contracts/ERC20/OwnershipLockedToke.sol\":2639:2723  function decimals() public view returns (uint8) {... */\n    tag_51:\n        /* \"contracts/ERC20/OwnershipLockedToke.sol\":2680:2685  uint8 */\n      0x00\n        /* \"contracts/ERC20/OwnershipLockedToke.sol\":2701:2706  token */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC20/OwnershipLockedToke.sol\":2701:2715  token.decimals */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x313ce567\n        /* \"contracts/ERC20/OwnershipLockedToke.sol\":2701:2717  token.decimals() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_121\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_121:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_122\n      swap2\n      swap1\n      tag_123\n      jump\t// in\n    tag_122:\n        /* \"contracts/ERC20/OwnershipLockedToke.sol\":2694:2717  return token.decimals() */\n      swap1\n      pop\n        /* \"contracts/ERC20/OwnershipLockedToke.sol\":2639:2723  function decimals() public view returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/ERC20/OwnershipLockedToke.sol\":341:371  uint256 public depositDeadline */\n    tag_55:\n      sload(0x01)\n      dup2\n      jump\t// out\n        /* \"contracts/ERC20/OwnershipLockedToke.sol\":498:551  mapping(address => uint256) public override balanceOf */\n    tag_60:\n      mstore(0x20, 0x06)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3155:3256  function renounceOwnership() public virtual onlyOwner {... */\n    tag_63:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_125\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_126\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_125:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3219:3249  _transferOwnership(address(0)) */\n      tag_128\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3246:3247  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3219:3237  _transferOwnership */\n      tag_129\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3219:3249  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_128:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3155:3256  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2441:2585  function owner() public view virtual returns (address) {... */\n    tag_65:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2487:2494  address */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2506:2530  OwnableStorage storage $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2533:2553  _getOwnableStorage() */\n      tag_131\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2533:2551  _getOwnableStorage */\n      tag_132\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2533:2553  _getOwnableStorage() */\n      jump\t// in\n    tag_131:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2506:2553  OwnableStorage storage $ = _getOwnableStorage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2570:2571  $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2570:2578  $._owner */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2563:2578  return $._owner */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2441:2585  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/ERC20/OwnershipLockedToke.sol\":433:453  string public symbol */\n    tag_69:\n      0x04\n      dup1\n      sload\n      tag_133\n      swap1\n      tag_95\n      jump\t// in\n    tag_133:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_134\n      swap1\n      tag_95\n      jump\t// in\n    tag_134:\n      dup1\n      iszero\n      tag_135\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_136\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_135)\n    tag_136:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_137:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_137\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_135:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/ERC20/OwnershipLockedToke.sol\":2815:2923  function transfer(address, uint256) external pure override returns (bool) {... */\n    tag_73:\n        /* \"contracts/ERC20/OwnershipLockedToke.sol\":2883:2887  bool */\n      0x00\n        /* \"contracts/ERC20/OwnershipLockedToke.sol\":2903:2917  NotSupported() */\n      mload(0x40)\n      0xa038794000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC20/OwnershipLockedToke.sol\":1546:1913  function deposit(uint256 amount) public {... */\n    tag_77:\n        /* \"contracts/ERC20/OwnershipLockedToke.sol\":1615:1630  depositDeadline */\n      sload(0x01)\n        /* \"contracts/ERC20/OwnershipLockedToke.sol\":1597:1612  block.timestamp */\n      timestamp\n        /* \"contracts/ERC20/OwnershipLockedToke.sol\":1597:1630  block.timestamp > depositDeadline */\n      gt\n        /* \"contracts/ERC20/OwnershipLockedToke.sol\":1593:1675  if (block.timestamp > depositDeadline) {... */\n      iszero\n      tag_140\n      jumpi\n        /* \"contracts/ERC20/OwnershipLockedToke.sol\":1648:1667  DepositPeriodOver() */\n      mload(0x40)\n      0x9883528e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC20/OwnershipLockedToke.sol\":1593:1675  if (block.timestamp > depositDeadline) {... */\n    tag_140:\n        /* \"contracts/ERC20/OwnershipLockedToke.sol\":1708:1714  amount */\n      dup1\n        /* \"contracts/ERC20/OwnershipLockedToke.sol\":1683:1692  balanceOf */\n      0x06\n        /* \"contracts/ERC20/OwnershipLockedToke.sol\":1683:1704  balanceOf[msg.sender] */\n      0x00\n        /* \"contracts/ERC20/OwnershipLockedToke.sol\":1693:1703  msg.sender */\n      caller\n        /* \"contracts/ERC20/OwnershipLockedToke.sol\":1683:1704  balanceOf[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/ERC20/OwnershipLockedToke.sol\":1683:1714  balanceOf[msg.sender] += amount */\n      dup3\n      dup3\n      sload\n      tag_141\n      swap2\n      swap1\n      tag_105\n      jump\t// in\n    tag_141:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC20/OwnershipLockedToke.sol\":1736:1742  amount */\n      dup1\n        /* \"contracts/ERC20/OwnershipLockedToke.sol\":1721:1732  totalSupply */\n      0x05\n      0x00\n        /* \"contracts/ERC20/OwnershipLockedToke.sol\":1721:1742  totalSupply += amount */\n      dup3\n      dup3\n      sload\n      tag_142\n      swap2\n      swap1\n      tag_105\n      jump\t// in\n    tag_142:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC20/OwnershipLockedToke.sol\":1756:1761  token */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC20/OwnershipLockedToke.sol\":1756:1774  token.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/ERC20/OwnershipLockedToke.sol\":1775:1785  msg.sender */\n      caller\n        /* \"contracts/ERC20/OwnershipLockedToke.sol\":1795:1799  this */\n      address\n        /* \"contracts/ERC20/OwnershipLockedToke.sol\":1802:1808  amount */\n      dup5\n        /* \"contracts/ERC20/OwnershipLockedToke.sol\":1756:1809  token.transferFrom(msg.sender, address(this), amount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_143\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_144\n      jump\t// in\n    tag_143:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_146\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_146:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_147\n      swap2\n      swap1\n      tag_116\n      jump\t// in\n    tag_147:\n        /* \"contracts/ERC20/OwnershipLockedToke.sol\":1751:1851  if (!token.transferFrom(msg.sender, address(this), amount)) {... */\n      tag_148\n      jumpi\n        /* \"contracts/ERC20/OwnershipLockedToke.sol\":1827:1843  TransferFailed() */\n      mload(0x40)\n      0x90b8ec1800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC20/OwnershipLockedToke.sol\":1751:1851  if (!token.transferFrom(msg.sender, address(this), amount)) {... */\n    tag_148:\n        /* \"contracts/ERC20/OwnershipLockedToke.sol\":1893:1897  this */\n      address\n        /* \"contracts/ERC20/OwnershipLockedToke.sol\":1864:1907  Transfer(msg.sender, address(this), amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC20/OwnershipLockedToke.sol\":1873:1883  msg.sender */\n      caller\n        /* \"contracts/ERC20/OwnershipLockedToke.sol\":1864:1907  Transfer(msg.sender, address(this), amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/ERC20/OwnershipLockedToke.sol\":1900:1906  amount */\n      dup4\n        /* \"contracts/ERC20/OwnershipLockedToke.sol\":1864:1907  Transfer(msg.sender, address(this), amount) */\n      mload(0x40)\n      tag_149\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_149:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/ERC20/OwnershipLockedToke.sol\":1546:1913  function deposit(uint256 amount) public {... */\n      pop\n      jump\t// out\n        /* \"contracts/ERC20/OwnershipLockedToke.sol\":3016:3151  function allowance(address, address)... */\n    tag_81:\n        /* \"contracts/ERC20/OwnershipLockedToke.sol\":3105:3112  uint256 */\n      0x00\n        /* \"contracts/ERC20/OwnershipLockedToke.sol\":3131:3145  NotSupported() */\n      mload(0x40)\n      0xa038794000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC20/OwnershipLockedToke.sol\":1006:1411  function initialize(... */\n    tag_86:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4158:4188  InitializableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4191:4217  _getInitializableStorage() */\n      tag_152\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4191:4215  _getInitializableStorage */\n      tag_153\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4191:4217  _getInitializableStorage() */\n      jump\t// in\n    tag_152:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4158:4217  InitializableStorage storage $ = _getInitializableStorage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4279:4298  bool isTopLevelCall */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4302:4303  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4302:4317  $._initializing */\n      0x00\n      add\n      0x08\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4301:4317  !$._initializing */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4279:4317  bool isTopLevelCall = !$._initializing */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4327:4345  uint64 initialized */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4348:4349  $ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4348:4362  $._initialized */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4327:4362  uint64 initialized = $._initialized */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4706:4723  bool initialSetup */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4741:4742  0 */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4737  initialized */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4742  initialized == 0 */\n      0xffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4760  initialized == 0 && isTopLevelCall */\n      dup1\n      iszero\n      tag_154\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4746:4760  isTopLevelCall */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4760  initialized == 0 && isTopLevelCall */\n    tag_154:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4706:4760  bool initialSetup = initialized == 0 && isTopLevelCall */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4770:4787  bool construction */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4805:4806  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4801  initialized */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4806  initialized == 1 */\n      0xffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4840  initialized == 1 && address(this).code.length == 0 */\n      dup1\n      iszero\n      tag_155\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4839:4840  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4818:4822  this */\n      address\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4810:4835  address(this).code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4810:4840  address(this).code.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4840  initialized == 1 && address(this).code.length == 0 */\n    tag_155:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4770:4840  bool construction = initialized == 1 && address(this).code.length == 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4856:4868  initialSetup */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4855:4868  !initialSetup */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4855:4885  !initialSetup && !construction */\n      dup1\n      iszero\n      tag_156\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4873:4885  construction */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4872:4885  !construction */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4855:4885  !initialSetup && !construction */\n    tag_156:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4851:4942  if (!initialSetup && !construction) {... */\n      iszero\n      tag_157\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4908:4931  InvalidInitialization() */\n      mload(0x40)\n      0xf92ee8a900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4851:4942  if (!initialSetup && !construction) {... */\n    tag_157:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4968:4969  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4951:4952  $ */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4951:4965  $._initialized */\n      0x00\n      add\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4951:4969  $._initialized = 1 */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4983:4997  isTopLevelCall */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4979:5046  if (isTopLevelCall) {... */\n      iszero\n      tag_158\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5031:5035  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5013:5014  $ */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5013:5028  $._initializing */\n      0x00\n      add\n      0x08\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5013:5035  $._initializing = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4979:5046  if (isTopLevelCall) {... */\n    tag_158:\n        /* \"contracts/ERC20/OwnershipLockedToke.sol\":1212:1237  transferOwnership(_owner) */\n      tag_160\n        /* \"contracts/ERC20/OwnershipLockedToke.sol\":1230:1236  _owner */\n      dup12\n        /* \"contracts/ERC20/OwnershipLockedToke.sol\":1212:1229  transferOwnership */\n      tag_89\n        /* \"contracts/ERC20/OwnershipLockedToke.sol\":1212:1237  transferOwnership(_owner) */\n      jump\t// in\n    tag_160:\n        /* \"contracts/ERC20/OwnershipLockedToke.sol\":1258:1264  _token */\n      dup10\n        /* \"contracts/ERC20/OwnershipLockedToke.sol\":1244:1249  token */\n      0x00\n      dup1\n        /* \"contracts/ERC20/OwnershipLockedToke.sol\":1244:1265  token = ERC20(_token) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC20/OwnershipLockedToke.sol\":1290:1306  _depositDeadline */\n      dup9\n        /* \"contracts/ERC20/OwnershipLockedToke.sol\":1272:1287  depositDeadline */\n      0x01\n        /* \"contracts/ERC20/OwnershipLockedToke.sol\":1272:1306  depositDeadline = _depositDeadline */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC20/OwnershipLockedToke.sol\":1328:1341  _lockDuration */\n      dup8\n        /* \"contracts/ERC20/OwnershipLockedToke.sol\":1313:1325  lockDuration */\n      0x02\n        /* \"contracts/ERC20/OwnershipLockedToke.sol\":1313:1341  lockDuration = _lockDuration */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC20/OwnershipLockedToke.sol\":1355:1360  _name */\n      dup7\n        /* \"contracts/ERC20/OwnershipLockedToke.sol\":1348:1352  name */\n      0x03\n        /* \"contracts/ERC20/OwnershipLockedToke.sol\":1348:1360  name = _name */\n      swap1\n      dup2\n      tag_161\n      swap2\n      swap1\n      tag_162\n      jump\t// in\n    tag_161:\n      pop\n        /* \"contracts/ERC20/OwnershipLockedToke.sol\":1376:1383  _symbol */\n      dup6\n        /* \"contracts/ERC20/OwnershipLockedToke.sol\":1367:1373  symbol */\n      0x04\n        /* \"contracts/ERC20/OwnershipLockedToke.sol\":1367:1383  symbol = _symbol */\n      swap1\n      dup2\n      tag_163\n      swap2\n      swap1\n      tag_162\n      jump\t// in\n    tag_163:\n      pop\n        /* \"contracts/ERC20/OwnershipLockedToke.sol\":1404:1405  0 */\n      0x00\n        /* \"contracts/ERC20/OwnershipLockedToke.sol\":1390:1401  totalSupply */\n      0x05\n        /* \"contracts/ERC20/OwnershipLockedToke.sol\":1390:1405  totalSupply = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5070:5084  isTopLevelCall */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5066:5167  if (isTopLevelCall) {... */\n      iszero\n      tag_164\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5118:5123  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5100:5101  $ */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5100:5115  $._initializing */\n      0x00\n      add\n      0x08\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5100:5123  $._initializing = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5142:5156  Initialized(1) */\n      0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5154:5155  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5142:5156  Initialized(1) */\n      mload(0x40)\n      tag_165\n      swap2\n      swap1\n      tag_166\n      jump\t// in\n    tag_165:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5066:5167  if (isTopLevelCall) {... */\n    tag_164:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4092:5173  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/ERC20/OwnershipLockedToke.sol\":1006:1411  function initialize(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3405:3620  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_89:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_168\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_126\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_168:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3509:3510  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3489:3511  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3489:3497  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3489:3511  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3485:3576  if (newOwner == address(0)) {... */\n      tag_170\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3562:3563  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3534:3565  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_171\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_171:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3485:3576  if (newOwner == address(0)) {... */\n    tag_170:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3585:3613  _transferOwnership(newOwner) */\n      tag_172\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3604:3612  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3585:3603  _transferOwnership */\n      tag_129\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3585:3613  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_172:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3405:3620  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/ERC20/OwnershipLockedToke.sol\":318:336  ERC20 public token */\n    tag_91:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2658:2820  function _checkOwner() internal view virtual {... */\n    tag_126:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2728:2740  _msgSender() */\n      tag_174\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2728:2738  _msgSender */\n      tag_175\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2728:2740  _msgSender() */\n      jump\t// in\n    tag_174:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2740  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2724  owner() */\n      tag_176\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2722  owner */\n      tag_65\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2724  owner() */\n      jump\t// in\n    tag_176:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2740  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2713:2814  if (owner() != _msgSender()) {... */\n      tag_177\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2790:2802  _msgSender() */\n      tag_178\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2790:2800  _msgSender */\n      tag_175\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2790:2802  _msgSender() */\n      jump\t// in\n    tag_178:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2763:2803  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_179\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_179:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2713:2814  if (owner() != _msgSender()) {... */\n    tag_177:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2658:2820  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3774:4022  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_129:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3847:3871  OwnableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3874:3894  _getOwnableStorage() */\n      tag_181\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3874:3892  _getOwnableStorage */\n      tag_132\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3874:3894  _getOwnableStorage() */\n      jump\t// in\n    tag_181:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3847:3894  OwnableStorage storage $ = _getOwnableStorage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3904:3920  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3923:3924  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3923:3931  $._owner */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3904:3931  address oldOwner = $._owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3952:3960  newOwner */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3941:3942  $ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3941:3949  $._owner */\n      0x00\n      add\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3941:3960  $._owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":4006:4014  newOwner */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3975:4015  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3996:4004  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3975:4015  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3837:4022  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3774:4022  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1192:1351  function _getOwnableStorage() private pure returns (OwnableStorage storage $) {... */\n    tag_132:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1244:1268  OwnableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1313:1335  OwnableStorageLocation */\n      0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1303:1335  $.slot := OwnableStorageLocation */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1192:1351  function _getOwnableStorage() private pure returns (OwnableStorage storage $) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8737:8907  function _getInitializableStorage() private pure returns (InitializableStorage storage $) {... */\n    tag_153:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8795:8825  InitializableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8870:8891  INITIALIZABLE_STORAGE */\n      0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8860:8891  $.slot := INITIALIZABLE_STORAGE */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8737:8907  function _getInitializableStorage() private pure returns (InitializableStorage storage $) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":887:983  function _msgSender() internal view virtual returns (address) {... */\n    tag_175:\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":940:947  address */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":959:976  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":887:983  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_185:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:208   */\n    tag_186:\n        /* \"#utility.yul\":177:201   */\n      tag_247\n        /* \"#utility.yul\":195:200   */\n      dup2\n        /* \"#utility.yul\":177:201   */\n      tag_185\n      jump\t// in\n    tag_247:\n        /* \"#utility.yul\":172:175   */\n      dup3\n        /* \"#utility.yul\":165:202   */\n      mstore\n        /* \"#utility.yul\":90:208   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":214:436   */\n    tag_27:\n        /* \"#utility.yul\":307:311   */\n      0x00\n        /* \"#utility.yul\":345:347   */\n      0x20\n        /* \"#utility.yul\":334:343   */\n      dup3\n        /* \"#utility.yul\":330:348   */\n      add\n        /* \"#utility.yul\":322:348   */\n      swap1\n      pop\n        /* \"#utility.yul\":358:429   */\n      tag_249\n        /* \"#utility.yul\":426:427   */\n      0x00\n        /* \"#utility.yul\":415:424   */\n      dup4\n        /* \"#utility.yul\":411:428   */\n      add\n        /* \"#utility.yul\":402:408   */\n      dup5\n        /* \"#utility.yul\":358:429   */\n      tag_186\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":214:436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":442:541   */\n    tag_187:\n        /* \"#utility.yul\":494:500   */\n      0x00\n        /* \"#utility.yul\":528:533   */\n      dup2\n        /* \"#utility.yul\":522:534   */\n      mload\n        /* \"#utility.yul\":512:534   */\n      swap1\n      pop\n        /* \"#utility.yul\":442:541   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":547:716   */\n    tag_188:\n        /* \"#utility.yul\":631:642   */\n      0x00\n        /* \"#utility.yul\":665:671   */\n      dup3\n        /* \"#utility.yul\":660:663   */\n      dup3\n        /* \"#utility.yul\":653:672   */\n      mstore\n        /* \"#utility.yul\":705:709   */\n      0x20\n        /* \"#utility.yul\":700:703   */\n      dup3\n        /* \"#utility.yul\":696:710   */\n      add\n        /* \"#utility.yul\":681:710   */\n      swap1\n      pop\n        /* \"#utility.yul\":547:716   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":722:861   */\n    tag_189:\n        /* \"#utility.yul\":811:817   */\n      dup3\n        /* \"#utility.yul\":806:809   */\n      dup2\n        /* \"#utility.yul\":801:804   */\n      dup4\n        /* \"#utility.yul\":795:818   */\n      mcopy\n        /* \"#utility.yul\":852:853   */\n      0x00\n        /* \"#utility.yul\":843:849   */\n      dup4\n        /* \"#utility.yul\":838:841   */\n      dup4\n        /* \"#utility.yul\":834:850   */\n      add\n        /* \"#utility.yul\":827:854   */\n      mstore\n        /* \"#utility.yul\":722:861   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":867:969   */\n    tag_190:\n        /* \"#utility.yul\":908:914   */\n      0x00\n        /* \"#utility.yul\":959:961   */\n      0x1f\n        /* \"#utility.yul\":955:962   */\n      not\n        /* \"#utility.yul\":950:952   */\n      0x1f\n        /* \"#utility.yul\":943:948   */\n      dup4\n        /* \"#utility.yul\":939:953   */\n      add\n        /* \"#utility.yul\":935:963   */\n      and\n        /* \"#utility.yul\":925:963   */\n      swap1\n      pop\n        /* \"#utility.yul\":867:969   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":975:1352   */\n    tag_191:\n        /* \"#utility.yul\":1063:1066   */\n      0x00\n        /* \"#utility.yul\":1091:1130   */\n      tag_255\n        /* \"#utility.yul\":1124:1129   */\n      dup3\n        /* \"#utility.yul\":1091:1130   */\n      tag_187\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":1146:1217   */\n      tag_256\n        /* \"#utility.yul\":1210:1216   */\n      dup2\n        /* \"#utility.yul\":1205:1208   */\n      dup6\n        /* \"#utility.yul\":1146:1217   */\n      tag_188\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":1139:1217   */\n      swap4\n      pop\n        /* \"#utility.yul\":1226:1291   */\n      tag_257\n        /* \"#utility.yul\":1284:1290   */\n      dup2\n        /* \"#utility.yul\":1279:1282   */\n      dup6\n        /* \"#utility.yul\":1272:1276   */\n      0x20\n        /* \"#utility.yul\":1265:1270   */\n      dup7\n        /* \"#utility.yul\":1261:1277   */\n      add\n        /* \"#utility.yul\":1226:1291   */\n      tag_189\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":1316:1345   */\n      tag_258\n        /* \"#utility.yul\":1338:1344   */\n      dup2\n        /* \"#utility.yul\":1316:1345   */\n      tag_190\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":1311:1314   */\n      dup5\n        /* \"#utility.yul\":1307:1346   */\n      add\n        /* \"#utility.yul\":1300:1346   */\n      swap2\n      pop\n        /* \"#utility.yul\":1067:1352   */\n      pop\n        /* \"#utility.yul\":975:1352   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1358:1671   */\n    tag_31:\n        /* \"#utility.yul\":1471:1475   */\n      0x00\n        /* \"#utility.yul\":1509:1511   */\n      0x20\n        /* \"#utility.yul\":1498:1507   */\n      dup3\n        /* \"#utility.yul\":1494:1512   */\n      add\n        /* \"#utility.yul\":1486:1512   */\n      swap1\n      pop\n        /* \"#utility.yul\":1558:1567   */\n      dup2\n        /* \"#utility.yul\":1552:1556   */\n      dup2\n        /* \"#utility.yul\":1548:1568   */\n      sub\n        /* \"#utility.yul\":1544:1545   */\n      0x00\n        /* \"#utility.yul\":1533:1542   */\n      dup4\n        /* \"#utility.yul\":1529:1546   */\n      add\n        /* \"#utility.yul\":1522:1569   */\n      mstore\n        /* \"#utility.yul\":1586:1664   */\n      tag_260\n        /* \"#utility.yul\":1659:1663   */\n      dup2\n        /* \"#utility.yul\":1650:1656   */\n      dup5\n        /* \"#utility.yul\":1586:1664   */\n      tag_191\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":1578:1664   */\n      swap1\n      pop\n        /* \"#utility.yul\":1358:1671   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1677:1752   */\n    tag_192:\n        /* \"#utility.yul\":1710:1716   */\n      0x00\n        /* \"#utility.yul\":1743:1745   */\n      0x40\n        /* \"#utility.yul\":1737:1746   */\n      mload\n        /* \"#utility.yul\":1727:1746   */\n      swap1\n      pop\n        /* \"#utility.yul\":1677:1752   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":1758:1875   */\n    tag_193:\n        /* \"#utility.yul\":1867:1868   */\n      0x00\n        /* \"#utility.yul\":1864:1865   */\n      dup1\n        /* \"#utility.yul\":1857:1869   */\n      revert\n        /* \"#utility.yul\":1881:1998   */\n    tag_194:\n        /* \"#utility.yul\":1990:1991   */\n      0x00\n        /* \"#utility.yul\":1987:1988   */\n      dup1\n        /* \"#utility.yul\":1980:1992   */\n      revert\n        /* \"#utility.yul\":2004:2130   */\n    tag_195:\n        /* \"#utility.yul\":2041:2048   */\n      0x00\n        /* \"#utility.yul\":2081:2123   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2074:2079   */\n      dup3\n        /* \"#utility.yul\":2070:2124   */\n      and\n        /* \"#utility.yul\":2059:2124   */\n      swap1\n      pop\n        /* \"#utility.yul\":2004:2130   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2136:2232   */\n    tag_196:\n        /* \"#utility.yul\":2173:2180   */\n      0x00\n        /* \"#utility.yul\":2202:2226   */\n      tag_266\n        /* \"#utility.yul\":2220:2225   */\n      dup3\n        /* \"#utility.yul\":2202:2226   */\n      tag_195\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":2191:2226   */\n      swap1\n      pop\n        /* \"#utility.yul\":2136:2232   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2238:2360   */\n    tag_197:\n        /* \"#utility.yul\":2311:2335   */\n      tag_268\n        /* \"#utility.yul\":2329:2334   */\n      dup2\n        /* \"#utility.yul\":2311:2335   */\n      tag_196\n      jump\t// in\n    tag_268:\n        /* \"#utility.yul\":2304:2309   */\n      dup2\n        /* \"#utility.yul\":2301:2336   */\n      eq\n        /* \"#utility.yul\":2291:2354   */\n      tag_269\n      jumpi\n        /* \"#utility.yul\":2350:2351   */\n      0x00\n        /* \"#utility.yul\":2347:2348   */\n      dup1\n        /* \"#utility.yul\":2340:2352   */\n      revert\n        /* \"#utility.yul\":2291:2354   */\n    tag_269:\n        /* \"#utility.yul\":2238:2360   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2366:2505   */\n    tag_198:\n        /* \"#utility.yul\":2412:2417   */\n      0x00\n        /* \"#utility.yul\":2450:2456   */\n      dup2\n        /* \"#utility.yul\":2437:2457   */\n      calldataload\n        /* \"#utility.yul\":2428:2457   */\n      swap1\n      pop\n        /* \"#utility.yul\":2466:2499   */\n      tag_271\n        /* \"#utility.yul\":2493:2498   */\n      dup2\n        /* \"#utility.yul\":2466:2499   */\n      tag_197\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":2366:2505   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2511:2633   */\n    tag_199:\n        /* \"#utility.yul\":2584:2608   */\n      tag_273\n        /* \"#utility.yul\":2602:2607   */\n      dup2\n        /* \"#utility.yul\":2584:2608   */\n      tag_185\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":2577:2582   */\n      dup2\n        /* \"#utility.yul\":2574:2609   */\n      eq\n        /* \"#utility.yul\":2564:2627   */\n      tag_274\n      jumpi\n        /* \"#utility.yul\":2623:2624   */\n      0x00\n        /* \"#utility.yul\":2620:2621   */\n      dup1\n        /* \"#utility.yul\":2613:2625   */\n      revert\n        /* \"#utility.yul\":2564:2627   */\n    tag_274:\n        /* \"#utility.yul\":2511:2633   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2639:2778   */\n    tag_200:\n        /* \"#utility.yul\":2685:2690   */\n      0x00\n        /* \"#utility.yul\":2723:2729   */\n      dup2\n        /* \"#utility.yul\":2710:2730   */\n      calldataload\n        /* \"#utility.yul\":2701:2730   */\n      swap1\n      pop\n        /* \"#utility.yul\":2739:2772   */\n      tag_276\n        /* \"#utility.yul\":2766:2771   */\n      dup2\n        /* \"#utility.yul\":2739:2772   */\n      tag_199\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":2639:2778   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2784:3258   */\n    tag_34:\n        /* \"#utility.yul\":2852:2858   */\n      0x00\n        /* \"#utility.yul\":2860:2866   */\n      dup1\n        /* \"#utility.yul\":2909:2911   */\n      0x40\n        /* \"#utility.yul\":2897:2906   */\n      dup4\n        /* \"#utility.yul\":2888:2895   */\n      dup6\n        /* \"#utility.yul\":2884:2907   */\n      sub\n        /* \"#utility.yul\":2880:2912   */\n      slt\n        /* \"#utility.yul\":2877:2996   */\n      iszero\n      tag_278\n      jumpi\n        /* \"#utility.yul\":2915:2994   */\n      tag_279\n      tag_193\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":2877:2996   */\n    tag_278:\n        /* \"#utility.yul\":3035:3036   */\n      0x00\n        /* \"#utility.yul\":3060:3113   */\n      tag_280\n        /* \"#utility.yul\":3105:3112   */\n      dup6\n        /* \"#utility.yul\":3096:3102   */\n      dup3\n        /* \"#utility.yul\":3085:3094   */\n      dup7\n        /* \"#utility.yul\":3081:3103   */\n      add\n        /* \"#utility.yul\":3060:3113   */\n      tag_198\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":3050:3113   */\n      swap3\n      pop\n        /* \"#utility.yul\":3006:3123   */\n      pop\n        /* \"#utility.yul\":3162:3164   */\n      0x20\n        /* \"#utility.yul\":3188:3241   */\n      tag_281\n        /* \"#utility.yul\":3233:3240   */\n      dup6\n        /* \"#utility.yul\":3224:3230   */\n      dup3\n        /* \"#utility.yul\":3213:3222   */\n      dup7\n        /* \"#utility.yul\":3209:3231   */\n      add\n        /* \"#utility.yul\":3188:3241   */\n      tag_200\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":3178:3241   */\n      swap2\n      pop\n        /* \"#utility.yul\":3133:3251   */\n      pop\n        /* \"#utility.yul\":2784:3258   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3264:3354   */\n    tag_201:\n        /* \"#utility.yul\":3298:3305   */\n      0x00\n        /* \"#utility.yul\":3341:3346   */\n      dup2\n        /* \"#utility.yul\":3334:3347   */\n      iszero\n        /* \"#utility.yul\":3327:3348   */\n      iszero\n        /* \"#utility.yul\":3316:3348   */\n      swap1\n      pop\n        /* \"#utility.yul\":3264:3354   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3360:3469   */\n    tag_202:\n        /* \"#utility.yul\":3441:3462   */\n      tag_284\n        /* \"#utility.yul\":3456:3461   */\n      dup2\n        /* \"#utility.yul\":3441:3462   */\n      tag_201\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":3436:3439   */\n      dup3\n        /* \"#utility.yul\":3429:3463   */\n      mstore\n        /* \"#utility.yul\":3360:3469   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3475:3685   */\n    tag_37:\n        /* \"#utility.yul\":3562:3566   */\n      0x00\n        /* \"#utility.yul\":3600:3602   */\n      0x20\n        /* \"#utility.yul\":3589:3598   */\n      dup3\n        /* \"#utility.yul\":3585:3603   */\n      add\n        /* \"#utility.yul\":3577:3603   */\n      swap1\n      pop\n        /* \"#utility.yul\":3613:3678   */\n      tag_286\n        /* \"#utility.yul\":3675:3676   */\n      0x00\n        /* \"#utility.yul\":3664:3673   */\n      dup4\n        /* \"#utility.yul\":3660:3677   */\n      add\n        /* \"#utility.yul\":3651:3657   */\n      dup5\n        /* \"#utility.yul\":3613:3678   */\n      tag_202\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":3475:3685   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3691:4310   */\n    tag_43:\n        /* \"#utility.yul\":3768:3774   */\n      0x00\n        /* \"#utility.yul\":3776:3782   */\n      dup1\n        /* \"#utility.yul\":3784:3790   */\n      0x00\n        /* \"#utility.yul\":3833:3835   */\n      0x60\n        /* \"#utility.yul\":3821:3830   */\n      dup5\n        /* \"#utility.yul\":3812:3819   */\n      dup7\n        /* \"#utility.yul\":3808:3831   */\n      sub\n        /* \"#utility.yul\":3804:3836   */\n      slt\n        /* \"#utility.yul\":3801:3920   */\n      iszero\n      tag_288\n      jumpi\n        /* \"#utility.yul\":3839:3918   */\n      tag_289\n      tag_193\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":3801:3920   */\n    tag_288:\n        /* \"#utility.yul\":3959:3960   */\n      0x00\n        /* \"#utility.yul\":3984:4037   */\n      tag_290\n        /* \"#utility.yul\":4029:4036   */\n      dup7\n        /* \"#utility.yul\":4020:4026   */\n      dup3\n        /* \"#utility.yul\":4009:4018   */\n      dup8\n        /* \"#utility.yul\":4005:4027   */\n      add\n        /* \"#utility.yul\":3984:4037   */\n      tag_198\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":3974:4037   */\n      swap4\n      pop\n        /* \"#utility.yul\":3930:4047   */\n      pop\n        /* \"#utility.yul\":4086:4088   */\n      0x20\n        /* \"#utility.yul\":4112:4165   */\n      tag_291\n        /* \"#utility.yul\":4157:4164   */\n      dup7\n        /* \"#utility.yul\":4148:4154   */\n      dup3\n        /* \"#utility.yul\":4137:4146   */\n      dup8\n        /* \"#utility.yul\":4133:4155   */\n      add\n        /* \"#utility.yul\":4112:4165   */\n      tag_198\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":4102:4165   */\n      swap3\n      pop\n        /* \"#utility.yul\":4057:4175   */\n      pop\n        /* \"#utility.yul\":4214:4216   */\n      0x40\n        /* \"#utility.yul\":4240:4293   */\n      tag_292\n        /* \"#utility.yul\":4285:4292   */\n      dup7\n        /* \"#utility.yul\":4276:4282   */\n      dup3\n        /* \"#utility.yul\":4265:4274   */\n      dup8\n        /* \"#utility.yul\":4261:4283   */\n      add\n        /* \"#utility.yul\":4240:4293   */\n      tag_200\n      jump\t// in\n    tag_292:\n        /* \"#utility.yul\":4230:4293   */\n      swap2\n      pop\n        /* \"#utility.yul\":4185:4303   */\n      pop\n        /* \"#utility.yul\":3691:4310   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4316:4645   */\n    tag_48:\n        /* \"#utility.yul\":4375:4381   */\n      0x00\n        /* \"#utility.yul\":4424:4426   */\n      0x20\n        /* \"#utility.yul\":4412:4421   */\n      dup3\n        /* \"#utility.yul\":4403:4410   */\n      dup5\n        /* \"#utility.yul\":4399:4422   */\n      sub\n        /* \"#utility.yul\":4395:4427   */\n      slt\n        /* \"#utility.yul\":4392:4511   */\n      iszero\n      tag_294\n      jumpi\n        /* \"#utility.yul\":4430:4509   */\n      tag_295\n      tag_193\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":4392:4511   */\n    tag_294:\n        /* \"#utility.yul\":4550:4551   */\n      0x00\n        /* \"#utility.yul\":4575:4628   */\n      tag_296\n        /* \"#utility.yul\":4620:4627   */\n      dup5\n        /* \"#utility.yul\":4611:4617   */\n      dup3\n        /* \"#utility.yul\":4600:4609   */\n      dup6\n        /* \"#utility.yul\":4596:4618   */\n      add\n        /* \"#utility.yul\":4575:4628   */\n      tag_200\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":4565:4628   */\n      swap2\n      pop\n        /* \"#utility.yul\":4521:4638   */\n      pop\n        /* \"#utility.yul\":4316:4645   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4651:4737   */\n    tag_203:\n        /* \"#utility.yul\":4686:4693   */\n      0x00\n        /* \"#utility.yul\":4726:4730   */\n      0xff\n        /* \"#utility.yul\":4719:4724   */\n      dup3\n        /* \"#utility.yul\":4715:4731   */\n      and\n        /* \"#utility.yul\":4704:4731   */\n      swap1\n      pop\n        /* \"#utility.yul\":4651:4737   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4743:4855   */\n    tag_204:\n        /* \"#utility.yul\":4826:4848   */\n      tag_299\n        /* \"#utility.yul\":4842:4847   */\n      dup2\n        /* \"#utility.yul\":4826:4848   */\n      tag_203\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":4821:4824   */\n      dup3\n        /* \"#utility.yul\":4814:4849   */\n      mstore\n        /* \"#utility.yul\":4743:4855   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4861:5075   */\n    tag_53:\n        /* \"#utility.yul\":4950:4954   */\n      0x00\n        /* \"#utility.yul\":4988:4990   */\n      0x20\n        /* \"#utility.yul\":4977:4986   */\n      dup3\n        /* \"#utility.yul\":4973:4991   */\n      add\n        /* \"#utility.yul\":4965:4991   */\n      swap1\n      pop\n        /* \"#utility.yul\":5001:5068   */\n      tag_301\n        /* \"#utility.yul\":5065:5066   */\n      0x00\n        /* \"#utility.yul\":5054:5063   */\n      dup4\n        /* \"#utility.yul\":5050:5067   */\n      add\n        /* \"#utility.yul\":5041:5047   */\n      dup5\n        /* \"#utility.yul\":5001:5068   */\n      tag_204\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":4861:5075   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5081:5410   */\n    tag_59:\n        /* \"#utility.yul\":5140:5146   */\n      0x00\n        /* \"#utility.yul\":5189:5191   */\n      0x20\n        /* \"#utility.yul\":5177:5186   */\n      dup3\n        /* \"#utility.yul\":5168:5175   */\n      dup5\n        /* \"#utility.yul\":5164:5187   */\n      sub\n        /* \"#utility.yul\":5160:5192   */\n      slt\n        /* \"#utility.yul\":5157:5276   */\n      iszero\n      tag_303\n      jumpi\n        /* \"#utility.yul\":5195:5274   */\n      tag_304\n      tag_193\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":5157:5276   */\n    tag_303:\n        /* \"#utility.yul\":5315:5316   */\n      0x00\n        /* \"#utility.yul\":5340:5393   */\n      tag_305\n        /* \"#utility.yul\":5385:5392   */\n      dup5\n        /* \"#utility.yul\":5376:5382   */\n      dup3\n        /* \"#utility.yul\":5365:5374   */\n      dup6\n        /* \"#utility.yul\":5361:5383   */\n      add\n        /* \"#utility.yul\":5340:5393   */\n      tag_198\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":5330:5393   */\n      swap2\n      pop\n        /* \"#utility.yul\":5286:5403   */\n      pop\n        /* \"#utility.yul\":5081:5410   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5416:5534   */\n    tag_205:\n        /* \"#utility.yul\":5503:5527   */\n      tag_307\n        /* \"#utility.yul\":5521:5526   */\n      dup2\n        /* \"#utility.yul\":5503:5527   */\n      tag_196\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":5498:5501   */\n      dup3\n        /* \"#utility.yul\":5491:5528   */\n      mstore\n        /* \"#utility.yul\":5416:5534   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5540:5762   */\n    tag_67:\n        /* \"#utility.yul\":5633:5637   */\n      0x00\n        /* \"#utility.yul\":5671:5673   */\n      0x20\n        /* \"#utility.yul\":5660:5669   */\n      dup3\n        /* \"#utility.yul\":5656:5674   */\n      add\n        /* \"#utility.yul\":5648:5674   */\n      swap1\n      pop\n        /* \"#utility.yul\":5684:5755   */\n      tag_309\n        /* \"#utility.yul\":5752:5753   */\n      0x00\n        /* \"#utility.yul\":5741:5750   */\n      dup4\n        /* \"#utility.yul\":5737:5754   */\n      add\n        /* \"#utility.yul\":5728:5734   */\n      dup5\n        /* \"#utility.yul\":5684:5755   */\n      tag_205\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":5540:5762   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5768:6242   */\n    tag_80:\n        /* \"#utility.yul\":5836:5842   */\n      0x00\n        /* \"#utility.yul\":5844:5850   */\n      dup1\n        /* \"#utility.yul\":5893:5895   */\n      0x40\n        /* \"#utility.yul\":5881:5890   */\n      dup4\n        /* \"#utility.yul\":5872:5879   */\n      dup6\n        /* \"#utility.yul\":5868:5891   */\n      sub\n        /* \"#utility.yul\":5864:5896   */\n      slt\n        /* \"#utility.yul\":5861:5980   */\n      iszero\n      tag_311\n      jumpi\n        /* \"#utility.yul\":5899:5978   */\n      tag_312\n      tag_193\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":5861:5980   */\n    tag_311:\n        /* \"#utility.yul\":6019:6020   */\n      0x00\n        /* \"#utility.yul\":6044:6097   */\n      tag_313\n        /* \"#utility.yul\":6089:6096   */\n      dup6\n        /* \"#utility.yul\":6080:6086   */\n      dup3\n        /* \"#utility.yul\":6069:6078   */\n      dup7\n        /* \"#utility.yul\":6065:6087   */\n      add\n        /* \"#utility.yul\":6044:6097   */\n      tag_198\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":6034:6097   */\n      swap3\n      pop\n        /* \"#utility.yul\":5990:6107   */\n      pop\n        /* \"#utility.yul\":6146:6148   */\n      0x20\n        /* \"#utility.yul\":6172:6225   */\n      tag_314\n        /* \"#utility.yul\":6217:6224   */\n      dup6\n        /* \"#utility.yul\":6208:6214   */\n      dup3\n        /* \"#utility.yul\":6197:6206   */\n      dup7\n        /* \"#utility.yul\":6193:6215   */\n      add\n        /* \"#utility.yul\":6172:6225   */\n      tag_198\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":6162:6225   */\n      swap2\n      pop\n        /* \"#utility.yul\":6117:6235   */\n      pop\n        /* \"#utility.yul\":5768:6242   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6248:6365   */\n    tag_206:\n        /* \"#utility.yul\":6357:6358   */\n      0x00\n        /* \"#utility.yul\":6354:6355   */\n      dup1\n        /* \"#utility.yul\":6347:6359   */\n      revert\n        /* \"#utility.yul\":6371:6488   */\n    tag_207:\n        /* \"#utility.yul\":6480:6481   */\n      0x00\n        /* \"#utility.yul\":6477:6478   */\n      dup1\n        /* \"#utility.yul\":6470:6482   */\n      revert\n        /* \"#utility.yul\":6494:6674   */\n    tag_208:\n        /* \"#utility.yul\":6542:6619   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6539:6540   */\n      0x00\n        /* \"#utility.yul\":6532:6620   */\n      mstore\n        /* \"#utility.yul\":6639:6643   */\n      0x41\n        /* \"#utility.yul\":6636:6637   */\n      0x04\n        /* \"#utility.yul\":6629:6644   */\n      mstore\n        /* \"#utility.yul\":6663:6667   */\n      0x24\n        /* \"#utility.yul\":6660:6661   */\n      0x00\n        /* \"#utility.yul\":6653:6668   */\n      revert\n        /* \"#utility.yul\":6680:6961   */\n    tag_209:\n        /* \"#utility.yul\":6763:6790   */\n      tag_319\n        /* \"#utility.yul\":6785:6789   */\n      dup3\n        /* \"#utility.yul\":6763:6790   */\n      tag_190\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":6755:6761   */\n      dup2\n        /* \"#utility.yul\":6751:6791   */\n      add\n        /* \"#utility.yul\":6893:6899   */\n      dup2\n        /* \"#utility.yul\":6881:6891   */\n      dup2\n        /* \"#utility.yul\":6878:6900   */\n      lt\n        /* \"#utility.yul\":6857:6875   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6845:6855   */\n      dup3\n        /* \"#utility.yul\":6842:6876   */\n      gt\n        /* \"#utility.yul\":6839:6901   */\n      or\n        /* \"#utility.yul\":6836:6924   */\n      iszero\n      tag_320\n      jumpi\n        /* \"#utility.yul\":6904:6922   */\n      tag_321\n      tag_208\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":6836:6924   */\n    tag_320:\n        /* \"#utility.yul\":6944:6954   */\n      dup1\n        /* \"#utility.yul\":6940:6942   */\n      0x40\n        /* \"#utility.yul\":6933:6955   */\n      mstore\n        /* \"#utility.yul\":6723:6961   */\n      pop\n        /* \"#utility.yul\":6680:6961   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6967:7096   */\n    tag_210:\n        /* \"#utility.yul\":7001:7007   */\n      0x00\n        /* \"#utility.yul\":7028:7048   */\n      tag_323\n      tag_192\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":7018:7048   */\n      swap1\n      pop\n        /* \"#utility.yul\":7057:7090   */\n      tag_324\n        /* \"#utility.yul\":7085:7089   */\n      dup3\n        /* \"#utility.yul\":7077:7083   */\n      dup3\n        /* \"#utility.yul\":7057:7090   */\n      tag_209\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":6967:7096   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7102:7410   */\n    tag_211:\n        /* \"#utility.yul\":7164:7168   */\n      0x00\n        /* \"#utility.yul\":7254:7272   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7246:7252   */\n      dup3\n        /* \"#utility.yul\":7243:7273   */\n      gt\n        /* \"#utility.yul\":7240:7296   */\n      iszero\n      tag_326\n      jumpi\n        /* \"#utility.yul\":7276:7294   */\n      tag_327\n      tag_208\n      jump\t// in\n    tag_327:\n        /* \"#utility.yul\":7240:7296   */\n    tag_326:\n        /* \"#utility.yul\":7314:7343   */\n      tag_328\n        /* \"#utility.yul\":7336:7342   */\n      dup3\n        /* \"#utility.yul\":7314:7343   */\n      tag_190\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":7306:7343   */\n      swap1\n      pop\n        /* \"#utility.yul\":7398:7402   */\n      0x20\n        /* \"#utility.yul\":7392:7396   */\n      dup2\n        /* \"#utility.yul\":7388:7403   */\n      add\n        /* \"#utility.yul\":7380:7403   */\n      swap1\n      pop\n        /* \"#utility.yul\":7102:7410   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7416:7564   */\n    tag_212:\n        /* \"#utility.yul\":7514:7520   */\n      dup3\n        /* \"#utility.yul\":7509:7512   */\n      dup2\n        /* \"#utility.yul\":7504:7507   */\n      dup4\n        /* \"#utility.yul\":7491:7521   */\n      calldatacopy\n        /* \"#utility.yul\":7555:7556   */\n      0x00\n        /* \"#utility.yul\":7546:7552   */\n      dup4\n        /* \"#utility.yul\":7541:7544   */\n      dup4\n        /* \"#utility.yul\":7537:7553   */\n      add\n        /* \"#utility.yul\":7530:7557   */\n      mstore\n        /* \"#utility.yul\":7416:7564   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7570:7995   */\n    tag_213:\n        /* \"#utility.yul\":7648:7653   */\n      0x00\n        /* \"#utility.yul\":7673:7739   */\n      tag_331\n        /* \"#utility.yul\":7689:7738   */\n      tag_332\n        /* \"#utility.yul\":7731:7737   */\n      dup5\n        /* \"#utility.yul\":7689:7738   */\n      tag_211\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":7673:7739   */\n      tag_210\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":7664:7739   */\n      swap1\n      pop\n        /* \"#utility.yul\":7762:7768   */\n      dup3\n        /* \"#utility.yul\":7755:7760   */\n      dup2\n        /* \"#utility.yul\":7748:7769   */\n      mstore\n        /* \"#utility.yul\":7800:7804   */\n      0x20\n        /* \"#utility.yul\":7793:7798   */\n      dup2\n        /* \"#utility.yul\":7789:7805   */\n      add\n        /* \"#utility.yul\":7838:7841   */\n      dup5\n        /* \"#utility.yul\":7829:7835   */\n      dup5\n        /* \"#utility.yul\":7824:7827   */\n      dup5\n        /* \"#utility.yul\":7820:7836   */\n      add\n        /* \"#utility.yul\":7817:7842   */\n      gt\n        /* \"#utility.yul\":7814:7926   */\n      iszero\n      tag_333\n      jumpi\n        /* \"#utility.yul\":7845:7924   */\n      tag_334\n      tag_207\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":7814:7926   */\n    tag_333:\n        /* \"#utility.yul\":7935:7989   */\n      tag_335\n        /* \"#utility.yul\":7982:7988   */\n      dup5\n        /* \"#utility.yul\":7977:7980   */\n      dup3\n        /* \"#utility.yul\":7972:7975   */\n      dup6\n        /* \"#utility.yul\":7935:7989   */\n      tag_212\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":7654:7995   */\n      pop\n        /* \"#utility.yul\":7570:7995   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8015:8355   */\n    tag_214:\n        /* \"#utility.yul\":8071:8076   */\n      0x00\n        /* \"#utility.yul\":8120:8123   */\n      dup3\n        /* \"#utility.yul\":8113:8117   */\n      0x1f\n        /* \"#utility.yul\":8105:8111   */\n      dup4\n        /* \"#utility.yul\":8101:8118   */\n      add\n        /* \"#utility.yul\":8097:8124   */\n      slt\n        /* \"#utility.yul\":8087:8209   */\n      tag_337\n      jumpi\n        /* \"#utility.yul\":8128:8207   */\n      tag_338\n      tag_206\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":8087:8209   */\n    tag_337:\n        /* \"#utility.yul\":8245:8251   */\n      dup2\n        /* \"#utility.yul\":8232:8252   */\n      calldataload\n        /* \"#utility.yul\":8270:8349   */\n      tag_339\n        /* \"#utility.yul\":8345:8348   */\n      dup5\n        /* \"#utility.yul\":8337:8343   */\n      dup3\n        /* \"#utility.yul\":8330:8334   */\n      0x20\n        /* \"#utility.yul\":8322:8328   */\n      dup7\n        /* \"#utility.yul\":8318:8335   */\n      add\n        /* \"#utility.yul\":8270:8349   */\n      tag_213\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":8261:8349   */\n      swap2\n      pop\n        /* \"#utility.yul\":8077:8355   */\n      pop\n        /* \"#utility.yul\":8015:8355   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8361:9778   */\n    tag_85:\n        /* \"#utility.yul\":8485:8491   */\n      0x00\n        /* \"#utility.yul\":8493:8499   */\n      dup1\n        /* \"#utility.yul\":8501:8507   */\n      0x00\n        /* \"#utility.yul\":8509:8515   */\n      dup1\n        /* \"#utility.yul\":8517:8523   */\n      0x00\n        /* \"#utility.yul\":8525:8531   */\n      dup1\n        /* \"#utility.yul\":8574:8577   */\n      0xc0\n        /* \"#utility.yul\":8562:8571   */\n      dup8\n        /* \"#utility.yul\":8553:8560   */\n      dup10\n        /* \"#utility.yul\":8549:8572   */\n      sub\n        /* \"#utility.yul\":8545:8578   */\n      slt\n        /* \"#utility.yul\":8542:8662   */\n      iszero\n      tag_341\n      jumpi\n        /* \"#utility.yul\":8581:8660   */\n      tag_342\n      tag_193\n      jump\t// in\n    tag_342:\n        /* \"#utility.yul\":8542:8662   */\n    tag_341:\n        /* \"#utility.yul\":8701:8702   */\n      0x00\n        /* \"#utility.yul\":8726:8779   */\n      tag_343\n        /* \"#utility.yul\":8771:8778   */\n      dup10\n        /* \"#utility.yul\":8762:8768   */\n      dup3\n        /* \"#utility.yul\":8751:8760   */\n      dup11\n        /* \"#utility.yul\":8747:8769   */\n      add\n        /* \"#utility.yul\":8726:8779   */\n      tag_198\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":8716:8779   */\n      swap7\n      pop\n        /* \"#utility.yul\":8672:8789   */\n      pop\n        /* \"#utility.yul\":8828:8830   */\n      0x20\n        /* \"#utility.yul\":8854:8907   */\n      tag_344\n        /* \"#utility.yul\":8899:8906   */\n      dup10\n        /* \"#utility.yul\":8890:8896   */\n      dup3\n        /* \"#utility.yul\":8879:8888   */\n      dup11\n        /* \"#utility.yul\":8875:8897   */\n      add\n        /* \"#utility.yul\":8854:8907   */\n      tag_198\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":8844:8907   */\n      swap6\n      pop\n        /* \"#utility.yul\":8799:8917   */\n      pop\n        /* \"#utility.yul\":8956:8958   */\n      0x40\n        /* \"#utility.yul\":8982:9035   */\n      tag_345\n        /* \"#utility.yul\":9027:9034   */\n      dup10\n        /* \"#utility.yul\":9018:9024   */\n      dup3\n        /* \"#utility.yul\":9007:9016   */\n      dup11\n        /* \"#utility.yul\":9003:9025   */\n      add\n        /* \"#utility.yul\":8982:9035   */\n      tag_200\n      jump\t// in\n    tag_345:\n        /* \"#utility.yul\":8972:9035   */\n      swap5\n      pop\n        /* \"#utility.yul\":8927:9045   */\n      pop\n        /* \"#utility.yul\":9084:9086   */\n      0x60\n        /* \"#utility.yul\":9110:9163   */\n      tag_346\n        /* \"#utility.yul\":9155:9162   */\n      dup10\n        /* \"#utility.yul\":9146:9152   */\n      dup3\n        /* \"#utility.yul\":9135:9144   */\n      dup11\n        /* \"#utility.yul\":9131:9153   */\n      add\n        /* \"#utility.yul\":9110:9163   */\n      tag_200\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":9100:9163   */\n      swap4\n      pop\n        /* \"#utility.yul\":9055:9173   */\n      pop\n        /* \"#utility.yul\":9240:9243   */\n      0x80\n        /* \"#utility.yul\":9229:9238   */\n      dup8\n        /* \"#utility.yul\":9225:9244   */\n      add\n        /* \"#utility.yul\":9212:9245   */\n      calldataload\n        /* \"#utility.yul\":9272:9290   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9264:9270   */\n      dup2\n        /* \"#utility.yul\":9261:9291   */\n      gt\n        /* \"#utility.yul\":9258:9375   */\n      iszero\n      tag_347\n      jumpi\n        /* \"#utility.yul\":9294:9373   */\n      tag_348\n      tag_194\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":9258:9375   */\n    tag_347:\n        /* \"#utility.yul\":9399:9462   */\n      tag_349\n        /* \"#utility.yul\":9454:9461   */\n      dup10\n        /* \"#utility.yul\":9445:9451   */\n      dup3\n        /* \"#utility.yul\":9434:9443   */\n      dup11\n        /* \"#utility.yul\":9430:9452   */\n      add\n        /* \"#utility.yul\":9399:9462   */\n      tag_214\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":9389:9462   */\n      swap3\n      pop\n        /* \"#utility.yul\":9183:9472   */\n      pop\n        /* \"#utility.yul\":9539:9542   */\n      0xa0\n        /* \"#utility.yul\":9528:9537   */\n      dup8\n        /* \"#utility.yul\":9524:9543   */\n      add\n        /* \"#utility.yul\":9511:9544   */\n      calldataload\n        /* \"#utility.yul\":9571:9589   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9563:9569   */\n      dup2\n        /* \"#utility.yul\":9560:9590   */\n      gt\n        /* \"#utility.yul\":9557:9674   */\n      iszero\n      tag_350\n      jumpi\n        /* \"#utility.yul\":9593:9672   */\n      tag_351\n      tag_194\n      jump\t// in\n    tag_351:\n        /* \"#utility.yul\":9557:9674   */\n    tag_350:\n        /* \"#utility.yul\":9698:9761   */\n      tag_352\n        /* \"#utility.yul\":9753:9760   */\n      dup10\n        /* \"#utility.yul\":9744:9750   */\n      dup3\n        /* \"#utility.yul\":9733:9742   */\n      dup11\n        /* \"#utility.yul\":9729:9751   */\n      add\n        /* \"#utility.yul\":9698:9761   */\n      tag_214\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":9688:9761   */\n      swap2\n      pop\n        /* \"#utility.yul\":9482:9771   */\n      pop\n        /* \"#utility.yul\":8361:9778   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      jump\t// out\n        /* \"#utility.yul\":9784:9844   */\n    tag_215:\n        /* \"#utility.yul\":9812:9815   */\n      0x00\n        /* \"#utility.yul\":9833:9838   */\n      dup2\n        /* \"#utility.yul\":9826:9838   */\n      swap1\n      pop\n        /* \"#utility.yul\":9784:9844   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9850:9992   */\n    tag_216:\n        /* \"#utility.yul\":9900:9909   */\n      0x00\n        /* \"#utility.yul\":9933:9986   */\n      tag_355\n        /* \"#utility.yul\":9951:9985   */\n      tag_356\n        /* \"#utility.yul\":9960:9984   */\n      tag_357\n        /* \"#utility.yul\":9978:9983   */\n      dup5\n        /* \"#utility.yul\":9960:9984   */\n      tag_195\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":9951:9985   */\n      tag_215\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":9933:9986   */\n      tag_195\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":9920:9986   */\n      swap1\n      pop\n        /* \"#utility.yul\":9850:9992   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9998:10124   */\n    tag_217:\n        /* \"#utility.yul\":10048:10057   */\n      0x00\n        /* \"#utility.yul\":10081:10118   */\n      tag_359\n        /* \"#utility.yul\":10112:10117   */\n      dup3\n        /* \"#utility.yul\":10081:10118   */\n      tag_216\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":10068:10118   */\n      swap1\n      pop\n        /* \"#utility.yul\":9998:10124   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10130:10270   */\n    tag_218:\n        /* \"#utility.yul\":10194:10203   */\n      0x00\n        /* \"#utility.yul\":10227:10264   */\n      tag_361\n        /* \"#utility.yul\":10258:10263   */\n      dup3\n        /* \"#utility.yul\":10227:10264   */\n      tag_217\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":10214:10264   */\n      swap1\n      pop\n        /* \"#utility.yul\":10130:10270   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10276:10435   */\n    tag_219:\n        /* \"#utility.yul\":10377:10428   */\n      tag_363\n        /* \"#utility.yul\":10422:10427   */\n      dup2\n        /* \"#utility.yul\":10377:10428   */\n      tag_218\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":10372:10375   */\n      dup3\n        /* \"#utility.yul\":10365:10429   */\n      mstore\n        /* \"#utility.yul\":10276:10435   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10441:10691   */\n    tag_93:\n        /* \"#utility.yul\":10548:10552   */\n      0x00\n        /* \"#utility.yul\":10586:10588   */\n      0x20\n        /* \"#utility.yul\":10575:10584   */\n      dup3\n        /* \"#utility.yul\":10571:10589   */\n      add\n        /* \"#utility.yul\":10563:10589   */\n      swap1\n      pop\n        /* \"#utility.yul\":10599:10684   */\n      tag_365\n        /* \"#utility.yul\":10681:10682   */\n      0x00\n        /* \"#utility.yul\":10670:10679   */\n      dup4\n        /* \"#utility.yul\":10666:10683   */\n      add\n        /* \"#utility.yul\":10657:10663   */\n      dup5\n        /* \"#utility.yul\":10599:10684   */\n      tag_219\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":10441:10691   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10697:10877   */\n    tag_220:\n        /* \"#utility.yul\":10745:10822   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10742:10743   */\n      0x00\n        /* \"#utility.yul\":10735:10823   */\n      mstore\n        /* \"#utility.yul\":10842:10846   */\n      0x22\n        /* \"#utility.yul\":10839:10840   */\n      0x04\n        /* \"#utility.yul\":10832:10847   */\n      mstore\n        /* \"#utility.yul\":10866:10870   */\n      0x24\n        /* \"#utility.yul\":10863:10864   */\n      0x00\n        /* \"#utility.yul\":10856:10871   */\n      revert\n        /* \"#utility.yul\":10883:11203   */\n    tag_95:\n        /* \"#utility.yul\":10927:10933   */\n      0x00\n        /* \"#utility.yul\":10964:10965   */\n      0x02\n        /* \"#utility.yul\":10958:10962   */\n      dup3\n        /* \"#utility.yul\":10954:10966   */\n      div\n        /* \"#utility.yul\":10944:10966   */\n      swap1\n      pop\n        /* \"#utility.yul\":11011:11012   */\n      0x01\n        /* \"#utility.yul\":11005:11009   */\n      dup3\n        /* \"#utility.yul\":11001:11013   */\n      and\n        /* \"#utility.yul\":11032:11050   */\n      dup1\n        /* \"#utility.yul\":11022:11103   */\n      tag_368\n      jumpi\n        /* \"#utility.yul\":11088:11092   */\n      0x7f\n        /* \"#utility.yul\":11080:11086   */\n      dup3\n        /* \"#utility.yul\":11076:11093   */\n      and\n        /* \"#utility.yul\":11066:11093   */\n      swap2\n      pop\n        /* \"#utility.yul\":11022:11103   */\n    tag_368:\n        /* \"#utility.yul\":11150:11152   */\n      0x20\n        /* \"#utility.yul\":11142:11148   */\n      dup3\n        /* \"#utility.yul\":11139:11153   */\n      lt\n        /* \"#utility.yul\":11119:11137   */\n      dup2\n        /* \"#utility.yul\":11116:11154   */\n      sub\n        /* \"#utility.yul\":11113:11197   */\n      tag_369\n      jumpi\n        /* \"#utility.yul\":11169:11187   */\n      tag_370\n      tag_220\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":11113:11197   */\n    tag_369:\n        /* \"#utility.yul\":10934:11203   */\n      pop\n        /* \"#utility.yul\":10883:11203   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11209:11389   */\n    tag_221:\n        /* \"#utility.yul\":11257:11334   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11254:11255   */\n      0x00\n        /* \"#utility.yul\":11247:11335   */\n      mstore\n        /* \"#utility.yul\":11354:11358   */\n      0x11\n        /* \"#utility.yul\":11351:11352   */\n      0x04\n        /* \"#utility.yul\":11344:11359   */\n      mstore\n        /* \"#utility.yul\":11378:11382   */\n      0x24\n        /* \"#utility.yul\":11375:11376   */\n      0x00\n        /* \"#utility.yul\":11368:11383   */\n      revert\n        /* \"#utility.yul\":11395:11586   */\n    tag_105:\n        /* \"#utility.yul\":11435:11438   */\n      0x00\n        /* \"#utility.yul\":11454:11474   */\n      tag_373\n        /* \"#utility.yul\":11472:11473   */\n      dup3\n        /* \"#utility.yul\":11454:11474   */\n      tag_185\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":11449:11474   */\n      swap2\n      pop\n        /* \"#utility.yul\":11488:11508   */\n      tag_374\n        /* \"#utility.yul\":11506:11507   */\n      dup4\n        /* \"#utility.yul\":11488:11508   */\n      tag_185\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":11483:11508   */\n      swap3\n      pop\n        /* \"#utility.yul\":11531:11532   */\n      dup3\n        /* \"#utility.yul\":11528:11529   */\n      dup3\n        /* \"#utility.yul\":11524:11533   */\n      add\n        /* \"#utility.yul\":11517:11533   */\n      swap1\n      pop\n        /* \"#utility.yul\":11552:11555   */\n      dup1\n        /* \"#utility.yul\":11549:11550   */\n      dup3\n        /* \"#utility.yul\":11546:11556   */\n      gt\n        /* \"#utility.yul\":11543:11579   */\n      iszero\n      tag_375\n      jumpi\n        /* \"#utility.yul\":11559:11577   */\n      tag_376\n      tag_221\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":11543:11579   */\n    tag_375:\n        /* \"#utility.yul\":11395:11586   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11592:11786   */\n    tag_109:\n        /* \"#utility.yul\":11632:11636   */\n      0x00\n        /* \"#utility.yul\":11652:11672   */\n      tag_378\n        /* \"#utility.yul\":11670:11671   */\n      dup3\n        /* \"#utility.yul\":11652:11672   */\n      tag_185\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":11647:11672   */\n      swap2\n      pop\n        /* \"#utility.yul\":11686:11706   */\n      tag_379\n        /* \"#utility.yul\":11704:11705   */\n      dup4\n        /* \"#utility.yul\":11686:11706   */\n      tag_185\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":11681:11706   */\n      swap3\n      pop\n        /* \"#utility.yul\":11730:11731   */\n      dup3\n        /* \"#utility.yul\":11727:11728   */\n      dup3\n        /* \"#utility.yul\":11723:11732   */\n      sub\n        /* \"#utility.yul\":11715:11732   */\n      swap1\n      pop\n        /* \"#utility.yul\":11754:11755   */\n      dup2\n        /* \"#utility.yul\":11748:11752   */\n      dup2\n        /* \"#utility.yul\":11745:11756   */\n      gt\n        /* \"#utility.yul\":11742:11779   */\n      iszero\n      tag_380\n      jumpi\n        /* \"#utility.yul\":11759:11777   */\n      tag_381\n      tag_221\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":11742:11779   */\n    tag_380:\n        /* \"#utility.yul\":11592:11786   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11792:12124   */\n    tag_112:\n        /* \"#utility.yul\":11913:11917   */\n      0x00\n        /* \"#utility.yul\":11951:11953   */\n      0x40\n        /* \"#utility.yul\":11940:11949   */\n      dup3\n        /* \"#utility.yul\":11936:11954   */\n      add\n        /* \"#utility.yul\":11928:11954   */\n      swap1\n      pop\n        /* \"#utility.yul\":11964:12035   */\n      tag_383\n        /* \"#utility.yul\":12032:12033   */\n      0x00\n        /* \"#utility.yul\":12021:12030   */\n      dup4\n        /* \"#utility.yul\":12017:12034   */\n      add\n        /* \"#utility.yul\":12008:12014   */\n      dup6\n        /* \"#utility.yul\":11964:12035   */\n      tag_205\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":12045:12117   */\n      tag_384\n        /* \"#utility.yul\":12113:12115   */\n      0x20\n        /* \"#utility.yul\":12102:12111   */\n      dup4\n        /* \"#utility.yul\":12098:12116   */\n      add\n        /* \"#utility.yul\":12089:12095   */\n      dup5\n        /* \"#utility.yul\":12045:12117   */\n      tag_186\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":11792:12124   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12130:12246   */\n    tag_222:\n        /* \"#utility.yul\":12200:12221   */\n      tag_386\n        /* \"#utility.yul\":12215:12220   */\n      dup2\n        /* \"#utility.yul\":12200:12221   */\n      tag_201\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":12193:12198   */\n      dup2\n        /* \"#utility.yul\":12190:12222   */\n      eq\n        /* \"#utility.yul\":12180:12240   */\n      tag_387\n      jumpi\n        /* \"#utility.yul\":12236:12237   */\n      0x00\n        /* \"#utility.yul\":12233:12234   */\n      dup1\n        /* \"#utility.yul\":12226:12238   */\n      revert\n        /* \"#utility.yul\":12180:12240   */\n    tag_387:\n        /* \"#utility.yul\":12130:12246   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12252:12389   */\n    tag_223:\n        /* \"#utility.yul\":12306:12311   */\n      0x00\n        /* \"#utility.yul\":12337:12343   */\n      dup2\n        /* \"#utility.yul\":12331:12344   */\n      mload\n        /* \"#utility.yul\":12322:12344   */\n      swap1\n      pop\n        /* \"#utility.yul\":12353:12383   */\n      tag_389\n        /* \"#utility.yul\":12377:12382   */\n      dup2\n        /* \"#utility.yul\":12353:12383   */\n      tag_222\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":12252:12389   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12395:12740   */\n    tag_116:\n        /* \"#utility.yul\":12462:12468   */\n      0x00\n        /* \"#utility.yul\":12511:12513   */\n      0x20\n        /* \"#utility.yul\":12499:12508   */\n      dup3\n        /* \"#utility.yul\":12490:12497   */\n      dup5\n        /* \"#utility.yul\":12486:12509   */\n      sub\n        /* \"#utility.yul\":12482:12514   */\n      slt\n        /* \"#utility.yul\":12479:12598   */\n      iszero\n      tag_391\n      jumpi\n        /* \"#utility.yul\":12517:12596   */\n      tag_392\n      tag_193\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":12479:12598   */\n    tag_391:\n        /* \"#utility.yul\":12637:12638   */\n      0x00\n        /* \"#utility.yul\":12662:12723   */\n      tag_393\n        /* \"#utility.yul\":12715:12722   */\n      dup5\n        /* \"#utility.yul\":12706:12712   */\n      dup3\n        /* \"#utility.yul\":12695:12704   */\n      dup6\n        /* \"#utility.yul\":12691:12713   */\n      add\n        /* \"#utility.yul\":12662:12723   */\n      tag_223\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":12652:12723   */\n      swap2\n      pop\n        /* \"#utility.yul\":12608:12733   */\n      pop\n        /* \"#utility.yul\":12395:12740   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12746:12864   */\n    tag_224:\n        /* \"#utility.yul\":12817:12839   */\n      tag_395\n        /* \"#utility.yul\":12833:12838   */\n      dup2\n        /* \"#utility.yul\":12817:12839   */\n      tag_203\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":12810:12815   */\n      dup2\n        /* \"#utility.yul\":12807:12840   */\n      eq\n        /* \"#utility.yul\":12797:12858   */\n      tag_396\n      jumpi\n        /* \"#utility.yul\":12854:12855   */\n      0x00\n        /* \"#utility.yul\":12851:12852   */\n      dup1\n        /* \"#utility.yul\":12844:12856   */\n      revert\n        /* \"#utility.yul\":12797:12858   */\n    tag_396:\n        /* \"#utility.yul\":12746:12864   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12870:13009   */\n    tag_225:\n        /* \"#utility.yul\":12925:12930   */\n      0x00\n        /* \"#utility.yul\":12956:12962   */\n      dup2\n        /* \"#utility.yul\":12950:12963   */\n      mload\n        /* \"#utility.yul\":12941:12963   */\n      swap1\n      pop\n        /* \"#utility.yul\":12972:13003   */\n      tag_398\n        /* \"#utility.yul\":12997:13002   */\n      dup2\n        /* \"#utility.yul\":12972:13003   */\n      tag_224\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":12870:13009   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13015:13362   */\n    tag_123:\n        /* \"#utility.yul\":13083:13089   */\n      0x00\n        /* \"#utility.yul\":13132:13134   */\n      0x20\n        /* \"#utility.yul\":13120:13129   */\n      dup3\n        /* \"#utility.yul\":13111:13118   */\n      dup5\n        /* \"#utility.yul\":13107:13130   */\n      sub\n        /* \"#utility.yul\":13103:13135   */\n      slt\n        /* \"#utility.yul\":13100:13219   */\n      iszero\n      tag_400\n      jumpi\n        /* \"#utility.yul\":13138:13217   */\n      tag_401\n      tag_193\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":13100:13219   */\n    tag_400:\n        /* \"#utility.yul\":13258:13259   */\n      0x00\n        /* \"#utility.yul\":13283:13345   */\n      tag_402\n        /* \"#utility.yul\":13337:13344   */\n      dup5\n        /* \"#utility.yul\":13328:13334   */\n      dup3\n        /* \"#utility.yul\":13317:13326   */\n      dup6\n        /* \"#utility.yul\":13313:13335   */\n      add\n        /* \"#utility.yul\":13283:13345   */\n      tag_225\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":13273:13345   */\n      swap2\n      pop\n        /* \"#utility.yul\":13229:13355   */\n      pop\n        /* \"#utility.yul\":13015:13362   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13368:13810   */\n    tag_144:\n        /* \"#utility.yul\":13517:13521   */\n      0x00\n        /* \"#utility.yul\":13555:13557   */\n      0x60\n        /* \"#utility.yul\":13544:13553   */\n      dup3\n        /* \"#utility.yul\":13540:13558   */\n      add\n        /* \"#utility.yul\":13532:13558   */\n      swap1\n      pop\n        /* \"#utility.yul\":13568:13639   */\n      tag_404\n        /* \"#utility.yul\":13636:13637   */\n      0x00\n        /* \"#utility.yul\":13625:13634   */\n      dup4\n        /* \"#utility.yul\":13621:13638   */\n      add\n        /* \"#utility.yul\":13612:13618   */\n      dup7\n        /* \"#utility.yul\":13568:13639   */\n      tag_205\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":13649:13721   */\n      tag_405\n        /* \"#utility.yul\":13717:13719   */\n      0x20\n        /* \"#utility.yul\":13706:13715   */\n      dup4\n        /* \"#utility.yul\":13702:13720   */\n      add\n        /* \"#utility.yul\":13693:13699   */\n      dup6\n        /* \"#utility.yul\":13649:13721   */\n      tag_205\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":13731:13803   */\n      tag_406\n        /* \"#utility.yul\":13799:13801   */\n      0x40\n        /* \"#utility.yul\":13788:13797   */\n      dup4\n        /* \"#utility.yul\":13784:13802   */\n      add\n        /* \"#utility.yul\":13775:13781   */\n      dup5\n        /* \"#utility.yul\":13731:13803   */\n      tag_186\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":13368:13810   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13816:13957   */\n    tag_226:\n        /* \"#utility.yul\":13865:13869   */\n      0x00\n        /* \"#utility.yul\":13888:13891   */\n      dup2\n        /* \"#utility.yul\":13880:13891   */\n      swap1\n      pop\n        /* \"#utility.yul\":13911:13914   */\n      dup2\n        /* \"#utility.yul\":13908:13909   */\n      0x00\n        /* \"#utility.yul\":13901:13915   */\n      mstore\n        /* \"#utility.yul\":13945:13949   */\n      0x20\n        /* \"#utility.yul\":13942:13943   */\n      0x00\n        /* \"#utility.yul\":13932:13950   */\n      keccak256\n        /* \"#utility.yul\":13924:13950   */\n      swap1\n      pop\n        /* \"#utility.yul\":13816:13957   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13963:14056   */\n    tag_227:\n        /* \"#utility.yul\":14000:14006   */\n      0x00\n        /* \"#utility.yul\":14047:14049   */\n      0x20\n        /* \"#utility.yul\":14042:14044   */\n      0x1f\n        /* \"#utility.yul\":14035:14040   */\n      dup4\n        /* \"#utility.yul\":14031:14045   */\n      add\n        /* \"#utility.yul\":14027:14050   */\n      div\n        /* \"#utility.yul\":14017:14050   */\n      swap1\n      pop\n        /* \"#utility.yul\":13963:14056   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14062:14169   */\n    tag_228:\n        /* \"#utility.yul\":14106:14114   */\n      0x00\n        /* \"#utility.yul\":14156:14161   */\n      dup3\n        /* \"#utility.yul\":14150:14154   */\n      dup3\n        /* \"#utility.yul\":14146:14162   */\n      shl\n        /* \"#utility.yul\":14125:14162   */\n      swap1\n      pop\n        /* \"#utility.yul\":14062:14169   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14175:14568   */\n    tag_229:\n        /* \"#utility.yul\":14244:14250   */\n      0x00\n        /* \"#utility.yul\":14294:14295   */\n      0x08\n        /* \"#utility.yul\":14282:14292   */\n      dup4\n        /* \"#utility.yul\":14278:14296   */\n      mul\n        /* \"#utility.yul\":14317:14414   */\n      tag_411\n        /* \"#utility.yul\":14347:14413   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":14336:14345   */\n      dup3\n        /* \"#utility.yul\":14317:14414   */\n      tag_228\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":14435:14474   */\n      tag_412\n        /* \"#utility.yul\":14465:14473   */\n      dup7\n        /* \"#utility.yul\":14454:14463   */\n      dup4\n        /* \"#utility.yul\":14435:14474   */\n      tag_228\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":14423:14474   */\n      swap6\n      pop\n        /* \"#utility.yul\":14507:14511   */\n      dup1\n        /* \"#utility.yul\":14503:14512   */\n      not\n        /* \"#utility.yul\":14496:14501   */\n      dup5\n        /* \"#utility.yul\":14492:14513   */\n      and\n        /* \"#utility.yul\":14483:14513   */\n      swap4\n      pop\n        /* \"#utility.yul\":14556:14560   */\n      dup1\n        /* \"#utility.yul\":14546:14554   */\n      dup7\n        /* \"#utility.yul\":14542:14561   */\n      and\n        /* \"#utility.yul\":14535:14540   */\n      dup5\n        /* \"#utility.yul\":14532:14562   */\n      or\n        /* \"#utility.yul\":14522:14562   */\n      swap3\n      pop\n        /* \"#utility.yul\":14251:14568   */\n      pop\n      pop\n        /* \"#utility.yul\":14175:14568   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14574:14716   */\n    tag_230:\n        /* \"#utility.yul\":14624:14633   */\n      0x00\n        /* \"#utility.yul\":14657:14710   */\n      tag_414\n        /* \"#utility.yul\":14675:14709   */\n      tag_415\n        /* \"#utility.yul\":14684:14708   */\n      tag_416\n        /* \"#utility.yul\":14702:14707   */\n      dup5\n        /* \"#utility.yul\":14684:14708   */\n      tag_185\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":14675:14709   */\n      tag_215\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":14657:14710   */\n      tag_185\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":14644:14710   */\n      swap1\n      pop\n        /* \"#utility.yul\":14574:14716   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14722:14797   */\n    tag_231:\n        /* \"#utility.yul\":14765:14768   */\n      0x00\n        /* \"#utility.yul\":14786:14791   */\n      dup2\n        /* \"#utility.yul\":14779:14791   */\n      swap1\n      pop\n        /* \"#utility.yul\":14722:14797   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14803:15072   */\n    tag_232:\n        /* \"#utility.yul\":14913:14952   */\n      tag_419\n        /* \"#utility.yul\":14944:14951   */\n      dup4\n        /* \"#utility.yul\":14913:14952   */\n      tag_230\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":14974:15065   */\n      tag_420\n        /* \"#utility.yul\":15023:15064   */\n      tag_421\n        /* \"#utility.yul\":15047:15063   */\n      dup3\n        /* \"#utility.yul\":15023:15064   */\n      tag_231\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":15015:15021   */\n      dup5\n        /* \"#utility.yul\":15008:15012   */\n      dup5\n        /* \"#utility.yul\":15002:15013   */\n      sload\n        /* \"#utility.yul\":14974:15065   */\n      tag_229\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":14968:14972   */\n      dup3\n        /* \"#utility.yul\":14961:15066   */\n      sstore\n        /* \"#utility.yul\":14879:15072   */\n      pop\n        /* \"#utility.yul\":14803:15072   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15078:15151   */\n    tag_233:\n        /* \"#utility.yul\":15123:15126   */\n      0x00\n        /* \"#utility.yul\":15078:15151   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":15157:15346   */\n    tag_234:\n        /* \"#utility.yul\":15234:15266   */\n      tag_424\n      tag_233\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":15275:15340   */\n      tag_425\n        /* \"#utility.yul\":15333:15339   */\n      dup2\n        /* \"#utility.yul\":15325:15331   */\n      dup5\n        /* \"#utility.yul\":15319:15323   */\n      dup5\n        /* \"#utility.yul\":15275:15340   */\n      tag_232\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":15210:15346   */\n      pop\n        /* \"#utility.yul\":15157:15346   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15352:15538   */\n    tag_235:\n        /* \"#utility.yul\":15412:15532   */\n    tag_427:\n        /* \"#utility.yul\":15429:15432   */\n      dup2\n        /* \"#utility.yul\":15422:15427   */\n      dup2\n        /* \"#utility.yul\":15419:15433   */\n      lt\n        /* \"#utility.yul\":15412:15532   */\n      iszero\n      tag_429\n      jumpi\n        /* \"#utility.yul\":15483:15522   */\n      tag_430\n        /* \"#utility.yul\":15520:15521   */\n      0x00\n        /* \"#utility.yul\":15513:15518   */\n      dup3\n        /* \"#utility.yul\":15483:15522   */\n      tag_234\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":15456:15457   */\n      0x01\n        /* \"#utility.yul\":15449:15454   */\n      dup2\n        /* \"#utility.yul\":15445:15458   */\n      add\n        /* \"#utility.yul\":15436:15458   */\n      swap1\n      pop\n        /* \"#utility.yul\":15412:15532   */\n      jump(tag_427)\n    tag_429:\n        /* \"#utility.yul\":15352:15538   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15544:16087   */\n    tag_236:\n        /* \"#utility.yul\":15645:15647   */\n      0x1f\n        /* \"#utility.yul\":15640:15643   */\n      dup3\n        /* \"#utility.yul\":15637:15648   */\n      gt\n        /* \"#utility.yul\":15634:16080   */\n      iszero\n      tag_432\n      jumpi\n        /* \"#utility.yul\":15679:15717   */\n      tag_433\n        /* \"#utility.yul\":15711:15716   */\n      dup2\n        /* \"#utility.yul\":15679:15717   */\n      tag_226\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":15763:15792   */\n      tag_434\n        /* \"#utility.yul\":15781:15791   */\n      dup5\n        /* \"#utility.yul\":15763:15792   */\n      tag_227\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":15753:15761   */\n      dup2\n        /* \"#utility.yul\":15749:15793   */\n      add\n        /* \"#utility.yul\":15946:15948   */\n      0x20\n        /* \"#utility.yul\":15934:15944   */\n      dup6\n        /* \"#utility.yul\":15931:15949   */\n      lt\n        /* \"#utility.yul\":15928:15977   */\n      iszero\n      tag_435\n      jumpi\n        /* \"#utility.yul\":15967:15975   */\n      dup2\n        /* \"#utility.yul\":15952:15975   */\n      swap1\n      pop\n        /* \"#utility.yul\":15928:15977   */\n    tag_435:\n        /* \"#utility.yul\":15990:16070   */\n      tag_436\n        /* \"#utility.yul\":16046:16068   */\n      tag_437\n        /* \"#utility.yul\":16064:16067   */\n      dup6\n        /* \"#utility.yul\":16046:16068   */\n      tag_227\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":16036:16044   */\n      dup4\n        /* \"#utility.yul\":16032:16069   */\n      add\n        /* \"#utility.yul\":16019:16030   */\n      dup3\n        /* \"#utility.yul\":15990:16070   */\n      tag_235\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":15649:16080   */\n      pop\n      pop\n        /* \"#utility.yul\":15634:16080   */\n    tag_432:\n        /* \"#utility.yul\":15544:16087   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16093:16210   */\n    tag_237:\n        /* \"#utility.yul\":16147:16155   */\n      0x00\n        /* \"#utility.yul\":16197:16202   */\n      dup3\n        /* \"#utility.yul\":16191:16195   */\n      dup3\n        /* \"#utility.yul\":16187:16203   */\n      shr\n        /* \"#utility.yul\":16166:16203   */\n      swap1\n      pop\n        /* \"#utility.yul\":16093:16210   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16216:16385   */\n    tag_238:\n        /* \"#utility.yul\":16260:16266   */\n      0x00\n        /* \"#utility.yul\":16293:16344   */\n      tag_440\n        /* \"#utility.yul\":16341:16342   */\n      0x00\n        /* \"#utility.yul\":16337:16343   */\n      not\n        /* \"#utility.yul\":16329:16334   */\n      dup5\n        /* \"#utility.yul\":16326:16327   */\n      0x08\n        /* \"#utility.yul\":16322:16335   */\n      mul\n        /* \"#utility.yul\":16293:16344   */\n      tag_237\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":16289:16345   */\n      not\n        /* \"#utility.yul\":16374:16378   */\n      dup1\n        /* \"#utility.yul\":16368:16372   */\n      dup4\n        /* \"#utility.yul\":16364:16379   */\n      and\n        /* \"#utility.yul\":16354:16379   */\n      swap2\n      pop\n        /* \"#utility.yul\":16267:16385   */\n      pop\n        /* \"#utility.yul\":16216:16385   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16390:16685   */\n    tag_239:\n        /* \"#utility.yul\":16466:16470   */\n      0x00\n        /* \"#utility.yul\":16612:16641   */\n      tag_442\n        /* \"#utility.yul\":16637:16640   */\n      dup4\n        /* \"#utility.yul\":16631:16635   */\n      dup4\n        /* \"#utility.yul\":16612:16641   */\n      tag_238\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":16604:16641   */\n      swap2\n      pop\n        /* \"#utility.yul\":16674:16677   */\n      dup3\n        /* \"#utility.yul\":16671:16672   */\n      0x02\n        /* \"#utility.yul\":16667:16678   */\n      mul\n        /* \"#utility.yul\":16661:16665   */\n      dup3\n        /* \"#utility.yul\":16658:16679   */\n      or\n        /* \"#utility.yul\":16650:16679   */\n      swap1\n      pop\n        /* \"#utility.yul\":16390:16685   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16690:18085   */\n    tag_162:\n        /* \"#utility.yul\":16807:16844   */\n      tag_444\n        /* \"#utility.yul\":16840:16843   */\n      dup3\n        /* \"#utility.yul\":16807:16844   */\n      tag_187\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":16909:16927   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":16901:16907   */\n      dup2\n        /* \"#utility.yul\":16898:16928   */\n      gt\n        /* \"#utility.yul\":16895:16951   */\n      iszero\n      tag_445\n      jumpi\n        /* \"#utility.yul\":16931:16949   */\n      tag_446\n      tag_208\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":16895:16951   */\n    tag_445:\n        /* \"#utility.yul\":16975:17013   */\n      tag_447\n        /* \"#utility.yul\":17007:17011   */\n      dup3\n        /* \"#utility.yul\":17001:17012   */\n      sload\n        /* \"#utility.yul\":16975:17013   */\n      tag_95\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":17060:17127   */\n      tag_448\n        /* \"#utility.yul\":17120:17126   */\n      dup3\n        /* \"#utility.yul\":17112:17118   */\n      dup3\n        /* \"#utility.yul\":17106:17110   */\n      dup6\n        /* \"#utility.yul\":17060:17127   */\n      tag_236\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":17154:17155   */\n      0x00\n        /* \"#utility.yul\":17178:17182   */\n      0x20\n        /* \"#utility.yul\":17165:17182   */\n      swap1\n      pop\n        /* \"#utility.yul\":17210:17212   */\n      0x1f\n        /* \"#utility.yul\":17202:17208   */\n      dup4\n        /* \"#utility.yul\":17199:17213   */\n      gt\n        /* \"#utility.yul\":17227:17228   */\n      0x01\n        /* \"#utility.yul\":17222:17840   */\n      dup2\n      eq\n      tag_450\n      jumpi\n        /* \"#utility.yul\":17884:17885   */\n      0x00\n        /* \"#utility.yul\":17901:17907   */\n      dup5\n        /* \"#utility.yul\":17898:17975   */\n      iszero\n      tag_451\n      jumpi\n        /* \"#utility.yul\":17950:17959   */\n      dup3\n        /* \"#utility.yul\":17945:17948   */\n      dup8\n        /* \"#utility.yul\":17941:17960   */\n      add\n        /* \"#utility.yul\":17935:17961   */\n      mload\n        /* \"#utility.yul\":17926:17961   */\n      swap1\n      pop\n        /* \"#utility.yul\":17898:17975   */\n    tag_451:\n        /* \"#utility.yul\":18001:18068   */\n      tag_452\n        /* \"#utility.yul\":18061:18067   */\n      dup6\n        /* \"#utility.yul\":18054:18059   */\n      dup3\n        /* \"#utility.yul\":18001:18068   */\n      tag_239\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":17995:17999   */\n      dup7\n        /* \"#utility.yul\":17988:18069   */\n      sstore\n        /* \"#utility.yul\":17857:18079   */\n      pop\n        /* \"#utility.yul\":17192:18079   */\n      jump(tag_449)\n        /* \"#utility.yul\":17222:17840   */\n    tag_450:\n        /* \"#utility.yul\":17274:17278   */\n      0x1f\n        /* \"#utility.yul\":17270:17279   */\n      not\n        /* \"#utility.yul\":17262:17268   */\n      dup5\n        /* \"#utility.yul\":17258:17280   */\n      and\n        /* \"#utility.yul\":17308:17345   */\n      tag_453\n        /* \"#utility.yul\":17340:17344   */\n      dup7\n        /* \"#utility.yul\":17308:17345   */\n      tag_226\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":17367:17368   */\n      0x00\n        /* \"#utility.yul\":17381:17589   */\n    tag_454:\n        /* \"#utility.yul\":17395:17402   */\n      dup3\n        /* \"#utility.yul\":17392:17393   */\n      dup2\n        /* \"#utility.yul\":17389:17403   */\n      lt\n        /* \"#utility.yul\":17381:17589   */\n      iszero\n      tag_456\n      jumpi\n        /* \"#utility.yul\":17474:17483   */\n      dup5\n        /* \"#utility.yul\":17469:17472   */\n      dup10\n        /* \"#utility.yul\":17465:17484   */\n      add\n        /* \"#utility.yul\":17459:17485   */\n      mload\n        /* \"#utility.yul\":17451:17457   */\n      dup3\n        /* \"#utility.yul\":17444:17486   */\n      sstore\n        /* \"#utility.yul\":17525:17526   */\n      0x01\n        /* \"#utility.yul\":17517:17523   */\n      dup3\n        /* \"#utility.yul\":17513:17527   */\n      add\n        /* \"#utility.yul\":17503:17527   */\n      swap2\n      pop\n        /* \"#utility.yul\":17572:17574   */\n      0x20\n        /* \"#utility.yul\":17561:17570   */\n      dup6\n        /* \"#utility.yul\":17557:17575   */\n      add\n        /* \"#utility.yul\":17544:17575   */\n      swap5\n      pop\n        /* \"#utility.yul\":17418:17422   */\n      0x20\n        /* \"#utility.yul\":17415:17416   */\n      dup2\n        /* \"#utility.yul\":17411:17423   */\n      add\n        /* \"#utility.yul\":17406:17423   */\n      swap1\n      pop\n        /* \"#utility.yul\":17381:17589   */\n      jump(tag_454)\n    tag_456:\n        /* \"#utility.yul\":17617:17623   */\n      dup7\n        /* \"#utility.yul\":17608:17615   */\n      dup4\n        /* \"#utility.yul\":17605:17624   */\n      lt\n        /* \"#utility.yul\":17602:17781   */\n      iszero\n      tag_457\n      jumpi\n        /* \"#utility.yul\":17675:17684   */\n      dup5\n        /* \"#utility.yul\":17670:17673   */\n      dup10\n        /* \"#utility.yul\":17666:17685   */\n      add\n        /* \"#utility.yul\":17660:17686   */\n      mload\n        /* \"#utility.yul\":17718:17766   */\n      tag_458\n        /* \"#utility.yul\":17760:17764   */\n      0x1f\n        /* \"#utility.yul\":17752:17758   */\n      dup10\n        /* \"#utility.yul\":17748:17765   */\n      and\n        /* \"#utility.yul\":17737:17746   */\n      dup3\n        /* \"#utility.yul\":17718:17766   */\n      tag_238\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":17710:17716   */\n      dup4\n        /* \"#utility.yul\":17703:17767   */\n      sstore\n        /* \"#utility.yul\":17625:17781   */\n      pop\n        /* \"#utility.yul\":17602:17781   */\n    tag_457:\n        /* \"#utility.yul\":17827:17828   */\n      0x01\n        /* \"#utility.yul\":17823:17824   */\n      0x02\n        /* \"#utility.yul\":17815:17821   */\n      dup9\n        /* \"#utility.yul\":17811:17825   */\n      mul\n        /* \"#utility.yul\":17807:17829   */\n      add\n        /* \"#utility.yul\":17801:17805   */\n      dup9\n        /* \"#utility.yul\":17794:17830   */\n      sstore\n        /* \"#utility.yul\":17229:17840   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":17192:18079   */\n    tag_449:\n      pop\n        /* \"#utility.yul\":16782:18085   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":16690:18085   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18091:18176   */\n    tag_240:\n        /* \"#utility.yul\":18136:18143   */\n      0x00\n        /* \"#utility.yul\":18165:18170   */\n      dup2\n        /* \"#utility.yul\":18154:18170   */\n      swap1\n      pop\n        /* \"#utility.yul\":18091:18176   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18182:18283   */\n    tag_241:\n        /* \"#utility.yul\":18218:18225   */\n      0x00\n        /* \"#utility.yul\":18258:18276   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":18251:18256   */\n      dup3\n        /* \"#utility.yul\":18247:18277   */\n      and\n        /* \"#utility.yul\":18236:18277   */\n      swap1\n      pop\n        /* \"#utility.yul\":18182:18283   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18289:18445   */\n    tag_242:\n        /* \"#utility.yul\":18346:18355   */\n      0x00\n        /* \"#utility.yul\":18379:18439   */\n      tag_462\n        /* \"#utility.yul\":18396:18438   */\n      tag_463\n        /* \"#utility.yul\":18405:18437   */\n      tag_464\n        /* \"#utility.yul\":18431:18436   */\n      dup5\n        /* \"#utility.yul\":18405:18437   */\n      tag_240\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":18396:18438   */\n      tag_215\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":18379:18439   */\n      tag_241\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":18366:18439   */\n      swap1\n      pop\n        /* \"#utility.yul\":18289:18445   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18451:18596   */\n    tag_243:\n        /* \"#utility.yul\":18545:18589   */\n      tag_466\n        /* \"#utility.yul\":18583:18588   */\n      dup2\n        /* \"#utility.yul\":18545:18589   */\n      tag_242\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":18540:18543   */\n      dup3\n        /* \"#utility.yul\":18533:18590   */\n      mstore\n        /* \"#utility.yul\":18451:18596   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18602:18838   */\n    tag_166:\n        /* \"#utility.yul\":18702:18706   */\n      0x00\n        /* \"#utility.yul\":18740:18742   */\n      0x20\n        /* \"#utility.yul\":18729:18738   */\n      dup3\n        /* \"#utility.yul\":18725:18743   */\n      add\n        /* \"#utility.yul\":18717:18743   */\n      swap1\n      pop\n        /* \"#utility.yul\":18753:18831   */\n      tag_468\n        /* \"#utility.yul\":18828:18829   */\n      0x00\n        /* \"#utility.yul\":18817:18826   */\n      dup4\n        /* \"#utility.yul\":18813:18830   */\n      add\n        /* \"#utility.yul\":18804:18810   */\n      dup5\n        /* \"#utility.yul\":18753:18831   */\n      tag_243\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":18602:18838   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212209a607b408d7ac81de8de9d02b43574e48c4dbd9af236f993e841b1feae57753b64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f80fd5b506119538061001c5f395ff3fe608060405234801561000f575f80fd5b5060043610610114575f3560e01c8063715018a6116100a0578063b6b55f251161006f578063b6b55f25146102d0578063dd62ed3e146102ec578063e001ff521461031c578063f2fde38b14610338578063fc0c546a1461035457610114565b8063715018a61461025a5780638da5cb5b1461026457806395d89b4114610282578063a9059cbb146102a057610114565b806323b872dd116100e757806323b872dd146101a25780632e1a7d4d146101d2578063313ce567146101ee57806361603d891461020c57806370a082311461022a57610114565b8063045544431461011857806306fdde0314610136578063095ea7b31461015457806318160ddd14610184575b5f80fd5b610120610372565b60405161012d9190610f0f565b60405180910390f35b61013e610378565b60405161014b9190610f98565b60405180910390f35b61016e6004803603810190610169919061104d565b610404565b60405161017b91906110a5565b60405180910390f35b61018c610437565b6040516101999190610f0f565b60405180910390f35b6101bc60048036038101906101b791906110be565b61043d565b6040516101c991906110a5565b60405180910390f35b6101ec60048036038101906101e7919061110e565b610470565b005b6101f66106e0565b6040516102039190611154565b60405180910390f35b610214610773565b6040516102219190610f0f565b60405180910390f35b610244600480360381019061023f919061116d565b610779565b6040516102519190610f0f565b60405180910390f35b61026261078e565b005b61026c6107a1565b60405161027991906111a7565b60405180910390f35b61028a6107d6565b6040516102979190610f98565b60405180910390f35b6102ba60048036038101906102b5919061104d565b610862565b6040516102c791906110a5565b60405180910390f35b6102ea60048036038101906102e5919061110e565b610895565b005b610306600480360381019061030191906111c0565b610a76565b6040516103139190610f0f565b60405180910390f35b6103366004803603810190610331919061132a565b610aa9565b005b610352600480360381019061034d919061116d565b610ca3565b005b61035c610d27565b6040516103699190611446565b60405180910390f35b60025481565b600380546103859061148c565b80601f01602080910402602001604051908101604052809291908181526020018280546103b19061148c565b80156103fc5780601f106103d3576101008083540402835291602001916103fc565b820191905f5260205f20905b8154815290600101906020018083116103df57829003601f168201915b505050505081565b5f6040517fa038794000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60055481565b5f6040517fa038794000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001544211801561048f575060025460015461048c91906114e9565b42105b156104c6576040517f3c2c6e9d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060065f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054101561053d576040517f7fa62f9d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060065f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610589919061151c565b925050819055508060055f8282546105a1919061151c565b925050819055505f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b815260040161060292919061154f565b6020604051808303815f875af115801561061e573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061064291906115a0565b610678576040517f90b8ec1800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516106d59190610f0f565b60405180910390a350565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa15801561074a573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061076e91906115f5565b905090565b60015481565b6006602052805f5260405f205f915090505481565b610796610d4a565b61079f5f610dd1565b565b5f806107ab610ea2565b9050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691505090565b600480546107e39061148c565b80601f016020809104026020016040519081016040528092919081815260200182805461080f9061148c565b801561085a5780601f106108315761010080835404028352916020019161085a565b820191905f5260205f20905b81548152906001019060200180831161083d57829003601f168201915b505050505081565b5f6040517fa038794000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001544211156108d1576040517f9883528e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060065f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461091d91906114e9565b925050819055508060055f82825461093591906114e9565b925050819055505f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b815260040161099893929190611620565b6020604051808303815f875af11580156109b4573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906109d891906115a0565b610a0e576040517f90b8ec1800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610a6b9190610f0f565b60405180910390a350565b5f6040517fa038794000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f610ab2610ec9565b90505f815f0160089054906101000a900460ff161590505f825f015f9054906101000a900467ffffffffffffffff1690505f808267ffffffffffffffff16148015610afa5750825b90505f60018367ffffffffffffffff16148015610b2d57505f3073ffffffffffffffffffffffffffffffffffffffff163b145b905081158015610b3b575080155b15610b72576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001855f015f6101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055508315610bbf576001855f0160086101000a81548160ff0219169083151502179055505b610bc88b610ca3565b895f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555088600181905550876002819055508660039081610c2491906117e9565b508560049081610c3491906117e9565b505f6005819055508315610c96575f855f0160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d26001604051610c8d9190611904565b60405180910390a15b5050505050505050505050565b610cab610d4a565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610d1b575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610d1291906111a7565b60405180910390fd5b610d2481610dd1565b50565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610d52610ef0565b73ffffffffffffffffffffffffffffffffffffffff16610d706107a1565b73ffffffffffffffffffffffffffffffffffffffff1614610dcf57610d93610ef0565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610dc691906111a7565b60405180910390fd5b565b5f610dda610ea2565b90505f815f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905082825f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3505050565b5f7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300905090565b5f7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00905090565b5f33905090565b5f819050919050565b610f0981610ef7565b82525050565b5f602082019050610f225f830184610f00565b92915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f610f6a82610f28565b610f748185610f32565b9350610f84818560208601610f42565b610f8d81610f50565b840191505092915050565b5f6020820190508181035f830152610fb08184610f60565b905092915050565b5f604051905090565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610ff282610fc9565b9050919050565b61100281610fe8565b811461100c575f80fd5b50565b5f8135905061101d81610ff9565b92915050565b61102c81610ef7565b8114611036575f80fd5b50565b5f8135905061104781611023565b92915050565b5f806040838503121561106357611062610fc1565b5b5f6110708582860161100f565b925050602061108185828601611039565b9150509250929050565b5f8115159050919050565b61109f8161108b565b82525050565b5f6020820190506110b85f830184611096565b92915050565b5f805f606084860312156110d5576110d4610fc1565b5b5f6110e28682870161100f565b93505060206110f38682870161100f565b925050604061110486828701611039565b9150509250925092565b5f6020828403121561112357611122610fc1565b5b5f61113084828501611039565b91505092915050565b5f60ff82169050919050565b61114e81611139565b82525050565b5f6020820190506111675f830184611145565b92915050565b5f6020828403121561118257611181610fc1565b5b5f61118f8482850161100f565b91505092915050565b6111a181610fe8565b82525050565b5f6020820190506111ba5f830184611198565b92915050565b5f80604083850312156111d6576111d5610fc1565b5b5f6111e38582860161100f565b92505060206111f48582860161100f565b9150509250929050565b5f80fd5b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b61123c82610f50565b810181811067ffffffffffffffff8211171561125b5761125a611206565b5b80604052505050565b5f61126d610fb8565b90506112798282611233565b919050565b5f67ffffffffffffffff82111561129857611297611206565b5b6112a182610f50565b9050602081019050919050565b828183375f83830152505050565b5f6112ce6112c98461127e565b611264565b9050828152602081018484840111156112ea576112e9611202565b5b6112f58482856112ae565b509392505050565b5f82601f830112611311576113106111fe565b5b81356113218482602086016112bc565b91505092915050565b5f805f805f8060c0878903121561134457611343610fc1565b5b5f61135189828a0161100f565b965050602061136289828a0161100f565b955050604061137389828a01611039565b945050606061138489828a01611039565b935050608087013567ffffffffffffffff8111156113a5576113a4610fc5565b5b6113b189828a016112fd565b92505060a087013567ffffffffffffffff8111156113d2576113d1610fc5565b5b6113de89828a016112fd565b9150509295509295509295565b5f819050919050565b5f61140e61140961140484610fc9565b6113eb565b610fc9565b9050919050565b5f61141f826113f4565b9050919050565b5f61143082611415565b9050919050565b61144081611426565b82525050565b5f6020820190506114595f830184611437565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806114a357607f821691505b6020821081036114b6576114b561145f565b5b50919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6114f382610ef7565b91506114fe83610ef7565b9250828201905080821115611516576115156114bc565b5b92915050565b5f61152682610ef7565b915061153183610ef7565b9250828203905081811115611549576115486114bc565b5b92915050565b5f6040820190506115625f830185611198565b61156f6020830184610f00565b9392505050565b61157f8161108b565b8114611589575f80fd5b50565b5f8151905061159a81611576565b92915050565b5f602082840312156115b5576115b4610fc1565b5b5f6115c28482850161158c565b91505092915050565b6115d481611139565b81146115de575f80fd5b50565b5f815190506115ef816115cb565b92915050565b5f6020828403121561160a57611609610fc1565b5b5f611617848285016115e1565b91505092915050565b5f6060820190506116335f830186611198565b6116406020830185611198565b61164d6040830184610f00565b949350505050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026116b17fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611676565b6116bb8683611676565b95508019841693508086168417925050509392505050565b5f6116ed6116e86116e384610ef7565b6113eb565b610ef7565b9050919050565b5f819050919050565b611706836116d3565b61171a611712826116f4565b848454611682565b825550505050565b5f90565b61172e611722565b6117398184846116fd565b505050565b5b8181101561175c576117515f82611726565b60018101905061173f565b5050565b601f8211156117a15761177281611655565b61177b84611667565b8101602085101561178a578190505b61179e61179685611667565b83018261173e565b50505b505050565b5f82821c905092915050565b5f6117c15f19846008026117a6565b1980831691505092915050565b5f6117d983836117b2565b9150826002028217905092915050565b6117f282610f28565b67ffffffffffffffff81111561180b5761180a611206565b5b611815825461148c565b611820828285611760565b5f60209050601f831160018114611851575f841561183f578287015190505b61184985826117ce565b8655506118b0565b601f19841661185f86611655565b5f5b8281101561188657848901518255600182019150602085019450602081019050611861565b868310156118a3578489015161189f601f8916826117b2565b8355505b6001600288020188555050505b505050505050565b5f819050919050565b5f67ffffffffffffffff82169050919050565b5f6118ee6118e96118e4846118b8565b6113eb565b6118c1565b9050919050565b6118fe816118d4565b82525050565b5f6020820190506119175f8301846118f5565b9291505056fea26469706673582212209a607b408d7ac81de8de9d02b43574e48c4dbd9af236f993e841b1feae57753b64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1953 DUP1 PUSH2 0x1C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x114 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xB6B55F25 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xB6B55F25 EQ PUSH2 0x2D0 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2EC JUMPI DUP1 PUSH4 0xE001FF52 EQ PUSH2 0x31C JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x338 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x354 JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x25A JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x264 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x282 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2A0 JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xE7 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1A2 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x1D2 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1EE JUMPI DUP1 PUSH4 0x61603D89 EQ PUSH2 0x20C JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x22A JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0x4554443 EQ PUSH2 0x118 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x154 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x184 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x120 PUSH2 0x372 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12D SWAP2 SWAP1 PUSH2 0xF0F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13E PUSH2 0x378 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14B SWAP2 SWAP1 PUSH2 0xF98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x169 SWAP2 SWAP1 PUSH2 0x104D JUMP JUMPDEST PUSH2 0x404 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17B SWAP2 SWAP1 PUSH2 0x10A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18C PUSH2 0x437 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x199 SWAP2 SWAP1 PUSH2 0xF0F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B7 SWAP2 SWAP1 PUSH2 0x10BE JUMP JUMPDEST PUSH2 0x43D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C9 SWAP2 SWAP1 PUSH2 0x10A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1EC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E7 SWAP2 SWAP1 PUSH2 0x110E JUMP JUMPDEST PUSH2 0x470 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F6 PUSH2 0x6E0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x203 SWAP2 SWAP1 PUSH2 0x1154 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x214 PUSH2 0x773 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x221 SWAP2 SWAP1 PUSH2 0xF0F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x244 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23F SWAP2 SWAP1 PUSH2 0x116D JUMP JUMPDEST PUSH2 0x779 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x251 SWAP2 SWAP1 PUSH2 0xF0F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x262 PUSH2 0x78E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x26C PUSH2 0x7A1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x279 SWAP2 SWAP1 PUSH2 0x11A7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x28A PUSH2 0x7D6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x297 SWAP2 SWAP1 PUSH2 0xF98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B5 SWAP2 SWAP1 PUSH2 0x104D JUMP JUMPDEST PUSH2 0x862 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C7 SWAP2 SWAP1 PUSH2 0x10A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2EA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E5 SWAP2 SWAP1 PUSH2 0x110E JUMP JUMPDEST PUSH2 0x895 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x306 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x301 SWAP2 SWAP1 PUSH2 0x11C0 JUMP JUMPDEST PUSH2 0xA76 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x313 SWAP2 SWAP1 PUSH2 0xF0F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x336 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x331 SWAP2 SWAP1 PUSH2 0x132A JUMP JUMPDEST PUSH2 0xAA9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x352 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x34D SWAP2 SWAP1 PUSH2 0x116D JUMP JUMPDEST PUSH2 0xCA3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x35C PUSH2 0xD27 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x369 SWAP2 SWAP1 PUSH2 0x1446 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH2 0x385 SWAP1 PUSH2 0x148C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3B1 SWAP1 PUSH2 0x148C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3FC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3D3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3FC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3DF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD PUSH32 0xA038794000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD PUSH32 0xA038794000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD TIMESTAMP GT DUP1 ISZERO PUSH2 0x48F JUMPI POP PUSH1 0x2 SLOAD PUSH1 0x1 SLOAD PUSH2 0x48C SWAP2 SWAP1 PUSH2 0x14E9 JUMP JUMPDEST TIMESTAMP LT JUMPDEST ISZERO PUSH2 0x4C6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x3C2C6E9D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD LT ISZERO PUSH2 0x53D JUMPI PUSH1 0x40 MLOAD PUSH32 0x7FA62F9D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x589 SWAP2 SWAP1 PUSH2 0x151C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x5 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x5A1 SWAP2 SWAP1 PUSH2 0x151C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x602 SWAP3 SWAP2 SWAP1 PUSH2 0x154F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x61E JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x642 SWAP2 SWAP1 PUSH2 0x15A0 JUMP JUMPDEST PUSH2 0x678 JUMPI PUSH1 0x40 MLOAD PUSH32 0x90B8EC1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x6D5 SWAP2 SWAP1 PUSH2 0xF0F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x74A JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x76E SWAP2 SWAP1 PUSH2 0x15F5 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0x796 PUSH2 0xD4A JUMP JUMPDEST PUSH2 0x79F PUSH0 PUSH2 0xDD1 JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x7AB PUSH2 0xEA2 JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH2 0x7E3 SWAP1 PUSH2 0x148C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x80F SWAP1 PUSH2 0x148C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x85A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x831 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x85A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x83D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD PUSH32 0xA038794000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD TIMESTAMP GT ISZERO PUSH2 0x8D1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x9883528E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x91D SWAP2 SWAP1 PUSH2 0x14E9 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x5 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x935 SWAP2 SWAP1 PUSH2 0x14E9 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x998 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1620 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9B4 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9D8 SWAP2 SWAP1 PUSH2 0x15A0 JUMP JUMPDEST PUSH2 0xA0E JUMPI PUSH1 0x40 MLOAD PUSH32 0x90B8EC1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xA6B SWAP2 SWAP1 PUSH2 0xF0F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD PUSH32 0xA038794000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0xAB2 PUSH2 0xEC9 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP PUSH0 DUP3 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xAFA JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH0 PUSH1 0x1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xB2D JUMPI POP PUSH0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0xB3B JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0xB72 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0xBBF JUMPI PUSH1 0x1 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0xBC8 DUP12 PUSH2 0xCA3 JUMP JUMPDEST DUP10 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP9 PUSH1 0x1 DUP2 SWAP1 SSTORE POP DUP8 PUSH1 0x2 DUP2 SWAP1 SSTORE POP DUP7 PUSH1 0x3 SWAP1 DUP2 PUSH2 0xC24 SWAP2 SWAP1 PUSH2 0x17E9 JUMP JUMPDEST POP DUP6 PUSH1 0x4 SWAP1 DUP2 PUSH2 0xC34 SWAP2 SWAP1 PUSH2 0x17E9 JUMP JUMPDEST POP PUSH0 PUSH1 0x5 DUP2 SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0xC96 JUMPI PUSH0 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0xC8D SWAP2 SWAP1 PUSH2 0x1904 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xCAB PUSH2 0xD4A JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD1B JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD12 SWAP2 SWAP1 PUSH2 0x11A7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD24 DUP2 PUSH2 0xDD1 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0xD52 PUSH2 0xEF0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xD70 PUSH2 0x7A1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xDCF JUMPI PUSH2 0xD93 PUSH2 0xEF0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDC6 SWAP2 SWAP1 PUSH2 0x11A7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0xDDA PUSH2 0xEA2 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP3 DUP3 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF09 DUP2 PUSH2 0xEF7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF22 PUSH0 DUP4 ADD DUP5 PUSH2 0xF00 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xF6A DUP3 PUSH2 0xF28 JUMP JUMPDEST PUSH2 0xF74 DUP2 DUP6 PUSH2 0xF32 JUMP JUMPDEST SWAP4 POP PUSH2 0xF84 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xF42 JUMP JUMPDEST PUSH2 0xF8D DUP2 PUSH2 0xF50 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xFB0 DUP2 DUP5 PUSH2 0xF60 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xFF2 DUP3 PUSH2 0xFC9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1002 DUP2 PUSH2 0xFE8 JUMP JUMPDEST DUP2 EQ PUSH2 0x100C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x101D DUP2 PUSH2 0xFF9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x102C DUP2 PUSH2 0xEF7 JUMP JUMPDEST DUP2 EQ PUSH2 0x1036 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1047 DUP2 PUSH2 0x1023 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1063 JUMPI PUSH2 0x1062 PUSH2 0xFC1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1070 DUP6 DUP3 DUP7 ADD PUSH2 0x100F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1081 DUP6 DUP3 DUP7 ADD PUSH2 0x1039 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x109F DUP2 PUSH2 0x108B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x10B8 PUSH0 DUP4 ADD DUP5 PUSH2 0x1096 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x10D5 JUMPI PUSH2 0x10D4 PUSH2 0xFC1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x10E2 DUP7 DUP3 DUP8 ADD PUSH2 0x100F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x10F3 DUP7 DUP3 DUP8 ADD PUSH2 0x100F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1104 DUP7 DUP3 DUP8 ADD PUSH2 0x1039 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1123 JUMPI PUSH2 0x1122 PUSH2 0xFC1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1130 DUP5 DUP3 DUP6 ADD PUSH2 0x1039 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x114E DUP2 PUSH2 0x1139 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1167 PUSH0 DUP4 ADD DUP5 PUSH2 0x1145 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1182 JUMPI PUSH2 0x1181 PUSH2 0xFC1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x118F DUP5 DUP3 DUP6 ADD PUSH2 0x100F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x11A1 DUP2 PUSH2 0xFE8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x11BA PUSH0 DUP4 ADD DUP5 PUSH2 0x1198 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x11D6 JUMPI PUSH2 0x11D5 PUSH2 0xFC1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x11E3 DUP6 DUP3 DUP7 ADD PUSH2 0x100F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x11F4 DUP6 DUP3 DUP7 ADD PUSH2 0x100F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x123C DUP3 PUSH2 0xF50 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x125B JUMPI PUSH2 0x125A PUSH2 0x1206 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x126D PUSH2 0xFB8 JUMP JUMPDEST SWAP1 POP PUSH2 0x1279 DUP3 DUP3 PUSH2 0x1233 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1298 JUMPI PUSH2 0x1297 PUSH2 0x1206 JUMP JUMPDEST JUMPDEST PUSH2 0x12A1 DUP3 PUSH2 0xF50 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x12CE PUSH2 0x12C9 DUP5 PUSH2 0x127E JUMP JUMPDEST PUSH2 0x1264 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x12EA JUMPI PUSH2 0x12E9 PUSH2 0x1202 JUMP JUMPDEST JUMPDEST PUSH2 0x12F5 DUP5 DUP3 DUP6 PUSH2 0x12AE JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1311 JUMPI PUSH2 0x1310 PUSH2 0x11FE JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1321 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x12BC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x1344 JUMPI PUSH2 0x1343 PUSH2 0xFC1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1351 DUP10 DUP3 DUP11 ADD PUSH2 0x100F JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH2 0x1362 DUP10 DUP3 DUP11 ADD PUSH2 0x100F JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 PUSH2 0x1373 DUP10 DUP3 DUP11 ADD PUSH2 0x1039 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 PUSH2 0x1384 DUP10 DUP3 DUP11 ADD PUSH2 0x1039 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x13A5 JUMPI PUSH2 0x13A4 PUSH2 0xFC5 JUMP JUMPDEST JUMPDEST PUSH2 0x13B1 DUP10 DUP3 DUP11 ADD PUSH2 0x12FD JUMP JUMPDEST SWAP3 POP POP PUSH1 0xA0 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x13D2 JUMPI PUSH2 0x13D1 PUSH2 0xFC5 JUMP JUMPDEST JUMPDEST PUSH2 0x13DE DUP10 DUP3 DUP11 ADD PUSH2 0x12FD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x140E PUSH2 0x1409 PUSH2 0x1404 DUP5 PUSH2 0xFC9 JUMP JUMPDEST PUSH2 0x13EB JUMP JUMPDEST PUSH2 0xFC9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x141F DUP3 PUSH2 0x13F4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1430 DUP3 PUSH2 0x1415 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1440 DUP2 PUSH2 0x1426 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1459 PUSH0 DUP4 ADD DUP5 PUSH2 0x1437 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x14A3 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x14B6 JUMPI PUSH2 0x14B5 PUSH2 0x145F JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x14F3 DUP3 PUSH2 0xEF7 JUMP JUMPDEST SWAP2 POP PUSH2 0x14FE DUP4 PUSH2 0xEF7 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1516 JUMPI PUSH2 0x1515 PUSH2 0x14BC JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1526 DUP3 PUSH2 0xEF7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1531 DUP4 PUSH2 0xEF7 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1549 JUMPI PUSH2 0x1548 PUSH2 0x14BC JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1562 PUSH0 DUP4 ADD DUP6 PUSH2 0x1198 JUMP JUMPDEST PUSH2 0x156F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xF00 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x157F DUP2 PUSH2 0x108B JUMP JUMPDEST DUP2 EQ PUSH2 0x1589 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x159A DUP2 PUSH2 0x1576 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15B5 JUMPI PUSH2 0x15B4 PUSH2 0xFC1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x15C2 DUP5 DUP3 DUP6 ADD PUSH2 0x158C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x15D4 DUP2 PUSH2 0x1139 JUMP JUMPDEST DUP2 EQ PUSH2 0x15DE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x15EF DUP2 PUSH2 0x15CB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x160A JUMPI PUSH2 0x1609 PUSH2 0xFC1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1617 DUP5 DUP3 DUP6 ADD PUSH2 0x15E1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1633 PUSH0 DUP4 ADD DUP7 PUSH2 0x1198 JUMP JUMPDEST PUSH2 0x1640 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1198 JUMP JUMPDEST PUSH2 0x164D PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xF00 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x16B1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x1676 JUMP JUMPDEST PUSH2 0x16BB DUP7 DUP4 PUSH2 0x1676 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x16ED PUSH2 0x16E8 PUSH2 0x16E3 DUP5 PUSH2 0xEF7 JUMP JUMPDEST PUSH2 0x13EB JUMP JUMPDEST PUSH2 0xEF7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1706 DUP4 PUSH2 0x16D3 JUMP JUMPDEST PUSH2 0x171A PUSH2 0x1712 DUP3 PUSH2 0x16F4 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x1682 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x172E PUSH2 0x1722 JUMP JUMPDEST PUSH2 0x1739 DUP2 DUP5 DUP5 PUSH2 0x16FD JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x175C JUMPI PUSH2 0x1751 PUSH0 DUP3 PUSH2 0x1726 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x173F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x17A1 JUMPI PUSH2 0x1772 DUP2 PUSH2 0x1655 JUMP JUMPDEST PUSH2 0x177B DUP5 PUSH2 0x1667 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x178A JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x179E PUSH2 0x1796 DUP6 PUSH2 0x1667 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x173E JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x17C1 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x17A6 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x17D9 DUP4 DUP4 PUSH2 0x17B2 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x17F2 DUP3 PUSH2 0xF28 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x180B JUMPI PUSH2 0x180A PUSH2 0x1206 JUMP JUMPDEST JUMPDEST PUSH2 0x1815 DUP3 SLOAD PUSH2 0x148C JUMP JUMPDEST PUSH2 0x1820 DUP3 DUP3 DUP6 PUSH2 0x1760 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1851 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x183F JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x1849 DUP6 DUP3 PUSH2 0x17CE JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x18B0 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x185F DUP7 PUSH2 0x1655 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1886 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1861 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x18A3 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x189F PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x17B2 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x18EE PUSH2 0x18E9 PUSH2 0x18E4 DUP5 PUSH2 0x18B8 JUMP JUMPDEST PUSH2 0x13EB JUMP JUMPDEST PUSH2 0x18C1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18FE DUP2 PUSH2 0x18D4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1917 PUSH0 DUP4 ADD DUP5 PUSH2 0x18F5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP11 PUSH1 0x7B BLOCKHASH DUP14 PUSH27 0xC81DE8DE9D02B43574E48C4DBD9AF236F993E841B1FEAE57753B64 PUSH20 0x6F6C634300081A00330000000000000000000000 ",
							"sourceMap": "264:3325:8:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_checkOwner_122": {
									"entryPoint": 3402,
									"id": 122,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_getInitializableStorage_447": {
									"entryPoint": 3785,
									"id": 447,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_getOwnableStorage_25": {
									"entryPoint": 3746,
									"id": 25,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_msgSender_476": {
									"entryPoint": 3824,
									"id": 476,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_193": {
									"entryPoint": 3537,
									"id": 193,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@allowance_1532": {
									"entryPoint": 2678,
									"id": 1532,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_1547": {
									"entryPoint": 1028,
									"id": 1547,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_1308": {
									"entryPoint": 1913,
									"id": 1308,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@decimals_1502": {
									"entryPoint": 1760,
									"id": 1502,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@depositDeadline_1294": {
									"entryPoint": 1907,
									"id": 1294,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@deposit_1424": {
									"entryPoint": 2197,
									"id": 1424,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@initialize_1371": {
									"entryPoint": 2729,
									"id": 1371,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@lockDuration_1296": {
									"entryPoint": 882,
									"id": 1296,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@name_1298": {
									"entryPoint": 888,
									"id": 1298,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_105": {
									"entryPoint": 1953,
									"id": 105,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_136": {
									"entryPoint": 1934,
									"id": 136,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_1300": {
									"entryPoint": 2006,
									"id": 1300,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@token_1292": {
									"entryPoint": 3367,
									"id": 1292,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalSupply_1303": {
									"entryPoint": 1079,
									"id": 1303,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferFrom_1564": {
									"entryPoint": 1085,
									"id": 1564,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_164": {
									"entryPoint": 3235,
									"id": 164,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_1517": {
									"entryPoint": 2146,
									"id": 1517,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@withdraw_1491": {
									"entryPoint": 1136,
									"id": 1491,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_string_memory_ptr": {
									"entryPoint": 4796,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 4111,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 5516,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr": {
									"entryPoint": 4861,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 4153,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint8_fromMemory": {
									"entryPoint": 5601,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4461,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 4544,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 4286,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_string_memory_ptrt_string_memory_ptr": {
									"entryPoint": 4906,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 6
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 4173,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 5536,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 4366,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint8_fromMemory": {
									"entryPoint": 5621,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 4504,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 4246,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_ERC20_$1146_to_t_address_fromStack": {
									"entryPoint": 5175,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_rational_1_by_1_to_t_uint64_fromStack": {
									"entryPoint": 6389,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3936,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3840,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 4421,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 4519,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 5664,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 5455,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 4261,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_ERC20_$1146__to_t_address__fromStack_reversed": {
									"entryPoint": 5190,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed": {
									"entryPoint": 6404,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3992,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3855,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 4436,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 4708,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 4024,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 4734,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 5717,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 3880,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 3890,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 5353,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 5404,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 5984,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 4072,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 4235,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_rational_1_by_1": {
									"entryPoint": 6328,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 4041,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 3831,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint64": {
									"entryPoint": 6337,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 4409,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 5950,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_contract$_ERC20_$1146_to_t_address": {
									"entryPoint": 5158,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_rational_1_by_1_to_t_uint64": {
									"entryPoint": 6356,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 5141,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 5108,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 5843,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 6121,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 4782,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 3906,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 5735,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 5260,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 6094,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 4659,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 5099,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 6066,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 5308,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 5215,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 4614,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 5876,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 4606,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 4610,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 4037,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 4033,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 3920,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 5750,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 6054,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 5926,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 5762,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 5885,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 4089,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 5494,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 4131,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint8": {
									"entryPoint": 5579,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 5922,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:18841:9",
										"nodeType": "YulBlock",
										"src": "0:18841:9",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:32:9",
													"nodeType": "YulBlock",
													"src": "52:32:9",
													"statements": [
														{
															"nativeSrc": "62:16:9",
															"nodeType": "YulAssignment",
															"src": "62:16:9",
															"value": {
																"name": "value",
																"nativeSrc": "73:5:9",
																"nodeType": "YulIdentifier",
																"src": "73:5:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "7:77:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:9",
														"nodeType": "YulTypedName",
														"src": "34:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:9",
														"nodeType": "YulTypedName",
														"src": "44:7:9",
														"type": ""
													}
												],
												"src": "7:77:9"
											},
											{
												"body": {
													"nativeSrc": "155:53:9",
													"nodeType": "YulBlock",
													"src": "155:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "172:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "172:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "195:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "195:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "177:17:9",
																			"nodeType": "YulIdentifier",
																			"src": "177:17:9"
																		},
																		"nativeSrc": "177:24:9",
																		"nodeType": "YulFunctionCall",
																		"src": "177:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "165:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:9"
																},
																"nativeSrc": "165:37:9",
																"nodeType": "YulFunctionCall",
																"src": "165:37:9"
															},
															"nativeSrc": "165:37:9",
															"nodeType": "YulExpressionStatement",
															"src": "165:37:9"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "90:118:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "143:5:9",
														"nodeType": "YulTypedName",
														"src": "143:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "150:3:9",
														"nodeType": "YulTypedName",
														"src": "150:3:9",
														"type": ""
													}
												],
												"src": "90:118:9"
											},
											{
												"body": {
													"nativeSrc": "312:124:9",
													"nodeType": "YulBlock",
													"src": "312:124:9",
													"statements": [
														{
															"nativeSrc": "322:26:9",
															"nodeType": "YulAssignment",
															"src": "322:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "334:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "345:2:9",
																		"nodeType": "YulLiteral",
																		"src": "345:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "330:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "330:3:9"
																},
																"nativeSrc": "330:18:9",
																"nodeType": "YulFunctionCall",
																"src": "330:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "322:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "322:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "402:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "402:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "415:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "415:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "426:1:9",
																				"nodeType": "YulLiteral",
																				"src": "426:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "411:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "411:3:9"
																		},
																		"nativeSrc": "411:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "411:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "358:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "358:43:9"
																},
																"nativeSrc": "358:71:9",
																"nodeType": "YulFunctionCall",
																"src": "358:71:9"
															},
															"nativeSrc": "358:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "358:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "214:222:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "284:9:9",
														"nodeType": "YulTypedName",
														"src": "284:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "296:6:9",
														"nodeType": "YulTypedName",
														"src": "296:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "307:4:9",
														"nodeType": "YulTypedName",
														"src": "307:4:9",
														"type": ""
													}
												],
												"src": "214:222:9"
											},
											{
												"body": {
													"nativeSrc": "501:40:9",
													"nodeType": "YulBlock",
													"src": "501:40:9",
													"statements": [
														{
															"nativeSrc": "512:22:9",
															"nodeType": "YulAssignment",
															"src": "512:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "528:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "528:5:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "522:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "522:5:9"
																},
																"nativeSrc": "522:12:9",
																"nodeType": "YulFunctionCall",
																"src": "522:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "512:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "512:6:9"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "442:99:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "484:5:9",
														"nodeType": "YulTypedName",
														"src": "484:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "494:6:9",
														"nodeType": "YulTypedName",
														"src": "494:6:9",
														"type": ""
													}
												],
												"src": "442:99:9"
											},
											{
												"body": {
													"nativeSrc": "643:73:9",
													"nodeType": "YulBlock",
													"src": "643:73:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "660:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "660:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "665:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "665:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "653:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "653:6:9"
																},
																"nativeSrc": "653:19:9",
																"nodeType": "YulFunctionCall",
																"src": "653:19:9"
															},
															"nativeSrc": "653:19:9",
															"nodeType": "YulExpressionStatement",
															"src": "653:19:9"
														},
														{
															"nativeSrc": "681:29:9",
															"nodeType": "YulAssignment",
															"src": "681:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "700:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "700:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "705:4:9",
																		"nodeType": "YulLiteral",
																		"src": "705:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "696:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "696:3:9"
																},
																"nativeSrc": "696:14:9",
																"nodeType": "YulFunctionCall",
																"src": "696:14:9"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "681:11:9",
																	"nodeType": "YulIdentifier",
																	"src": "681:11:9"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "547:169:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "615:3:9",
														"nodeType": "YulTypedName",
														"src": "615:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "620:6:9",
														"nodeType": "YulTypedName",
														"src": "620:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "631:11:9",
														"nodeType": "YulTypedName",
														"src": "631:11:9",
														"type": ""
													}
												],
												"src": "547:169:9"
											},
											{
												"body": {
													"nativeSrc": "784:77:9",
													"nodeType": "YulBlock",
													"src": "784:77:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "801:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "801:3:9"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "806:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "806:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "811:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "811:6:9"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "795:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "795:5:9"
																},
																"nativeSrc": "795:23:9",
																"nodeType": "YulFunctionCall",
																"src": "795:23:9"
															},
															"nativeSrc": "795:23:9",
															"nodeType": "YulExpressionStatement",
															"src": "795:23:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "838:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "838:3:9"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "843:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "843:6:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "834:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "834:3:9"
																		},
																		"nativeSrc": "834:16:9",
																		"nodeType": "YulFunctionCall",
																		"src": "834:16:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "852:1:9",
																		"nodeType": "YulLiteral",
																		"src": "852:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "827:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "827:6:9"
																},
																"nativeSrc": "827:27:9",
																"nodeType": "YulFunctionCall",
																"src": "827:27:9"
															},
															"nativeSrc": "827:27:9",
															"nodeType": "YulExpressionStatement",
															"src": "827:27:9"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "722:139:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "766:3:9",
														"nodeType": "YulTypedName",
														"src": "766:3:9",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "771:3:9",
														"nodeType": "YulTypedName",
														"src": "771:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "776:6:9",
														"nodeType": "YulTypedName",
														"src": "776:6:9",
														"type": ""
													}
												],
												"src": "722:139:9"
											},
											{
												"body": {
													"nativeSrc": "915:54:9",
													"nodeType": "YulBlock",
													"src": "915:54:9",
													"statements": [
														{
															"nativeSrc": "925:38:9",
															"nodeType": "YulAssignment",
															"src": "925:38:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "943:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "943:5:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "950:2:9",
																				"nodeType": "YulLiteral",
																				"src": "950:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "939:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:9"
																		},
																		"nativeSrc": "939:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "939:14:9"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "959:2:9",
																				"nodeType": "YulLiteral",
																				"src": "959:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "955:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "955:3:9"
																		},
																		"nativeSrc": "955:7:9",
																		"nodeType": "YulFunctionCall",
																		"src": "955:7:9"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "935:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:9"
																},
																"nativeSrc": "935:28:9",
																"nodeType": "YulFunctionCall",
																"src": "935:28:9"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "925:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "925:6:9"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "867:102:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "898:5:9",
														"nodeType": "YulTypedName",
														"src": "898:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "908:6:9",
														"nodeType": "YulTypedName",
														"src": "908:6:9",
														"type": ""
													}
												],
												"src": "867:102:9"
											},
											{
												"body": {
													"nativeSrc": "1067:285:9",
													"nodeType": "YulBlock",
													"src": "1067:285:9",
													"statements": [
														{
															"nativeSrc": "1077:53:9",
															"nodeType": "YulVariableDeclaration",
															"src": "1077:53:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1124:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "1124:5:9"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "1091:32:9",
																	"nodeType": "YulIdentifier",
																	"src": "1091:32:9"
																},
																"nativeSrc": "1091:39:9",
																"nodeType": "YulFunctionCall",
																"src": "1091:39:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "1081:6:9",
																	"nodeType": "YulTypedName",
																	"src": "1081:6:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1139:78:9",
															"nodeType": "YulAssignment",
															"src": "1139:78:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1205:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "1205:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1210:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1210:6:9"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1146:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "1146:58:9"
																},
																"nativeSrc": "1146:71:9",
																"nodeType": "YulFunctionCall",
																"src": "1146:71:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "1139:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1139:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1265:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "1265:5:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1272:4:9",
																				"nodeType": "YulLiteral",
																				"src": "1272:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1261:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1261:3:9"
																		},
																		"nativeSrc": "1261:16:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1261:16:9"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "1279:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "1279:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1284:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1284:6:9"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "1226:34:9",
																	"nodeType": "YulIdentifier",
																	"src": "1226:34:9"
																},
																"nativeSrc": "1226:65:9",
																"nodeType": "YulFunctionCall",
																"src": "1226:65:9"
															},
															"nativeSrc": "1226:65:9",
															"nodeType": "YulExpressionStatement",
															"src": "1226:65:9"
														},
														{
															"nativeSrc": "1300:46:9",
															"nodeType": "YulAssignment",
															"src": "1300:46:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1311:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "1311:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1338:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1338:6:9"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "1316:21:9",
																			"nodeType": "YulIdentifier",
																			"src": "1316:21:9"
																		},
																		"nativeSrc": "1316:29:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1316:29:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1307:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1307:3:9"
																},
																"nativeSrc": "1307:39:9",
																"nodeType": "YulFunctionCall",
																"src": "1307:39:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "1300:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1300:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "975:377:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1048:5:9",
														"nodeType": "YulTypedName",
														"src": "1048:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1055:3:9",
														"nodeType": "YulTypedName",
														"src": "1055:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "1063:3:9",
														"nodeType": "YulTypedName",
														"src": "1063:3:9",
														"type": ""
													}
												],
												"src": "975:377:9"
											},
											{
												"body": {
													"nativeSrc": "1476:195:9",
													"nodeType": "YulBlock",
													"src": "1476:195:9",
													"statements": [
														{
															"nativeSrc": "1486:26:9",
															"nodeType": "YulAssignment",
															"src": "1486:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1498:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "1498:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1509:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1509:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1494:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1494:3:9"
																},
																"nativeSrc": "1494:18:9",
																"nodeType": "YulFunctionCall",
																"src": "1494:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1486:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "1486:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1533:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "1533:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1544:1:9",
																				"nodeType": "YulLiteral",
																				"src": "1544:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1529:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1529:3:9"
																		},
																		"nativeSrc": "1529:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1529:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1552:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "1552:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1558:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "1558:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1548:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1548:3:9"
																		},
																		"nativeSrc": "1548:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1548:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1522:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1522:6:9"
																},
																"nativeSrc": "1522:47:9",
																"nodeType": "YulFunctionCall",
																"src": "1522:47:9"
															},
															"nativeSrc": "1522:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "1522:47:9"
														},
														{
															"nativeSrc": "1578:86:9",
															"nodeType": "YulAssignment",
															"src": "1578:86:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1650:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1650:6:9"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1659:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "1659:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1586:63:9",
																	"nodeType": "YulIdentifier",
																	"src": "1586:63:9"
																},
																"nativeSrc": "1586:78:9",
																"nodeType": "YulFunctionCall",
																"src": "1586:78:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1578:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "1578:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1358:313:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1448:9:9",
														"nodeType": "YulTypedName",
														"src": "1448:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1460:6:9",
														"nodeType": "YulTypedName",
														"src": "1460:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1471:4:9",
														"nodeType": "YulTypedName",
														"src": "1471:4:9",
														"type": ""
													}
												],
												"src": "1358:313:9"
											},
											{
												"body": {
													"nativeSrc": "1717:35:9",
													"nodeType": "YulBlock",
													"src": "1717:35:9",
													"statements": [
														{
															"nativeSrc": "1727:19:9",
															"nodeType": "YulAssignment",
															"src": "1727:19:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1743:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1743:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1737:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "1737:5:9"
																},
																"nativeSrc": "1737:9:9",
																"nodeType": "YulFunctionCall",
																"src": "1737:9:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1727:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1727:6:9"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1677:75:9",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1710:6:9",
														"nodeType": "YulTypedName",
														"src": "1710:6:9",
														"type": ""
													}
												],
												"src": "1677:75:9"
											},
											{
												"body": {
													"nativeSrc": "1847:28:9",
													"nodeType": "YulBlock",
													"src": "1847:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1864:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1864:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1867:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1867:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1857:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1857:6:9"
																},
																"nativeSrc": "1857:12:9",
																"nodeType": "YulFunctionCall",
																"src": "1857:12:9"
															},
															"nativeSrc": "1857:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "1857:12:9"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1758:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "1758:117:9"
											},
											{
												"body": {
													"nativeSrc": "1970:28:9",
													"nodeType": "YulBlock",
													"src": "1970:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1987:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1987:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1990:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1990:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1980:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1980:6:9"
																},
																"nativeSrc": "1980:12:9",
																"nodeType": "YulFunctionCall",
																"src": "1980:12:9"
															},
															"nativeSrc": "1980:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "1980:12:9"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1881:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "1881:117:9"
											},
											{
												"body": {
													"nativeSrc": "2049:81:9",
													"nodeType": "YulBlock",
													"src": "2049:81:9",
													"statements": [
														{
															"nativeSrc": "2059:65:9",
															"nodeType": "YulAssignment",
															"src": "2059:65:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2074:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "2074:5:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2081:42:9",
																		"nodeType": "YulLiteral",
																		"src": "2081:42:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2070:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2070:3:9"
																},
																"nativeSrc": "2070:54:9",
																"nodeType": "YulFunctionCall",
																"src": "2070:54:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2059:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "2059:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "2004:126:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2031:5:9",
														"nodeType": "YulTypedName",
														"src": "2031:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2041:7:9",
														"nodeType": "YulTypedName",
														"src": "2041:7:9",
														"type": ""
													}
												],
												"src": "2004:126:9"
											},
											{
												"body": {
													"nativeSrc": "2181:51:9",
													"nodeType": "YulBlock",
													"src": "2181:51:9",
													"statements": [
														{
															"nativeSrc": "2191:35:9",
															"nodeType": "YulAssignment",
															"src": "2191:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2220:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "2220:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2202:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "2202:17:9"
																},
																"nativeSrc": "2202:24:9",
																"nodeType": "YulFunctionCall",
																"src": "2202:24:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2191:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "2191:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "2136:96:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2163:5:9",
														"nodeType": "YulTypedName",
														"src": "2163:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2173:7:9",
														"nodeType": "YulTypedName",
														"src": "2173:7:9",
														"type": ""
													}
												],
												"src": "2136:96:9"
											},
											{
												"body": {
													"nativeSrc": "2281:79:9",
													"nodeType": "YulBlock",
													"src": "2281:79:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "2338:16:9",
																"nodeType": "YulBlock",
																"src": "2338:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2347:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2347:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2350:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2350:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2340:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2340:6:9"
																			},
																			"nativeSrc": "2340:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2340:12:9"
																		},
																		"nativeSrc": "2340:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "2340:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2304:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "2304:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2329:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "2329:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "2311:17:9",
																					"nodeType": "YulIdentifier",
																					"src": "2311:17:9"
																				},
																				"nativeSrc": "2311:24:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2311:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2301:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "2301:2:9"
																		},
																		"nativeSrc": "2301:35:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2301:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2294:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2294:6:9"
																},
																"nativeSrc": "2294:43:9",
																"nodeType": "YulFunctionCall",
																"src": "2294:43:9"
															},
															"nativeSrc": "2291:63:9",
															"nodeType": "YulIf",
															"src": "2291:63:9"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "2238:122:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2274:5:9",
														"nodeType": "YulTypedName",
														"src": "2274:5:9",
														"type": ""
													}
												],
												"src": "2238:122:9"
											},
											{
												"body": {
													"nativeSrc": "2418:87:9",
													"nodeType": "YulBlock",
													"src": "2418:87:9",
													"statements": [
														{
															"nativeSrc": "2428:29:9",
															"nodeType": "YulAssignment",
															"src": "2428:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2450:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "2450:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2437:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "2437:12:9"
																},
																"nativeSrc": "2437:20:9",
																"nodeType": "YulFunctionCall",
																"src": "2437:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2428:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "2428:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2493:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "2493:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2466:26:9",
																	"nodeType": "YulIdentifier",
																	"src": "2466:26:9"
																},
																"nativeSrc": "2466:33:9",
																"nodeType": "YulFunctionCall",
																"src": "2466:33:9"
															},
															"nativeSrc": "2466:33:9",
															"nodeType": "YulExpressionStatement",
															"src": "2466:33:9"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "2366:139:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2396:6:9",
														"nodeType": "YulTypedName",
														"src": "2396:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2404:3:9",
														"nodeType": "YulTypedName",
														"src": "2404:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2412:5:9",
														"nodeType": "YulTypedName",
														"src": "2412:5:9",
														"type": ""
													}
												],
												"src": "2366:139:9"
											},
											{
												"body": {
													"nativeSrc": "2554:79:9",
													"nodeType": "YulBlock",
													"src": "2554:79:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "2611:16:9",
																"nodeType": "YulBlock",
																"src": "2611:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2620:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2620:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2623:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2623:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2613:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2613:6:9"
																			},
																			"nativeSrc": "2613:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2613:12:9"
																		},
																		"nativeSrc": "2613:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "2613:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2577:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "2577:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2602:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "2602:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2584:17:9",
																					"nodeType": "YulIdentifier",
																					"src": "2584:17:9"
																				},
																				"nativeSrc": "2584:24:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2584:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2574:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "2574:2:9"
																		},
																		"nativeSrc": "2574:35:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2574:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2567:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2567:6:9"
																},
																"nativeSrc": "2567:43:9",
																"nodeType": "YulFunctionCall",
																"src": "2567:43:9"
															},
															"nativeSrc": "2564:63:9",
															"nodeType": "YulIf",
															"src": "2564:63:9"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2511:122:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2547:5:9",
														"nodeType": "YulTypedName",
														"src": "2547:5:9",
														"type": ""
													}
												],
												"src": "2511:122:9"
											},
											{
												"body": {
													"nativeSrc": "2691:87:9",
													"nodeType": "YulBlock",
													"src": "2691:87:9",
													"statements": [
														{
															"nativeSrc": "2701:29:9",
															"nodeType": "YulAssignment",
															"src": "2701:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2723:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "2723:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2710:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "2710:12:9"
																},
																"nativeSrc": "2710:20:9",
																"nodeType": "YulFunctionCall",
																"src": "2710:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2701:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "2701:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2766:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "2766:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2739:26:9",
																	"nodeType": "YulIdentifier",
																	"src": "2739:26:9"
																},
																"nativeSrc": "2739:33:9",
																"nodeType": "YulFunctionCall",
																"src": "2739:33:9"
															},
															"nativeSrc": "2739:33:9",
															"nodeType": "YulExpressionStatement",
															"src": "2739:33:9"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2639:139:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2669:6:9",
														"nodeType": "YulTypedName",
														"src": "2669:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2677:3:9",
														"nodeType": "YulTypedName",
														"src": "2677:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2685:5:9",
														"nodeType": "YulTypedName",
														"src": "2685:5:9",
														"type": ""
													}
												],
												"src": "2639:139:9"
											},
											{
												"body": {
													"nativeSrc": "2867:391:9",
													"nodeType": "YulBlock",
													"src": "2867:391:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "2913:83:9",
																"nodeType": "YulBlock",
																"src": "2913:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2915:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "2915:77:9"
																			},
																			"nativeSrc": "2915:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2915:79:9"
																		},
																		"nativeSrc": "2915:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "2915:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2888:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "2888:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2897:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "2897:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2884:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2884:3:9"
																		},
																		"nativeSrc": "2884:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2884:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2909:2:9",
																		"nodeType": "YulLiteral",
																		"src": "2909:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2880:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2880:3:9"
																},
																"nativeSrc": "2880:32:9",
																"nodeType": "YulFunctionCall",
																"src": "2880:32:9"
															},
															"nativeSrc": "2877:119:9",
															"nodeType": "YulIf",
															"src": "2877:119:9"
														},
														{
															"nativeSrc": "3006:117:9",
															"nodeType": "YulBlock",
															"src": "3006:117:9",
															"statements": [
																{
																	"nativeSrc": "3021:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3021:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3035:1:9",
																		"nodeType": "YulLiteral",
																		"src": "3035:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3025:6:9",
																			"nodeType": "YulTypedName",
																			"src": "3025:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3050:63:9",
																	"nodeType": "YulAssignment",
																	"src": "3050:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3085:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "3085:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3096:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "3096:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3081:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "3081:3:9"
																				},
																				"nativeSrc": "3081:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "3081:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3105:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "3105:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3060:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "3060:20:9"
																		},
																		"nativeSrc": "3060:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3060:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3050:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "3050:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3133:118:9",
															"nodeType": "YulBlock",
															"src": "3133:118:9",
															"statements": [
																{
																	"nativeSrc": "3148:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3148:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3162:2:9",
																		"nodeType": "YulLiteral",
																		"src": "3162:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3152:6:9",
																			"nodeType": "YulTypedName",
																			"src": "3152:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3178:63:9",
																	"nodeType": "YulAssignment",
																	"src": "3178:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3213:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "3213:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3224:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "3224:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3209:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "3209:3:9"
																				},
																				"nativeSrc": "3209:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "3209:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3233:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "3233:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3188:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "3188:20:9"
																		},
																		"nativeSrc": "3188:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3188:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3178:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "3178:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2784:474:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2829:9:9",
														"nodeType": "YulTypedName",
														"src": "2829:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2840:7:9",
														"nodeType": "YulTypedName",
														"src": "2840:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2852:6:9",
														"nodeType": "YulTypedName",
														"src": "2852:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2860:6:9",
														"nodeType": "YulTypedName",
														"src": "2860:6:9",
														"type": ""
													}
												],
												"src": "2784:474:9"
											},
											{
												"body": {
													"nativeSrc": "3306:48:9",
													"nodeType": "YulBlock",
													"src": "3306:48:9",
													"statements": [
														{
															"nativeSrc": "3316:32:9",
															"nodeType": "YulAssignment",
															"src": "3316:32:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3341:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "3341:5:9"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "3334:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "3334:6:9"
																		},
																		"nativeSrc": "3334:13:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3334:13:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3327:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3327:6:9"
																},
																"nativeSrc": "3327:21:9",
																"nodeType": "YulFunctionCall",
																"src": "3327:21:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3316:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "3316:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "3264:90:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3288:5:9",
														"nodeType": "YulTypedName",
														"src": "3288:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3298:7:9",
														"nodeType": "YulTypedName",
														"src": "3298:7:9",
														"type": ""
													}
												],
												"src": "3264:90:9"
											},
											{
												"body": {
													"nativeSrc": "3419:50:9",
													"nodeType": "YulBlock",
													"src": "3419:50:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3436:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "3436:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3456:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "3456:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3441:14:9",
																			"nodeType": "YulIdentifier",
																			"src": "3441:14:9"
																		},
																		"nativeSrc": "3441:21:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3441:21:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3429:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3429:6:9"
																},
																"nativeSrc": "3429:34:9",
																"nodeType": "YulFunctionCall",
																"src": "3429:34:9"
															},
															"nativeSrc": "3429:34:9",
															"nodeType": "YulExpressionStatement",
															"src": "3429:34:9"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3360:109:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3407:5:9",
														"nodeType": "YulTypedName",
														"src": "3407:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3414:3:9",
														"nodeType": "YulTypedName",
														"src": "3414:3:9",
														"type": ""
													}
												],
												"src": "3360:109:9"
											},
											{
												"body": {
													"nativeSrc": "3567:118:9",
													"nodeType": "YulBlock",
													"src": "3567:118:9",
													"statements": [
														{
															"nativeSrc": "3577:26:9",
															"nodeType": "YulAssignment",
															"src": "3577:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3589:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "3589:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3600:2:9",
																		"nodeType": "YulLiteral",
																		"src": "3600:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3585:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3585:3:9"
																},
																"nativeSrc": "3585:18:9",
																"nodeType": "YulFunctionCall",
																"src": "3585:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3577:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "3577:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3651:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "3651:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3664:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "3664:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3675:1:9",
																				"nodeType": "YulLiteral",
																				"src": "3675:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3660:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3660:3:9"
																		},
																		"nativeSrc": "3660:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3660:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3613:37:9",
																	"nodeType": "YulIdentifier",
																	"src": "3613:37:9"
																},
																"nativeSrc": "3613:65:9",
																"nodeType": "YulFunctionCall",
																"src": "3613:65:9"
															},
															"nativeSrc": "3613:65:9",
															"nodeType": "YulExpressionStatement",
															"src": "3613:65:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3475:210:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3539:9:9",
														"nodeType": "YulTypedName",
														"src": "3539:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3551:6:9",
														"nodeType": "YulTypedName",
														"src": "3551:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3562:4:9",
														"nodeType": "YulTypedName",
														"src": "3562:4:9",
														"type": ""
													}
												],
												"src": "3475:210:9"
											},
											{
												"body": {
													"nativeSrc": "3791:519:9",
													"nodeType": "YulBlock",
													"src": "3791:519:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "3837:83:9",
																"nodeType": "YulBlock",
																"src": "3837:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3839:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "3839:77:9"
																			},
																			"nativeSrc": "3839:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "3839:79:9"
																		},
																		"nativeSrc": "3839:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "3839:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3812:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "3812:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3821:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "3821:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3808:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3808:3:9"
																		},
																		"nativeSrc": "3808:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3808:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3833:2:9",
																		"nodeType": "YulLiteral",
																		"src": "3833:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3804:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3804:3:9"
																},
																"nativeSrc": "3804:32:9",
																"nodeType": "YulFunctionCall",
																"src": "3804:32:9"
															},
															"nativeSrc": "3801:119:9",
															"nodeType": "YulIf",
															"src": "3801:119:9"
														},
														{
															"nativeSrc": "3930:117:9",
															"nodeType": "YulBlock",
															"src": "3930:117:9",
															"statements": [
																{
																	"nativeSrc": "3945:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3945:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3959:1:9",
																		"nodeType": "YulLiteral",
																		"src": "3959:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3949:6:9",
																			"nodeType": "YulTypedName",
																			"src": "3949:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3974:63:9",
																	"nodeType": "YulAssignment",
																	"src": "3974:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4009:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "4009:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4020:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "4020:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4005:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "4005:3:9"
																				},
																				"nativeSrc": "4005:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4005:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4029:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "4029:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3984:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "3984:20:9"
																		},
																		"nativeSrc": "3984:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3984:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3974:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "3974:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4057:118:9",
															"nodeType": "YulBlock",
															"src": "4057:118:9",
															"statements": [
																{
																	"nativeSrc": "4072:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4072:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4086:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4086:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4076:6:9",
																			"nodeType": "YulTypedName",
																			"src": "4076:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4102:63:9",
																	"nodeType": "YulAssignment",
																	"src": "4102:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4137:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "4137:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4148:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "4148:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4133:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "4133:3:9"
																				},
																				"nativeSrc": "4133:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4133:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4157:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "4157:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4112:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "4112:20:9"
																		},
																		"nativeSrc": "4112:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4112:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4102:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "4102:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4185:118:9",
															"nodeType": "YulBlock",
															"src": "4185:118:9",
															"statements": [
																{
																	"nativeSrc": "4200:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4200:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4214:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4214:2:9",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4204:6:9",
																			"nodeType": "YulTypedName",
																			"src": "4204:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4230:63:9",
																	"nodeType": "YulAssignment",
																	"src": "4230:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4265:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "4265:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4276:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "4276:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4261:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "4261:3:9"
																				},
																				"nativeSrc": "4261:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4261:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4285:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "4285:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4240:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "4240:20:9"
																		},
																		"nativeSrc": "4240:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4240:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4230:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "4230:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "3691:619:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3745:9:9",
														"nodeType": "YulTypedName",
														"src": "3745:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3756:7:9",
														"nodeType": "YulTypedName",
														"src": "3756:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3768:6:9",
														"nodeType": "YulTypedName",
														"src": "3768:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3776:6:9",
														"nodeType": "YulTypedName",
														"src": "3776:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3784:6:9",
														"nodeType": "YulTypedName",
														"src": "3784:6:9",
														"type": ""
													}
												],
												"src": "3691:619:9"
											},
											{
												"body": {
													"nativeSrc": "4382:263:9",
													"nodeType": "YulBlock",
													"src": "4382:263:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "4428:83:9",
																"nodeType": "YulBlock",
																"src": "4428:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4430:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "4430:77:9"
																			},
																			"nativeSrc": "4430:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "4430:79:9"
																		},
																		"nativeSrc": "4430:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "4430:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4403:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "4403:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4412:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "4412:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4399:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4399:3:9"
																		},
																		"nativeSrc": "4399:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4399:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4424:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4424:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4395:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4395:3:9"
																},
																"nativeSrc": "4395:32:9",
																"nodeType": "YulFunctionCall",
																"src": "4395:32:9"
															},
															"nativeSrc": "4392:119:9",
															"nodeType": "YulIf",
															"src": "4392:119:9"
														},
														{
															"nativeSrc": "4521:117:9",
															"nodeType": "YulBlock",
															"src": "4521:117:9",
															"statements": [
																{
																	"nativeSrc": "4536:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4536:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4550:1:9",
																		"nodeType": "YulLiteral",
																		"src": "4550:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4540:6:9",
																			"nodeType": "YulTypedName",
																			"src": "4540:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4565:63:9",
																	"nodeType": "YulAssignment",
																	"src": "4565:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4600:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "4600:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4611:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "4611:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4596:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "4596:3:9"
																				},
																				"nativeSrc": "4596:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4596:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4620:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "4620:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4575:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "4575:20:9"
																		},
																		"nativeSrc": "4575:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4575:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4565:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "4565:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "4316:329:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4352:9:9",
														"nodeType": "YulTypedName",
														"src": "4352:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4363:7:9",
														"nodeType": "YulTypedName",
														"src": "4363:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4375:6:9",
														"nodeType": "YulTypedName",
														"src": "4375:6:9",
														"type": ""
													}
												],
												"src": "4316:329:9"
											},
											{
												"body": {
													"nativeSrc": "4694:43:9",
													"nodeType": "YulBlock",
													"src": "4694:43:9",
													"statements": [
														{
															"nativeSrc": "4704:27:9",
															"nodeType": "YulAssignment",
															"src": "4704:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4719:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "4719:5:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4726:4:9",
																		"nodeType": "YulLiteral",
																		"src": "4726:4:9",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4715:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4715:3:9"
																},
																"nativeSrc": "4715:16:9",
																"nodeType": "YulFunctionCall",
																"src": "4715:16:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4704:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "4704:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "4651:86:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4676:5:9",
														"nodeType": "YulTypedName",
														"src": "4676:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4686:7:9",
														"nodeType": "YulTypedName",
														"src": "4686:7:9",
														"type": ""
													}
												],
												"src": "4651:86:9"
											},
											{
												"body": {
													"nativeSrc": "4804:51:9",
													"nodeType": "YulBlock",
													"src": "4804:51:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4821:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "4821:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4842:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "4842:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "4826:15:9",
																			"nodeType": "YulIdentifier",
																			"src": "4826:15:9"
																		},
																		"nativeSrc": "4826:22:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4826:22:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4814:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4814:6:9"
																},
																"nativeSrc": "4814:35:9",
																"nodeType": "YulFunctionCall",
																"src": "4814:35:9"
															},
															"nativeSrc": "4814:35:9",
															"nodeType": "YulExpressionStatement",
															"src": "4814:35:9"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "4743:112:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4792:5:9",
														"nodeType": "YulTypedName",
														"src": "4792:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4799:3:9",
														"nodeType": "YulTypedName",
														"src": "4799:3:9",
														"type": ""
													}
												],
												"src": "4743:112:9"
											},
											{
												"body": {
													"nativeSrc": "4955:120:9",
													"nodeType": "YulBlock",
													"src": "4955:120:9",
													"statements": [
														{
															"nativeSrc": "4965:26:9",
															"nodeType": "YulAssignment",
															"src": "4965:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4977:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "4977:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4988:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4988:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4973:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4973:3:9"
																},
																"nativeSrc": "4973:18:9",
																"nodeType": "YulFunctionCall",
																"src": "4973:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4965:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "4965:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5041:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "5041:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5054:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "5054:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5065:1:9",
																				"nodeType": "YulLiteral",
																				"src": "5065:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5050:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5050:3:9"
																		},
																		"nativeSrc": "5050:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5050:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "5001:39:9",
																	"nodeType": "YulIdentifier",
																	"src": "5001:39:9"
																},
																"nativeSrc": "5001:67:9",
																"nodeType": "YulFunctionCall",
																"src": "5001:67:9"
															},
															"nativeSrc": "5001:67:9",
															"nodeType": "YulExpressionStatement",
															"src": "5001:67:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "4861:214:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4927:9:9",
														"nodeType": "YulTypedName",
														"src": "4927:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4939:6:9",
														"nodeType": "YulTypedName",
														"src": "4939:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4950:4:9",
														"nodeType": "YulTypedName",
														"src": "4950:4:9",
														"type": ""
													}
												],
												"src": "4861:214:9"
											},
											{
												"body": {
													"nativeSrc": "5147:263:9",
													"nodeType": "YulBlock",
													"src": "5147:263:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "5193:83:9",
																"nodeType": "YulBlock",
																"src": "5193:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5195:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "5195:77:9"
																			},
																			"nativeSrc": "5195:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "5195:79:9"
																		},
																		"nativeSrc": "5195:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "5195:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5168:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "5168:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5177:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "5177:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5164:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5164:3:9"
																		},
																		"nativeSrc": "5164:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5164:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5189:2:9",
																		"nodeType": "YulLiteral",
																		"src": "5189:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5160:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5160:3:9"
																},
																"nativeSrc": "5160:32:9",
																"nodeType": "YulFunctionCall",
																"src": "5160:32:9"
															},
															"nativeSrc": "5157:119:9",
															"nodeType": "YulIf",
															"src": "5157:119:9"
														},
														{
															"nativeSrc": "5286:117:9",
															"nodeType": "YulBlock",
															"src": "5286:117:9",
															"statements": [
																{
																	"nativeSrc": "5301:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5301:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5315:1:9",
																		"nodeType": "YulLiteral",
																		"src": "5315:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5305:6:9",
																			"nodeType": "YulTypedName",
																			"src": "5305:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5330:63:9",
																	"nodeType": "YulAssignment",
																	"src": "5330:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5365:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "5365:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5376:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "5376:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5361:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "5361:3:9"
																				},
																				"nativeSrc": "5361:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "5361:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5385:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "5385:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5340:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "5340:20:9"
																		},
																		"nativeSrc": "5340:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5340:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5330:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "5330:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "5081:329:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5117:9:9",
														"nodeType": "YulTypedName",
														"src": "5117:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5128:7:9",
														"nodeType": "YulTypedName",
														"src": "5128:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5140:6:9",
														"nodeType": "YulTypedName",
														"src": "5140:6:9",
														"type": ""
													}
												],
												"src": "5081:329:9"
											},
											{
												"body": {
													"nativeSrc": "5481:53:9",
													"nodeType": "YulBlock",
													"src": "5481:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5498:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "5498:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5521:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "5521:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "5503:17:9",
																			"nodeType": "YulIdentifier",
																			"src": "5503:17:9"
																		},
																		"nativeSrc": "5503:24:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5503:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5491:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5491:6:9"
																},
																"nativeSrc": "5491:37:9",
																"nodeType": "YulFunctionCall",
																"src": "5491:37:9"
															},
															"nativeSrc": "5491:37:9",
															"nodeType": "YulExpressionStatement",
															"src": "5491:37:9"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "5416:118:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5469:5:9",
														"nodeType": "YulTypedName",
														"src": "5469:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5476:3:9",
														"nodeType": "YulTypedName",
														"src": "5476:3:9",
														"type": ""
													}
												],
												"src": "5416:118:9"
											},
											{
												"body": {
													"nativeSrc": "5638:124:9",
													"nodeType": "YulBlock",
													"src": "5638:124:9",
													"statements": [
														{
															"nativeSrc": "5648:26:9",
															"nodeType": "YulAssignment",
															"src": "5648:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5660:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "5660:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5671:2:9",
																		"nodeType": "YulLiteral",
																		"src": "5671:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5656:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5656:3:9"
																},
																"nativeSrc": "5656:18:9",
																"nodeType": "YulFunctionCall",
																"src": "5656:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5648:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "5648:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5728:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "5728:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5741:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "5741:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5752:1:9",
																				"nodeType": "YulLiteral",
																				"src": "5752:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5737:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5737:3:9"
																		},
																		"nativeSrc": "5737:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5737:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5684:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "5684:43:9"
																},
																"nativeSrc": "5684:71:9",
																"nodeType": "YulFunctionCall",
																"src": "5684:71:9"
															},
															"nativeSrc": "5684:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "5684:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "5540:222:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5610:9:9",
														"nodeType": "YulTypedName",
														"src": "5610:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5622:6:9",
														"nodeType": "YulTypedName",
														"src": "5622:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5633:4:9",
														"nodeType": "YulTypedName",
														"src": "5633:4:9",
														"type": ""
													}
												],
												"src": "5540:222:9"
											},
											{
												"body": {
													"nativeSrc": "5851:391:9",
													"nodeType": "YulBlock",
													"src": "5851:391:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "5897:83:9",
																"nodeType": "YulBlock",
																"src": "5897:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5899:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "5899:77:9"
																			},
																			"nativeSrc": "5899:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "5899:79:9"
																		},
																		"nativeSrc": "5899:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "5899:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5872:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "5872:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5881:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "5881:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5868:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5868:3:9"
																		},
																		"nativeSrc": "5868:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5868:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5893:2:9",
																		"nodeType": "YulLiteral",
																		"src": "5893:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5864:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5864:3:9"
																},
																"nativeSrc": "5864:32:9",
																"nodeType": "YulFunctionCall",
																"src": "5864:32:9"
															},
															"nativeSrc": "5861:119:9",
															"nodeType": "YulIf",
															"src": "5861:119:9"
														},
														{
															"nativeSrc": "5990:117:9",
															"nodeType": "YulBlock",
															"src": "5990:117:9",
															"statements": [
																{
																	"nativeSrc": "6005:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6005:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6019:1:9",
																		"nodeType": "YulLiteral",
																		"src": "6019:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6009:6:9",
																			"nodeType": "YulTypedName",
																			"src": "6009:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6034:63:9",
																	"nodeType": "YulAssignment",
																	"src": "6034:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6069:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "6069:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6080:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "6080:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6065:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "6065:3:9"
																				},
																				"nativeSrc": "6065:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "6065:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6089:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "6089:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6044:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "6044:20:9"
																		},
																		"nativeSrc": "6044:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6044:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6034:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "6034:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6117:118:9",
															"nodeType": "YulBlock",
															"src": "6117:118:9",
															"statements": [
																{
																	"nativeSrc": "6132:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6132:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6146:2:9",
																		"nodeType": "YulLiteral",
																		"src": "6146:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6136:6:9",
																			"nodeType": "YulTypedName",
																			"src": "6136:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6162:63:9",
																	"nodeType": "YulAssignment",
																	"src": "6162:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6197:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "6197:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6208:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "6208:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6193:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "6193:3:9"
																				},
																				"nativeSrc": "6193:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "6193:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6217:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "6217:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6172:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "6172:20:9"
																		},
																		"nativeSrc": "6172:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6172:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6162:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "6162:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "5768:474:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5813:9:9",
														"nodeType": "YulTypedName",
														"src": "5813:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5824:7:9",
														"nodeType": "YulTypedName",
														"src": "5824:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5836:6:9",
														"nodeType": "YulTypedName",
														"src": "5836:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5844:6:9",
														"nodeType": "YulTypedName",
														"src": "5844:6:9",
														"type": ""
													}
												],
												"src": "5768:474:9"
											},
											{
												"body": {
													"nativeSrc": "6337:28:9",
													"nodeType": "YulBlock",
													"src": "6337:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6354:1:9",
																		"nodeType": "YulLiteral",
																		"src": "6354:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6357:1:9",
																		"nodeType": "YulLiteral",
																		"src": "6357:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6347:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6347:6:9"
																},
																"nativeSrc": "6347:12:9",
																"nodeType": "YulFunctionCall",
																"src": "6347:12:9"
															},
															"nativeSrc": "6347:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "6347:12:9"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "6248:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "6248:117:9"
											},
											{
												"body": {
													"nativeSrc": "6460:28:9",
													"nodeType": "YulBlock",
													"src": "6460:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6477:1:9",
																		"nodeType": "YulLiteral",
																		"src": "6477:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6480:1:9",
																		"nodeType": "YulLiteral",
																		"src": "6480:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6470:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6470:6:9"
																},
																"nativeSrc": "6470:12:9",
																"nodeType": "YulFunctionCall",
																"src": "6470:12:9"
															},
															"nativeSrc": "6470:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "6470:12:9"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "6371:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "6371:117:9"
											},
											{
												"body": {
													"nativeSrc": "6522:152:9",
													"nodeType": "YulBlock",
													"src": "6522:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6539:1:9",
																		"nodeType": "YulLiteral",
																		"src": "6539:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6542:77:9",
																		"nodeType": "YulLiteral",
																		"src": "6542:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6532:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6532:6:9"
																},
																"nativeSrc": "6532:88:9",
																"nodeType": "YulFunctionCall",
																"src": "6532:88:9"
															},
															"nativeSrc": "6532:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "6532:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6636:1:9",
																		"nodeType": "YulLiteral",
																		"src": "6636:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6639:4:9",
																		"nodeType": "YulLiteral",
																		"src": "6639:4:9",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6629:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6629:6:9"
																},
																"nativeSrc": "6629:15:9",
																"nodeType": "YulFunctionCall",
																"src": "6629:15:9"
															},
															"nativeSrc": "6629:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "6629:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6660:1:9",
																		"nodeType": "YulLiteral",
																		"src": "6660:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6663:4:9",
																		"nodeType": "YulLiteral",
																		"src": "6663:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6653:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6653:6:9"
																},
																"nativeSrc": "6653:15:9",
																"nodeType": "YulFunctionCall",
																"src": "6653:15:9"
															},
															"nativeSrc": "6653:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "6653:15:9"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "6494:180:9",
												"nodeType": "YulFunctionDefinition",
												"src": "6494:180:9"
											},
											{
												"body": {
													"nativeSrc": "6723:238:9",
													"nodeType": "YulBlock",
													"src": "6723:238:9",
													"statements": [
														{
															"nativeSrc": "6733:58:9",
															"nodeType": "YulVariableDeclaration",
															"src": "6733:58:9",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "6755:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "6755:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "6785:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "6785:4:9"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "6763:21:9",
																			"nodeType": "YulIdentifier",
																			"src": "6763:21:9"
																		},
																		"nativeSrc": "6763:27:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6763:27:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6751:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "6751:3:9"
																},
																"nativeSrc": "6751:40:9",
																"nodeType": "YulFunctionCall",
																"src": "6751:40:9"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "6737:10:9",
																	"nodeType": "YulTypedName",
																	"src": "6737:10:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6902:22:9",
																"nodeType": "YulBlock",
																"src": "6902:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "6904:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "6904:16:9"
																			},
																			"nativeSrc": "6904:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "6904:18:9"
																		},
																		"nativeSrc": "6904:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "6904:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "6845:10:9",
																				"nodeType": "YulIdentifier",
																				"src": "6845:10:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6857:18:9",
																				"nodeType": "YulLiteral",
																				"src": "6857:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "6842:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "6842:2:9"
																		},
																		"nativeSrc": "6842:34:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6842:34:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "6881:10:9",
																				"nodeType": "YulIdentifier",
																				"src": "6881:10:9"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "6893:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "6893:6:9"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "6878:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "6878:2:9"
																		},
																		"nativeSrc": "6878:22:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6878:22:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "6839:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "6839:2:9"
																},
																"nativeSrc": "6839:62:9",
																"nodeType": "YulFunctionCall",
																"src": "6839:62:9"
															},
															"nativeSrc": "6836:88:9",
															"nodeType": "YulIf",
															"src": "6836:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6940:2:9",
																		"nodeType": "YulLiteral",
																		"src": "6940:2:9",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "6944:10:9",
																		"nodeType": "YulIdentifier",
																		"src": "6944:10:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6933:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6933:6:9"
																},
																"nativeSrc": "6933:22:9",
																"nodeType": "YulFunctionCall",
																"src": "6933:22:9"
															},
															"nativeSrc": "6933:22:9",
															"nodeType": "YulExpressionStatement",
															"src": "6933:22:9"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "6680:281:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "6709:6:9",
														"nodeType": "YulTypedName",
														"src": "6709:6:9",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "6717:4:9",
														"nodeType": "YulTypedName",
														"src": "6717:4:9",
														"type": ""
													}
												],
												"src": "6680:281:9"
											},
											{
												"body": {
													"nativeSrc": "7008:88:9",
													"nodeType": "YulBlock",
													"src": "7008:88:9",
													"statements": [
														{
															"nativeSrc": "7018:30:9",
															"nodeType": "YulAssignment",
															"src": "7018:30:9",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "7028:18:9",
																	"nodeType": "YulIdentifier",
																	"src": "7028:18:9"
																},
																"nativeSrc": "7028:20:9",
																"nodeType": "YulFunctionCall",
																"src": "7028:20:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "7018:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7018:6:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "7077:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "7077:6:9"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "7085:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "7085:4:9"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "7057:19:9",
																	"nodeType": "YulIdentifier",
																	"src": "7057:19:9"
																},
																"nativeSrc": "7057:33:9",
																"nodeType": "YulFunctionCall",
																"src": "7057:33:9"
															},
															"nativeSrc": "7057:33:9",
															"nodeType": "YulExpressionStatement",
															"src": "7057:33:9"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "6967:129:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "6992:4:9",
														"nodeType": "YulTypedName",
														"src": "6992:4:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "7001:6:9",
														"nodeType": "YulTypedName",
														"src": "7001:6:9",
														"type": ""
													}
												],
												"src": "6967:129:9"
											},
											{
												"body": {
													"nativeSrc": "7169:241:9",
													"nodeType": "YulBlock",
													"src": "7169:241:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "7274:22:9",
																"nodeType": "YulBlock",
																"src": "7274:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "7276:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "7276:16:9"
																			},
																			"nativeSrc": "7276:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "7276:18:9"
																		},
																		"nativeSrc": "7276:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "7276:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "7246:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "7246:6:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7254:18:9",
																		"nodeType": "YulLiteral",
																		"src": "7254:18:9",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7243:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "7243:2:9"
																},
																"nativeSrc": "7243:30:9",
																"nodeType": "YulFunctionCall",
																"src": "7243:30:9"
															},
															"nativeSrc": "7240:56:9",
															"nodeType": "YulIf",
															"src": "7240:56:9"
														},
														{
															"nativeSrc": "7306:37:9",
															"nodeType": "YulAssignment",
															"src": "7306:37:9",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "7336:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "7336:6:9"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "7314:21:9",
																	"nodeType": "YulIdentifier",
																	"src": "7314:21:9"
																},
																"nativeSrc": "7314:29:9",
																"nodeType": "YulFunctionCall",
																"src": "7314:29:9"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "7306:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "7306:4:9"
																}
															]
														},
														{
															"nativeSrc": "7380:23:9",
															"nodeType": "YulAssignment",
															"src": "7380:23:9",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "7392:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "7392:4:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7398:4:9",
																		"nodeType": "YulLiteral",
																		"src": "7398:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7388:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "7388:3:9"
																},
																"nativeSrc": "7388:15:9",
																"nodeType": "YulFunctionCall",
																"src": "7388:15:9"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "7380:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "7380:4:9"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "7102:308:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "7153:6:9",
														"nodeType": "YulTypedName",
														"src": "7153:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "7164:4:9",
														"nodeType": "YulTypedName",
														"src": "7164:4:9",
														"type": ""
													}
												],
												"src": "7102:308:9"
											},
											{
												"body": {
													"nativeSrc": "7480:84:9",
													"nodeType": "YulBlock",
													"src": "7480:84:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "7504:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "7504:3:9"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "7509:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "7509:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7514:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "7514:6:9"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "7491:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "7491:12:9"
																},
																"nativeSrc": "7491:30:9",
																"nodeType": "YulFunctionCall",
																"src": "7491:30:9"
															},
															"nativeSrc": "7491:30:9",
															"nodeType": "YulExpressionStatement",
															"src": "7491:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "7541:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "7541:3:9"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "7546:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "7546:6:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7537:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "7537:3:9"
																		},
																		"nativeSrc": "7537:16:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7537:16:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7555:1:9",
																		"nodeType": "YulLiteral",
																		"src": "7555:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7530:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7530:6:9"
																},
																"nativeSrc": "7530:27:9",
																"nodeType": "YulFunctionCall",
																"src": "7530:27:9"
															},
															"nativeSrc": "7530:27:9",
															"nodeType": "YulExpressionStatement",
															"src": "7530:27:9"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nativeSrc": "7416:148:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "7462:3:9",
														"nodeType": "YulTypedName",
														"src": "7462:3:9",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "7467:3:9",
														"nodeType": "YulTypedName",
														"src": "7467:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "7472:6:9",
														"nodeType": "YulTypedName",
														"src": "7472:6:9",
														"type": ""
													}
												],
												"src": "7416:148:9"
											},
											{
												"body": {
													"nativeSrc": "7654:341:9",
													"nodeType": "YulBlock",
													"src": "7654:341:9",
													"statements": [
														{
															"nativeSrc": "7664:75:9",
															"nodeType": "YulAssignment",
															"src": "7664:75:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "7731:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "7731:6:9"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "7689:41:9",
																			"nodeType": "YulIdentifier",
																			"src": "7689:41:9"
																		},
																		"nativeSrc": "7689:49:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7689:49:9"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "7673:15:9",
																	"nodeType": "YulIdentifier",
																	"src": "7673:15:9"
																},
																"nativeSrc": "7673:66:9",
																"nodeType": "YulFunctionCall",
																"src": "7673:66:9"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "7664:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "7664:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "7755:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "7755:5:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7762:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "7762:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7748:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7748:6:9"
																},
																"nativeSrc": "7748:21:9",
																"nodeType": "YulFunctionCall",
																"src": "7748:21:9"
															},
															"nativeSrc": "7748:21:9",
															"nodeType": "YulExpressionStatement",
															"src": "7748:21:9"
														},
														{
															"nativeSrc": "7778:27:9",
															"nodeType": "YulVariableDeclaration",
															"src": "7778:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "7793:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "7793:5:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7800:4:9",
																		"nodeType": "YulLiteral",
																		"src": "7800:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7789:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "7789:3:9"
																},
																"nativeSrc": "7789:16:9",
																"nodeType": "YulFunctionCall",
																"src": "7789:16:9"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "7782:3:9",
																	"nodeType": "YulTypedName",
																	"src": "7782:3:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7843:83:9",
																"nodeType": "YulBlock",
																"src": "7843:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "7845:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "7845:77:9"
																			},
																			"nativeSrc": "7845:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "7845:79:9"
																		},
																		"nativeSrc": "7845:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "7845:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "7824:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "7824:3:9"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "7829:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "7829:6:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7820:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "7820:3:9"
																		},
																		"nativeSrc": "7820:16:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7820:16:9"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "7838:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "7838:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7817:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "7817:2:9"
																},
																"nativeSrc": "7817:25:9",
																"nodeType": "YulFunctionCall",
																"src": "7817:25:9"
															},
															"nativeSrc": "7814:112:9",
															"nodeType": "YulIf",
															"src": "7814:112:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "7972:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "7972:3:9"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "7977:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "7977:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7982:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "7982:6:9"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "7935:36:9",
																	"nodeType": "YulIdentifier",
																	"src": "7935:36:9"
																},
																"nativeSrc": "7935:54:9",
																"nodeType": "YulFunctionCall",
																"src": "7935:54:9"
															},
															"nativeSrc": "7935:54:9",
															"nodeType": "YulExpressionStatement",
															"src": "7935:54:9"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr",
												"nativeSrc": "7570:425:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "7627:3:9",
														"nodeType": "YulTypedName",
														"src": "7627:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "7632:6:9",
														"nodeType": "YulTypedName",
														"src": "7632:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7640:3:9",
														"nodeType": "YulTypedName",
														"src": "7640:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "7648:5:9",
														"nodeType": "YulTypedName",
														"src": "7648:5:9",
														"type": ""
													}
												],
												"src": "7570:425:9"
											},
											{
												"body": {
													"nativeSrc": "8077:278:9",
													"nodeType": "YulBlock",
													"src": "8077:278:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "8126:83:9",
																"nodeType": "YulBlock",
																"src": "8126:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "8128:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "8128:77:9"
																			},
																			"nativeSrc": "8128:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "8128:79:9"
																		},
																		"nativeSrc": "8128:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "8128:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "8105:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "8105:6:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8113:4:9",
																						"nodeType": "YulLiteral",
																						"src": "8113:4:9",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8101:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "8101:3:9"
																				},
																				"nativeSrc": "8101:17:9",
																				"nodeType": "YulFunctionCall",
																				"src": "8101:17:9"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "8120:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "8120:3:9"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "8097:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "8097:3:9"
																		},
																		"nativeSrc": "8097:27:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8097:27:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8090:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "8090:6:9"
																},
																"nativeSrc": "8090:35:9",
																"nodeType": "YulFunctionCall",
																"src": "8090:35:9"
															},
															"nativeSrc": "8087:122:9",
															"nodeType": "YulIf",
															"src": "8087:122:9"
														},
														{
															"nativeSrc": "8218:34:9",
															"nodeType": "YulVariableDeclaration",
															"src": "8218:34:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "8245:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "8245:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "8232:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "8232:12:9"
																},
																"nativeSrc": "8232:20:9",
																"nodeType": "YulFunctionCall",
																"src": "8232:20:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "8222:6:9",
																	"nodeType": "YulTypedName",
																	"src": "8222:6:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8261:88:9",
															"nodeType": "YulAssignment",
															"src": "8261:88:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "8322:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "8322:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8330:4:9",
																				"nodeType": "YulLiteral",
																				"src": "8330:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8318:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "8318:3:9"
																		},
																		"nativeSrc": "8318:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8318:17:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8337:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "8337:6:9"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "8345:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "8345:3:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr",
																	"nativeSrc": "8270:47:9",
																	"nodeType": "YulIdentifier",
																	"src": "8270:47:9"
																},
																"nativeSrc": "8270:79:9",
																"nodeType": "YulFunctionCall",
																"src": "8270:79:9"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "8261:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "8261:5:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr",
												"nativeSrc": "8015:340:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "8055:6:9",
														"nodeType": "YulTypedName",
														"src": "8055:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "8063:3:9",
														"nodeType": "YulTypedName",
														"src": "8063:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "8071:5:9",
														"nodeType": "YulTypedName",
														"src": "8071:5:9",
														"type": ""
													}
												],
												"src": "8015:340:9"
											},
											{
												"body": {
													"nativeSrc": "8532:1246:9",
													"nodeType": "YulBlock",
													"src": "8532:1246:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "8579:83:9",
																"nodeType": "YulBlock",
																"src": "8579:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8581:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "8581:77:9"
																			},
																			"nativeSrc": "8581:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "8581:79:9"
																		},
																		"nativeSrc": "8581:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "8581:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8553:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "8553:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8562:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "8562:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8549:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "8549:3:9"
																		},
																		"nativeSrc": "8549:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8549:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8574:3:9",
																		"nodeType": "YulLiteral",
																		"src": "8574:3:9",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8545:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "8545:3:9"
																},
																"nativeSrc": "8545:33:9",
																"nodeType": "YulFunctionCall",
																"src": "8545:33:9"
															},
															"nativeSrc": "8542:120:9",
															"nodeType": "YulIf",
															"src": "8542:120:9"
														},
														{
															"nativeSrc": "8672:117:9",
															"nodeType": "YulBlock",
															"src": "8672:117:9",
															"statements": [
																{
																	"nativeSrc": "8687:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8687:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8701:1:9",
																		"nodeType": "YulLiteral",
																		"src": "8701:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8691:6:9",
																			"nodeType": "YulTypedName",
																			"src": "8691:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8716:63:9",
																	"nodeType": "YulAssignment",
																	"src": "8716:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8751:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "8751:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8762:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "8762:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8747:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "8747:3:9"
																				},
																				"nativeSrc": "8747:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "8747:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8771:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "8771:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "8726:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "8726:20:9"
																		},
																		"nativeSrc": "8726:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8726:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8716:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "8716:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "8799:118:9",
															"nodeType": "YulBlock",
															"src": "8799:118:9",
															"statements": [
																{
																	"nativeSrc": "8814:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8814:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8828:2:9",
																		"nodeType": "YulLiteral",
																		"src": "8828:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8818:6:9",
																			"nodeType": "YulTypedName",
																			"src": "8818:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8844:63:9",
																	"nodeType": "YulAssignment",
																	"src": "8844:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8879:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "8879:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8890:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "8890:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8875:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "8875:3:9"
																				},
																				"nativeSrc": "8875:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "8875:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8899:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "8899:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "8854:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "8854:20:9"
																		},
																		"nativeSrc": "8854:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8854:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "8844:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "8844:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "8927:118:9",
															"nodeType": "YulBlock",
															"src": "8927:118:9",
															"statements": [
																{
																	"nativeSrc": "8942:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8942:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8956:2:9",
																		"nodeType": "YulLiteral",
																		"src": "8956:2:9",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8946:6:9",
																			"nodeType": "YulTypedName",
																			"src": "8946:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8972:63:9",
																	"nodeType": "YulAssignment",
																	"src": "8972:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9007:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "9007:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9018:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "9018:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9003:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "9003:3:9"
																				},
																				"nativeSrc": "9003:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "9003:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9027:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "9027:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "8982:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "8982:20:9"
																		},
																		"nativeSrc": "8982:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8982:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "8972:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "8972:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9055:118:9",
															"nodeType": "YulBlock",
															"src": "9055:118:9",
															"statements": [
																{
																	"nativeSrc": "9070:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9070:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9084:2:9",
																		"nodeType": "YulLiteral",
																		"src": "9084:2:9",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9074:6:9",
																			"nodeType": "YulTypedName",
																			"src": "9074:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9100:63:9",
																	"nodeType": "YulAssignment",
																	"src": "9100:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9135:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "9135:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9146:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "9146:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9131:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "9131:3:9"
																				},
																				"nativeSrc": "9131:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "9131:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9155:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "9155:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "9110:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "9110:20:9"
																		},
																		"nativeSrc": "9110:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9110:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "9100:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "9100:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9183:289:9",
															"nodeType": "YulBlock",
															"src": "9183:289:9",
															"statements": [
																{
																	"nativeSrc": "9198:47:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9198:47:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9229:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "9229:9:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9240:3:9",
																						"nodeType": "YulLiteral",
																						"src": "9240:3:9",
																						"type": "",
																						"value": "128"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9225:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "9225:3:9"
																				},
																				"nativeSrc": "9225:19:9",
																				"nodeType": "YulFunctionCall",
																				"src": "9225:19:9"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "9212:12:9",
																			"nodeType": "YulIdentifier",
																			"src": "9212:12:9"
																		},
																		"nativeSrc": "9212:33:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9212:33:9"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9202:6:9",
																			"nodeType": "YulTypedName",
																			"src": "9202:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "9292:83:9",
																		"nodeType": "YulBlock",
																		"src": "9292:83:9",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "9294:77:9",
																						"nodeType": "YulIdentifier",
																						"src": "9294:77:9"
																					},
																					"nativeSrc": "9294:79:9",
																					"nodeType": "YulFunctionCall",
																					"src": "9294:79:9"
																				},
																				"nativeSrc": "9294:79:9",
																				"nodeType": "YulExpressionStatement",
																				"src": "9294:79:9"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "9264:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "9264:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9272:18:9",
																				"nodeType": "YulLiteral",
																				"src": "9272:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "9261:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "9261:2:9"
																		},
																		"nativeSrc": "9261:30:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9261:30:9"
																	},
																	"nativeSrc": "9258:117:9",
																	"nodeType": "YulIf",
																	"src": "9258:117:9"
																},
																{
																	"nativeSrc": "9389:73:9",
																	"nodeType": "YulAssignment",
																	"src": "9389:73:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9434:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "9434:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9445:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "9445:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9430:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "9430:3:9"
																				},
																				"nativeSrc": "9430:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "9430:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9454:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "9454:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nativeSrc": "9399:30:9",
																			"nodeType": "YulIdentifier",
																			"src": "9399:30:9"
																		},
																		"nativeSrc": "9399:63:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9399:63:9"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nativeSrc": "9389:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "9389:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9482:289:9",
															"nodeType": "YulBlock",
															"src": "9482:289:9",
															"statements": [
																{
																	"nativeSrc": "9497:47:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9497:47:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9528:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "9528:9:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9539:3:9",
																						"nodeType": "YulLiteral",
																						"src": "9539:3:9",
																						"type": "",
																						"value": "160"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9524:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "9524:3:9"
																				},
																				"nativeSrc": "9524:19:9",
																				"nodeType": "YulFunctionCall",
																				"src": "9524:19:9"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "9511:12:9",
																			"nodeType": "YulIdentifier",
																			"src": "9511:12:9"
																		},
																		"nativeSrc": "9511:33:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9511:33:9"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9501:6:9",
																			"nodeType": "YulTypedName",
																			"src": "9501:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "9591:83:9",
																		"nodeType": "YulBlock",
																		"src": "9591:83:9",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "9593:77:9",
																						"nodeType": "YulIdentifier",
																						"src": "9593:77:9"
																					},
																					"nativeSrc": "9593:79:9",
																					"nodeType": "YulFunctionCall",
																					"src": "9593:79:9"
																				},
																				"nativeSrc": "9593:79:9",
																				"nodeType": "YulExpressionStatement",
																				"src": "9593:79:9"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "9563:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "9563:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9571:18:9",
																				"nodeType": "YulLiteral",
																				"src": "9571:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "9560:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "9560:2:9"
																		},
																		"nativeSrc": "9560:30:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9560:30:9"
																	},
																	"nativeSrc": "9557:117:9",
																	"nodeType": "YulIf",
																	"src": "9557:117:9"
																},
																{
																	"nativeSrc": "9688:73:9",
																	"nodeType": "YulAssignment",
																	"src": "9688:73:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9733:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "9733:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9744:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "9744:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9729:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "9729:3:9"
																				},
																				"nativeSrc": "9729:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "9729:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9753:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "9753:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nativeSrc": "9698:30:9",
																			"nodeType": "YulIdentifier",
																			"src": "9698:30:9"
																		},
																		"nativeSrc": "9698:63:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9698:63:9"
																	},
																	"variableNames": [
																		{
																			"name": "value5",
																			"nativeSrc": "9688:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "9688:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_string_memory_ptrt_string_memory_ptr",
												"nativeSrc": "8361:1417:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8462:9:9",
														"nodeType": "YulTypedName",
														"src": "8462:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8473:7:9",
														"nodeType": "YulTypedName",
														"src": "8473:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8485:6:9",
														"nodeType": "YulTypedName",
														"src": "8485:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8493:6:9",
														"nodeType": "YulTypedName",
														"src": "8493:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "8501:6:9",
														"nodeType": "YulTypedName",
														"src": "8501:6:9",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "8509:6:9",
														"nodeType": "YulTypedName",
														"src": "8509:6:9",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "8517:6:9",
														"nodeType": "YulTypedName",
														"src": "8517:6:9",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "8525:6:9",
														"nodeType": "YulTypedName",
														"src": "8525:6:9",
														"type": ""
													}
												],
												"src": "8361:1417:9"
											},
											{
												"body": {
													"nativeSrc": "9816:28:9",
													"nodeType": "YulBlock",
													"src": "9816:28:9",
													"statements": [
														{
															"nativeSrc": "9826:12:9",
															"nodeType": "YulAssignment",
															"src": "9826:12:9",
															"value": {
																"name": "value",
																"nativeSrc": "9833:5:9",
																"nodeType": "YulIdentifier",
																"src": "9833:5:9"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "9826:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "9826:3:9"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "9784:60:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9802:5:9",
														"nodeType": "YulTypedName",
														"src": "9802:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "9812:3:9",
														"nodeType": "YulTypedName",
														"src": "9812:3:9",
														"type": ""
													}
												],
												"src": "9784:60:9"
											},
											{
												"body": {
													"nativeSrc": "9910:82:9",
													"nodeType": "YulBlock",
													"src": "9910:82:9",
													"statements": [
														{
															"nativeSrc": "9920:66:9",
															"nodeType": "YulAssignment",
															"src": "9920:66:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "9978:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "9978:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "9960:17:9",
																					"nodeType": "YulIdentifier",
																					"src": "9960:17:9"
																				},
																				"nativeSrc": "9960:24:9",
																				"nodeType": "YulFunctionCall",
																				"src": "9960:24:9"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "9951:8:9",
																			"nodeType": "YulIdentifier",
																			"src": "9951:8:9"
																		},
																		"nativeSrc": "9951:34:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9951:34:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "9933:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "9933:17:9"
																},
																"nativeSrc": "9933:53:9",
																"nodeType": "YulFunctionCall",
																"src": "9933:53:9"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "9920:9:9",
																	"nodeType": "YulIdentifier",
																	"src": "9920:9:9"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "9850:142:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9890:5:9",
														"nodeType": "YulTypedName",
														"src": "9890:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "9900:9:9",
														"nodeType": "YulTypedName",
														"src": "9900:9:9",
														"type": ""
													}
												],
												"src": "9850:142:9"
											},
											{
												"body": {
													"nativeSrc": "10058:66:9",
													"nodeType": "YulBlock",
													"src": "10058:66:9",
													"statements": [
														{
															"nativeSrc": "10068:50:9",
															"nodeType": "YulAssignment",
															"src": "10068:50:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10112:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "10112:5:9"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "10081:30:9",
																	"nodeType": "YulIdentifier",
																	"src": "10081:30:9"
																},
																"nativeSrc": "10081:37:9",
																"nodeType": "YulFunctionCall",
																"src": "10081:37:9"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "10068:9:9",
																	"nodeType": "YulIdentifier",
																	"src": "10068:9:9"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "9998:126:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10038:5:9",
														"nodeType": "YulTypedName",
														"src": "10038:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "10048:9:9",
														"nodeType": "YulTypedName",
														"src": "10048:9:9",
														"type": ""
													}
												],
												"src": "9998:126:9"
											},
											{
												"body": {
													"nativeSrc": "10204:66:9",
													"nodeType": "YulBlock",
													"src": "10204:66:9",
													"statements": [
														{
															"nativeSrc": "10214:50:9",
															"nodeType": "YulAssignment",
															"src": "10214:50:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10258:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "10258:5:9"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "10227:30:9",
																	"nodeType": "YulIdentifier",
																	"src": "10227:30:9"
																},
																"nativeSrc": "10227:37:9",
																"nodeType": "YulFunctionCall",
																"src": "10227:37:9"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "10214:9:9",
																	"nodeType": "YulIdentifier",
																	"src": "10214:9:9"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_ERC20_$1146_to_t_address",
												"nativeSrc": "10130:140:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10184:5:9",
														"nodeType": "YulTypedName",
														"src": "10184:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "10194:9:9",
														"nodeType": "YulTypedName",
														"src": "10194:9:9",
														"type": ""
													}
												],
												"src": "10130:140:9"
											},
											{
												"body": {
													"nativeSrc": "10355:80:9",
													"nodeType": "YulBlock",
													"src": "10355:80:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10372:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "10372:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10422:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "10422:5:9"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_ERC20_$1146_to_t_address",
																			"nativeSrc": "10377:44:9",
																			"nodeType": "YulIdentifier",
																			"src": "10377:44:9"
																		},
																		"nativeSrc": "10377:51:9",
																		"nodeType": "YulFunctionCall",
																		"src": "10377:51:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10365:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "10365:6:9"
																},
																"nativeSrc": "10365:64:9",
																"nodeType": "YulFunctionCall",
																"src": "10365:64:9"
															},
															"nativeSrc": "10365:64:9",
															"nodeType": "YulExpressionStatement",
															"src": "10365:64:9"
														}
													]
												},
												"name": "abi_encode_t_contract$_ERC20_$1146_to_t_address_fromStack",
												"nativeSrc": "10276:159:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10343:5:9",
														"nodeType": "YulTypedName",
														"src": "10343:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "10350:3:9",
														"nodeType": "YulTypedName",
														"src": "10350:3:9",
														"type": ""
													}
												],
												"src": "10276:159:9"
											},
											{
												"body": {
													"nativeSrc": "10553:138:9",
													"nodeType": "YulBlock",
													"src": "10553:138:9",
													"statements": [
														{
															"nativeSrc": "10563:26:9",
															"nodeType": "YulAssignment",
															"src": "10563:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10575:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "10575:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10586:2:9",
																		"nodeType": "YulLiteral",
																		"src": "10586:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10571:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "10571:3:9"
																},
																"nativeSrc": "10571:18:9",
																"nodeType": "YulFunctionCall",
																"src": "10571:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10563:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "10563:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10657:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "10657:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10670:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "10670:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10681:1:9",
																				"nodeType": "YulLiteral",
																				"src": "10681:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10666:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "10666:3:9"
																		},
																		"nativeSrc": "10666:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "10666:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_ERC20_$1146_to_t_address_fromStack",
																	"nativeSrc": "10599:57:9",
																	"nodeType": "YulIdentifier",
																	"src": "10599:57:9"
																},
																"nativeSrc": "10599:85:9",
																"nodeType": "YulFunctionCall",
																"src": "10599:85:9"
															},
															"nativeSrc": "10599:85:9",
															"nodeType": "YulExpressionStatement",
															"src": "10599:85:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_ERC20_$1146__to_t_address__fromStack_reversed",
												"nativeSrc": "10441:250:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10525:9:9",
														"nodeType": "YulTypedName",
														"src": "10525:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10537:6:9",
														"nodeType": "YulTypedName",
														"src": "10537:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10548:4:9",
														"nodeType": "YulTypedName",
														"src": "10548:4:9",
														"type": ""
													}
												],
												"src": "10441:250:9"
											},
											{
												"body": {
													"nativeSrc": "10725:152:9",
													"nodeType": "YulBlock",
													"src": "10725:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10742:1:9",
																		"nodeType": "YulLiteral",
																		"src": "10742:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10745:77:9",
																		"nodeType": "YulLiteral",
																		"src": "10745:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10735:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "10735:6:9"
																},
																"nativeSrc": "10735:88:9",
																"nodeType": "YulFunctionCall",
																"src": "10735:88:9"
															},
															"nativeSrc": "10735:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "10735:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10839:1:9",
																		"nodeType": "YulLiteral",
																		"src": "10839:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10842:4:9",
																		"nodeType": "YulLiteral",
																		"src": "10842:4:9",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10832:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "10832:6:9"
																},
																"nativeSrc": "10832:15:9",
																"nodeType": "YulFunctionCall",
																"src": "10832:15:9"
															},
															"nativeSrc": "10832:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "10832:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10863:1:9",
																		"nodeType": "YulLiteral",
																		"src": "10863:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10866:4:9",
																		"nodeType": "YulLiteral",
																		"src": "10866:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "10856:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "10856:6:9"
																},
																"nativeSrc": "10856:15:9",
																"nodeType": "YulFunctionCall",
																"src": "10856:15:9"
															},
															"nativeSrc": "10856:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "10856:15:9"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "10697:180:9",
												"nodeType": "YulFunctionDefinition",
												"src": "10697:180:9"
											},
											{
												"body": {
													"nativeSrc": "10934:269:9",
													"nodeType": "YulBlock",
													"src": "10934:269:9",
													"statements": [
														{
															"nativeSrc": "10944:22:9",
															"nodeType": "YulAssignment",
															"src": "10944:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "10958:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "10958:4:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10964:1:9",
																		"nodeType": "YulLiteral",
																		"src": "10964:1:9",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "10954:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "10954:3:9"
																},
																"nativeSrc": "10954:12:9",
																"nodeType": "YulFunctionCall",
																"src": "10954:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "10944:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "10944:6:9"
																}
															]
														},
														{
															"nativeSrc": "10975:38:9",
															"nodeType": "YulVariableDeclaration",
															"src": "10975:38:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "11005:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "11005:4:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11011:1:9",
																		"nodeType": "YulLiteral",
																		"src": "11011:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "11001:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "11001:3:9"
																},
																"nativeSrc": "11001:12:9",
																"nodeType": "YulFunctionCall",
																"src": "11001:12:9"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "10979:18:9",
																	"nodeType": "YulTypedName",
																	"src": "10979:18:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11052:51:9",
																"nodeType": "YulBlock",
																"src": "11052:51:9",
																"statements": [
																	{
																		"nativeSrc": "11066:27:9",
																		"nodeType": "YulAssignment",
																		"src": "11066:27:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "11080:6:9",
																					"nodeType": "YulIdentifier",
																					"src": "11080:6:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "11088:4:9",
																					"nodeType": "YulLiteral",
																					"src": "11088:4:9",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "11076:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "11076:3:9"
																			},
																			"nativeSrc": "11076:17:9",
																			"nodeType": "YulFunctionCall",
																			"src": "11076:17:9"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "11066:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "11066:6:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "11032:18:9",
																		"nodeType": "YulIdentifier",
																		"src": "11032:18:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "11025:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "11025:6:9"
																},
																"nativeSrc": "11025:26:9",
																"nodeType": "YulFunctionCall",
																"src": "11025:26:9"
															},
															"nativeSrc": "11022:81:9",
															"nodeType": "YulIf",
															"src": "11022:81:9"
														},
														{
															"body": {
																"nativeSrc": "11155:42:9",
																"nodeType": "YulBlock",
																"src": "11155:42:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "11169:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "11169:16:9"
																			},
																			"nativeSrc": "11169:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "11169:18:9"
																		},
																		"nativeSrc": "11169:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "11169:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "11119:18:9",
																		"nodeType": "YulIdentifier",
																		"src": "11119:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "11142:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "11142:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11150:2:9",
																				"nodeType": "YulLiteral",
																				"src": "11150:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "11139:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "11139:2:9"
																		},
																		"nativeSrc": "11139:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "11139:14:9"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "11116:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "11116:2:9"
																},
																"nativeSrc": "11116:38:9",
																"nodeType": "YulFunctionCall",
																"src": "11116:38:9"
															},
															"nativeSrc": "11113:84:9",
															"nodeType": "YulIf",
															"src": "11113:84:9"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "10883:320:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "10918:4:9",
														"nodeType": "YulTypedName",
														"src": "10918:4:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "10927:6:9",
														"nodeType": "YulTypedName",
														"src": "10927:6:9",
														"type": ""
													}
												],
												"src": "10883:320:9"
											},
											{
												"body": {
													"nativeSrc": "11237:152:9",
													"nodeType": "YulBlock",
													"src": "11237:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11254:1:9",
																		"nodeType": "YulLiteral",
																		"src": "11254:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11257:77:9",
																		"nodeType": "YulLiteral",
																		"src": "11257:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11247:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "11247:6:9"
																},
																"nativeSrc": "11247:88:9",
																"nodeType": "YulFunctionCall",
																"src": "11247:88:9"
															},
															"nativeSrc": "11247:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "11247:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11351:1:9",
																		"nodeType": "YulLiteral",
																		"src": "11351:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11354:4:9",
																		"nodeType": "YulLiteral",
																		"src": "11354:4:9",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11344:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "11344:6:9"
																},
																"nativeSrc": "11344:15:9",
																"nodeType": "YulFunctionCall",
																"src": "11344:15:9"
															},
															"nativeSrc": "11344:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "11344:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11375:1:9",
																		"nodeType": "YulLiteral",
																		"src": "11375:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11378:4:9",
																		"nodeType": "YulLiteral",
																		"src": "11378:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "11368:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "11368:6:9"
																},
																"nativeSrc": "11368:15:9",
																"nodeType": "YulFunctionCall",
																"src": "11368:15:9"
															},
															"nativeSrc": "11368:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "11368:15:9"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "11209:180:9",
												"nodeType": "YulFunctionDefinition",
												"src": "11209:180:9"
											},
											{
												"body": {
													"nativeSrc": "11439:147:9",
													"nodeType": "YulBlock",
													"src": "11439:147:9",
													"statements": [
														{
															"nativeSrc": "11449:25:9",
															"nodeType": "YulAssignment",
															"src": "11449:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11472:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "11472:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11454:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "11454:17:9"
																},
																"nativeSrc": "11454:20:9",
																"nodeType": "YulFunctionCall",
																"src": "11454:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "11449:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "11449:1:9"
																}
															]
														},
														{
															"nativeSrc": "11483:25:9",
															"nodeType": "YulAssignment",
															"src": "11483:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "11506:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "11506:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11488:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "11488:17:9"
																},
																"nativeSrc": "11488:20:9",
																"nodeType": "YulFunctionCall",
																"src": "11488:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "11483:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "11483:1:9"
																}
															]
														},
														{
															"nativeSrc": "11517:16:9",
															"nodeType": "YulAssignment",
															"src": "11517:16:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11528:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "11528:1:9"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "11531:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "11531:1:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11524:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "11524:3:9"
																},
																"nativeSrc": "11524:9:9",
																"nodeType": "YulFunctionCall",
																"src": "11524:9:9"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "11517:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "11517:3:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11557:22:9",
																"nodeType": "YulBlock",
																"src": "11557:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "11559:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "11559:16:9"
																			},
																			"nativeSrc": "11559:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "11559:18:9"
																		},
																		"nativeSrc": "11559:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "11559:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11549:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "11549:1:9"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "11552:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "11552:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "11546:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "11546:2:9"
																},
																"nativeSrc": "11546:10:9",
																"nodeType": "YulFunctionCall",
																"src": "11546:10:9"
															},
															"nativeSrc": "11543:36:9",
															"nodeType": "YulIf",
															"src": "11543:36:9"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "11395:191:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "11426:1:9",
														"nodeType": "YulTypedName",
														"src": "11426:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "11429:1:9",
														"nodeType": "YulTypedName",
														"src": "11429:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "11435:3:9",
														"nodeType": "YulTypedName",
														"src": "11435:3:9",
														"type": ""
													}
												],
												"src": "11395:191:9"
											},
											{
												"body": {
													"nativeSrc": "11637:149:9",
													"nodeType": "YulBlock",
													"src": "11637:149:9",
													"statements": [
														{
															"nativeSrc": "11647:25:9",
															"nodeType": "YulAssignment",
															"src": "11647:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11670:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "11670:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11652:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "11652:17:9"
																},
																"nativeSrc": "11652:20:9",
																"nodeType": "YulFunctionCall",
																"src": "11652:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "11647:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "11647:1:9"
																}
															]
														},
														{
															"nativeSrc": "11681:25:9",
															"nodeType": "YulAssignment",
															"src": "11681:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "11704:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "11704:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11686:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "11686:17:9"
																},
																"nativeSrc": "11686:20:9",
																"nodeType": "YulFunctionCall",
																"src": "11686:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "11681:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "11681:1:9"
																}
															]
														},
														{
															"nativeSrc": "11715:17:9",
															"nodeType": "YulAssignment",
															"src": "11715:17:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11727:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "11727:1:9"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "11730:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "11730:1:9"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "11723:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "11723:3:9"
																},
																"nativeSrc": "11723:9:9",
																"nodeType": "YulFunctionCall",
																"src": "11723:9:9"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "11715:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "11715:4:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11757:22:9",
																"nodeType": "YulBlock",
																"src": "11757:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "11759:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "11759:16:9"
																			},
																			"nativeSrc": "11759:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "11759:18:9"
																		},
																		"nativeSrc": "11759:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "11759:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "11748:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "11748:4:9"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "11754:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "11754:1:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "11745:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "11745:2:9"
																},
																"nativeSrc": "11745:11:9",
																"nodeType": "YulFunctionCall",
																"src": "11745:11:9"
															},
															"nativeSrc": "11742:37:9",
															"nodeType": "YulIf",
															"src": "11742:37:9"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "11592:194:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "11623:1:9",
														"nodeType": "YulTypedName",
														"src": "11623:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "11626:1:9",
														"nodeType": "YulTypedName",
														"src": "11626:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "11632:4:9",
														"nodeType": "YulTypedName",
														"src": "11632:4:9",
														"type": ""
													}
												],
												"src": "11592:194:9"
											},
											{
												"body": {
													"nativeSrc": "11918:206:9",
													"nodeType": "YulBlock",
													"src": "11918:206:9",
													"statements": [
														{
															"nativeSrc": "11928:26:9",
															"nodeType": "YulAssignment",
															"src": "11928:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11940:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "11940:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11951:2:9",
																		"nodeType": "YulLiteral",
																		"src": "11951:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11936:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "11936:3:9"
																},
																"nativeSrc": "11936:18:9",
																"nodeType": "YulFunctionCall",
																"src": "11936:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11928:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "11928:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "12008:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "12008:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12021:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "12021:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12032:1:9",
																				"nodeType": "YulLiteral",
																				"src": "12032:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12017:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "12017:3:9"
																		},
																		"nativeSrc": "12017:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "12017:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "11964:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "11964:43:9"
																},
																"nativeSrc": "11964:71:9",
																"nodeType": "YulFunctionCall",
																"src": "11964:71:9"
															},
															"nativeSrc": "11964:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "11964:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "12089:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "12089:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12102:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "12102:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12113:2:9",
																				"nodeType": "YulLiteral",
																				"src": "12113:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12098:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "12098:3:9"
																		},
																		"nativeSrc": "12098:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "12098:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "12045:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "12045:43:9"
																},
																"nativeSrc": "12045:72:9",
																"nodeType": "YulFunctionCall",
																"src": "12045:72:9"
															},
															"nativeSrc": "12045:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "12045:72:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "11792:332:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11882:9:9",
														"nodeType": "YulTypedName",
														"src": "11882:9:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11894:6:9",
														"nodeType": "YulTypedName",
														"src": "11894:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11902:6:9",
														"nodeType": "YulTypedName",
														"src": "11902:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11913:4:9",
														"nodeType": "YulTypedName",
														"src": "11913:4:9",
														"type": ""
													}
												],
												"src": "11792:332:9"
											},
											{
												"body": {
													"nativeSrc": "12170:76:9",
													"nodeType": "YulBlock",
													"src": "12170:76:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "12224:16:9",
																"nodeType": "YulBlock",
																"src": "12224:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "12233:1:9",
																					"nodeType": "YulLiteral",
																					"src": "12233:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "12236:1:9",
																					"nodeType": "YulLiteral",
																					"src": "12236:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "12226:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "12226:6:9"
																			},
																			"nativeSrc": "12226:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "12226:12:9"
																		},
																		"nativeSrc": "12226:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "12226:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "12193:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "12193:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "12215:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "12215:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "12200:14:9",
																					"nodeType": "YulIdentifier",
																					"src": "12200:14:9"
																				},
																				"nativeSrc": "12200:21:9",
																				"nodeType": "YulFunctionCall",
																				"src": "12200:21:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "12190:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "12190:2:9"
																		},
																		"nativeSrc": "12190:32:9",
																		"nodeType": "YulFunctionCall",
																		"src": "12190:32:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "12183:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "12183:6:9"
																},
																"nativeSrc": "12183:40:9",
																"nodeType": "YulFunctionCall",
																"src": "12183:40:9"
															},
															"nativeSrc": "12180:60:9",
															"nodeType": "YulIf",
															"src": "12180:60:9"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "12130:116:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12163:5:9",
														"nodeType": "YulTypedName",
														"src": "12163:5:9",
														"type": ""
													}
												],
												"src": "12130:116:9"
											},
											{
												"body": {
													"nativeSrc": "12312:77:9",
													"nodeType": "YulBlock",
													"src": "12312:77:9",
													"statements": [
														{
															"nativeSrc": "12322:22:9",
															"nodeType": "YulAssignment",
															"src": "12322:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "12337:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "12337:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "12331:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "12331:5:9"
																},
																"nativeSrc": "12331:13:9",
																"nodeType": "YulFunctionCall",
																"src": "12331:13:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "12322:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "12322:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "12377:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "12377:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "12353:23:9",
																	"nodeType": "YulIdentifier",
																	"src": "12353:23:9"
																},
																"nativeSrc": "12353:30:9",
																"nodeType": "YulFunctionCall",
																"src": "12353:30:9"
															},
															"nativeSrc": "12353:30:9",
															"nodeType": "YulExpressionStatement",
															"src": "12353:30:9"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "12252:137:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "12290:6:9",
														"nodeType": "YulTypedName",
														"src": "12290:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "12298:3:9",
														"nodeType": "YulTypedName",
														"src": "12298:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "12306:5:9",
														"nodeType": "YulTypedName",
														"src": "12306:5:9",
														"type": ""
													}
												],
												"src": "12252:137:9"
											},
											{
												"body": {
													"nativeSrc": "12469:271:9",
													"nodeType": "YulBlock",
													"src": "12469:271:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "12515:83:9",
																"nodeType": "YulBlock",
																"src": "12515:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "12517:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "12517:77:9"
																			},
																			"nativeSrc": "12517:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "12517:79:9"
																		},
																		"nativeSrc": "12517:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "12517:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12490:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "12490:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12499:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "12499:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12486:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "12486:3:9"
																		},
																		"nativeSrc": "12486:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "12486:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12511:2:9",
																		"nodeType": "YulLiteral",
																		"src": "12511:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "12482:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "12482:3:9"
																},
																"nativeSrc": "12482:32:9",
																"nodeType": "YulFunctionCall",
																"src": "12482:32:9"
															},
															"nativeSrc": "12479:119:9",
															"nodeType": "YulIf",
															"src": "12479:119:9"
														},
														{
															"nativeSrc": "12608:125:9",
															"nodeType": "YulBlock",
															"src": "12608:125:9",
															"statements": [
																{
																	"nativeSrc": "12623:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12623:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12637:1:9",
																		"nodeType": "YulLiteral",
																		"src": "12637:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12627:6:9",
																			"nodeType": "YulTypedName",
																			"src": "12627:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12652:71:9",
																	"nodeType": "YulAssignment",
																	"src": "12652:71:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12695:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "12695:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12706:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "12706:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12691:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "12691:3:9"
																				},
																				"nativeSrc": "12691:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "12691:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12715:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "12715:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "12662:28:9",
																			"nodeType": "YulIdentifier",
																			"src": "12662:28:9"
																		},
																		"nativeSrc": "12662:61:9",
																		"nodeType": "YulFunctionCall",
																		"src": "12662:61:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "12652:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "12652:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "12395:345:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12439:9:9",
														"nodeType": "YulTypedName",
														"src": "12439:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "12450:7:9",
														"nodeType": "YulTypedName",
														"src": "12450:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "12462:6:9",
														"nodeType": "YulTypedName",
														"src": "12462:6:9",
														"type": ""
													}
												],
												"src": "12395:345:9"
											},
											{
												"body": {
													"nativeSrc": "12787:77:9",
													"nodeType": "YulBlock",
													"src": "12787:77:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "12842:16:9",
																"nodeType": "YulBlock",
																"src": "12842:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "12851:1:9",
																					"nodeType": "YulLiteral",
																					"src": "12851:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "12854:1:9",
																					"nodeType": "YulLiteral",
																					"src": "12854:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "12844:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "12844:6:9"
																			},
																			"nativeSrc": "12844:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "12844:12:9"
																		},
																		"nativeSrc": "12844:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "12844:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "12810:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "12810:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "12833:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "12833:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint8",
																					"nativeSrc": "12817:15:9",
																					"nodeType": "YulIdentifier",
																					"src": "12817:15:9"
																				},
																				"nativeSrc": "12817:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "12817:22:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "12807:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "12807:2:9"
																		},
																		"nativeSrc": "12807:33:9",
																		"nodeType": "YulFunctionCall",
																		"src": "12807:33:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "12800:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "12800:6:9"
																},
																"nativeSrc": "12800:41:9",
																"nodeType": "YulFunctionCall",
																"src": "12800:41:9"
															},
															"nativeSrc": "12797:61:9",
															"nodeType": "YulIf",
															"src": "12797:61:9"
														}
													]
												},
												"name": "validator_revert_t_uint8",
												"nativeSrc": "12746:118:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12780:5:9",
														"nodeType": "YulTypedName",
														"src": "12780:5:9",
														"type": ""
													}
												],
												"src": "12746:118:9"
											},
											{
												"body": {
													"nativeSrc": "12931:78:9",
													"nodeType": "YulBlock",
													"src": "12931:78:9",
													"statements": [
														{
															"nativeSrc": "12941:22:9",
															"nodeType": "YulAssignment",
															"src": "12941:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "12956:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "12956:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "12950:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "12950:5:9"
																},
																"nativeSrc": "12950:13:9",
																"nodeType": "YulFunctionCall",
																"src": "12950:13:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "12941:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "12941:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "12997:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "12997:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint8",
																	"nativeSrc": "12972:24:9",
																	"nodeType": "YulIdentifier",
																	"src": "12972:24:9"
																},
																"nativeSrc": "12972:31:9",
																"nodeType": "YulFunctionCall",
																"src": "12972:31:9"
															},
															"nativeSrc": "12972:31:9",
															"nodeType": "YulExpressionStatement",
															"src": "12972:31:9"
														}
													]
												},
												"name": "abi_decode_t_uint8_fromMemory",
												"nativeSrc": "12870:139:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "12909:6:9",
														"nodeType": "YulTypedName",
														"src": "12909:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "12917:3:9",
														"nodeType": "YulTypedName",
														"src": "12917:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "12925:5:9",
														"nodeType": "YulTypedName",
														"src": "12925:5:9",
														"type": ""
													}
												],
												"src": "12870:139:9"
											},
											{
												"body": {
													"nativeSrc": "13090:272:9",
													"nodeType": "YulBlock",
													"src": "13090:272:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "13136:83:9",
																"nodeType": "YulBlock",
																"src": "13136:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "13138:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "13138:77:9"
																			},
																			"nativeSrc": "13138:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "13138:79:9"
																		},
																		"nativeSrc": "13138:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "13138:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13111:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "13111:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13120:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "13120:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13107:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "13107:3:9"
																		},
																		"nativeSrc": "13107:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "13107:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13132:2:9",
																		"nodeType": "YulLiteral",
																		"src": "13132:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "13103:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "13103:3:9"
																},
																"nativeSrc": "13103:32:9",
																"nodeType": "YulFunctionCall",
																"src": "13103:32:9"
															},
															"nativeSrc": "13100:119:9",
															"nodeType": "YulIf",
															"src": "13100:119:9"
														},
														{
															"nativeSrc": "13229:126:9",
															"nodeType": "YulBlock",
															"src": "13229:126:9",
															"statements": [
																{
																	"nativeSrc": "13244:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "13244:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "13258:1:9",
																		"nodeType": "YulLiteral",
																		"src": "13258:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "13248:6:9",
																			"nodeType": "YulTypedName",
																			"src": "13248:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "13273:72:9",
																	"nodeType": "YulAssignment",
																	"src": "13273:72:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "13317:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "13317:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "13328:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "13328:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13313:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "13313:3:9"
																				},
																				"nativeSrc": "13313:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "13313:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13337:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "13337:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint8_fromMemory",
																			"nativeSrc": "13283:29:9",
																			"nodeType": "YulIdentifier",
																			"src": "13283:29:9"
																		},
																		"nativeSrc": "13283:62:9",
																		"nodeType": "YulFunctionCall",
																		"src": "13283:62:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "13273:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "13273:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint8_fromMemory",
												"nativeSrc": "13015:347:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13060:9:9",
														"nodeType": "YulTypedName",
														"src": "13060:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "13071:7:9",
														"nodeType": "YulTypedName",
														"src": "13071:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "13083:6:9",
														"nodeType": "YulTypedName",
														"src": "13083:6:9",
														"type": ""
													}
												],
												"src": "13015:347:9"
											},
											{
												"body": {
													"nativeSrc": "13522:288:9",
													"nodeType": "YulBlock",
													"src": "13522:288:9",
													"statements": [
														{
															"nativeSrc": "13532:26:9",
															"nodeType": "YulAssignment",
															"src": "13532:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13544:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "13544:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13555:2:9",
																		"nodeType": "YulLiteral",
																		"src": "13555:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13540:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "13540:3:9"
																},
																"nativeSrc": "13540:18:9",
																"nodeType": "YulFunctionCall",
																"src": "13540:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13532:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "13532:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13612:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "13612:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13625:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "13625:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13636:1:9",
																				"nodeType": "YulLiteral",
																				"src": "13636:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13621:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "13621:3:9"
																		},
																		"nativeSrc": "13621:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "13621:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "13568:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "13568:43:9"
																},
																"nativeSrc": "13568:71:9",
																"nodeType": "YulFunctionCall",
																"src": "13568:71:9"
															},
															"nativeSrc": "13568:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "13568:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "13693:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "13693:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13706:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "13706:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13717:2:9",
																				"nodeType": "YulLiteral",
																				"src": "13717:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13702:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "13702:3:9"
																		},
																		"nativeSrc": "13702:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "13702:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "13649:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "13649:43:9"
																},
																"nativeSrc": "13649:72:9",
																"nodeType": "YulFunctionCall",
																"src": "13649:72:9"
															},
															"nativeSrc": "13649:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "13649:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "13775:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "13775:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13788:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "13788:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13799:2:9",
																				"nodeType": "YulLiteral",
																				"src": "13799:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13784:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "13784:3:9"
																		},
																		"nativeSrc": "13784:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "13784:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "13731:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "13731:43:9"
																},
																"nativeSrc": "13731:72:9",
																"nodeType": "YulFunctionCall",
																"src": "13731:72:9"
															},
															"nativeSrc": "13731:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "13731:72:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "13368:442:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13478:9:9",
														"nodeType": "YulTypedName",
														"src": "13478:9:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "13490:6:9",
														"nodeType": "YulTypedName",
														"src": "13490:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13498:6:9",
														"nodeType": "YulTypedName",
														"src": "13498:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13506:6:9",
														"nodeType": "YulTypedName",
														"src": "13506:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13517:4:9",
														"nodeType": "YulTypedName",
														"src": "13517:4:9",
														"type": ""
													}
												],
												"src": "13368:442:9"
											},
											{
												"body": {
													"nativeSrc": "13870:87:9",
													"nodeType": "YulBlock",
													"src": "13870:87:9",
													"statements": [
														{
															"nativeSrc": "13880:11:9",
															"nodeType": "YulAssignment",
															"src": "13880:11:9",
															"value": {
																"name": "ptr",
																"nativeSrc": "13888:3:9",
																"nodeType": "YulIdentifier",
																"src": "13888:3:9"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "13880:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "13880:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13908:1:9",
																		"nodeType": "YulLiteral",
																		"src": "13908:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "13911:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "13911:3:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13901:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "13901:6:9"
																},
																"nativeSrc": "13901:14:9",
																"nodeType": "YulFunctionCall",
																"src": "13901:14:9"
															},
															"nativeSrc": "13901:14:9",
															"nodeType": "YulExpressionStatement",
															"src": "13901:14:9"
														},
														{
															"nativeSrc": "13924:26:9",
															"nodeType": "YulAssignment",
															"src": "13924:26:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13942:1:9",
																		"nodeType": "YulLiteral",
																		"src": "13942:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13945:4:9",
																		"nodeType": "YulLiteral",
																		"src": "13945:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "13932:9:9",
																	"nodeType": "YulIdentifier",
																	"src": "13932:9:9"
																},
																"nativeSrc": "13932:18:9",
																"nodeType": "YulFunctionCall",
																"src": "13932:18:9"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "13924:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "13924:4:9"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "13816:141:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "13857:3:9",
														"nodeType": "YulTypedName",
														"src": "13857:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "13865:4:9",
														"nodeType": "YulTypedName",
														"src": "13865:4:9",
														"type": ""
													}
												],
												"src": "13816:141:9"
											},
											{
												"body": {
													"nativeSrc": "14007:49:9",
													"nodeType": "YulBlock",
													"src": "14007:49:9",
													"statements": [
														{
															"nativeSrc": "14017:33:9",
															"nodeType": "YulAssignment",
															"src": "14017:33:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "14035:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "14035:5:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14042:2:9",
																				"nodeType": "YulLiteral",
																				"src": "14042:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14031:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "14031:3:9"
																		},
																		"nativeSrc": "14031:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "14031:14:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14047:2:9",
																		"nodeType": "YulLiteral",
																		"src": "14047:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "14027:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "14027:3:9"
																},
																"nativeSrc": "14027:23:9",
																"nodeType": "YulFunctionCall",
																"src": "14027:23:9"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "14017:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "14017:6:9"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "13963:93:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13990:5:9",
														"nodeType": "YulTypedName",
														"src": "13990:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "14000:6:9",
														"nodeType": "YulTypedName",
														"src": "14000:6:9",
														"type": ""
													}
												],
												"src": "13963:93:9"
											},
											{
												"body": {
													"nativeSrc": "14115:54:9",
													"nodeType": "YulBlock",
													"src": "14115:54:9",
													"statements": [
														{
															"nativeSrc": "14125:37:9",
															"nodeType": "YulAssignment",
															"src": "14125:37:9",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "14150:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "14150:4:9"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "14156:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "14156:5:9"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "14146:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "14146:3:9"
																},
																"nativeSrc": "14146:16:9",
																"nodeType": "YulFunctionCall",
																"src": "14146:16:9"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "14125:8:9",
																	"nodeType": "YulIdentifier",
																	"src": "14125:8:9"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "14062:107:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "14090:4:9",
														"nodeType": "YulTypedName",
														"src": "14090:4:9",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "14096:5:9",
														"nodeType": "YulTypedName",
														"src": "14096:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "14106:8:9",
														"nodeType": "YulTypedName",
														"src": "14106:8:9",
														"type": ""
													}
												],
												"src": "14062:107:9"
											},
											{
												"body": {
													"nativeSrc": "14251:317:9",
													"nodeType": "YulBlock",
													"src": "14251:317:9",
													"statements": [
														{
															"nativeSrc": "14261:35:9",
															"nodeType": "YulVariableDeclaration",
															"src": "14261:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "14282:10:9",
																		"nodeType": "YulIdentifier",
																		"src": "14282:10:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14294:1:9",
																		"nodeType": "YulLiteral",
																		"src": "14294:1:9",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "14278:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "14278:3:9"
																},
																"nativeSrc": "14278:18:9",
																"nodeType": "YulFunctionCall",
																"src": "14278:18:9"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "14265:9:9",
																	"nodeType": "YulTypedName",
																	"src": "14265:9:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "14305:109:9",
															"nodeType": "YulVariableDeclaration",
															"src": "14305:109:9",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "14336:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "14336:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14347:66:9",
																		"nodeType": "YulLiteral",
																		"src": "14347:66:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "14317:18:9",
																	"nodeType": "YulIdentifier",
																	"src": "14317:18:9"
																},
																"nativeSrc": "14317:97:9",
																"nodeType": "YulFunctionCall",
																"src": "14317:97:9"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "14309:4:9",
																	"nodeType": "YulTypedName",
																	"src": "14309:4:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "14423:51:9",
															"nodeType": "YulAssignment",
															"src": "14423:51:9",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "14454:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "14454:9:9"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "14465:8:9",
																		"nodeType": "YulIdentifier",
																		"src": "14465:8:9"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "14435:18:9",
																	"nodeType": "YulIdentifier",
																	"src": "14435:18:9"
																},
																"nativeSrc": "14435:39:9",
																"nodeType": "YulFunctionCall",
																"src": "14435:39:9"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "14423:8:9",
																	"nodeType": "YulIdentifier",
																	"src": "14423:8:9"
																}
															]
														},
														{
															"nativeSrc": "14483:30:9",
															"nodeType": "YulAssignment",
															"src": "14483:30:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "14496:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "14496:5:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "14507:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "14507:4:9"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "14503:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "14503:3:9"
																		},
																		"nativeSrc": "14503:9:9",
																		"nodeType": "YulFunctionCall",
																		"src": "14503:9:9"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "14492:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "14492:3:9"
																},
																"nativeSrc": "14492:21:9",
																"nodeType": "YulFunctionCall",
																"src": "14492:21:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "14483:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "14483:5:9"
																}
															]
														},
														{
															"nativeSrc": "14522:40:9",
															"nodeType": "YulAssignment",
															"src": "14522:40:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "14535:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "14535:5:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "14546:8:9",
																				"nodeType": "YulIdentifier",
																				"src": "14546:8:9"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "14556:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "14556:4:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "14542:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "14542:3:9"
																		},
																		"nativeSrc": "14542:19:9",
																		"nodeType": "YulFunctionCall",
																		"src": "14542:19:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "14532:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "14532:2:9"
																},
																"nativeSrc": "14532:30:9",
																"nodeType": "YulFunctionCall",
																"src": "14532:30:9"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "14522:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "14522:6:9"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "14175:393:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14212:5:9",
														"nodeType": "YulTypedName",
														"src": "14212:5:9",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "14219:10:9",
														"nodeType": "YulTypedName",
														"src": "14219:10:9",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "14231:8:9",
														"nodeType": "YulTypedName",
														"src": "14231:8:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "14244:6:9",
														"nodeType": "YulTypedName",
														"src": "14244:6:9",
														"type": ""
													}
												],
												"src": "14175:393:9"
											},
											{
												"body": {
													"nativeSrc": "14634:82:9",
													"nodeType": "YulBlock",
													"src": "14634:82:9",
													"statements": [
														{
															"nativeSrc": "14644:66:9",
															"nodeType": "YulAssignment",
															"src": "14644:66:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "14702:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "14702:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "14684:17:9",
																					"nodeType": "YulIdentifier",
																					"src": "14684:17:9"
																				},
																				"nativeSrc": "14684:24:9",
																				"nodeType": "YulFunctionCall",
																				"src": "14684:24:9"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "14675:8:9",
																			"nodeType": "YulIdentifier",
																			"src": "14675:8:9"
																		},
																		"nativeSrc": "14675:34:9",
																		"nodeType": "YulFunctionCall",
																		"src": "14675:34:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14657:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "14657:17:9"
																},
																"nativeSrc": "14657:53:9",
																"nodeType": "YulFunctionCall",
																"src": "14657:53:9"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "14644:9:9",
																	"nodeType": "YulIdentifier",
																	"src": "14644:9:9"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "14574:142:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14614:5:9",
														"nodeType": "YulTypedName",
														"src": "14614:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "14624:9:9",
														"nodeType": "YulTypedName",
														"src": "14624:9:9",
														"type": ""
													}
												],
												"src": "14574:142:9"
											},
											{
												"body": {
													"nativeSrc": "14769:28:9",
													"nodeType": "YulBlock",
													"src": "14769:28:9",
													"statements": [
														{
															"nativeSrc": "14779:12:9",
															"nodeType": "YulAssignment",
															"src": "14779:12:9",
															"value": {
																"name": "value",
																"nativeSrc": "14786:5:9",
																"nodeType": "YulIdentifier",
																"src": "14786:5:9"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "14779:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "14779:3:9"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "14722:75:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14755:5:9",
														"nodeType": "YulTypedName",
														"src": "14755:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "14765:3:9",
														"nodeType": "YulTypedName",
														"src": "14765:3:9",
														"type": ""
													}
												],
												"src": "14722:75:9"
											},
											{
												"body": {
													"nativeSrc": "14879:193:9",
													"nodeType": "YulBlock",
													"src": "14879:193:9",
													"statements": [
														{
															"nativeSrc": "14889:63:9",
															"nodeType": "YulVariableDeclaration",
															"src": "14889:63:9",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "14944:7:9",
																		"nodeType": "YulIdentifier",
																		"src": "14944:7:9"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "14913:30:9",
																	"nodeType": "YulIdentifier",
																	"src": "14913:30:9"
																},
																"nativeSrc": "14913:39:9",
																"nodeType": "YulFunctionCall",
																"src": "14913:39:9"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "14893:16:9",
																	"nodeType": "YulTypedName",
																	"src": "14893:16:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "14968:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "14968:4:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "15008:4:9",
																						"nodeType": "YulIdentifier",
																						"src": "15008:4:9"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "15002:5:9",
																					"nodeType": "YulIdentifier",
																					"src": "15002:5:9"
																				},
																				"nativeSrc": "15002:11:9",
																				"nodeType": "YulFunctionCall",
																				"src": "15002:11:9"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "15015:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "15015:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "15047:16:9",
																						"nodeType": "YulIdentifier",
																						"src": "15047:16:9"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "15023:23:9",
																					"nodeType": "YulIdentifier",
																					"src": "15023:23:9"
																				},
																				"nativeSrc": "15023:41:9",
																				"nodeType": "YulFunctionCall",
																				"src": "15023:41:9"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "14974:27:9",
																			"nodeType": "YulIdentifier",
																			"src": "14974:27:9"
																		},
																		"nativeSrc": "14974:91:9",
																		"nodeType": "YulFunctionCall",
																		"src": "14974:91:9"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "14961:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "14961:6:9"
																},
																"nativeSrc": "14961:105:9",
																"nodeType": "YulFunctionCall",
																"src": "14961:105:9"
															},
															"nativeSrc": "14961:105:9",
															"nodeType": "YulExpressionStatement",
															"src": "14961:105:9"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "14803:269:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "14856:4:9",
														"nodeType": "YulTypedName",
														"src": "14856:4:9",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "14862:6:9",
														"nodeType": "YulTypedName",
														"src": "14862:6:9",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "14870:7:9",
														"nodeType": "YulTypedName",
														"src": "14870:7:9",
														"type": ""
													}
												],
												"src": "14803:269:9"
											},
											{
												"body": {
													"nativeSrc": "15127:24:9",
													"nodeType": "YulBlock",
													"src": "15127:24:9",
													"statements": [
														{
															"nativeSrc": "15137:8:9",
															"nodeType": "YulAssignment",
															"src": "15137:8:9",
															"value": {
																"kind": "number",
																"nativeSrc": "15144:1:9",
																"nodeType": "YulLiteral",
																"src": "15144:1:9",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "15137:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "15137:3:9"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "15078:73:9",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "15123:3:9",
														"nodeType": "YulTypedName",
														"src": "15123:3:9",
														"type": ""
													}
												],
												"src": "15078:73:9"
											},
											{
												"body": {
													"nativeSrc": "15210:136:9",
													"nodeType": "YulBlock",
													"src": "15210:136:9",
													"statements": [
														{
															"nativeSrc": "15220:46:9",
															"nodeType": "YulVariableDeclaration",
															"src": "15220:46:9",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "15234:30:9",
																	"nodeType": "YulIdentifier",
																	"src": "15234:30:9"
																},
																"nativeSrc": "15234:32:9",
																"nodeType": "YulFunctionCall",
																"src": "15234:32:9"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "15224:6:9",
																	"nodeType": "YulTypedName",
																	"src": "15224:6:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "15319:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "15319:4:9"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "15325:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "15325:6:9"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "15333:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "15333:6:9"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "15275:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "15275:43:9"
																},
																"nativeSrc": "15275:65:9",
																"nodeType": "YulFunctionCall",
																"src": "15275:65:9"
															},
															"nativeSrc": "15275:65:9",
															"nodeType": "YulExpressionStatement",
															"src": "15275:65:9"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "15157:189:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "15196:4:9",
														"nodeType": "YulTypedName",
														"src": "15196:4:9",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "15202:6:9",
														"nodeType": "YulTypedName",
														"src": "15202:6:9",
														"type": ""
													}
												],
												"src": "15157:189:9"
											},
											{
												"body": {
													"nativeSrc": "15402:136:9",
													"nodeType": "YulBlock",
													"src": "15402:136:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "15469:63:9",
																"nodeType": "YulBlock",
																"src": "15469:63:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "15513:5:9",
																					"nodeType": "YulIdentifier",
																					"src": "15513:5:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "15520:1:9",
																					"nodeType": "YulLiteral",
																					"src": "15520:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "15483:29:9",
																				"nodeType": "YulIdentifier",
																				"src": "15483:29:9"
																			},
																			"nativeSrc": "15483:39:9",
																			"nodeType": "YulFunctionCall",
																			"src": "15483:39:9"
																		},
																		"nativeSrc": "15483:39:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "15483:39:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "15422:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "15422:5:9"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "15429:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "15429:3:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "15419:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "15419:2:9"
																},
																"nativeSrc": "15419:14:9",
																"nodeType": "YulFunctionCall",
																"src": "15419:14:9"
															},
															"nativeSrc": "15412:120:9",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "15434:26:9",
																"nodeType": "YulBlock",
																"src": "15434:26:9",
																"statements": [
																	{
																		"nativeSrc": "15436:22:9",
																		"nodeType": "YulAssignment",
																		"src": "15436:22:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "15449:5:9",
																					"nodeType": "YulIdentifier",
																					"src": "15449:5:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "15456:1:9",
																					"nodeType": "YulLiteral",
																					"src": "15456:1:9",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "15445:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "15445:3:9"
																			},
																			"nativeSrc": "15445:13:9",
																			"nodeType": "YulFunctionCall",
																			"src": "15445:13:9"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "15436:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "15436:5:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "15416:2:9",
																"nodeType": "YulBlock",
																"src": "15416:2:9",
																"statements": []
															},
															"src": "15412:120:9"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "15352:186:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "15390:5:9",
														"nodeType": "YulTypedName",
														"src": "15390:5:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "15397:3:9",
														"nodeType": "YulTypedName",
														"src": "15397:3:9",
														"type": ""
													}
												],
												"src": "15352:186:9"
											},
											{
												"body": {
													"nativeSrc": "15623:464:9",
													"nodeType": "YulBlock",
													"src": "15623:464:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "15649:431:9",
																"nodeType": "YulBlock",
																"src": "15649:431:9",
																"statements": [
																	{
																		"nativeSrc": "15663:54:9",
																		"nodeType": "YulVariableDeclaration",
																		"src": "15663:54:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "15711:5:9",
																					"nodeType": "YulIdentifier",
																					"src": "15711:5:9"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "15679:31:9",
																				"nodeType": "YulIdentifier",
																				"src": "15679:31:9"
																			},
																			"nativeSrc": "15679:38:9",
																			"nodeType": "YulFunctionCall",
																			"src": "15679:38:9"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "15667:8:9",
																				"nodeType": "YulTypedName",
																				"src": "15667:8:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "15730:63:9",
																		"nodeType": "YulVariableDeclaration",
																		"src": "15730:63:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "15753:8:9",
																					"nodeType": "YulIdentifier",
																					"src": "15753:8:9"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "15781:10:9",
																							"nodeType": "YulIdentifier",
																							"src": "15781:10:9"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "15763:17:9",
																						"nodeType": "YulIdentifier",
																						"src": "15763:17:9"
																					},
																					"nativeSrc": "15763:29:9",
																					"nodeType": "YulFunctionCall",
																					"src": "15763:29:9"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "15749:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "15749:3:9"
																			},
																			"nativeSrc": "15749:44:9",
																			"nodeType": "YulFunctionCall",
																			"src": "15749:44:9"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "15734:11:9",
																				"nodeType": "YulTypedName",
																				"src": "15734:11:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "15950:27:9",
																			"nodeType": "YulBlock",
																			"src": "15950:27:9",
																			"statements": [
																				{
																					"nativeSrc": "15952:23:9",
																					"nodeType": "YulAssignment",
																					"src": "15952:23:9",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "15967:8:9",
																						"nodeType": "YulIdentifier",
																						"src": "15967:8:9"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "15952:11:9",
																							"nodeType": "YulIdentifier",
																							"src": "15952:11:9"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "15934:10:9",
																					"nodeType": "YulIdentifier",
																					"src": "15934:10:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "15946:2:9",
																					"nodeType": "YulLiteral",
																					"src": "15946:2:9",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "15931:2:9",
																				"nodeType": "YulIdentifier",
																				"src": "15931:2:9"
																			},
																			"nativeSrc": "15931:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "15931:18:9"
																		},
																		"nativeSrc": "15928:49:9",
																		"nodeType": "YulIf",
																		"src": "15928:49:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "16019:11:9",
																					"nodeType": "YulIdentifier",
																					"src": "16019:11:9"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "16036:8:9",
																							"nodeType": "YulIdentifier",
																							"src": "16036:8:9"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "16064:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "16064:3:9"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "16046:17:9",
																								"nodeType": "YulIdentifier",
																								"src": "16046:17:9"
																							},
																							"nativeSrc": "16046:22:9",
																							"nodeType": "YulFunctionCall",
																							"src": "16046:22:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "16032:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "16032:3:9"
																					},
																					"nativeSrc": "16032:37:9",
																					"nodeType": "YulFunctionCall",
																					"src": "16032:37:9"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "15990:28:9",
																				"nodeType": "YulIdentifier",
																				"src": "15990:28:9"
																			},
																			"nativeSrc": "15990:80:9",
																			"nodeType": "YulFunctionCall",
																			"src": "15990:80:9"
																		},
																		"nativeSrc": "15990:80:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "15990:80:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "15640:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "15640:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15645:2:9",
																		"nodeType": "YulLiteral",
																		"src": "15645:2:9",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "15637:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "15637:2:9"
																},
																"nativeSrc": "15637:11:9",
																"nodeType": "YulFunctionCall",
																"src": "15637:11:9"
															},
															"nativeSrc": "15634:446:9",
															"nodeType": "YulIf",
															"src": "15634:446:9"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "15544:543:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "15599:5:9",
														"nodeType": "YulTypedName",
														"src": "15599:5:9",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "15606:3:9",
														"nodeType": "YulTypedName",
														"src": "15606:3:9",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "15611:10:9",
														"nodeType": "YulTypedName",
														"src": "15611:10:9",
														"type": ""
													}
												],
												"src": "15544:543:9"
											},
											{
												"body": {
													"nativeSrc": "16156:54:9",
													"nodeType": "YulBlock",
													"src": "16156:54:9",
													"statements": [
														{
															"nativeSrc": "16166:37:9",
															"nodeType": "YulAssignment",
															"src": "16166:37:9",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "16191:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "16191:4:9"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "16197:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "16197:5:9"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "16187:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "16187:3:9"
																},
																"nativeSrc": "16187:16:9",
																"nodeType": "YulFunctionCall",
																"src": "16187:16:9"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "16166:8:9",
																	"nodeType": "YulIdentifier",
																	"src": "16166:8:9"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "16093:117:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "16131:4:9",
														"nodeType": "YulTypedName",
														"src": "16131:4:9",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "16137:5:9",
														"nodeType": "YulTypedName",
														"src": "16137:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "16147:8:9",
														"nodeType": "YulTypedName",
														"src": "16147:8:9",
														"type": ""
													}
												],
												"src": "16093:117:9"
											},
											{
												"body": {
													"nativeSrc": "16267:118:9",
													"nodeType": "YulBlock",
													"src": "16267:118:9",
													"statements": [
														{
															"nativeSrc": "16277:68:9",
															"nodeType": "YulVariableDeclaration",
															"src": "16277:68:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "16326:1:9",
																						"nodeType": "YulLiteral",
																						"src": "16326:1:9",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "16329:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "16329:5:9"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "16322:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "16322:3:9"
																				},
																				"nativeSrc": "16322:13:9",
																				"nodeType": "YulFunctionCall",
																				"src": "16322:13:9"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "16341:1:9",
																						"nodeType": "YulLiteral",
																						"src": "16341:1:9",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "16337:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "16337:3:9"
																				},
																				"nativeSrc": "16337:6:9",
																				"nodeType": "YulFunctionCall",
																				"src": "16337:6:9"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "16293:28:9",
																			"nodeType": "YulIdentifier",
																			"src": "16293:28:9"
																		},
																		"nativeSrc": "16293:51:9",
																		"nodeType": "YulFunctionCall",
																		"src": "16293:51:9"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "16289:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "16289:3:9"
																},
																"nativeSrc": "16289:56:9",
																"nodeType": "YulFunctionCall",
																"src": "16289:56:9"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "16281:4:9",
																	"nodeType": "YulTypedName",
																	"src": "16281:4:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "16354:25:9",
															"nodeType": "YulAssignment",
															"src": "16354:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "16368:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "16368:4:9"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "16374:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "16374:4:9"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "16364:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "16364:3:9"
																},
																"nativeSrc": "16364:15:9",
																"nodeType": "YulFunctionCall",
																"src": "16364:15:9"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "16354:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "16354:6:9"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "16216:169:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "16244:4:9",
														"nodeType": "YulTypedName",
														"src": "16244:4:9",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "16250:5:9",
														"nodeType": "YulTypedName",
														"src": "16250:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "16260:6:9",
														"nodeType": "YulTypedName",
														"src": "16260:6:9",
														"type": ""
													}
												],
												"src": "16216:169:9"
											},
											{
												"body": {
													"nativeSrc": "16471:214:9",
													"nodeType": "YulBlock",
													"src": "16471:214:9",
													"statements": [
														{
															"nativeSrc": "16604:37:9",
															"nodeType": "YulAssignment",
															"src": "16604:37:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "16631:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "16631:4:9"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "16637:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "16637:3:9"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "16612:18:9",
																	"nodeType": "YulIdentifier",
																	"src": "16612:18:9"
																},
																"nativeSrc": "16612:29:9",
																"nodeType": "YulFunctionCall",
																"src": "16612:29:9"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "16604:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "16604:4:9"
																}
															]
														},
														{
															"nativeSrc": "16650:29:9",
															"nodeType": "YulAssignment",
															"src": "16650:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "16661:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "16661:4:9"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "16671:1:9",
																				"nodeType": "YulLiteral",
																				"src": "16671:1:9",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "16674:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "16674:3:9"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "16667:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "16667:3:9"
																		},
																		"nativeSrc": "16667:11:9",
																		"nodeType": "YulFunctionCall",
																		"src": "16667:11:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "16658:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "16658:2:9"
																},
																"nativeSrc": "16658:21:9",
																"nodeType": "YulFunctionCall",
																"src": "16658:21:9"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "16650:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "16650:4:9"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "16390:295:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "16452:4:9",
														"nodeType": "YulTypedName",
														"src": "16452:4:9",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "16458:3:9",
														"nodeType": "YulTypedName",
														"src": "16458:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "16466:4:9",
														"nodeType": "YulTypedName",
														"src": "16466:4:9",
														"type": ""
													}
												],
												"src": "16390:295:9"
											},
											{
												"body": {
													"nativeSrc": "16782:1303:9",
													"nodeType": "YulBlock",
													"src": "16782:1303:9",
													"statements": [
														{
															"nativeSrc": "16793:51:9",
															"nodeType": "YulVariableDeclaration",
															"src": "16793:51:9",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "16840:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "16840:3:9"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "16807:32:9",
																	"nodeType": "YulIdentifier",
																	"src": "16807:32:9"
																},
																"nativeSrc": "16807:37:9",
																"nodeType": "YulFunctionCall",
																"src": "16807:37:9"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "16797:6:9",
																	"nodeType": "YulTypedName",
																	"src": "16797:6:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "16929:22:9",
																"nodeType": "YulBlock",
																"src": "16929:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "16931:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "16931:16:9"
																			},
																			"nativeSrc": "16931:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "16931:18:9"
																		},
																		"nativeSrc": "16931:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "16931:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "16901:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "16901:6:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16909:18:9",
																		"nodeType": "YulLiteral",
																		"src": "16909:18:9",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "16898:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "16898:2:9"
																},
																"nativeSrc": "16898:30:9",
																"nodeType": "YulFunctionCall",
																"src": "16898:30:9"
															},
															"nativeSrc": "16895:56:9",
															"nodeType": "YulIf",
															"src": "16895:56:9"
														},
														{
															"nativeSrc": "16961:52:9",
															"nodeType": "YulVariableDeclaration",
															"src": "16961:52:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "17007:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "17007:4:9"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "17001:5:9",
																			"nodeType": "YulIdentifier",
																			"src": "17001:5:9"
																		},
																		"nativeSrc": "17001:11:9",
																		"nodeType": "YulFunctionCall",
																		"src": "17001:11:9"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "16975:25:9",
																	"nodeType": "YulIdentifier",
																	"src": "16975:25:9"
																},
																"nativeSrc": "16975:38:9",
																"nodeType": "YulFunctionCall",
																"src": "16975:38:9"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "16965:6:9",
																	"nodeType": "YulTypedName",
																	"src": "16965:6:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "17106:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "17106:4:9"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "17112:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "17112:6:9"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "17120:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "17120:6:9"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "17060:45:9",
																	"nodeType": "YulIdentifier",
																	"src": "17060:45:9"
																},
																"nativeSrc": "17060:67:9",
																"nodeType": "YulFunctionCall",
																"src": "17060:67:9"
															},
															"nativeSrc": "17060:67:9",
															"nodeType": "YulExpressionStatement",
															"src": "17060:67:9"
														},
														{
															"nativeSrc": "17137:18:9",
															"nodeType": "YulVariableDeclaration",
															"src": "17137:18:9",
															"value": {
																"kind": "number",
																"nativeSrc": "17154:1:9",
																"nodeType": "YulLiteral",
																"src": "17154:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "17141:9:9",
																	"nodeType": "YulTypedName",
																	"src": "17141:9:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "17165:17:9",
															"nodeType": "YulAssignment",
															"src": "17165:17:9",
															"value": {
																"kind": "number",
																"nativeSrc": "17178:4:9",
																"nodeType": "YulLiteral",
																"src": "17178:4:9",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "17165:9:9",
																	"nodeType": "YulIdentifier",
																	"src": "17165:9:9"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "17229:611:9",
																		"nodeType": "YulBlock",
																		"src": "17229:611:9",
																		"statements": [
																			{
																				"nativeSrc": "17243:37:9",
																				"nodeType": "YulVariableDeclaration",
																				"src": "17243:37:9",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "17262:6:9",
																							"nodeType": "YulIdentifier",
																							"src": "17262:6:9"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "17274:4:9",
																									"nodeType": "YulLiteral",
																									"src": "17274:4:9",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "17270:3:9",
																								"nodeType": "YulIdentifier",
																								"src": "17270:3:9"
																							},
																							"nativeSrc": "17270:9:9",
																							"nodeType": "YulFunctionCall",
																							"src": "17270:9:9"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "17258:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "17258:3:9"
																					},
																					"nativeSrc": "17258:22:9",
																					"nodeType": "YulFunctionCall",
																					"src": "17258:22:9"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "17247:7:9",
																						"nodeType": "YulTypedName",
																						"src": "17247:7:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "17294:51:9",
																				"nodeType": "YulVariableDeclaration",
																				"src": "17294:51:9",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "17340:4:9",
																							"nodeType": "YulIdentifier",
																							"src": "17340:4:9"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "17308:31:9",
																						"nodeType": "YulIdentifier",
																						"src": "17308:31:9"
																					},
																					"nativeSrc": "17308:37:9",
																					"nodeType": "YulFunctionCall",
																					"src": "17308:37:9"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "17298:6:9",
																						"nodeType": "YulTypedName",
																						"src": "17298:6:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "17358:10:9",
																				"nodeType": "YulVariableDeclaration",
																				"src": "17358:10:9",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "17367:1:9",
																					"nodeType": "YulLiteral",
																					"src": "17367:1:9",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "17362:1:9",
																						"nodeType": "YulTypedName",
																						"src": "17362:1:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "17426:163:9",
																					"nodeType": "YulBlock",
																					"src": "17426:163:9",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "17451:6:9",
																										"nodeType": "YulIdentifier",
																										"src": "17451:6:9"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "17469:3:9",
																														"nodeType": "YulIdentifier",
																														"src": "17469:3:9"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "17474:9:9",
																														"nodeType": "YulIdentifier",
																														"src": "17474:9:9"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "17465:3:9",
																													"nodeType": "YulIdentifier",
																													"src": "17465:3:9"
																												},
																												"nativeSrc": "17465:19:9",
																												"nodeType": "YulFunctionCall",
																												"src": "17465:19:9"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "17459:5:9",
																											"nodeType": "YulIdentifier",
																											"src": "17459:5:9"
																										},
																										"nativeSrc": "17459:26:9",
																										"nodeType": "YulFunctionCall",
																										"src": "17459:26:9"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "17444:6:9",
																									"nodeType": "YulIdentifier",
																									"src": "17444:6:9"
																								},
																								"nativeSrc": "17444:42:9",
																								"nodeType": "YulFunctionCall",
																								"src": "17444:42:9"
																							},
																							"nativeSrc": "17444:42:9",
																							"nodeType": "YulExpressionStatement",
																							"src": "17444:42:9"
																						},
																						{
																							"nativeSrc": "17503:24:9",
																							"nodeType": "YulAssignment",
																							"src": "17503:24:9",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "17517:6:9",
																										"nodeType": "YulIdentifier",
																										"src": "17517:6:9"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "17525:1:9",
																										"nodeType": "YulLiteral",
																										"src": "17525:1:9",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "17513:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "17513:3:9"
																								},
																								"nativeSrc": "17513:14:9",
																								"nodeType": "YulFunctionCall",
																								"src": "17513:14:9"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "17503:6:9",
																									"nodeType": "YulIdentifier",
																									"src": "17503:6:9"
																								}
																							]
																						},
																						{
																							"nativeSrc": "17544:31:9",
																							"nodeType": "YulAssignment",
																							"src": "17544:31:9",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "17561:9:9",
																										"nodeType": "YulIdentifier",
																										"src": "17561:9:9"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "17572:2:9",
																										"nodeType": "YulLiteral",
																										"src": "17572:2:9",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "17557:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "17557:3:9"
																								},
																								"nativeSrc": "17557:18:9",
																								"nodeType": "YulFunctionCall",
																								"src": "17557:18:9"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "17544:9:9",
																									"nodeType": "YulIdentifier",
																									"src": "17544:9:9"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "17392:1:9",
																							"nodeType": "YulIdentifier",
																							"src": "17392:1:9"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "17395:7:9",
																							"nodeType": "YulIdentifier",
																							"src": "17395:7:9"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "17389:2:9",
																						"nodeType": "YulIdentifier",
																						"src": "17389:2:9"
																					},
																					"nativeSrc": "17389:14:9",
																					"nodeType": "YulFunctionCall",
																					"src": "17389:14:9"
																				},
																				"nativeSrc": "17381:208:9",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "17404:21:9",
																					"nodeType": "YulBlock",
																					"src": "17404:21:9",
																					"statements": [
																						{
																							"nativeSrc": "17406:17:9",
																							"nodeType": "YulAssignment",
																							"src": "17406:17:9",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "17415:1:9",
																										"nodeType": "YulIdentifier",
																										"src": "17415:1:9"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "17418:4:9",
																										"nodeType": "YulLiteral",
																										"src": "17418:4:9",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "17411:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "17411:3:9"
																								},
																								"nativeSrc": "17411:12:9",
																								"nodeType": "YulFunctionCall",
																								"src": "17411:12:9"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "17406:1:9",
																									"nodeType": "YulIdentifier",
																									"src": "17406:1:9"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "17385:3:9",
																					"nodeType": "YulBlock",
																					"src": "17385:3:9",
																					"statements": []
																				},
																				"src": "17381:208:9"
																			},
																			{
																				"body": {
																					"nativeSrc": "17625:156:9",
																					"nodeType": "YulBlock",
																					"src": "17625:156:9",
																					"statements": [
																						{
																							"nativeSrc": "17643:43:9",
																							"nodeType": "YulVariableDeclaration",
																							"src": "17643:43:9",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "17670:3:9",
																												"nodeType": "YulIdentifier",
																												"src": "17670:3:9"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "17675:9:9",
																												"nodeType": "YulIdentifier",
																												"src": "17675:9:9"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "17666:3:9",
																											"nodeType": "YulIdentifier",
																											"src": "17666:3:9"
																										},
																										"nativeSrc": "17666:19:9",
																										"nodeType": "YulFunctionCall",
																										"src": "17666:19:9"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "17660:5:9",
																									"nodeType": "YulIdentifier",
																									"src": "17660:5:9"
																								},
																								"nativeSrc": "17660:26:9",
																								"nodeType": "YulFunctionCall",
																								"src": "17660:26:9"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "17647:9:9",
																									"nodeType": "YulTypedName",
																									"src": "17647:9:9",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "17710:6:9",
																										"nodeType": "YulIdentifier",
																										"src": "17710:6:9"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "17737:9:9",
																												"nodeType": "YulIdentifier",
																												"src": "17737:9:9"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "17752:6:9",
																														"nodeType": "YulIdentifier",
																														"src": "17752:6:9"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "17760:4:9",
																														"nodeType": "YulLiteral",
																														"src": "17760:4:9",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "17748:3:9",
																													"nodeType": "YulIdentifier",
																													"src": "17748:3:9"
																												},
																												"nativeSrc": "17748:17:9",
																												"nodeType": "YulFunctionCall",
																												"src": "17748:17:9"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "17718:18:9",
																											"nodeType": "YulIdentifier",
																											"src": "17718:18:9"
																										},
																										"nativeSrc": "17718:48:9",
																										"nodeType": "YulFunctionCall",
																										"src": "17718:48:9"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "17703:6:9",
																									"nodeType": "YulIdentifier",
																									"src": "17703:6:9"
																								},
																								"nativeSrc": "17703:64:9",
																								"nodeType": "YulFunctionCall",
																								"src": "17703:64:9"
																							},
																							"nativeSrc": "17703:64:9",
																							"nodeType": "YulExpressionStatement",
																							"src": "17703:64:9"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "17608:7:9",
																							"nodeType": "YulIdentifier",
																							"src": "17608:7:9"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "17617:6:9",
																							"nodeType": "YulIdentifier",
																							"src": "17617:6:9"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "17605:2:9",
																						"nodeType": "YulIdentifier",
																						"src": "17605:2:9"
																					},
																					"nativeSrc": "17605:19:9",
																					"nodeType": "YulFunctionCall",
																					"src": "17605:19:9"
																				},
																				"nativeSrc": "17602:179:9",
																				"nodeType": "YulIf",
																				"src": "17602:179:9"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "17801:4:9",
																							"nodeType": "YulIdentifier",
																							"src": "17801:4:9"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "17815:6:9",
																											"nodeType": "YulIdentifier",
																											"src": "17815:6:9"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "17823:1:9",
																											"nodeType": "YulLiteral",
																											"src": "17823:1:9",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "17811:3:9",
																										"nodeType": "YulIdentifier",
																										"src": "17811:3:9"
																									},
																									"nativeSrc": "17811:14:9",
																									"nodeType": "YulFunctionCall",
																									"src": "17811:14:9"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "17827:1:9",
																									"nodeType": "YulLiteral",
																									"src": "17827:1:9",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "17807:3:9",
																								"nodeType": "YulIdentifier",
																								"src": "17807:3:9"
																							},
																							"nativeSrc": "17807:22:9",
																							"nodeType": "YulFunctionCall",
																							"src": "17807:22:9"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "17794:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "17794:6:9"
																					},
																					"nativeSrc": "17794:36:9",
																					"nodeType": "YulFunctionCall",
																					"src": "17794:36:9"
																				},
																				"nativeSrc": "17794:36:9",
																				"nodeType": "YulExpressionStatement",
																				"src": "17794:36:9"
																			}
																		]
																	},
																	"nativeSrc": "17222:618:9",
																	"nodeType": "YulCase",
																	"src": "17222:618:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "17227:1:9",
																		"nodeType": "YulLiteral",
																		"src": "17227:1:9",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "17857:222:9",
																		"nodeType": "YulBlock",
																		"src": "17857:222:9",
																		"statements": [
																			{
																				"nativeSrc": "17871:14:9",
																				"nodeType": "YulVariableDeclaration",
																				"src": "17871:14:9",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "17884:1:9",
																					"nodeType": "YulLiteral",
																					"src": "17884:1:9",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "17875:5:9",
																						"nodeType": "YulTypedName",
																						"src": "17875:5:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "17908:67:9",
																					"nodeType": "YulBlock",
																					"src": "17908:67:9",
																					"statements": [
																						{
																							"nativeSrc": "17926:35:9",
																							"nodeType": "YulAssignment",
																							"src": "17926:35:9",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "17945:3:9",
																												"nodeType": "YulIdentifier",
																												"src": "17945:3:9"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "17950:9:9",
																												"nodeType": "YulIdentifier",
																												"src": "17950:9:9"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "17941:3:9",
																											"nodeType": "YulIdentifier",
																											"src": "17941:3:9"
																										},
																										"nativeSrc": "17941:19:9",
																										"nodeType": "YulFunctionCall",
																										"src": "17941:19:9"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "17935:5:9",
																									"nodeType": "YulIdentifier",
																									"src": "17935:5:9"
																								},
																								"nativeSrc": "17935:26:9",
																								"nodeType": "YulFunctionCall",
																								"src": "17935:26:9"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "17926:5:9",
																									"nodeType": "YulIdentifier",
																									"src": "17926:5:9"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "17901:6:9",
																					"nodeType": "YulIdentifier",
																					"src": "17901:6:9"
																				},
																				"nativeSrc": "17898:77:9",
																				"nodeType": "YulIf",
																				"src": "17898:77:9"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "17995:4:9",
																							"nodeType": "YulIdentifier",
																							"src": "17995:4:9"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "18054:5:9",
																									"nodeType": "YulIdentifier",
																									"src": "18054:5:9"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "18061:6:9",
																									"nodeType": "YulIdentifier",
																									"src": "18061:6:9"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "18001:52:9",
																								"nodeType": "YulIdentifier",
																								"src": "18001:52:9"
																							},
																							"nativeSrc": "18001:67:9",
																							"nodeType": "YulFunctionCall",
																							"src": "18001:67:9"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "17988:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "17988:6:9"
																					},
																					"nativeSrc": "17988:81:9",
																					"nodeType": "YulFunctionCall",
																					"src": "17988:81:9"
																				},
																				"nativeSrc": "17988:81:9",
																				"nodeType": "YulExpressionStatement",
																				"src": "17988:81:9"
																			}
																		]
																	},
																	"nativeSrc": "17849:230:9",
																	"nodeType": "YulCase",
																	"src": "17849:230:9",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "17202:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "17202:6:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17210:2:9",
																		"nodeType": "YulLiteral",
																		"src": "17210:2:9",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "17199:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "17199:2:9"
																},
																"nativeSrc": "17199:14:9",
																"nodeType": "YulFunctionCall",
																"src": "17199:14:9"
															},
															"nativeSrc": "17192:887:9",
															"nodeType": "YulSwitch",
															"src": "17192:887:9"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "16690:1395:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "16771:4:9",
														"nodeType": "YulTypedName",
														"src": "16771:4:9",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "16777:3:9",
														"nodeType": "YulTypedName",
														"src": "16777:3:9",
														"type": ""
													}
												],
												"src": "16690:1395:9"
											},
											{
												"body": {
													"nativeSrc": "18144:32:9",
													"nodeType": "YulBlock",
													"src": "18144:32:9",
													"statements": [
														{
															"nativeSrc": "18154:16:9",
															"nodeType": "YulAssignment",
															"src": "18154:16:9",
															"value": {
																"name": "value",
																"nativeSrc": "18165:5:9",
																"nodeType": "YulIdentifier",
																"src": "18165:5:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "18154:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "18154:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_rational_1_by_1",
												"nativeSrc": "18091:85:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "18126:5:9",
														"nodeType": "YulTypedName",
														"src": "18126:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "18136:7:9",
														"nodeType": "YulTypedName",
														"src": "18136:7:9",
														"type": ""
													}
												],
												"src": "18091:85:9"
											},
											{
												"body": {
													"nativeSrc": "18226:57:9",
													"nodeType": "YulBlock",
													"src": "18226:57:9",
													"statements": [
														{
															"nativeSrc": "18236:41:9",
															"nodeType": "YulAssignment",
															"src": "18236:41:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "18251:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "18251:5:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18258:18:9",
																		"nodeType": "YulLiteral",
																		"src": "18258:18:9",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "18247:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "18247:3:9"
																},
																"nativeSrc": "18247:30:9",
																"nodeType": "YulFunctionCall",
																"src": "18247:30:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "18236:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "18236:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint64",
												"nativeSrc": "18182:101:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "18208:5:9",
														"nodeType": "YulTypedName",
														"src": "18208:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "18218:7:9",
														"nodeType": "YulTypedName",
														"src": "18218:7:9",
														"type": ""
													}
												],
												"src": "18182:101:9"
											},
											{
												"body": {
													"nativeSrc": "18356:89:9",
													"nodeType": "YulBlock",
													"src": "18356:89:9",
													"statements": [
														{
															"nativeSrc": "18366:73:9",
															"nodeType": "YulAssignment",
															"src": "18366:73:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "18431:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "18431:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_rational_1_by_1",
																					"nativeSrc": "18405:25:9",
																					"nodeType": "YulIdentifier",
																					"src": "18405:25:9"
																				},
																				"nativeSrc": "18405:32:9",
																				"nodeType": "YulFunctionCall",
																				"src": "18405:32:9"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "18396:8:9",
																			"nodeType": "YulIdentifier",
																			"src": "18396:8:9"
																		},
																		"nativeSrc": "18396:42:9",
																		"nodeType": "YulFunctionCall",
																		"src": "18396:42:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint64",
																	"nativeSrc": "18379:16:9",
																	"nodeType": "YulIdentifier",
																	"src": "18379:16:9"
																},
																"nativeSrc": "18379:60:9",
																"nodeType": "YulFunctionCall",
																"src": "18379:60:9"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "18366:9:9",
																	"nodeType": "YulIdentifier",
																	"src": "18366:9:9"
																}
															]
														}
													]
												},
												"name": "convert_t_rational_1_by_1_to_t_uint64",
												"nativeSrc": "18289:156:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "18336:5:9",
														"nodeType": "YulTypedName",
														"src": "18336:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "18346:9:9",
														"nodeType": "YulTypedName",
														"src": "18346:9:9",
														"type": ""
													}
												],
												"src": "18289:156:9"
											},
											{
												"body": {
													"nativeSrc": "18523:73:9",
													"nodeType": "YulBlock",
													"src": "18523:73:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18540:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "18540:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "18583:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "18583:5:9"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_rational_1_by_1_to_t_uint64",
																			"nativeSrc": "18545:37:9",
																			"nodeType": "YulIdentifier",
																			"src": "18545:37:9"
																		},
																		"nativeSrc": "18545:44:9",
																		"nodeType": "YulFunctionCall",
																		"src": "18545:44:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18533:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "18533:6:9"
																},
																"nativeSrc": "18533:57:9",
																"nodeType": "YulFunctionCall",
																"src": "18533:57:9"
															},
															"nativeSrc": "18533:57:9",
															"nodeType": "YulExpressionStatement",
															"src": "18533:57:9"
														}
													]
												},
												"name": "abi_encode_t_rational_1_by_1_to_t_uint64_fromStack",
												"nativeSrc": "18451:145:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "18511:5:9",
														"nodeType": "YulTypedName",
														"src": "18511:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "18518:3:9",
														"nodeType": "YulTypedName",
														"src": "18518:3:9",
														"type": ""
													}
												],
												"src": "18451:145:9"
											},
											{
												"body": {
													"nativeSrc": "18707:131:9",
													"nodeType": "YulBlock",
													"src": "18707:131:9",
													"statements": [
														{
															"nativeSrc": "18717:26:9",
															"nodeType": "YulAssignment",
															"src": "18717:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18729:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "18729:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18740:2:9",
																		"nodeType": "YulLiteral",
																		"src": "18740:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18725:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "18725:3:9"
																},
																"nativeSrc": "18725:18:9",
																"nodeType": "YulFunctionCall",
																"src": "18725:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18717:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "18717:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "18804:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "18804:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18817:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "18817:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18828:1:9",
																				"nodeType": "YulLiteral",
																				"src": "18828:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18813:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "18813:3:9"
																		},
																		"nativeSrc": "18813:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "18813:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_1_by_1_to_t_uint64_fromStack",
																	"nativeSrc": "18753:50:9",
																	"nodeType": "YulIdentifier",
																	"src": "18753:50:9"
																},
																"nativeSrc": "18753:78:9",
																"nodeType": "YulFunctionCall",
																"src": "18753:78:9"
															},
															"nativeSrc": "18753:78:9",
															"nodeType": "YulExpressionStatement",
															"src": "18753:78:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed",
												"nativeSrc": "18602:236:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18679:9:9",
														"nodeType": "YulTypedName",
														"src": "18679:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "18691:6:9",
														"nodeType": "YulTypedName",
														"src": "18691:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18702:4:9",
														"nodeType": "YulTypedName",
														"src": "18702:4:9",
														"type": ""
													}
												],
												"src": "18602:236:9"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_string_memory_ptrt_string_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5 {\n        if slt(sub(dataEnd, headStart), 192) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 160))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value5 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_ERC20_$1146_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_ERC20_$1146_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_ERC20_$1146_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_ERC20_$1146__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_ERC20_$1146_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint8_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    function abi_decode_tuple_t_uint8_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint8_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function cleanup_t_rational_1_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function convert_t_rational_1_by_1_to_t_uint64(value) -> converted {\n        converted := cleanup_t_uint64(identity(cleanup_t_rational_1_by_1(value)))\n    }\n\n    function abi_encode_t_rational_1_by_1_to_t_uint64_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_1_by_1_to_t_uint64(value))\n    }\n\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_rational_1_by_1_to_t_uint64_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610114575f3560e01c8063715018a6116100a0578063b6b55f251161006f578063b6b55f25146102d0578063dd62ed3e146102ec578063e001ff521461031c578063f2fde38b14610338578063fc0c546a1461035457610114565b8063715018a61461025a5780638da5cb5b1461026457806395d89b4114610282578063a9059cbb146102a057610114565b806323b872dd116100e757806323b872dd146101a25780632e1a7d4d146101d2578063313ce567146101ee57806361603d891461020c57806370a082311461022a57610114565b8063045544431461011857806306fdde0314610136578063095ea7b31461015457806318160ddd14610184575b5f80fd5b610120610372565b60405161012d9190610f0f565b60405180910390f35b61013e610378565b60405161014b9190610f98565b60405180910390f35b61016e6004803603810190610169919061104d565b610404565b60405161017b91906110a5565b60405180910390f35b61018c610437565b6040516101999190610f0f565b60405180910390f35b6101bc60048036038101906101b791906110be565b61043d565b6040516101c991906110a5565b60405180910390f35b6101ec60048036038101906101e7919061110e565b610470565b005b6101f66106e0565b6040516102039190611154565b60405180910390f35b610214610773565b6040516102219190610f0f565b60405180910390f35b610244600480360381019061023f919061116d565b610779565b6040516102519190610f0f565b60405180910390f35b61026261078e565b005b61026c6107a1565b60405161027991906111a7565b60405180910390f35b61028a6107d6565b6040516102979190610f98565b60405180910390f35b6102ba60048036038101906102b5919061104d565b610862565b6040516102c791906110a5565b60405180910390f35b6102ea60048036038101906102e5919061110e565b610895565b005b610306600480360381019061030191906111c0565b610a76565b6040516103139190610f0f565b60405180910390f35b6103366004803603810190610331919061132a565b610aa9565b005b610352600480360381019061034d919061116d565b610ca3565b005b61035c610d27565b6040516103699190611446565b60405180910390f35b60025481565b600380546103859061148c565b80601f01602080910402602001604051908101604052809291908181526020018280546103b19061148c565b80156103fc5780601f106103d3576101008083540402835291602001916103fc565b820191905f5260205f20905b8154815290600101906020018083116103df57829003601f168201915b505050505081565b5f6040517fa038794000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60055481565b5f6040517fa038794000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001544211801561048f575060025460015461048c91906114e9565b42105b156104c6576040517f3c2c6e9d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060065f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054101561053d576040517f7fa62f9d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060065f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610589919061151c565b925050819055508060055f8282546105a1919061151c565b925050819055505f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b815260040161060292919061154f565b6020604051808303815f875af115801561061e573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061064291906115a0565b610678576040517f90b8ec1800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516106d59190610f0f565b60405180910390a350565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa15801561074a573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061076e91906115f5565b905090565b60015481565b6006602052805f5260405f205f915090505481565b610796610d4a565b61079f5f610dd1565b565b5f806107ab610ea2565b9050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691505090565b600480546107e39061148c565b80601f016020809104026020016040519081016040528092919081815260200182805461080f9061148c565b801561085a5780601f106108315761010080835404028352916020019161085a565b820191905f5260205f20905b81548152906001019060200180831161083d57829003601f168201915b505050505081565b5f6040517fa038794000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001544211156108d1576040517f9883528e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060065f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461091d91906114e9565b925050819055508060055f82825461093591906114e9565b925050819055505f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b815260040161099893929190611620565b6020604051808303815f875af11580156109b4573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906109d891906115a0565b610a0e576040517f90b8ec1800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610a6b9190610f0f565b60405180910390a350565b5f6040517fa038794000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f610ab2610ec9565b90505f815f0160089054906101000a900460ff161590505f825f015f9054906101000a900467ffffffffffffffff1690505f808267ffffffffffffffff16148015610afa5750825b90505f60018367ffffffffffffffff16148015610b2d57505f3073ffffffffffffffffffffffffffffffffffffffff163b145b905081158015610b3b575080155b15610b72576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001855f015f6101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055508315610bbf576001855f0160086101000a81548160ff0219169083151502179055505b610bc88b610ca3565b895f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555088600181905550876002819055508660039081610c2491906117e9565b508560049081610c3491906117e9565b505f6005819055508315610c96575f855f0160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d26001604051610c8d9190611904565b60405180910390a15b5050505050505050505050565b610cab610d4a565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610d1b575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610d1291906111a7565b60405180910390fd5b610d2481610dd1565b50565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610d52610ef0565b73ffffffffffffffffffffffffffffffffffffffff16610d706107a1565b73ffffffffffffffffffffffffffffffffffffffff1614610dcf57610d93610ef0565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610dc691906111a7565b60405180910390fd5b565b5f610dda610ea2565b90505f815f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905082825f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3505050565b5f7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300905090565b5f7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00905090565b5f33905090565b5f819050919050565b610f0981610ef7565b82525050565b5f602082019050610f225f830184610f00565b92915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f610f6a82610f28565b610f748185610f32565b9350610f84818560208601610f42565b610f8d81610f50565b840191505092915050565b5f6020820190508181035f830152610fb08184610f60565b905092915050565b5f604051905090565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610ff282610fc9565b9050919050565b61100281610fe8565b811461100c575f80fd5b50565b5f8135905061101d81610ff9565b92915050565b61102c81610ef7565b8114611036575f80fd5b50565b5f8135905061104781611023565b92915050565b5f806040838503121561106357611062610fc1565b5b5f6110708582860161100f565b925050602061108185828601611039565b9150509250929050565b5f8115159050919050565b61109f8161108b565b82525050565b5f6020820190506110b85f830184611096565b92915050565b5f805f606084860312156110d5576110d4610fc1565b5b5f6110e28682870161100f565b93505060206110f38682870161100f565b925050604061110486828701611039565b9150509250925092565b5f6020828403121561112357611122610fc1565b5b5f61113084828501611039565b91505092915050565b5f60ff82169050919050565b61114e81611139565b82525050565b5f6020820190506111675f830184611145565b92915050565b5f6020828403121561118257611181610fc1565b5b5f61118f8482850161100f565b91505092915050565b6111a181610fe8565b82525050565b5f6020820190506111ba5f830184611198565b92915050565b5f80604083850312156111d6576111d5610fc1565b5b5f6111e38582860161100f565b92505060206111f48582860161100f565b9150509250929050565b5f80fd5b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b61123c82610f50565b810181811067ffffffffffffffff8211171561125b5761125a611206565b5b80604052505050565b5f61126d610fb8565b90506112798282611233565b919050565b5f67ffffffffffffffff82111561129857611297611206565b5b6112a182610f50565b9050602081019050919050565b828183375f83830152505050565b5f6112ce6112c98461127e565b611264565b9050828152602081018484840111156112ea576112e9611202565b5b6112f58482856112ae565b509392505050565b5f82601f830112611311576113106111fe565b5b81356113218482602086016112bc565b91505092915050565b5f805f805f8060c0878903121561134457611343610fc1565b5b5f61135189828a0161100f565b965050602061136289828a0161100f565b955050604061137389828a01611039565b945050606061138489828a01611039565b935050608087013567ffffffffffffffff8111156113a5576113a4610fc5565b5b6113b189828a016112fd565b92505060a087013567ffffffffffffffff8111156113d2576113d1610fc5565b5b6113de89828a016112fd565b9150509295509295509295565b5f819050919050565b5f61140e61140961140484610fc9565b6113eb565b610fc9565b9050919050565b5f61141f826113f4565b9050919050565b5f61143082611415565b9050919050565b61144081611426565b82525050565b5f6020820190506114595f830184611437565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806114a357607f821691505b6020821081036114b6576114b561145f565b5b50919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6114f382610ef7565b91506114fe83610ef7565b9250828201905080821115611516576115156114bc565b5b92915050565b5f61152682610ef7565b915061153183610ef7565b9250828203905081811115611549576115486114bc565b5b92915050565b5f6040820190506115625f830185611198565b61156f6020830184610f00565b9392505050565b61157f8161108b565b8114611589575f80fd5b50565b5f8151905061159a81611576565b92915050565b5f602082840312156115b5576115b4610fc1565b5b5f6115c28482850161158c565b91505092915050565b6115d481611139565b81146115de575f80fd5b50565b5f815190506115ef816115cb565b92915050565b5f6020828403121561160a57611609610fc1565b5b5f611617848285016115e1565b91505092915050565b5f6060820190506116335f830186611198565b6116406020830185611198565b61164d6040830184610f00565b949350505050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026116b17fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611676565b6116bb8683611676565b95508019841693508086168417925050509392505050565b5f6116ed6116e86116e384610ef7565b6113eb565b610ef7565b9050919050565b5f819050919050565b611706836116d3565b61171a611712826116f4565b848454611682565b825550505050565b5f90565b61172e611722565b6117398184846116fd565b505050565b5b8181101561175c576117515f82611726565b60018101905061173f565b5050565b601f8211156117a15761177281611655565b61177b84611667565b8101602085101561178a578190505b61179e61179685611667565b83018261173e565b50505b505050565b5f82821c905092915050565b5f6117c15f19846008026117a6565b1980831691505092915050565b5f6117d983836117b2565b9150826002028217905092915050565b6117f282610f28565b67ffffffffffffffff81111561180b5761180a611206565b5b611815825461148c565b611820828285611760565b5f60209050601f831160018114611851575f841561183f578287015190505b61184985826117ce565b8655506118b0565b601f19841661185f86611655565b5f5b8281101561188657848901518255600182019150602085019450602081019050611861565b868310156118a3578489015161189f601f8916826117b2565b8355505b6001600288020188555050505b505050505050565b5f819050919050565b5f67ffffffffffffffff82169050919050565b5f6118ee6118e96118e4846118b8565b6113eb565b6118c1565b9050919050565b6118fe816118d4565b82525050565b5f6020820190506119175f8301846118f5565b9291505056fea26469706673582212209a607b408d7ac81de8de9d02b43574e48c4dbd9af236f993e841b1feae57753b64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x114 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xB6B55F25 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xB6B55F25 EQ PUSH2 0x2D0 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2EC JUMPI DUP1 PUSH4 0xE001FF52 EQ PUSH2 0x31C JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x338 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x354 JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x25A JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x264 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x282 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2A0 JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xE7 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1A2 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x1D2 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1EE JUMPI DUP1 PUSH4 0x61603D89 EQ PUSH2 0x20C JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x22A JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0x4554443 EQ PUSH2 0x118 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x154 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x184 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x120 PUSH2 0x372 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12D SWAP2 SWAP1 PUSH2 0xF0F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13E PUSH2 0x378 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14B SWAP2 SWAP1 PUSH2 0xF98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x169 SWAP2 SWAP1 PUSH2 0x104D JUMP JUMPDEST PUSH2 0x404 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17B SWAP2 SWAP1 PUSH2 0x10A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18C PUSH2 0x437 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x199 SWAP2 SWAP1 PUSH2 0xF0F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B7 SWAP2 SWAP1 PUSH2 0x10BE JUMP JUMPDEST PUSH2 0x43D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C9 SWAP2 SWAP1 PUSH2 0x10A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1EC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E7 SWAP2 SWAP1 PUSH2 0x110E JUMP JUMPDEST PUSH2 0x470 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F6 PUSH2 0x6E0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x203 SWAP2 SWAP1 PUSH2 0x1154 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x214 PUSH2 0x773 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x221 SWAP2 SWAP1 PUSH2 0xF0F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x244 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23F SWAP2 SWAP1 PUSH2 0x116D JUMP JUMPDEST PUSH2 0x779 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x251 SWAP2 SWAP1 PUSH2 0xF0F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x262 PUSH2 0x78E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x26C PUSH2 0x7A1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x279 SWAP2 SWAP1 PUSH2 0x11A7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x28A PUSH2 0x7D6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x297 SWAP2 SWAP1 PUSH2 0xF98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B5 SWAP2 SWAP1 PUSH2 0x104D JUMP JUMPDEST PUSH2 0x862 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C7 SWAP2 SWAP1 PUSH2 0x10A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2EA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E5 SWAP2 SWAP1 PUSH2 0x110E JUMP JUMPDEST PUSH2 0x895 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x306 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x301 SWAP2 SWAP1 PUSH2 0x11C0 JUMP JUMPDEST PUSH2 0xA76 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x313 SWAP2 SWAP1 PUSH2 0xF0F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x336 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x331 SWAP2 SWAP1 PUSH2 0x132A JUMP JUMPDEST PUSH2 0xAA9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x352 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x34D SWAP2 SWAP1 PUSH2 0x116D JUMP JUMPDEST PUSH2 0xCA3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x35C PUSH2 0xD27 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x369 SWAP2 SWAP1 PUSH2 0x1446 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH2 0x385 SWAP1 PUSH2 0x148C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3B1 SWAP1 PUSH2 0x148C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3FC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3D3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3FC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3DF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD PUSH32 0xA038794000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD PUSH32 0xA038794000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD TIMESTAMP GT DUP1 ISZERO PUSH2 0x48F JUMPI POP PUSH1 0x2 SLOAD PUSH1 0x1 SLOAD PUSH2 0x48C SWAP2 SWAP1 PUSH2 0x14E9 JUMP JUMPDEST TIMESTAMP LT JUMPDEST ISZERO PUSH2 0x4C6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x3C2C6E9D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD LT ISZERO PUSH2 0x53D JUMPI PUSH1 0x40 MLOAD PUSH32 0x7FA62F9D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x589 SWAP2 SWAP1 PUSH2 0x151C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x5 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x5A1 SWAP2 SWAP1 PUSH2 0x151C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x602 SWAP3 SWAP2 SWAP1 PUSH2 0x154F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x61E JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x642 SWAP2 SWAP1 PUSH2 0x15A0 JUMP JUMPDEST PUSH2 0x678 JUMPI PUSH1 0x40 MLOAD PUSH32 0x90B8EC1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x6D5 SWAP2 SWAP1 PUSH2 0xF0F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x74A JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x76E SWAP2 SWAP1 PUSH2 0x15F5 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0x796 PUSH2 0xD4A JUMP JUMPDEST PUSH2 0x79F PUSH0 PUSH2 0xDD1 JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x7AB PUSH2 0xEA2 JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH2 0x7E3 SWAP1 PUSH2 0x148C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x80F SWAP1 PUSH2 0x148C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x85A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x831 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x85A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x83D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD PUSH32 0xA038794000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD TIMESTAMP GT ISZERO PUSH2 0x8D1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x9883528E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x91D SWAP2 SWAP1 PUSH2 0x14E9 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x5 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x935 SWAP2 SWAP1 PUSH2 0x14E9 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x998 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1620 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9B4 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9D8 SWAP2 SWAP1 PUSH2 0x15A0 JUMP JUMPDEST PUSH2 0xA0E JUMPI PUSH1 0x40 MLOAD PUSH32 0x90B8EC1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xA6B SWAP2 SWAP1 PUSH2 0xF0F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD PUSH32 0xA038794000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0xAB2 PUSH2 0xEC9 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP PUSH0 DUP3 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xAFA JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH0 PUSH1 0x1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xB2D JUMPI POP PUSH0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0xB3B JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0xB72 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0xBBF JUMPI PUSH1 0x1 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0xBC8 DUP12 PUSH2 0xCA3 JUMP JUMPDEST DUP10 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP9 PUSH1 0x1 DUP2 SWAP1 SSTORE POP DUP8 PUSH1 0x2 DUP2 SWAP1 SSTORE POP DUP7 PUSH1 0x3 SWAP1 DUP2 PUSH2 0xC24 SWAP2 SWAP1 PUSH2 0x17E9 JUMP JUMPDEST POP DUP6 PUSH1 0x4 SWAP1 DUP2 PUSH2 0xC34 SWAP2 SWAP1 PUSH2 0x17E9 JUMP JUMPDEST POP PUSH0 PUSH1 0x5 DUP2 SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0xC96 JUMPI PUSH0 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0xC8D SWAP2 SWAP1 PUSH2 0x1904 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xCAB PUSH2 0xD4A JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD1B JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD12 SWAP2 SWAP1 PUSH2 0x11A7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD24 DUP2 PUSH2 0xDD1 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0xD52 PUSH2 0xEF0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xD70 PUSH2 0x7A1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xDCF JUMPI PUSH2 0xD93 PUSH2 0xEF0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDC6 SWAP2 SWAP1 PUSH2 0x11A7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0xDDA PUSH2 0xEA2 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP3 DUP3 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF09 DUP2 PUSH2 0xEF7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF22 PUSH0 DUP4 ADD DUP5 PUSH2 0xF00 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xF6A DUP3 PUSH2 0xF28 JUMP JUMPDEST PUSH2 0xF74 DUP2 DUP6 PUSH2 0xF32 JUMP JUMPDEST SWAP4 POP PUSH2 0xF84 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xF42 JUMP JUMPDEST PUSH2 0xF8D DUP2 PUSH2 0xF50 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xFB0 DUP2 DUP5 PUSH2 0xF60 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xFF2 DUP3 PUSH2 0xFC9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1002 DUP2 PUSH2 0xFE8 JUMP JUMPDEST DUP2 EQ PUSH2 0x100C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x101D DUP2 PUSH2 0xFF9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x102C DUP2 PUSH2 0xEF7 JUMP JUMPDEST DUP2 EQ PUSH2 0x1036 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1047 DUP2 PUSH2 0x1023 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1063 JUMPI PUSH2 0x1062 PUSH2 0xFC1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1070 DUP6 DUP3 DUP7 ADD PUSH2 0x100F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1081 DUP6 DUP3 DUP7 ADD PUSH2 0x1039 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x109F DUP2 PUSH2 0x108B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x10B8 PUSH0 DUP4 ADD DUP5 PUSH2 0x1096 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x10D5 JUMPI PUSH2 0x10D4 PUSH2 0xFC1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x10E2 DUP7 DUP3 DUP8 ADD PUSH2 0x100F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x10F3 DUP7 DUP3 DUP8 ADD PUSH2 0x100F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1104 DUP7 DUP3 DUP8 ADD PUSH2 0x1039 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1123 JUMPI PUSH2 0x1122 PUSH2 0xFC1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1130 DUP5 DUP3 DUP6 ADD PUSH2 0x1039 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x114E DUP2 PUSH2 0x1139 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1167 PUSH0 DUP4 ADD DUP5 PUSH2 0x1145 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1182 JUMPI PUSH2 0x1181 PUSH2 0xFC1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x118F DUP5 DUP3 DUP6 ADD PUSH2 0x100F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x11A1 DUP2 PUSH2 0xFE8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x11BA PUSH0 DUP4 ADD DUP5 PUSH2 0x1198 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x11D6 JUMPI PUSH2 0x11D5 PUSH2 0xFC1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x11E3 DUP6 DUP3 DUP7 ADD PUSH2 0x100F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x11F4 DUP6 DUP3 DUP7 ADD PUSH2 0x100F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x123C DUP3 PUSH2 0xF50 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x125B JUMPI PUSH2 0x125A PUSH2 0x1206 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x126D PUSH2 0xFB8 JUMP JUMPDEST SWAP1 POP PUSH2 0x1279 DUP3 DUP3 PUSH2 0x1233 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1298 JUMPI PUSH2 0x1297 PUSH2 0x1206 JUMP JUMPDEST JUMPDEST PUSH2 0x12A1 DUP3 PUSH2 0xF50 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x12CE PUSH2 0x12C9 DUP5 PUSH2 0x127E JUMP JUMPDEST PUSH2 0x1264 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x12EA JUMPI PUSH2 0x12E9 PUSH2 0x1202 JUMP JUMPDEST JUMPDEST PUSH2 0x12F5 DUP5 DUP3 DUP6 PUSH2 0x12AE JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1311 JUMPI PUSH2 0x1310 PUSH2 0x11FE JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1321 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x12BC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x1344 JUMPI PUSH2 0x1343 PUSH2 0xFC1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1351 DUP10 DUP3 DUP11 ADD PUSH2 0x100F JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH2 0x1362 DUP10 DUP3 DUP11 ADD PUSH2 0x100F JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 PUSH2 0x1373 DUP10 DUP3 DUP11 ADD PUSH2 0x1039 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 PUSH2 0x1384 DUP10 DUP3 DUP11 ADD PUSH2 0x1039 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x13A5 JUMPI PUSH2 0x13A4 PUSH2 0xFC5 JUMP JUMPDEST JUMPDEST PUSH2 0x13B1 DUP10 DUP3 DUP11 ADD PUSH2 0x12FD JUMP JUMPDEST SWAP3 POP POP PUSH1 0xA0 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x13D2 JUMPI PUSH2 0x13D1 PUSH2 0xFC5 JUMP JUMPDEST JUMPDEST PUSH2 0x13DE DUP10 DUP3 DUP11 ADD PUSH2 0x12FD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x140E PUSH2 0x1409 PUSH2 0x1404 DUP5 PUSH2 0xFC9 JUMP JUMPDEST PUSH2 0x13EB JUMP JUMPDEST PUSH2 0xFC9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x141F DUP3 PUSH2 0x13F4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1430 DUP3 PUSH2 0x1415 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1440 DUP2 PUSH2 0x1426 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1459 PUSH0 DUP4 ADD DUP5 PUSH2 0x1437 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x14A3 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x14B6 JUMPI PUSH2 0x14B5 PUSH2 0x145F JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x14F3 DUP3 PUSH2 0xEF7 JUMP JUMPDEST SWAP2 POP PUSH2 0x14FE DUP4 PUSH2 0xEF7 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1516 JUMPI PUSH2 0x1515 PUSH2 0x14BC JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1526 DUP3 PUSH2 0xEF7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1531 DUP4 PUSH2 0xEF7 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1549 JUMPI PUSH2 0x1548 PUSH2 0x14BC JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1562 PUSH0 DUP4 ADD DUP6 PUSH2 0x1198 JUMP JUMPDEST PUSH2 0x156F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xF00 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x157F DUP2 PUSH2 0x108B JUMP JUMPDEST DUP2 EQ PUSH2 0x1589 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x159A DUP2 PUSH2 0x1576 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15B5 JUMPI PUSH2 0x15B4 PUSH2 0xFC1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x15C2 DUP5 DUP3 DUP6 ADD PUSH2 0x158C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x15D4 DUP2 PUSH2 0x1139 JUMP JUMPDEST DUP2 EQ PUSH2 0x15DE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x15EF DUP2 PUSH2 0x15CB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x160A JUMPI PUSH2 0x1609 PUSH2 0xFC1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1617 DUP5 DUP3 DUP6 ADD PUSH2 0x15E1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1633 PUSH0 DUP4 ADD DUP7 PUSH2 0x1198 JUMP JUMPDEST PUSH2 0x1640 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1198 JUMP JUMPDEST PUSH2 0x164D PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xF00 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x16B1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x1676 JUMP JUMPDEST PUSH2 0x16BB DUP7 DUP4 PUSH2 0x1676 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x16ED PUSH2 0x16E8 PUSH2 0x16E3 DUP5 PUSH2 0xEF7 JUMP JUMPDEST PUSH2 0x13EB JUMP JUMPDEST PUSH2 0xEF7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1706 DUP4 PUSH2 0x16D3 JUMP JUMPDEST PUSH2 0x171A PUSH2 0x1712 DUP3 PUSH2 0x16F4 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x1682 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x172E PUSH2 0x1722 JUMP JUMPDEST PUSH2 0x1739 DUP2 DUP5 DUP5 PUSH2 0x16FD JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x175C JUMPI PUSH2 0x1751 PUSH0 DUP3 PUSH2 0x1726 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x173F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x17A1 JUMPI PUSH2 0x1772 DUP2 PUSH2 0x1655 JUMP JUMPDEST PUSH2 0x177B DUP5 PUSH2 0x1667 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x178A JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x179E PUSH2 0x1796 DUP6 PUSH2 0x1667 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x173E JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x17C1 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x17A6 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x17D9 DUP4 DUP4 PUSH2 0x17B2 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x17F2 DUP3 PUSH2 0xF28 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x180B JUMPI PUSH2 0x180A PUSH2 0x1206 JUMP JUMPDEST JUMPDEST PUSH2 0x1815 DUP3 SLOAD PUSH2 0x148C JUMP JUMPDEST PUSH2 0x1820 DUP3 DUP3 DUP6 PUSH2 0x1760 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1851 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x183F JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x1849 DUP6 DUP3 PUSH2 0x17CE JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x18B0 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x185F DUP7 PUSH2 0x1655 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1886 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1861 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x18A3 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x189F PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x17B2 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x18EE PUSH2 0x18E9 PUSH2 0x18E4 DUP5 PUSH2 0x18B8 JUMP JUMPDEST PUSH2 0x13EB JUMP JUMPDEST PUSH2 0x18C1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18FE DUP2 PUSH2 0x18D4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1917 PUSH0 DUP4 ADD DUP5 PUSH2 0x18F5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP11 PUSH1 0x7B BLOCKHASH DUP14 PUSH27 0xC81DE8DE9D02B43574E48C4DBD9AF236F993E841B1FEAE57753B64 PUSH20 0x6F6C634300081A00330000000000000000000000 ",
							"sourceMap": "264:3325:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;376:27;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;410:18;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3242:107;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;458:35;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3445:141;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2066:504;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2639:84;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;341:30;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;498:53;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3155:101:0;;;:::i;:::-;;2441:144;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;433:20:8;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2815:108;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1546:367;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3016:135;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1006:405;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3405:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;318:18:8;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;376:27;;;;:::o;410:18::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3242:107::-;3309:4;3329:14;;;;;;;;;;;;;;458:35;;;;:::o;3445:141::-;3546:4;3566:14;;;;;;;;;;;;;;2066:504;2144:15;;2126;:33;:92;;;;;2206:12;;2188:15;;:30;;;;:::i;:::-;2170:15;:48;2126:92;2114:155;;;2242:19;;;;;;;;;;;;;;2114:155;2303:6;2279:9;:21;2289:10;2279:21;;;;;;;;;;;;;;;;:30;2275:76;;;2327:16;;;;;;;;;;;;;;2275:76;2384:6;2359:9;:21;2369:10;2359:21;;;;;;;;;;;;;;;;:31;;;;;;;:::i;:::-;;;;;;;;2412:6;2397:11;;:21;;;;;;;:::i;:::-;;;;;;;;2432:5;;;;;;;;;;:14;;;2447:10;2459:6;2432:34;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2427:81;;2484:16;;;;;;;;;;;;;;2427:81;2545:10;2521:43;;2538:4;2521:43;;;2557:6;2521:43;;;;;;:::i;:::-;;;;;;;;2066:504;:::o;2639:84::-;2680:5;2701;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2694:23;;2639:84;:::o;341:30::-;;;;:::o;498:53::-;;;;;;;;;;;;;;;;;:::o;3155:101:0:-;2334:13;:11;:13::i;:::-;3219:30:::1;3246:1;3219:18;:30::i;:::-;3155:101::o:0;2441:144::-;2487:7;2506:24;2533:20;:18;:20::i;:::-;2506:47;;2570:1;:8;;;;;;;;;;;;2563:15;;;2441:144;:::o;433:20:8:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2815:108::-;2883:4;2903:14;;;;;;;;;;;;;;1546:367;1615:15;;1597;:33;1593:82;;;1648:19;;;;;;;;;;;;;;1593:82;1708:6;1683:9;:21;1693:10;1683:21;;;;;;;;;;;;;;;;:31;;;;;;;:::i;:::-;;;;;;;;1736:6;1721:11;;:21;;;;;;;:::i;:::-;;;;;;;;1756:5;;;;;;;;;;:18;;;1775:10;1795:4;1802:6;1756:53;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1751:100;;1827:16;;;;;;;;;;;;;;1751:100;1893:4;1864:43;;1873:10;1864:43;;;1900:6;1864:43;;;;;;:::i;:::-;;;;;;;;1546:367;:::o;3016:135::-;3105:7;3131:14;;;;;;;;;;;;;;1006:405;4158:30:1;4191:26;:24;:26::i;:::-;4158:59;;4279:19;4302:1;:15;;;;;;;;;;;;4301:16;4279:38;;4327:18;4348:1;:14;;;;;;;;;;;;4327:35;;4706:17;4741:1;4726:11;:16;;;:34;;;;;4746:14;4726:34;4706:54;;4770:17;4805:1;4790:11;:16;;;:50;;;;;4839:1;4818:4;4810:25;;;:30;4790:50;4770:70;;4856:12;4855:13;:30;;;;;4873:12;4872:13;4855:30;4851:91;;;4908:23;;;;;;;;;;;;;;4851:91;4968:1;4951;:14;;;:18;;;;;;;;;;;;;;;;;;4983:14;4979:67;;;5031:4;5013:1;:15;;;:22;;;;;;;;;;;;;;;;;;4979:67;1212:25:8::1;1230:6;1212:17;:25::i;:::-;1258:6;1244:5;::::0;:21:::1;;;;;;;;;;;;;;;;;;1290:16;1272:15;:34;;;;1328:13;1313:12;:28;;;;1355:5;1348:4;:12;;;;;;:::i;:::-;;1376:7;1367:6;:16;;;;;;:::i;:::-;;1404:1;1390:11;:15;;;;5070:14:1::0;5066:101;;;5118:5;5100:1;:15;;;:23;;;;;;;;;;;;;;;;;;5142:14;5154:1;5142:14;;;;;;:::i;:::-;;;;;;;;5066:101;4092:1081;;;;;1006:405:8;;;;;;:::o;3405:215:0:-;2334:13;:11;:13::i;:::-;3509:1:::1;3489:22;;:8;:22;;::::0;3485:91:::1;;3562:1;3534:31;;;;;;;;;;;:::i;:::-;;;;;;;;3485:91;3585:28;3604:8;3585:18;:28::i;:::-;3405:215:::0;:::o;318:18:8:-;;;;;;;;;;;;:::o;2658:162:0:-;2728:12;:10;:12::i;:::-;2717:23;;:7;:5;:7::i;:::-;:23;;;2713:101;;2790:12;:10;:12::i;:::-;2763:40;;;;;;;;;;;:::i;:::-;;;;;;;;2713:101;2658:162::o;3774:248::-;3847:24;3874:20;:18;:20::i;:::-;3847:47;;3904:16;3923:1;:8;;;;;;;;;;;;3904:27;;3952:8;3941:1;:8;;;:19;;;;;;;;;;;;;;;;;;4006:8;3975:40;;3996:8;3975:40;;;;;;;;;;;;3837:185;;3774:248;:::o;1192:159::-;1244:24;1313:22;1303:32;;1192:159;:::o;8737:170:1:-;8795:30;8870:21;8860:31;;8737:170;:::o;887:96:2:-;940:7;966:10;959:17;;887:96;:::o;7:77:9:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;442:99::-;494:6;528:5;522:12;512:22;;442:99;;;:::o;547:169::-;631:11;665:6;660:3;653:19;705:4;700:3;696:14;681:29;;547:169;;;;:::o;722:139::-;811:6;806:3;801;795:23;852:1;843:6;838:3;834:16;827:27;722:139;;;:::o;867:102::-;908:6;959:2;955:7;950:2;943:5;939:14;935:28;925:38;;867:102;;;:::o;975:377::-;1063:3;1091:39;1124:5;1091:39;:::i;:::-;1146:71;1210:6;1205:3;1146:71;:::i;:::-;1139:78;;1226:65;1284:6;1279:3;1272:4;1265:5;1261:16;1226:65;:::i;:::-;1316:29;1338:6;1316:29;:::i;:::-;1311:3;1307:39;1300:46;;1067:285;975:377;;;;:::o;1358:313::-;1471:4;1509:2;1498:9;1494:18;1486:26;;1558:9;1552:4;1548:20;1544:1;1533:9;1529:17;1522:47;1586:78;1659:4;1650:6;1586:78;:::i;:::-;1578:86;;1358:313;;;;:::o;1677:75::-;1710:6;1743:2;1737:9;1727:19;;1677:75;:::o;1758:117::-;1867:1;1864;1857:12;1881:117;1990:1;1987;1980:12;2004:126;2041:7;2081:42;2074:5;2070:54;2059:65;;2004:126;;;:::o;2136:96::-;2173:7;2202:24;2220:5;2202:24;:::i;:::-;2191:35;;2136:96;;;:::o;2238:122::-;2311:24;2329:5;2311:24;:::i;:::-;2304:5;2301:35;2291:63;;2350:1;2347;2340:12;2291:63;2238:122;:::o;2366:139::-;2412:5;2450:6;2437:20;2428:29;;2466:33;2493:5;2466:33;:::i;:::-;2366:139;;;;:::o;2511:122::-;2584:24;2602:5;2584:24;:::i;:::-;2577:5;2574:35;2564:63;;2623:1;2620;2613:12;2564:63;2511:122;:::o;2639:139::-;2685:5;2723:6;2710:20;2701:29;;2739:33;2766:5;2739:33;:::i;:::-;2639:139;;;;:::o;2784:474::-;2852:6;2860;2909:2;2897:9;2888:7;2884:23;2880:32;2877:119;;;2915:79;;:::i;:::-;2877:119;3035:1;3060:53;3105:7;3096:6;3085:9;3081:22;3060:53;:::i;:::-;3050:63;;3006:117;3162:2;3188:53;3233:7;3224:6;3213:9;3209:22;3188:53;:::i;:::-;3178:63;;3133:118;2784:474;;;;;:::o;3264:90::-;3298:7;3341:5;3334:13;3327:21;3316:32;;3264:90;;;:::o;3360:109::-;3441:21;3456:5;3441:21;:::i;:::-;3436:3;3429:34;3360:109;;:::o;3475:210::-;3562:4;3600:2;3589:9;3585:18;3577:26;;3613:65;3675:1;3664:9;3660:17;3651:6;3613:65;:::i;:::-;3475:210;;;;:::o;3691:619::-;3768:6;3776;3784;3833:2;3821:9;3812:7;3808:23;3804:32;3801:119;;;3839:79;;:::i;:::-;3801:119;3959:1;3984:53;4029:7;4020:6;4009:9;4005:22;3984:53;:::i;:::-;3974:63;;3930:117;4086:2;4112:53;4157:7;4148:6;4137:9;4133:22;4112:53;:::i;:::-;4102:63;;4057:118;4214:2;4240:53;4285:7;4276:6;4265:9;4261:22;4240:53;:::i;:::-;4230:63;;4185:118;3691:619;;;;;:::o;4316:329::-;4375:6;4424:2;4412:9;4403:7;4399:23;4395:32;4392:119;;;4430:79;;:::i;:::-;4392:119;4550:1;4575:53;4620:7;4611:6;4600:9;4596:22;4575:53;:::i;:::-;4565:63;;4521:117;4316:329;;;;:::o;4651:86::-;4686:7;4726:4;4719:5;4715:16;4704:27;;4651:86;;;:::o;4743:112::-;4826:22;4842:5;4826:22;:::i;:::-;4821:3;4814:35;4743:112;;:::o;4861:214::-;4950:4;4988:2;4977:9;4973:18;4965:26;;5001:67;5065:1;5054:9;5050:17;5041:6;5001:67;:::i;:::-;4861:214;;;;:::o;5081:329::-;5140:6;5189:2;5177:9;5168:7;5164:23;5160:32;5157:119;;;5195:79;;:::i;:::-;5157:119;5315:1;5340:53;5385:7;5376:6;5365:9;5361:22;5340:53;:::i;:::-;5330:63;;5286:117;5081:329;;;;:::o;5416:118::-;5503:24;5521:5;5503:24;:::i;:::-;5498:3;5491:37;5416:118;;:::o;5540:222::-;5633:4;5671:2;5660:9;5656:18;5648:26;;5684:71;5752:1;5741:9;5737:17;5728:6;5684:71;:::i;:::-;5540:222;;;;:::o;5768:474::-;5836:6;5844;5893:2;5881:9;5872:7;5868:23;5864:32;5861:119;;;5899:79;;:::i;:::-;5861:119;6019:1;6044:53;6089:7;6080:6;6069:9;6065:22;6044:53;:::i;:::-;6034:63;;5990:117;6146:2;6172:53;6217:7;6208:6;6197:9;6193:22;6172:53;:::i;:::-;6162:63;;6117:118;5768:474;;;;;:::o;6248:117::-;6357:1;6354;6347:12;6371:117;6480:1;6477;6470:12;6494:180;6542:77;6539:1;6532:88;6639:4;6636:1;6629:15;6663:4;6660:1;6653:15;6680:281;6763:27;6785:4;6763:27;:::i;:::-;6755:6;6751:40;6893:6;6881:10;6878:22;6857:18;6845:10;6842:34;6839:62;6836:88;;;6904:18;;:::i;:::-;6836:88;6944:10;6940:2;6933:22;6723:238;6680:281;;:::o;6967:129::-;7001:6;7028:20;;:::i;:::-;7018:30;;7057:33;7085:4;7077:6;7057:33;:::i;:::-;6967:129;;;:::o;7102:308::-;7164:4;7254:18;7246:6;7243:30;7240:56;;;7276:18;;:::i;:::-;7240:56;7314:29;7336:6;7314:29;:::i;:::-;7306:37;;7398:4;7392;7388:15;7380:23;;7102:308;;;:::o;7416:148::-;7514:6;7509:3;7504;7491:30;7555:1;7546:6;7541:3;7537:16;7530:27;7416:148;;;:::o;7570:425::-;7648:5;7673:66;7689:49;7731:6;7689:49;:::i;:::-;7673:66;:::i;:::-;7664:75;;7762:6;7755:5;7748:21;7800:4;7793:5;7789:16;7838:3;7829:6;7824:3;7820:16;7817:25;7814:112;;;7845:79;;:::i;:::-;7814:112;7935:54;7982:6;7977:3;7972;7935:54;:::i;:::-;7654:341;7570:425;;;;;:::o;8015:340::-;8071:5;8120:3;8113:4;8105:6;8101:17;8097:27;8087:122;;8128:79;;:::i;:::-;8087:122;8245:6;8232:20;8270:79;8345:3;8337:6;8330:4;8322:6;8318:17;8270:79;:::i;:::-;8261:88;;8077:278;8015:340;;;;:::o;8361:1417::-;8485:6;8493;8501;8509;8517;8525;8574:3;8562:9;8553:7;8549:23;8545:33;8542:120;;;8581:79;;:::i;:::-;8542:120;8701:1;8726:53;8771:7;8762:6;8751:9;8747:22;8726:53;:::i;:::-;8716:63;;8672:117;8828:2;8854:53;8899:7;8890:6;8879:9;8875:22;8854:53;:::i;:::-;8844:63;;8799:118;8956:2;8982:53;9027:7;9018:6;9007:9;9003:22;8982:53;:::i;:::-;8972:63;;8927:118;9084:2;9110:53;9155:7;9146:6;9135:9;9131:22;9110:53;:::i;:::-;9100:63;;9055:118;9240:3;9229:9;9225:19;9212:33;9272:18;9264:6;9261:30;9258:117;;;9294:79;;:::i;:::-;9258:117;9399:63;9454:7;9445:6;9434:9;9430:22;9399:63;:::i;:::-;9389:73;;9183:289;9539:3;9528:9;9524:19;9511:33;9571:18;9563:6;9560:30;9557:117;;;9593:79;;:::i;:::-;9557:117;9698:63;9753:7;9744:6;9733:9;9729:22;9698:63;:::i;:::-;9688:73;;9482:289;8361:1417;;;;;;;;:::o;9784:60::-;9812:3;9833:5;9826:12;;9784:60;;;:::o;9850:142::-;9900:9;9933:53;9951:34;9960:24;9978:5;9960:24;:::i;:::-;9951:34;:::i;:::-;9933:53;:::i;:::-;9920:66;;9850:142;;;:::o;9998:126::-;10048:9;10081:37;10112:5;10081:37;:::i;:::-;10068:50;;9998:126;;;:::o;10130:140::-;10194:9;10227:37;10258:5;10227:37;:::i;:::-;10214:50;;10130:140;;;:::o;10276:159::-;10377:51;10422:5;10377:51;:::i;:::-;10372:3;10365:64;10276:159;;:::o;10441:250::-;10548:4;10586:2;10575:9;10571:18;10563:26;;10599:85;10681:1;10670:9;10666:17;10657:6;10599:85;:::i;:::-;10441:250;;;;:::o;10697:180::-;10745:77;10742:1;10735:88;10842:4;10839:1;10832:15;10866:4;10863:1;10856:15;10883:320;10927:6;10964:1;10958:4;10954:12;10944:22;;11011:1;11005:4;11001:12;11032:18;11022:81;;11088:4;11080:6;11076:17;11066:27;;11022:81;11150:2;11142:6;11139:14;11119:18;11116:38;11113:84;;11169:18;;:::i;:::-;11113:84;10934:269;10883:320;;;:::o;11209:180::-;11257:77;11254:1;11247:88;11354:4;11351:1;11344:15;11378:4;11375:1;11368:15;11395:191;11435:3;11454:20;11472:1;11454:20;:::i;:::-;11449:25;;11488:20;11506:1;11488:20;:::i;:::-;11483:25;;11531:1;11528;11524:9;11517:16;;11552:3;11549:1;11546:10;11543:36;;;11559:18;;:::i;:::-;11543:36;11395:191;;;;:::o;11592:194::-;11632:4;11652:20;11670:1;11652:20;:::i;:::-;11647:25;;11686:20;11704:1;11686:20;:::i;:::-;11681:25;;11730:1;11727;11723:9;11715:17;;11754:1;11748:4;11745:11;11742:37;;;11759:18;;:::i;:::-;11742:37;11592:194;;;;:::o;11792:332::-;11913:4;11951:2;11940:9;11936:18;11928:26;;11964:71;12032:1;12021:9;12017:17;12008:6;11964:71;:::i;:::-;12045:72;12113:2;12102:9;12098:18;12089:6;12045:72;:::i;:::-;11792:332;;;;;:::o;12130:116::-;12200:21;12215:5;12200:21;:::i;:::-;12193:5;12190:32;12180:60;;12236:1;12233;12226:12;12180:60;12130:116;:::o;12252:137::-;12306:5;12337:6;12331:13;12322:22;;12353:30;12377:5;12353:30;:::i;:::-;12252:137;;;;:::o;12395:345::-;12462:6;12511:2;12499:9;12490:7;12486:23;12482:32;12479:119;;;12517:79;;:::i;:::-;12479:119;12637:1;12662:61;12715:7;12706:6;12695:9;12691:22;12662:61;:::i;:::-;12652:71;;12608:125;12395:345;;;;:::o;12746:118::-;12817:22;12833:5;12817:22;:::i;:::-;12810:5;12807:33;12797:61;;12854:1;12851;12844:12;12797:61;12746:118;:::o;12870:139::-;12925:5;12956:6;12950:13;12941:22;;12972:31;12997:5;12972:31;:::i;:::-;12870:139;;;;:::o;13015:347::-;13083:6;13132:2;13120:9;13111:7;13107:23;13103:32;13100:119;;;13138:79;;:::i;:::-;13100:119;13258:1;13283:62;13337:7;13328:6;13317:9;13313:22;13283:62;:::i;:::-;13273:72;;13229:126;13015:347;;;;:::o;13368:442::-;13517:4;13555:2;13544:9;13540:18;13532:26;;13568:71;13636:1;13625:9;13621:17;13612:6;13568:71;:::i;:::-;13649:72;13717:2;13706:9;13702:18;13693:6;13649:72;:::i;:::-;13731;13799:2;13788:9;13784:18;13775:6;13731:72;:::i;:::-;13368:442;;;;;;:::o;13816:141::-;13865:4;13888:3;13880:11;;13911:3;13908:1;13901:14;13945:4;13942:1;13932:18;13924:26;;13816:141;;;:::o;13963:93::-;14000:6;14047:2;14042;14035:5;14031:14;14027:23;14017:33;;13963:93;;;:::o;14062:107::-;14106:8;14156:5;14150:4;14146:16;14125:37;;14062:107;;;;:::o;14175:393::-;14244:6;14294:1;14282:10;14278:18;14317:97;14347:66;14336:9;14317:97;:::i;:::-;14435:39;14465:8;14454:9;14435:39;:::i;:::-;14423:51;;14507:4;14503:9;14496:5;14492:21;14483:30;;14556:4;14546:8;14542:19;14535:5;14532:30;14522:40;;14251:317;;14175:393;;;;;:::o;14574:142::-;14624:9;14657:53;14675:34;14684:24;14702:5;14684:24;:::i;:::-;14675:34;:::i;:::-;14657:53;:::i;:::-;14644:66;;14574:142;;;:::o;14722:75::-;14765:3;14786:5;14779:12;;14722:75;;;:::o;14803:269::-;14913:39;14944:7;14913:39;:::i;:::-;14974:91;15023:41;15047:16;15023:41;:::i;:::-;15015:6;15008:4;15002:11;14974:91;:::i;:::-;14968:4;14961:105;14879:193;14803:269;;;:::o;15078:73::-;15123:3;15078:73;:::o;15157:189::-;15234:32;;:::i;:::-;15275:65;15333:6;15325;15319:4;15275:65;:::i;:::-;15210:136;15157:189;;:::o;15352:186::-;15412:120;15429:3;15422:5;15419:14;15412:120;;;15483:39;15520:1;15513:5;15483:39;:::i;:::-;15456:1;15449:5;15445:13;15436:22;;15412:120;;;15352:186;;:::o;15544:543::-;15645:2;15640:3;15637:11;15634:446;;;15679:38;15711:5;15679:38;:::i;:::-;15763:29;15781:10;15763:29;:::i;:::-;15753:8;15749:44;15946:2;15934:10;15931:18;15928:49;;;15967:8;15952:23;;15928:49;15990:80;16046:22;16064:3;16046:22;:::i;:::-;16036:8;16032:37;16019:11;15990:80;:::i;:::-;15649:431;;15634:446;15544:543;;;:::o;16093:117::-;16147:8;16197:5;16191:4;16187:16;16166:37;;16093:117;;;;:::o;16216:169::-;16260:6;16293:51;16341:1;16337:6;16329:5;16326:1;16322:13;16293:51;:::i;:::-;16289:56;16374:4;16368;16364:15;16354:25;;16267:118;16216:169;;;;:::o;16390:295::-;16466:4;16612:29;16637:3;16631:4;16612:29;:::i;:::-;16604:37;;16674:3;16671:1;16667:11;16661:4;16658:21;16650:29;;16390:295;;;;:::o;16690:1395::-;16807:37;16840:3;16807:37;:::i;:::-;16909:18;16901:6;16898:30;16895:56;;;16931:18;;:::i;:::-;16895:56;16975:38;17007:4;17001:11;16975:38;:::i;:::-;17060:67;17120:6;17112;17106:4;17060:67;:::i;:::-;17154:1;17178:4;17165:17;;17210:2;17202:6;17199:14;17227:1;17222:618;;;;17884:1;17901:6;17898:77;;;17950:9;17945:3;17941:19;17935:26;17926:35;;17898:77;18001:67;18061:6;18054:5;18001:67;:::i;:::-;17995:4;17988:81;17857:222;17192:887;;17222:618;17274:4;17270:9;17262:6;17258:22;17308:37;17340:4;17308:37;:::i;:::-;17367:1;17381:208;17395:7;17392:1;17389:14;17381:208;;;17474:9;17469:3;17465:19;17459:26;17451:6;17444:42;17525:1;17517:6;17513:14;17503:24;;17572:2;17561:9;17557:18;17544:31;;17418:4;17415:1;17411:12;17406:17;;17381:208;;;17617:6;17608:7;17605:19;17602:179;;;17675:9;17670:3;17666:19;17660:26;17718:48;17760:4;17752:6;17748:17;17737:9;17718:48;:::i;:::-;17710:6;17703:64;17625:156;17602:179;17827:1;17823;17815:6;17811:14;17807:22;17801:4;17794:36;17229:611;;;17192:887;;16782:1303;;;16690:1395;;:::o;18091:85::-;18136:7;18165:5;18154:16;;18091:85;;;:::o;18182:101::-;18218:7;18258:18;18251:5;18247:30;18236:41;;18182:101;;;:::o;18289:156::-;18346:9;18379:60;18396:42;18405:32;18431:5;18405:32;:::i;:::-;18396:42;:::i;:::-;18379:60;:::i;:::-;18366:73;;18289:156;;;:::o;18451:145::-;18545:44;18583:5;18545:44;:::i;:::-;18540:3;18533:57;18451:145;;:::o;18602:236::-;18702:4;18740:2;18729:9;18725:18;18717:26;;18753:78;18828:1;18817:9;18813:17;18804:6;18753:78;:::i;:::-;18602:236;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1296600",
								"executionCost": "1347",
								"totalCost": "1297947"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "722",
								"balanceOf(address)": "2913",
								"decimals()": "infinite",
								"deposit(uint256)": "infinite",
								"depositDeadline()": "2514",
								"initialize(address,address,uint256,uint256,string,string)": "infinite",
								"lockDuration()": "2449",
								"name()": "infinite",
								"owner()": "2612",
								"renounceOwnership()": "infinite",
								"symbol()": "infinite",
								"token()": "infinite",
								"totalSupply()": "2515",
								"transfer(address,uint256)": "743",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite",
								"withdraw(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 264,
									"end": 3589,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 264,
									"end": 3589,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 264,
									"end": 3589,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 264,
									"end": 3589,
									"name": "CALLVALUE",
									"source": 8
								},
								{
									"begin": 264,
									"end": 3589,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 264,
									"end": 3589,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 264,
									"end": 3589,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 264,
									"end": 3589,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 264,
									"end": 3589,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 264,
									"end": 3589,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 264,
									"end": 3589,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 264,
									"end": 3589,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 264,
									"end": 3589,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 264,
									"end": 3589,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 264,
									"end": 3589,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 264,
									"end": 3589,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 264,
									"end": 3589,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 264,
									"end": 3589,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 264,
									"end": 3589,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 264,
									"end": 3589,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 264,
									"end": 3589,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209a607b408d7ac81de8de9d02b43574e48c4dbd9af236f993e841b1feae57753b64736f6c634300081a0033",
									".code": [
										{
											"begin": 264,
											"end": 3589,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 264,
											"end": 3589,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 264,
											"end": 3589,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 264,
											"end": 3589,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 264,
											"end": 3589,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 264,
											"end": 3589,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 264,
											"end": 3589,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 264,
											"end": 3589,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 264,
											"end": 3589,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 264,
											"end": 3589,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 264,
											"end": 3589,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 264,
											"end": 3589,
											"name": "tag",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 264,
											"end": 3589,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 264,
											"end": 3589,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 264,
											"end": 3589,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 264,
											"end": 3589,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 264,
											"end": 3589,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 264,
											"end": 3589,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 264,
											"end": 3589,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 264,
											"end": 3589,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 264,
											"end": 3589,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 264,
											"end": 3589,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 264,
											"end": 3589,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 264,
											"end": 3589,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 264,
											"end": 3589,
											"name": "PUSH",
											"source": 8,
											"value": "715018A6"
										},
										{
											"begin": 264,
											"end": 3589,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 264,
											"end": 3589,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 264,
											"end": 3589,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 264,
											"end": 3589,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 264,
											"end": 3589,
											"name": "PUSH",
											"source": 8,
											"value": "B6B55F25"
										},
										{
											"begin": 264,
											"end": 3589,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 264,
											"end": 3589,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 264,
											"end": 3589,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 264,
											"end": 3589,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 264,
											"end": 3589,
											"name": "PUSH",
											"source": 8,
											"value": "B6B55F25"
										},
										{
											"begin": 264,
											"end": 3589,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 264,
											"end": 3589,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 264,
											"end": 3589,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 264,
											"end": 3589,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 264,
											"end": 3589,
											"name": "PUSH",
											"source": 8,
											"value": "DD62ED3E"
										},
										{
											"begin": 264,
											"end": 3589,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 264,
											"end": 3589,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 264,
											"end": 3589,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 264,
											"end": 3589,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 264,
											"end": 3589,
											"name": "PUSH",
											"source": 8,
											"value": "E001FF52"
										},
										{
											"begin": 264,
											"end": 3589,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 264,
											"end": 3589,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 264,
											"end": 3589,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 264,
											"end": 3589,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 264,
											"end": 3589,
											"name": "PUSH",
											"source": 8,
											"value": "F2FDE38B"
										},
										{
											"begin": 264,
											"end": 3589,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 264,
											"end": 3589,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 264,
											"end": 3589,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 264,
											"end": 3589,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 264,
											"end": 3589,
											"name": "PUSH",
											"source": 8,
											"value": "FC0C546A"
										},
										{
											"begin": 264,
											"end": 3589,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 264,
											"end": 3589,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 264,
											"end": 3589,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 264,
											"end": 3589,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 264,
											"end": 3589,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 264,
											"end": 3589,
											"name": "tag",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 264,
											"end": 3589,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 264,
											"end": 3589,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 264,
											"end": 3589,
											"name": "PUSH",
											"source": 8,
											"value": "715018A6"
										},
										{
											"begin": 264,
											"end": 3589,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 264,
											"end": 3589,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 264,
											"end": 3589,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 264,
											"end": 3589,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 264,
											"end": 3589,
											"name": "PUSH",
											"source": 8,
											"value": "8DA5CB5B"
										},
										{
											"begin": 264,
											"end": 3589,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 264,
											"end": 3589,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 264,
											"end": 3589,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 264,
											"end": 3589,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 264,
											"end": 3589,
											"name": "PUSH",
											"source": 8,
											"value": "95D89B41"
										},
										{
											"begin": 264,
											"end": 3589,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 264,
											"end": 3589,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 264,
											"end": 3589,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 264,
											"end": 3589,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 264,
											"end": 3589,
											"name": "PUSH",
											"source": 8,
											"value": "A9059CBB"
										},
										{
											"begin": 264,
											"end": 3589,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 264,
											"end": 3589,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 264,
											"end": 3589,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 264,
											"end": 3589,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 264,
											"end": 3589,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 264,
											"end": 3589,
											"name": "tag",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 264,
											"end": 3589,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 264,
											"end": 3589,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 264,
											"end": 3589,
											"name": "PUSH",
											"source": 8,
											"value": "23B872DD"
										},
										{
											"begin": 264,
											"end": 3589,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 264,
											"end": 3589,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 264,
											"end": 3589,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 264,
											"end": 3589,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 264,
											"end": 3589,
											"name": "PUSH",
											"source": 8,
											"value": "23B872DD"
										},
										{
											"begin": 264,
											"end": 3589,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 264,
											"end": 3589,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 264,
											"end": 3589,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 264,
											"end": 3589,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 264,
											"end": 3589,
											"name": "PUSH",
											"source": 8,
											"value": "2E1A7D4D"
										},
										{
											"begin": 264,
											"end": 3589,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 264,
											"end": 3589,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 264,
											"end": 3589,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 264,
											"end": 3589,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 264,
											"end": 3589,
											"name": "PUSH",
											"source": 8,
											"value": "313CE567"
										},
										{
											"begin": 264,
											"end": 3589,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 264,
											"end": 3589,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 264,
											"end": 3589,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 264,
											"end": 3589,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 264,
											"end": 3589,
											"name": "PUSH",
											"source": 8,
											"value": "61603D89"
										},
										{
											"begin": 264,
											"end": 3589,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 264,
											"end": 3589,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 264,
											"end": 3589,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 264,
											"end": 3589,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 264,
											"end": 3589,
											"name": "PUSH",
											"source": 8,
											"value": "70A08231"
										},
										{
											"begin": 264,
											"end": 3589,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 264,
											"end": 3589,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 264,
											"end": 3589,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 264,
											"end": 3589,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 264,
											"end": 3589,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 264,
											"end": 3589,
											"name": "tag",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 264,
											"end": 3589,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 264,
											"end": 3589,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 264,
											"end": 3589,
											"name": "PUSH",
											"source": 8,
											"value": "4554443"
										},
										{
											"begin": 264,
											"end": 3589,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 264,
											"end": 3589,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 264,
											"end": 3589,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 264,
											"end": 3589,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 264,
											"end": 3589,
											"name": "PUSH",
											"source": 8,
											"value": "6FDDE03"
										},
										{
											"begin": 264,
											"end": 3589,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 264,
											"end": 3589,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 264,
											"end": 3589,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 264,
											"end": 3589,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 264,
											"end": 3589,
											"name": "PUSH",
											"source": 8,
											"value": "95EA7B3"
										},
										{
											"begin": 264,
											"end": 3589,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 264,
											"end": 3589,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 264,
											"end": 3589,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 264,
											"end": 3589,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 264,
											"end": 3589,
											"name": "PUSH",
											"source": 8,
											"value": "18160DDD"
										},
										{
											"begin": 264,
											"end": 3589,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 264,
											"end": 3589,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 264,
											"end": 3589,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 264,
											"end": 3589,
											"name": "tag",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 264,
											"end": 3589,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 264,
											"end": 3589,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 264,
											"end": 3589,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 264,
											"end": 3589,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 376,
											"end": 403,
											"name": "tag",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 376,
											"end": 403,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 376,
											"end": 403,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 376,
											"end": 403,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 376,
											"end": 403,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 376,
											"end": 403,
											"name": "tag",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 376,
											"end": 403,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 376,
											"end": 403,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 376,
											"end": 403,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 376,
											"end": 403,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 376,
											"end": 403,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 376,
											"end": 403,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 376,
											"end": 403,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 376,
											"end": 403,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 376,
											"end": 403,
											"name": "tag",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 376,
											"end": 403,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 376,
											"end": 403,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 376,
											"end": 403,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 376,
											"end": 403,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 376,
											"end": 403,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 376,
											"end": 403,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 376,
											"end": 403,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 376,
											"end": 403,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 410,
											"end": 428,
											"name": "tag",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 410,
											"end": 428,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 410,
											"end": 428,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 410,
											"end": 428,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 410,
											"end": 428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 410,
											"end": 428,
											"name": "tag",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 410,
											"end": 428,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 410,
											"end": 428,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 410,
											"end": 428,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 410,
											"end": 428,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 410,
											"end": 428,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 410,
											"end": 428,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 410,
											"end": 428,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 410,
											"end": 428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 410,
											"end": 428,
											"name": "tag",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 410,
											"end": 428,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 410,
											"end": 428,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 410,
											"end": 428,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 410,
											"end": 428,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 410,
											"end": 428,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 410,
											"end": 428,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 410,
											"end": 428,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 410,
											"end": 428,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 3242,
											"end": 3349,
											"name": "tag",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 3242,
											"end": 3349,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3242,
											"end": 3349,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 3242,
											"end": 3349,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3242,
											"end": 3349,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3242,
											"end": 3349,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 3242,
											"end": 3349,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3242,
											"end": 3349,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3242,
											"end": 3349,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3242,
											"end": 3349,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3242,
											"end": 3349,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 3242,
											"end": 3349,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3242,
											"end": 3349,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3242,
											"end": 3349,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 3242,
											"end": 3349,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3242,
											"end": 3349,
											"name": "tag",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 3242,
											"end": 3349,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3242,
											"end": 3349,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 3242,
											"end": 3349,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3242,
											"end": 3349,
											"name": "tag",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 3242,
											"end": 3349,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3242,
											"end": 3349,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3242,
											"end": 3349,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3242,
											"end": 3349,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 3242,
											"end": 3349,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3242,
											"end": 3349,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3242,
											"end": 3349,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 3242,
											"end": 3349,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3242,
											"end": 3349,
											"name": "tag",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 3242,
											"end": 3349,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3242,
											"end": 3349,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3242,
											"end": 3349,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3242,
											"end": 3349,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3242,
											"end": 3349,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3242,
											"end": 3349,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3242,
											"end": 3349,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3242,
											"end": 3349,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 458,
											"end": 493,
											"name": "tag",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 458,
											"end": 493,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 458,
											"end": 493,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 458,
											"end": 493,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "39"
										},
										{
											"begin": 458,
											"end": 493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 458,
											"end": 493,
											"name": "tag",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 458,
											"end": 493,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 458,
											"end": 493,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 458,
											"end": 493,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 458,
											"end": 493,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 458,
											"end": 493,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 458,
											"end": 493,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 458,
											"end": 493,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 458,
											"end": 493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 458,
											"end": 493,
											"name": "tag",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 458,
											"end": 493,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 458,
											"end": 493,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 458,
											"end": 493,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 458,
											"end": 493,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 458,
											"end": 493,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 458,
											"end": 493,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 458,
											"end": 493,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 458,
											"end": 493,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 3445,
											"end": 3586,
											"name": "tag",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 3445,
											"end": 3586,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3445,
											"end": 3586,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 3445,
											"end": 3586,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3445,
											"end": 3586,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3445,
											"end": 3586,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 3445,
											"end": 3586,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3445,
											"end": 3586,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3445,
											"end": 3586,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3445,
											"end": 3586,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3445,
											"end": 3586,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "42"
										},
										{
											"begin": 3445,
											"end": 3586,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3445,
											"end": 3586,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3445,
											"end": 3586,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "43"
										},
										{
											"begin": 3445,
											"end": 3586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3445,
											"end": 3586,
											"name": "tag",
											"source": 8,
											"value": "42"
										},
										{
											"begin": 3445,
											"end": 3586,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3445,
											"end": 3586,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 3445,
											"end": 3586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3445,
											"end": 3586,
											"name": "tag",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 3445,
											"end": 3586,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3445,
											"end": 3586,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3445,
											"end": 3586,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3445,
											"end": 3586,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 3445,
											"end": 3586,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3445,
											"end": 3586,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3445,
											"end": 3586,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 3445,
											"end": 3586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3445,
											"end": 3586,
											"name": "tag",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 3445,
											"end": 3586,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3445,
											"end": 3586,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3445,
											"end": 3586,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3445,
											"end": 3586,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3445,
											"end": 3586,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3445,
											"end": 3586,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3445,
											"end": 3586,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3445,
											"end": 3586,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 2066,
											"end": 2570,
											"name": "tag",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 2066,
											"end": 2570,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2066,
											"end": 2570,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "46"
										},
										{
											"begin": 2066,
											"end": 2570,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2066,
											"end": 2570,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2066,
											"end": 2570,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 2066,
											"end": 2570,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2066,
											"end": 2570,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2066,
											"end": 2570,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2066,
											"end": 2570,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2066,
											"end": 2570,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "47"
										},
										{
											"begin": 2066,
											"end": 2570,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2066,
											"end": 2570,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2066,
											"end": 2570,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "48"
										},
										{
											"begin": 2066,
											"end": 2570,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2066,
											"end": 2570,
											"name": "tag",
											"source": 8,
											"value": "47"
										},
										{
											"begin": 2066,
											"end": 2570,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2066,
											"end": 2570,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "49"
										},
										{
											"begin": 2066,
											"end": 2570,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2066,
											"end": 2570,
											"name": "tag",
											"source": 8,
											"value": "46"
										},
										{
											"begin": 2066,
											"end": 2570,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2066,
											"end": 2570,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 2639,
											"end": 2723,
											"name": "tag",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 2639,
											"end": 2723,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2639,
											"end": 2723,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "50"
										},
										{
											"begin": 2639,
											"end": 2723,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "51"
										},
										{
											"begin": 2639,
											"end": 2723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2639,
											"end": 2723,
											"name": "tag",
											"source": 8,
											"value": "50"
										},
										{
											"begin": 2639,
											"end": 2723,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2639,
											"end": 2723,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2639,
											"end": 2723,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2639,
											"end": 2723,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "52"
										},
										{
											"begin": 2639,
											"end": 2723,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2639,
											"end": 2723,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2639,
											"end": 2723,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "53"
										},
										{
											"begin": 2639,
											"end": 2723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2639,
											"end": 2723,
											"name": "tag",
											"source": 8,
											"value": "52"
										},
										{
											"begin": 2639,
											"end": 2723,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2639,
											"end": 2723,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2639,
											"end": 2723,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2639,
											"end": 2723,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2639,
											"end": 2723,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2639,
											"end": 2723,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2639,
											"end": 2723,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2639,
											"end": 2723,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 341,
											"end": 371,
											"name": "tag",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 341,
											"end": 371,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 341,
											"end": 371,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "54"
										},
										{
											"begin": 341,
											"end": 371,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "55"
										},
										{
											"begin": 341,
											"end": 371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 341,
											"end": 371,
											"name": "tag",
											"source": 8,
											"value": "54"
										},
										{
											"begin": 341,
											"end": 371,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 341,
											"end": 371,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 341,
											"end": 371,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 341,
											"end": 371,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 341,
											"end": 371,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 341,
											"end": 371,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 341,
											"end": 371,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 341,
											"end": 371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 341,
											"end": 371,
											"name": "tag",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 341,
											"end": 371,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 341,
											"end": 371,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 341,
											"end": 371,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 341,
											"end": 371,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 341,
											"end": 371,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 341,
											"end": 371,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 341,
											"end": 371,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 341,
											"end": 371,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 498,
											"end": 551,
											"name": "tag",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 498,
											"end": 551,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 498,
											"end": 551,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "57"
										},
										{
											"begin": 498,
											"end": 551,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 498,
											"end": 551,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 498,
											"end": 551,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 498,
											"end": 551,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 498,
											"end": 551,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 498,
											"end": 551,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 498,
											"end": 551,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 498,
											"end": 551,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "58"
										},
										{
											"begin": 498,
											"end": 551,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 498,
											"end": 551,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 498,
											"end": 551,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "59"
										},
										{
											"begin": 498,
											"end": 551,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 498,
											"end": 551,
											"name": "tag",
											"source": 8,
											"value": "58"
										},
										{
											"begin": 498,
											"end": 551,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 498,
											"end": 551,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 498,
											"end": 551,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 498,
											"end": 551,
											"name": "tag",
											"source": 8,
											"value": "57"
										},
										{
											"begin": 498,
											"end": 551,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 498,
											"end": 551,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 498,
											"end": 551,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 498,
											"end": 551,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 498,
											"end": 551,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 498,
											"end": 551,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 498,
											"end": 551,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 498,
											"end": 551,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 498,
											"end": 551,
											"name": "tag",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 498,
											"end": 551,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 498,
											"end": 551,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 498,
											"end": 551,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 498,
											"end": 551,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 498,
											"end": 551,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 498,
											"end": 551,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 498,
											"end": 551,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 498,
											"end": 551,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 3155,
											"end": 3256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2441,
											"end": 2585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2441,
											"end": 2585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 433,
											"end": 453,
											"name": "tag",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 433,
											"end": 453,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 433,
											"end": 453,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "68"
										},
										{
											"begin": 433,
											"end": 453,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "69"
										},
										{
											"begin": 433,
											"end": 453,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 433,
											"end": 453,
											"name": "tag",
											"source": 8,
											"value": "68"
										},
										{
											"begin": 433,
											"end": 453,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 433,
											"end": 453,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 433,
											"end": 453,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 433,
											"end": 453,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "70"
										},
										{
											"begin": 433,
											"end": 453,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 433,
											"end": 453,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 433,
											"end": 453,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 433,
											"end": 453,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 433,
											"end": 453,
											"name": "tag",
											"source": 8,
											"value": "70"
										},
										{
											"begin": 433,
											"end": 453,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 433,
											"end": 453,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 433,
											"end": 453,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 433,
											"end": 453,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 433,
											"end": 453,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 433,
											"end": 453,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 433,
											"end": 453,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 433,
											"end": 453,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 2815,
											"end": 2923,
											"name": "tag",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 2815,
											"end": 2923,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2815,
											"end": 2923,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "71"
										},
										{
											"begin": 2815,
											"end": 2923,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2815,
											"end": 2923,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2815,
											"end": 2923,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 2815,
											"end": 2923,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2815,
											"end": 2923,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2815,
											"end": 2923,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2815,
											"end": 2923,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2815,
											"end": 2923,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "72"
										},
										{
											"begin": 2815,
											"end": 2923,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2815,
											"end": 2923,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2815,
											"end": 2923,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 2815,
											"end": 2923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2815,
											"end": 2923,
											"name": "tag",
											"source": 8,
											"value": "72"
										},
										{
											"begin": 2815,
											"end": 2923,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2815,
											"end": 2923,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "73"
										},
										{
											"begin": 2815,
											"end": 2923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2815,
											"end": 2923,
											"name": "tag",
											"source": 8,
											"value": "71"
										},
										{
											"begin": 2815,
											"end": 2923,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2815,
											"end": 2923,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2815,
											"end": 2923,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2815,
											"end": 2923,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "74"
										},
										{
											"begin": 2815,
											"end": 2923,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2815,
											"end": 2923,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2815,
											"end": 2923,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 2815,
											"end": 2923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2815,
											"end": 2923,
											"name": "tag",
											"source": 8,
											"value": "74"
										},
										{
											"begin": 2815,
											"end": 2923,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2815,
											"end": 2923,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2815,
											"end": 2923,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2815,
											"end": 2923,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2815,
											"end": 2923,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2815,
											"end": 2923,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2815,
											"end": 2923,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2815,
											"end": 2923,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 1546,
											"end": 1913,
											"name": "tag",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 1546,
											"end": 1913,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1546,
											"end": 1913,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "75"
										},
										{
											"begin": 1546,
											"end": 1913,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1546,
											"end": 1913,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1546,
											"end": 1913,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 1546,
											"end": 1913,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1546,
											"end": 1913,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1546,
											"end": 1913,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1546,
											"end": 1913,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1546,
											"end": 1913,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "76"
										},
										{
											"begin": 1546,
											"end": 1913,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1546,
											"end": 1913,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1546,
											"end": 1913,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "48"
										},
										{
											"begin": 1546,
											"end": 1913,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1546,
											"end": 1913,
											"name": "tag",
											"source": 8,
											"value": "76"
										},
										{
											"begin": 1546,
											"end": 1913,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1546,
											"end": 1913,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "77"
										},
										{
											"begin": 1546,
											"end": 1913,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1546,
											"end": 1913,
											"name": "tag",
											"source": 8,
											"value": "75"
										},
										{
											"begin": 1546,
											"end": 1913,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1546,
											"end": 1913,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 3016,
											"end": 3151,
											"name": "tag",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 3016,
											"end": 3151,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3016,
											"end": 3151,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "78"
										},
										{
											"begin": 3016,
											"end": 3151,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3016,
											"end": 3151,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3016,
											"end": 3151,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 3016,
											"end": 3151,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3016,
											"end": 3151,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3016,
											"end": 3151,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3016,
											"end": 3151,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3016,
											"end": 3151,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 3016,
											"end": 3151,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3016,
											"end": 3151,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3016,
											"end": 3151,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 3016,
											"end": 3151,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3016,
											"end": 3151,
											"name": "tag",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 3016,
											"end": 3151,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3016,
											"end": 3151,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "81"
										},
										{
											"begin": 3016,
											"end": 3151,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3016,
											"end": 3151,
											"name": "tag",
											"source": 8,
											"value": "78"
										},
										{
											"begin": 3016,
											"end": 3151,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3016,
											"end": 3151,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3016,
											"end": 3151,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3016,
											"end": 3151,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "82"
										},
										{
											"begin": 3016,
											"end": 3151,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3016,
											"end": 3151,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3016,
											"end": 3151,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 3016,
											"end": 3151,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3016,
											"end": 3151,
											"name": "tag",
											"source": 8,
											"value": "82"
										},
										{
											"begin": 3016,
											"end": 3151,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3016,
											"end": 3151,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3016,
											"end": 3151,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3016,
											"end": 3151,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3016,
											"end": 3151,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3016,
											"end": 3151,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3016,
											"end": 3151,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3016,
											"end": 3151,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 1006,
											"end": 1411,
											"name": "tag",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 1006,
											"end": 1411,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1006,
											"end": 1411,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 1006,
											"end": 1411,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1006,
											"end": 1411,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1006,
											"end": 1411,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 1006,
											"end": 1411,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1006,
											"end": 1411,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1006,
											"end": 1411,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1006,
											"end": 1411,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1006,
											"end": 1411,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 1006,
											"end": 1411,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1006,
											"end": 1411,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1006,
											"end": 1411,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "85"
										},
										{
											"begin": 1006,
											"end": 1411,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1006,
											"end": 1411,
											"name": "tag",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 1006,
											"end": 1411,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1006,
											"end": 1411,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "86"
										},
										{
											"begin": 1006,
											"end": 1411,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1006,
											"end": 1411,
											"name": "tag",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 1006,
											"end": 1411,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1006,
											"end": 1411,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 3405,
											"end": 3620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 3405,
											"end": 3620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 318,
											"end": 336,
											"name": "tag",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 318,
											"end": 336,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 318,
											"end": 336,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "90"
										},
										{
											"begin": 318,
											"end": 336,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 318,
											"end": 336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 318,
											"end": 336,
											"name": "tag",
											"source": 8,
											"value": "90"
										},
										{
											"begin": 318,
											"end": 336,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 318,
											"end": 336,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 318,
											"end": 336,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 318,
											"end": 336,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "92"
										},
										{
											"begin": 318,
											"end": 336,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 318,
											"end": 336,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 318,
											"end": 336,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "93"
										},
										{
											"begin": 318,
											"end": 336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 318,
											"end": 336,
											"name": "tag",
											"source": 8,
											"value": "92"
										},
										{
											"begin": 318,
											"end": 336,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 318,
											"end": 336,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 318,
											"end": 336,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 318,
											"end": 336,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 318,
											"end": 336,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 318,
											"end": 336,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 318,
											"end": 336,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 318,
											"end": 336,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 376,
											"end": 403,
											"name": "tag",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 376,
											"end": 403,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 376,
											"end": 403,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 376,
											"end": 403,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 376,
											"end": 403,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 376,
											"end": 403,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 410,
											"end": 428,
											"name": "tag",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 410,
											"end": 428,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 410,
											"end": 428,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 410,
											"end": 428,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 410,
											"end": 428,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 410,
											"end": 428,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "94"
										},
										{
											"begin": 410,
											"end": 428,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 410,
											"end": 428,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "95"
										},
										{
											"begin": 410,
											"end": 428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 410,
											"end": 428,
											"name": "tag",
											"source": 8,
											"value": "94"
										},
										{
											"begin": 410,
											"end": 428,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 410,
											"end": 428,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 410,
											"end": 428,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 410,
											"end": 428,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 410,
											"end": 428,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 410,
											"end": 428,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 410,
											"end": 428,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 410,
											"end": 428,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 410,
											"end": 428,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 410,
											"end": 428,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 410,
											"end": 428,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 410,
											"end": 428,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 410,
											"end": 428,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 410,
											"end": 428,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 410,
											"end": 428,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 410,
											"end": 428,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 410,
											"end": 428,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 410,
											"end": 428,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 410,
											"end": 428,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 410,
											"end": 428,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 410,
											"end": 428,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 410,
											"end": 428,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 410,
											"end": 428,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 410,
											"end": 428,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 410,
											"end": 428,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 410,
											"end": 428,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 410,
											"end": 428,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 410,
											"end": 428,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 410,
											"end": 428,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 410,
											"end": 428,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 410,
											"end": 428,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "96"
										},
										{
											"begin": 410,
											"end": 428,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 410,
											"end": 428,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "95"
										},
										{
											"begin": 410,
											"end": 428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 410,
											"end": 428,
											"name": "tag",
											"source": 8,
											"value": "96"
										},
										{
											"begin": 410,
											"end": 428,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 410,
											"end": 428,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 410,
											"end": 428,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 410,
											"end": 428,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 410,
											"end": 428,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 410,
											"end": 428,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 410,
											"end": 428,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 410,
											"end": 428,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 410,
											"end": 428,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "98"
										},
										{
											"begin": 410,
											"end": 428,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 410,
											"end": 428,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 410,
											"end": 428,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 410,
											"end": 428,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 410,
											"end": 428,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 410,
											"end": 428,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 410,
											"end": 428,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 410,
											"end": 428,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 410,
											"end": 428,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 410,
											"end": 428,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 410,
											"end": 428,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 410,
											"end": 428,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 410,
											"end": 428,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 410,
											"end": 428,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 410,
											"end": 428,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 410,
											"end": 428,
											"name": "tag",
											"source": 8,
											"value": "98"
										},
										{
											"begin": 410,
											"end": 428,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 410,
											"end": 428,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 410,
											"end": 428,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 410,
											"end": 428,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 410,
											"end": 428,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 410,
											"end": 428,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 428,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 410,
											"end": 428,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 410,
											"end": 428,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 428,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 410,
											"end": 428,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 410,
											"end": 428,
											"name": "tag",
											"source": 8,
											"value": "99"
										},
										{
											"begin": 410,
											"end": 428,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 410,
											"end": 428,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 410,
											"end": 428,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 410,
											"end": 428,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 410,
											"end": 428,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 410,
											"end": 428,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 410,
											"end": 428,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 410,
											"end": 428,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 410,
											"end": 428,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 410,
											"end": 428,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 410,
											"end": 428,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 410,
											"end": 428,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 410,
											"end": 428,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 410,
											"end": 428,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 410,
											"end": 428,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "99"
										},
										{
											"begin": 410,
											"end": 428,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 410,
											"end": 428,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 410,
											"end": 428,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 410,
											"end": 428,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 410,
											"end": 428,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 410,
											"end": 428,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 410,
											"end": 428,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 410,
											"end": 428,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 410,
											"end": 428,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 410,
											"end": 428,
											"name": "tag",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 410,
											"end": 428,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 410,
											"end": 428,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 410,
											"end": 428,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 410,
											"end": 428,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 410,
											"end": 428,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 410,
											"end": 428,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 410,
											"end": 428,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 410,
											"end": 428,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3242,
											"end": 3349,
											"name": "tag",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 3242,
											"end": 3349,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3309,
											"end": 3313,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3329,
											"end": 3343,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3329,
											"end": 3343,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3329,
											"end": 3343,
											"name": "PUSH",
											"source": 8,
											"value": "A038794000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3329,
											"end": 3343,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3329,
											"end": 3343,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3329,
											"end": 3343,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3329,
											"end": 3343,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3329,
											"end": 3343,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3329,
											"end": 3343,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3329,
											"end": 3343,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3329,
											"end": 3343,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3329,
											"end": 3343,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3329,
											"end": 3343,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3329,
											"end": 3343,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 458,
											"end": 493,
											"name": "tag",
											"source": 8,
											"value": "39"
										},
										{
											"begin": 458,
											"end": 493,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 458,
											"end": 493,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 458,
											"end": 493,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 458,
											"end": 493,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 458,
											"end": 493,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3445,
											"end": 3586,
											"name": "tag",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 3445,
											"end": 3586,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3546,
											"end": 3550,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3566,
											"end": 3580,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3566,
											"end": 3580,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3566,
											"end": 3580,
											"name": "PUSH",
											"source": 8,
											"value": "A038794000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3566,
											"end": 3580,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3566,
											"end": 3580,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3566,
											"end": 3580,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3566,
											"end": 3580,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3566,
											"end": 3580,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3566,
											"end": 3580,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3566,
											"end": 3580,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3566,
											"end": 3580,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3566,
											"end": 3580,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3566,
											"end": 3580,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3566,
											"end": 3580,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2066,
											"end": 2570,
											"name": "tag",
											"source": 8,
											"value": "49"
										},
										{
											"begin": 2066,
											"end": 2570,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2144,
											"end": 2159,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2144,
											"end": 2159,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2126,
											"end": 2141,
											"name": "TIMESTAMP",
											"source": 8
										},
										{
											"begin": 2126,
											"end": 2159,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 2126,
											"end": 2218,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2126,
											"end": 2218,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2126,
											"end": 2218,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "103"
										},
										{
											"begin": 2126,
											"end": 2218,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2126,
											"end": 2218,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2206,
											"end": 2218,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 2206,
											"end": 2218,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2188,
											"end": 2203,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2188,
											"end": 2203,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2188,
											"end": 2218,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "104"
										},
										{
											"begin": 2188,
											"end": 2218,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2188,
											"end": 2218,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2188,
											"end": 2218,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "105"
										},
										{
											"begin": 2188,
											"end": 2218,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2188,
											"end": 2218,
											"name": "tag",
											"source": 8,
											"value": "104"
										},
										{
											"begin": 2188,
											"end": 2218,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2170,
											"end": 2185,
											"name": "TIMESTAMP",
											"source": 8
										},
										{
											"begin": 2170,
											"end": 2218,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 2126,
											"end": 2218,
											"name": "tag",
											"source": 8,
											"value": "103"
										},
										{
											"begin": 2126,
											"end": 2218,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2114,
											"end": 2269,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2114,
											"end": 2269,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "106"
										},
										{
											"begin": 2114,
											"end": 2269,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2242,
											"end": 2261,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2242,
											"end": 2261,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2242,
											"end": 2261,
											"name": "PUSH",
											"source": 8,
											"value": "3C2C6E9D00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2242,
											"end": 2261,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2242,
											"end": 2261,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2242,
											"end": 2261,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2242,
											"end": 2261,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2242,
											"end": 2261,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2242,
											"end": 2261,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2242,
											"end": 2261,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2242,
											"end": 2261,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2242,
											"end": 2261,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2242,
											"end": 2261,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2242,
											"end": 2261,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2114,
											"end": 2269,
											"name": "tag",
											"source": 8,
											"value": "106"
										},
										{
											"begin": 2114,
											"end": 2269,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2303,
											"end": 2309,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2279,
											"end": 2288,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 2279,
											"end": 2300,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2289,
											"end": 2299,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 2279,
											"end": 2300,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2279,
											"end": 2300,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2279,
											"end": 2300,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2279,
											"end": 2300,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2279,
											"end": 2300,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2279,
											"end": 2300,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2279,
											"end": 2300,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2279,
											"end": 2300,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2279,
											"end": 2300,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2279,
											"end": 2300,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2279,
											"end": 2300,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2279,
											"end": 2300,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2279,
											"end": 2300,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2279,
											"end": 2300,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2279,
											"end": 2300,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2279,
											"end": 2300,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2279,
											"end": 2309,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 2275,
											"end": 2351,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2275,
											"end": 2351,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "107"
										},
										{
											"begin": 2275,
											"end": 2351,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2327,
											"end": 2343,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2327,
											"end": 2343,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2327,
											"end": 2343,
											"name": "PUSH",
											"source": 8,
											"value": "7FA62F9D00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2327,
											"end": 2343,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2327,
											"end": 2343,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2327,
											"end": 2343,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2327,
											"end": 2343,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2327,
											"end": 2343,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2327,
											"end": 2343,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2327,
											"end": 2343,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2327,
											"end": 2343,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2327,
											"end": 2343,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2327,
											"end": 2343,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2327,
											"end": 2343,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2275,
											"end": 2351,
											"name": "tag",
											"source": 8,
											"value": "107"
										},
										{
											"begin": 2275,
											"end": 2351,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2384,
											"end": 2390,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2359,
											"end": 2368,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 2359,
											"end": 2380,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2369,
											"end": 2379,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 2359,
											"end": 2380,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2359,
											"end": 2380,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2359,
											"end": 2380,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2359,
											"end": 2380,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2359,
											"end": 2380,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2359,
											"end": 2380,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2359,
											"end": 2380,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2359,
											"end": 2380,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2359,
											"end": 2380,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2359,
											"end": 2380,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2359,
											"end": 2380,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2359,
											"end": 2380,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2359,
											"end": 2380,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2359,
											"end": 2380,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2359,
											"end": 2380,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2359,
											"end": 2380,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2359,
											"end": 2390,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2359,
											"end": 2390,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2359,
											"end": 2390,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2359,
											"end": 2390,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "108"
										},
										{
											"begin": 2359,
											"end": 2390,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2359,
											"end": 2390,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2359,
											"end": 2390,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "109"
										},
										{
											"begin": 2359,
											"end": 2390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2359,
											"end": 2390,
											"name": "tag",
											"source": 8,
											"value": "108"
										},
										{
											"begin": 2359,
											"end": 2390,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2359,
											"end": 2390,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2359,
											"end": 2390,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2359,
											"end": 2390,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2359,
											"end": 2390,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2359,
											"end": 2390,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2359,
											"end": 2390,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 2359,
											"end": 2390,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2412,
											"end": 2418,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2397,
											"end": 2408,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 2397,
											"end": 2408,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2397,
											"end": 2418,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2397,
											"end": 2418,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2397,
											"end": 2418,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2397,
											"end": 2418,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "110"
										},
										{
											"begin": 2397,
											"end": 2418,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2397,
											"end": 2418,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2397,
											"end": 2418,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "109"
										},
										{
											"begin": 2397,
											"end": 2418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2397,
											"end": 2418,
											"name": "tag",
											"source": 8,
											"value": "110"
										},
										{
											"begin": 2397,
											"end": 2418,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2397,
											"end": 2418,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2397,
											"end": 2418,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2397,
											"end": 2418,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2397,
											"end": 2418,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2397,
											"end": 2418,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2397,
											"end": 2418,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 2397,
											"end": 2418,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2437,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2432,
											"end": 2437,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2437,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2437,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2437,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 2432,
											"end": 2437,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2437,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2437,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2437,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2432,
											"end": 2437,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2446,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2432,
											"end": 2446,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2446,
											"name": "PUSH",
											"source": 8,
											"value": "A9059CBB"
										},
										{
											"begin": 2447,
											"end": 2457,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 2459,
											"end": 2465,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2466,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2432,
											"end": 2466,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2466,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2466,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2432,
											"end": 2466,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2466,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 2432,
											"end": 2466,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2466,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2466,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2466,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2432,
											"end": 2466,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2466,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "111"
										},
										{
											"begin": 2432,
											"end": 2466,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2466,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2466,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2466,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "112"
										},
										{
											"begin": 2432,
											"end": 2466,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2466,
											"name": "tag",
											"source": 8,
											"value": "111"
										},
										{
											"begin": 2432,
											"end": 2466,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2466,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2432,
											"end": 2466,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2432,
											"end": 2466,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2466,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2466,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2466,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2466,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2466,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2432,
											"end": 2466,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2466,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2466,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2466,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2466,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2466,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2466,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "114"
										},
										{
											"begin": 2432,
											"end": 2466,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2466,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2466,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2432,
											"end": 2466,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2466,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2466,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2466,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2432,
											"end": 2466,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2466,
											"name": "tag",
											"source": 8,
											"value": "114"
										},
										{
											"begin": 2432,
											"end": 2466,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2466,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2466,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2466,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2466,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2466,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2432,
											"end": 2466,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2466,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2466,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 2432,
											"end": 2466,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2466,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 2432,
											"end": 2466,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2466,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2466,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2466,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2466,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2466,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2466,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2432,
											"end": 2466,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2466,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2466,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2466,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2466,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2466,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "115"
										},
										{
											"begin": 2432,
											"end": 2466,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2466,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2466,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "116"
										},
										{
											"begin": 2432,
											"end": 2466,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2466,
											"name": "tag",
											"source": 8,
											"value": "115"
										},
										{
											"begin": 2432,
											"end": 2466,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2427,
											"end": 2508,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "117"
										},
										{
											"begin": 2427,
											"end": 2508,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2484,
											"end": 2500,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2484,
											"end": 2500,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2484,
											"end": 2500,
											"name": "PUSH",
											"source": 8,
											"value": "90B8EC1800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2484,
											"end": 2500,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2484,
											"end": 2500,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2484,
											"end": 2500,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2484,
											"end": 2500,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2484,
											"end": 2500,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2484,
											"end": 2500,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2484,
											"end": 2500,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2484,
											"end": 2500,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2484,
											"end": 2500,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2484,
											"end": 2500,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2484,
											"end": 2500,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2427,
											"end": 2508,
											"name": "tag",
											"source": 8,
											"value": "117"
										},
										{
											"begin": 2427,
											"end": 2508,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2545,
											"end": 2555,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 2521,
											"end": 2564,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2521,
											"end": 2564,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2538,
											"end": 2542,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 2521,
											"end": 2564,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2521,
											"end": 2564,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2521,
											"end": 2564,
											"name": "PUSH",
											"source": 8,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 2557,
											"end": 2563,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2521,
											"end": 2564,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2521,
											"end": 2564,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2521,
											"end": 2564,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "118"
										},
										{
											"begin": 2521,
											"end": 2564,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2521,
											"end": 2564,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2521,
											"end": 2564,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 2521,
											"end": 2564,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2521,
											"end": 2564,
											"name": "tag",
											"source": 8,
											"value": "118"
										},
										{
											"begin": 2521,
											"end": 2564,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2521,
											"end": 2564,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2521,
											"end": 2564,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2521,
											"end": 2564,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2521,
											"end": 2564,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2521,
											"end": 2564,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2521,
											"end": 2564,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2521,
											"end": 2564,
											"name": "LOG3",
											"source": 8
										},
										{
											"begin": 2066,
											"end": 2570,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2066,
											"end": 2570,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2639,
											"end": 2723,
											"name": "tag",
											"source": 8,
											"value": "51"
										},
										{
											"begin": 2639,
											"end": 2723,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2680,
											"end": 2685,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2701,
											"end": 2706,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2701,
											"end": 2706,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2701,
											"end": 2706,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2701,
											"end": 2706,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2701,
											"end": 2706,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2701,
											"end": 2706,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 2701,
											"end": 2706,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 2701,
											"end": 2706,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2701,
											"end": 2706,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 2701,
											"end": 2706,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2701,
											"end": 2706,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2701,
											"end": 2715,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2701,
											"end": 2715,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2701,
											"end": 2715,
											"name": "PUSH",
											"source": 8,
											"value": "313CE567"
										},
										{
											"begin": 2701,
											"end": 2717,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2701,
											"end": 2717,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2701,
											"end": 2717,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2701,
											"end": 2717,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2701,
											"end": 2717,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2701,
											"end": 2717,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 2701,
											"end": 2717,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 2701,
											"end": 2717,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2701,
											"end": 2717,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2701,
											"end": 2717,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2701,
											"end": 2717,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2701,
											"end": 2717,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2701,
											"end": 2717,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2701,
											"end": 2717,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2701,
											"end": 2717,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2701,
											"end": 2717,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2701,
											"end": 2717,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2701,
											"end": 2717,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2701,
											"end": 2717,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2701,
											"end": 2717,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 2701,
											"end": 2717,
											"name": "STATICCALL",
											"source": 8
										},
										{
											"begin": 2701,
											"end": 2717,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2701,
											"end": 2717,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2701,
											"end": 2717,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2701,
											"end": 2717,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "121"
										},
										{
											"begin": 2701,
											"end": 2717,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2701,
											"end": 2717,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2701,
											"end": 2717,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2701,
											"end": 2717,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2701,
											"end": 2717,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 2701,
											"end": 2717,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2701,
											"end": 2717,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2701,
											"end": 2717,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2701,
											"end": 2717,
											"name": "tag",
											"source": 8,
											"value": "121"
										},
										{
											"begin": 2701,
											"end": 2717,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2701,
											"end": 2717,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2701,
											"end": 2717,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2701,
											"end": 2717,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2701,
											"end": 2717,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2701,
											"end": 2717,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2701,
											"end": 2717,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2701,
											"end": 2717,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2701,
											"end": 2717,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 2701,
											"end": 2717,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 2701,
											"end": 2717,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 2701,
											"end": 2717,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2701,
											"end": 2717,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2701,
											"end": 2717,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2701,
											"end": 2717,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2701,
											"end": 2717,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2701,
											"end": 2717,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2701,
											"end": 2717,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2701,
											"end": 2717,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2701,
											"end": 2717,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2701,
											"end": 2717,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2701,
											"end": 2717,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2701,
											"end": 2717,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2701,
											"end": 2717,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "122"
										},
										{
											"begin": 2701,
											"end": 2717,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2701,
											"end": 2717,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2701,
											"end": 2717,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "123"
										},
										{
											"begin": 2701,
											"end": 2717,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2701,
											"end": 2717,
											"name": "tag",
											"source": 8,
											"value": "122"
										},
										{
											"begin": 2701,
											"end": 2717,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2694,
											"end": 2717,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2694,
											"end": 2717,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2639,
											"end": 2723,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2639,
											"end": 2723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 341,
											"end": 371,
											"name": "tag",
											"source": 8,
											"value": "55"
										},
										{
											"begin": 341,
											"end": 371,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 341,
											"end": 371,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 341,
											"end": 371,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 341,
											"end": 371,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 341,
											"end": 371,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 498,
											"end": 551,
											"name": "tag",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 498,
											"end": 551,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 498,
											"end": 551,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 498,
											"end": 551,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 498,
											"end": 551,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 498,
											"end": 551,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 498,
											"end": 551,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 498,
											"end": 551,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 498,
											"end": 551,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 498,
											"end": 551,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 498,
											"end": 551,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 498,
											"end": 551,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 498,
											"end": 551,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 498,
											"end": 551,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 498,
											"end": 551,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 498,
											"end": 551,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 498,
											"end": 551,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 498,
											"end": 551,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 498,
											"end": 551,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3219,
											"end": 3249,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 3246,
											"end": 3247,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3219,
											"end": 3237,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 3219,
											"end": 3249,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3219,
											"end": 3249,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 3219,
											"end": 3249,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2487,
											"end": 2494,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2506,
											"end": 2530,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2533,
											"end": 2553,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 2533,
											"end": 2551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 2533,
											"end": 2553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2533,
											"end": 2553,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 2533,
											"end": 2553,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2553,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2553,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2571,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2563,
											"end": 2578,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2563,
											"end": 2578,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2563,
											"end": 2578,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 433,
											"end": 453,
											"name": "tag",
											"source": 8,
											"value": "69"
										},
										{
											"begin": 433,
											"end": 453,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 433,
											"end": 453,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 433,
											"end": 453,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 433,
											"end": 453,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 433,
											"end": 453,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "133"
										},
										{
											"begin": 433,
											"end": 453,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 433,
											"end": 453,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "95"
										},
										{
											"begin": 433,
											"end": 453,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 433,
											"end": 453,
											"name": "tag",
											"source": 8,
											"value": "133"
										},
										{
											"begin": 433,
											"end": 453,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 433,
											"end": 453,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 433,
											"end": 453,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 433,
											"end": 453,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 433,
											"end": 453,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 433,
											"end": 453,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 433,
											"end": 453,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 433,
											"end": 453,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 433,
											"end": 453,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 433,
											"end": 453,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 433,
											"end": 453,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 433,
											"end": 453,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 433,
											"end": 453,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 433,
											"end": 453,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 433,
											"end": 453,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 433,
											"end": 453,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 433,
											"end": 453,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 433,
											"end": 453,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 433,
											"end": 453,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 433,
											"end": 453,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 433,
											"end": 453,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 433,
											"end": 453,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 433,
											"end": 453,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 433,
											"end": 453,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 433,
											"end": 453,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 433,
											"end": 453,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 433,
											"end": 453,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 433,
											"end": 453,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 433,
											"end": 453,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 433,
											"end": 453,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 433,
											"end": 453,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "134"
										},
										{
											"begin": 433,
											"end": 453,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 433,
											"end": 453,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "95"
										},
										{
											"begin": 433,
											"end": 453,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 433,
											"end": 453,
											"name": "tag",
											"source": 8,
											"value": "134"
										},
										{
											"begin": 433,
											"end": 453,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 433,
											"end": 453,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 433,
											"end": 453,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 433,
											"end": 453,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "135"
										},
										{
											"begin": 433,
											"end": 453,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 433,
											"end": 453,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 433,
											"end": 453,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 433,
											"end": 453,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 433,
											"end": 453,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "136"
										},
										{
											"begin": 433,
											"end": 453,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 433,
											"end": 453,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 433,
											"end": 453,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 433,
											"end": 453,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 433,
											"end": 453,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 433,
											"end": 453,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 433,
											"end": 453,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 433,
											"end": 453,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 433,
											"end": 453,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 433,
											"end": 453,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 433,
											"end": 453,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 433,
											"end": 453,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 433,
											"end": 453,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 433,
											"end": 453,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "135"
										},
										{
											"begin": 433,
											"end": 453,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 433,
											"end": 453,
											"name": "tag",
											"source": 8,
											"value": "136"
										},
										{
											"begin": 433,
											"end": 453,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 433,
											"end": 453,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 433,
											"end": 453,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 433,
											"end": 453,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 433,
											"end": 453,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 433,
											"end": 453,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 433,
											"end": 453,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 433,
											"end": 453,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 433,
											"end": 453,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 433,
											"end": 453,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 433,
											"end": 453,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 433,
											"end": 453,
											"name": "tag",
											"source": 8,
											"value": "137"
										},
										{
											"begin": 433,
											"end": 453,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 433,
											"end": 453,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 433,
											"end": 453,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 433,
											"end": 453,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 433,
											"end": 453,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 433,
											"end": 453,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 433,
											"end": 453,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 433,
											"end": 453,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 433,
											"end": 453,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 433,
											"end": 453,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 433,
											"end": 453,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 433,
											"end": 453,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 433,
											"end": 453,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 433,
											"end": 453,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 433,
											"end": 453,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "137"
										},
										{
											"begin": 433,
											"end": 453,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 433,
											"end": 453,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 433,
											"end": 453,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 433,
											"end": 453,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 433,
											"end": 453,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 433,
											"end": 453,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 433,
											"end": 453,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 433,
											"end": 453,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 433,
											"end": 453,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 433,
											"end": 453,
											"name": "tag",
											"source": 8,
											"value": "135"
										},
										{
											"begin": 433,
											"end": 453,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 433,
											"end": 453,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 433,
											"end": 453,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 433,
											"end": 453,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 433,
											"end": 453,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 433,
											"end": 453,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 433,
											"end": 453,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 433,
											"end": 453,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2815,
											"end": 2923,
											"name": "tag",
											"source": 8,
											"value": "73"
										},
										{
											"begin": 2815,
											"end": 2923,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2883,
											"end": 2887,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2903,
											"end": 2917,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2903,
											"end": 2917,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2903,
											"end": 2917,
											"name": "PUSH",
											"source": 8,
											"value": "A038794000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2903,
											"end": 2917,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2903,
											"end": 2917,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2903,
											"end": 2917,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2903,
											"end": 2917,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2903,
											"end": 2917,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2903,
											"end": 2917,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2903,
											"end": 2917,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2903,
											"end": 2917,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2903,
											"end": 2917,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2903,
											"end": 2917,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2903,
											"end": 2917,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1546,
											"end": 1913,
											"name": "tag",
											"source": 8,
											"value": "77"
										},
										{
											"begin": 1546,
											"end": 1913,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1615,
											"end": 1630,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 1615,
											"end": 1630,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1597,
											"end": 1612,
											"name": "TIMESTAMP",
											"source": 8
										},
										{
											"begin": 1597,
											"end": 1630,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 1593,
											"end": 1675,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1593,
											"end": 1675,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "140"
										},
										{
											"begin": 1593,
											"end": 1675,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1648,
											"end": 1667,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1648,
											"end": 1667,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1648,
											"end": 1667,
											"name": "PUSH",
											"source": 8,
											"value": "9883528E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1648,
											"end": 1667,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1648,
											"end": 1667,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1648,
											"end": 1667,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1648,
											"end": 1667,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1648,
											"end": 1667,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1648,
											"end": 1667,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1648,
											"end": 1667,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1648,
											"end": 1667,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1648,
											"end": 1667,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1648,
											"end": 1667,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1648,
											"end": 1667,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1593,
											"end": 1675,
											"name": "tag",
											"source": 8,
											"value": "140"
										},
										{
											"begin": 1593,
											"end": 1675,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1708,
											"end": 1714,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1683,
											"end": 1692,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 1683,
											"end": 1704,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1693,
											"end": 1703,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 1683,
											"end": 1704,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1683,
											"end": 1704,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1683,
											"end": 1704,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1683,
											"end": 1704,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1683,
											"end": 1704,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1683,
											"end": 1704,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1683,
											"end": 1704,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1683,
											"end": 1704,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1683,
											"end": 1704,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1683,
											"end": 1704,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1683,
											"end": 1704,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1683,
											"end": 1704,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1683,
											"end": 1704,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1683,
											"end": 1704,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1683,
											"end": 1704,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 1683,
											"end": 1704,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1683,
											"end": 1714,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1683,
											"end": 1714,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1683,
											"end": 1714,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1683,
											"end": 1714,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "141"
										},
										{
											"begin": 1683,
											"end": 1714,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1683,
											"end": 1714,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1683,
											"end": 1714,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "105"
										},
										{
											"begin": 1683,
											"end": 1714,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1683,
											"end": 1714,
											"name": "tag",
											"source": 8,
											"value": "141"
										},
										{
											"begin": 1683,
											"end": 1714,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1683,
											"end": 1714,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1683,
											"end": 1714,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1683,
											"end": 1714,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1683,
											"end": 1714,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1683,
											"end": 1714,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1683,
											"end": 1714,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 1683,
											"end": 1714,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1736,
											"end": 1742,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1721,
											"end": 1732,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 1721,
											"end": 1732,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1721,
											"end": 1742,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1721,
											"end": 1742,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1721,
											"end": 1742,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1721,
											"end": 1742,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "142"
										},
										{
											"begin": 1721,
											"end": 1742,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1721,
											"end": 1742,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1721,
											"end": 1742,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "105"
										},
										{
											"begin": 1721,
											"end": 1742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1721,
											"end": 1742,
											"name": "tag",
											"source": 8,
											"value": "142"
										},
										{
											"begin": 1721,
											"end": 1742,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1721,
											"end": 1742,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1721,
											"end": 1742,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1721,
											"end": 1742,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1721,
											"end": 1742,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1721,
											"end": 1742,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1721,
											"end": 1742,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 1721,
											"end": 1742,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1756,
											"end": 1761,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1756,
											"end": 1761,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1756,
											"end": 1761,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1756,
											"end": 1761,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1756,
											"end": 1761,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1756,
											"end": 1761,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 1756,
											"end": 1761,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1756,
											"end": 1761,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 1756,
											"end": 1761,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1756,
											"end": 1761,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1756,
											"end": 1774,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1756,
											"end": 1774,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1756,
											"end": 1774,
											"name": "PUSH",
											"source": 8,
											"value": "23B872DD"
										},
										{
											"begin": 1775,
											"end": 1785,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 1795,
											"end": 1799,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 1802,
											"end": 1808,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1756,
											"end": 1809,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1756,
											"end": 1809,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1756,
											"end": 1809,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1756,
											"end": 1809,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1756,
											"end": 1809,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1756,
											"end": 1809,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 1756,
											"end": 1809,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 1756,
											"end": 1809,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1756,
											"end": 1809,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1756,
											"end": 1809,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1756,
											"end": 1809,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1756,
											"end": 1809,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "143"
										},
										{
											"begin": 1756,
											"end": 1809,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 1756,
											"end": 1809,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1756,
											"end": 1809,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1756,
											"end": 1809,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1756,
											"end": 1809,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "144"
										},
										{
											"begin": 1756,
											"end": 1809,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1756,
											"end": 1809,
											"name": "tag",
											"source": 8,
											"value": "143"
										},
										{
											"begin": 1756,
											"end": 1809,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1756,
											"end": 1809,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1756,
											"end": 1809,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1756,
											"end": 1809,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1756,
											"end": 1809,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1756,
											"end": 1809,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1756,
											"end": 1809,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1756,
											"end": 1809,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1756,
											"end": 1809,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1756,
											"end": 1809,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 1756,
											"end": 1809,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 1756,
											"end": 1809,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 1756,
											"end": 1809,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1756,
											"end": 1809,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1756,
											"end": 1809,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1756,
											"end": 1809,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "146"
										},
										{
											"begin": 1756,
											"end": 1809,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1756,
											"end": 1809,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 1756,
											"end": 1809,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1756,
											"end": 1809,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1756,
											"end": 1809,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 1756,
											"end": 1809,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 1756,
											"end": 1809,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1756,
											"end": 1809,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1756,
											"end": 1809,
											"name": "tag",
											"source": 8,
											"value": "146"
										},
										{
											"begin": 1756,
											"end": 1809,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1756,
											"end": 1809,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1756,
											"end": 1809,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1756,
											"end": 1809,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1756,
											"end": 1809,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1756,
											"end": 1809,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1756,
											"end": 1809,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1756,
											"end": 1809,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 1756,
											"end": 1809,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 1756,
											"end": 1809,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 1756,
											"end": 1809,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 1756,
											"end": 1809,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1756,
											"end": 1809,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1756,
											"end": 1809,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1756,
											"end": 1809,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1756,
											"end": 1809,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1756,
											"end": 1809,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1756,
											"end": 1809,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1756,
											"end": 1809,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1756,
											"end": 1809,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1756,
											"end": 1809,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1756,
											"end": 1809,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1756,
											"end": 1809,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1756,
											"end": 1809,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "147"
										},
										{
											"begin": 1756,
											"end": 1809,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1756,
											"end": 1809,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1756,
											"end": 1809,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "116"
										},
										{
											"begin": 1756,
											"end": 1809,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1756,
											"end": 1809,
											"name": "tag",
											"source": 8,
											"value": "147"
										},
										{
											"begin": 1756,
											"end": 1809,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1751,
											"end": 1851,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "148"
										},
										{
											"begin": 1751,
											"end": 1851,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1827,
											"end": 1843,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1827,
											"end": 1843,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1827,
											"end": 1843,
											"name": "PUSH",
											"source": 8,
											"value": "90B8EC1800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1827,
											"end": 1843,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1827,
											"end": 1843,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1827,
											"end": 1843,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1827,
											"end": 1843,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1827,
											"end": 1843,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1827,
											"end": 1843,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1827,
											"end": 1843,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1827,
											"end": 1843,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1827,
											"end": 1843,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1827,
											"end": 1843,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1827,
											"end": 1843,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1751,
											"end": 1851,
											"name": "tag",
											"source": 8,
											"value": "148"
										},
										{
											"begin": 1751,
											"end": 1851,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1893,
											"end": 1897,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 1864,
											"end": 1907,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1864,
											"end": 1907,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1873,
											"end": 1883,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 1864,
											"end": 1907,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1864,
											"end": 1907,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1864,
											"end": 1907,
											"name": "PUSH",
											"source": 8,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 1900,
											"end": 1906,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1864,
											"end": 1907,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1864,
											"end": 1907,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1864,
											"end": 1907,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "149"
										},
										{
											"begin": 1864,
											"end": 1907,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1864,
											"end": 1907,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1864,
											"end": 1907,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 1864,
											"end": 1907,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1864,
											"end": 1907,
											"name": "tag",
											"source": 8,
											"value": "149"
										},
										{
											"begin": 1864,
											"end": 1907,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1864,
											"end": 1907,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1864,
											"end": 1907,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1864,
											"end": 1907,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1864,
											"end": 1907,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1864,
											"end": 1907,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1864,
											"end": 1907,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1864,
											"end": 1907,
											"name": "LOG3",
											"source": 8
										},
										{
											"begin": 1546,
											"end": 1913,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1546,
											"end": 1913,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3016,
											"end": 3151,
											"name": "tag",
											"source": 8,
											"value": "81"
										},
										{
											"begin": 3016,
											"end": 3151,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3105,
											"end": 3112,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3131,
											"end": 3145,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3131,
											"end": 3145,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3131,
											"end": 3145,
											"name": "PUSH",
											"source": 8,
											"value": "A038794000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3131,
											"end": 3145,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3131,
											"end": 3145,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3131,
											"end": 3145,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3131,
											"end": 3145,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3131,
											"end": 3145,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3131,
											"end": 3145,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3131,
											"end": 3145,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3131,
											"end": 3145,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3131,
											"end": 3145,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3131,
											"end": 3145,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3131,
											"end": 3145,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1006,
											"end": 1411,
											"name": "tag",
											"source": 8,
											"value": "86"
										},
										{
											"begin": 1006,
											"end": 1411,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4158,
											"end": 4188,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4191,
											"end": 4217,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 4191,
											"end": 4215,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 4191,
											"end": 4217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4191,
											"end": 4217,
											"name": "tag",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 4191,
											"end": 4217,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4158,
											"end": 4217,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4158,
											"end": 4217,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4279,
											"end": 4298,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4302,
											"end": 4303,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4301,
											"end": 4317,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4279,
											"end": 4317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4279,
											"end": 4317,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4327,
											"end": 4345,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4348,
											"end": 4349,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4327,
											"end": 4362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4327,
											"end": 4362,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4706,
											"end": 4723,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4741,
											"end": 4742,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4737,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4742,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4726,
											"end": 4742,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4742,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 4760,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "tag",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4706,
											"end": 4760,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4706,
											"end": 4760,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4787,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4805,
											"end": 4806,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4790,
											"end": 4801,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4839,
											"end": 4840,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4818,
											"end": 4822,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 4810,
											"end": 4835,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4810,
											"end": 4835,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4810,
											"end": 4835,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 4810,
											"end": 4840,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "tag",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4840,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4840,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4856,
											"end": 4868,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4868,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4873,
											"end": 4885,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4872,
											"end": 4885,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "tag",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 1,
											"value": "F92EE8A900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "tag",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4968,
											"end": 4969,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4951,
											"end": 4952,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4965,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4951,
											"end": 4965,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4965,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4983,
											"end": 4997,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5031,
											"end": 5035,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5013,
											"end": 5014,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5028,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5013,
											"end": 5028,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5028,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "tag",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1212,
											"end": 1237,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "160"
										},
										{
											"begin": 1230,
											"end": 1236,
											"modifierDepth": 1,
											"name": "DUP12",
											"source": 8
										},
										{
											"begin": 1212,
											"end": 1229,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "89"
										},
										{
											"begin": 1212,
											"end": 1237,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1212,
											"end": 1237,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "160"
										},
										{
											"begin": 1212,
											"end": 1237,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1258,
											"end": 1264,
											"modifierDepth": 1,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 1244,
											"end": 1249,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1244,
											"end": 1249,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1244,
											"end": 1265,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1244,
											"end": 1265,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 1244,
											"end": 1265,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1244,
											"end": 1265,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1244,
											"end": 1265,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1244,
											"end": 1265,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1244,
											"end": 1265,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 1244,
											"end": 1265,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 1244,
											"end": 1265,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1244,
											"end": 1265,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1244,
											"end": 1265,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1244,
											"end": 1265,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1244,
											"end": 1265,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1244,
											"end": 1265,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 1244,
											"end": 1265,
											"modifierDepth": 1,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 1244,
											"end": 1265,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1244,
											"end": 1265,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 1244,
											"end": 1265,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1290,
											"end": 1306,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 1272,
											"end": 1287,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 1272,
											"end": 1306,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1272,
											"end": 1306,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1272,
											"end": 1306,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 1272,
											"end": 1306,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1341,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 1313,
											"end": 1325,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 1313,
											"end": 1341,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1313,
											"end": 1341,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1313,
											"end": 1341,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 1313,
											"end": 1341,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1355,
											"end": 1360,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 1348,
											"end": 1352,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 1348,
											"end": 1360,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1348,
											"end": 1360,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1348,
											"end": 1360,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "161"
										},
										{
											"begin": 1348,
											"end": 1360,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1348,
											"end": 1360,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1348,
											"end": 1360,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "162"
										},
										{
											"begin": 1348,
											"end": 1360,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1348,
											"end": 1360,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "161"
										},
										{
											"begin": 1348,
											"end": 1360,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1348,
											"end": 1360,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1376,
											"end": 1383,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1367,
											"end": 1373,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1367,
											"end": 1383,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1367,
											"end": 1383,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1367,
											"end": 1383,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "163"
										},
										{
											"begin": 1367,
											"end": 1383,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1367,
											"end": 1383,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1367,
											"end": 1383,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "162"
										},
										{
											"begin": 1367,
											"end": 1383,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1367,
											"end": 1383,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "163"
										},
										{
											"begin": 1367,
											"end": 1383,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1367,
											"end": 1383,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1404,
											"end": 1405,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1390,
											"end": 1401,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 1390,
											"end": 1405,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1390,
											"end": 1405,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1390,
											"end": 1405,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 1390,
											"end": 1405,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5070,
											"end": 5084,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5118,
											"end": 5123,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5100,
											"end": 5101,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5115,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5100,
											"end": 5115,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5115,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH",
											"source": 1,
											"value": "C7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2"
										},
										{
											"begin": 5154,
											"end": 5155,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 5142,
											"end": 5156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "tag",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "LOG1",
											"source": 1
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "tag",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1006,
											"end": 1411,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1006,
											"end": 1411,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1006,
											"end": 1411,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1006,
											"end": 1411,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1006,
											"end": 1411,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1006,
											"end": 1411,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1006,
											"end": 1411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3509,
											"end": 3510,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3489,
											"end": 3511,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3489,
											"end": 3511,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3489,
											"end": 3497,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3489,
											"end": 3511,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3489,
											"end": 3511,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3489,
											"end": 3511,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3562,
											"end": 3563,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 3534,
											"end": 3565,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3585,
											"end": 3613,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 3604,
											"end": 3612,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3585,
											"end": 3603,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 3585,
											"end": 3613,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3585,
											"end": 3613,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 3585,
											"end": 3613,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 318,
											"end": 336,
											"name": "tag",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 318,
											"end": 336,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 318,
											"end": 336,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 318,
											"end": 336,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 318,
											"end": 336,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 318,
											"end": 336,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 318,
											"end": 336,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 318,
											"end": 336,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 318,
											"end": 336,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 318,
											"end": 336,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 318,
											"end": 336,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 318,
											"end": 336,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 318,
											"end": 336,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 318,
											"end": 336,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2658,
											"end": 2820,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 2658,
											"end": 2820,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2728,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 2728,
											"end": 2738,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 2728,
											"end": 2740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2728,
											"end": 2740,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 2728,
											"end": 2740,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2724,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 2717,
											"end": 2722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2717,
											"end": 2724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2724,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 2717,
											"end": 2724,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2790,
											"end": 2802,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 2790,
											"end": 2800,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 2790,
											"end": 2802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2790,
											"end": 2802,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 2790,
											"end": 2802,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2763,
											"end": 2803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2658,
											"end": 2820,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3774,
											"end": 4022,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 3774,
											"end": 4022,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3847,
											"end": 3871,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3874,
											"end": 3894,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 3874,
											"end": 3892,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 3874,
											"end": 3894,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3874,
											"end": 3894,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 3874,
											"end": 3894,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3847,
											"end": 3894,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3847,
											"end": 3894,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3904,
											"end": 3920,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3923,
											"end": 3924,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3904,
											"end": 3931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3904,
											"end": 3931,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3952,
											"end": 3960,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3942,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3949,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3941,
											"end": 3949,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3949,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4006,
											"end": 4014,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3996,
											"end": 4004,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 3837,
											"end": 4022,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3837,
											"end": 4022,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3774,
											"end": 4022,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3774,
											"end": 4022,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1192,
											"end": 1351,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 1192,
											"end": 1351,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1313,
											"end": 1335,
											"name": "PUSH",
											"source": 0,
											"value": "9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300"
										},
										{
											"begin": 1303,
											"end": 1335,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1303,
											"end": 1335,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1192,
											"end": 1351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1192,
											"end": 1351,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8737,
											"end": 8907,
											"name": "tag",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 8737,
											"end": 8907,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8795,
											"end": 8825,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8870,
											"end": 8891,
											"name": "PUSH",
											"source": 1,
											"value": "F0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00"
										},
										{
											"begin": 8860,
											"end": 8891,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8860,
											"end": 8891,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8737,
											"end": 8907,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8737,
											"end": 8907,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 887,
											"end": 983,
											"name": "tag",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 887,
											"end": 983,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 940,
											"end": 947,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 959,
											"end": 976,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 959,
											"end": 976,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 887,
											"end": 983,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 887,
											"end": 983,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 9,
											"value": "185"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7,
											"end": 84,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 90,
											"end": 208,
											"name": "tag",
											"source": 9,
											"value": "186"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "247"
										},
										{
											"begin": 195,
											"end": 200,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "185"
										},
										{
											"begin": 177,
											"end": 201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 9,
											"value": "247"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 172,
											"end": 175,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 165,
											"end": 202,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 90,
											"end": 208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 214,
											"end": 436,
											"name": "tag",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 307,
											"end": 311,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 347,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 343,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 322,
											"end": 348,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 322,
											"end": 348,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "249"
										},
										{
											"begin": 426,
											"end": 427,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 424,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 411,
											"end": 428,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 402,
											"end": 408,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "186"
										},
										{
											"begin": 358,
											"end": 429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 358,
											"end": 429,
											"name": "tag",
											"source": 9,
											"value": "249"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 214,
											"end": 436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 442,
											"end": 541,
											"name": "tag",
											"source": 9,
											"value": "187"
										},
										{
											"begin": 442,
											"end": 541,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 494,
											"end": 500,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 528,
											"end": 533,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 522,
											"end": 534,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 512,
											"end": 534,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 512,
											"end": 534,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 442,
											"end": 541,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 442,
											"end": 541,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 442,
											"end": 541,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 442,
											"end": 541,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 547,
											"end": 716,
											"name": "tag",
											"source": 9,
											"value": "188"
										},
										{
											"begin": 547,
											"end": 716,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 631,
											"end": 642,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 665,
											"end": 671,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 660,
											"end": 663,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 653,
											"end": 672,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 705,
											"end": 709,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 700,
											"end": 703,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 696,
											"end": 710,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 681,
											"end": 710,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 681,
											"end": 710,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 547,
											"end": 716,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 547,
											"end": 716,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 547,
											"end": 716,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 547,
											"end": 716,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 547,
											"end": 716,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 722,
											"end": 861,
											"name": "tag",
											"source": 9,
											"value": "189"
										},
										{
											"begin": 722,
											"end": 861,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 811,
											"end": 817,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 806,
											"end": 809,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 801,
											"end": 804,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 795,
											"end": 818,
											"name": "MCOPY",
											"source": 9
										},
										{
											"begin": 852,
											"end": 853,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 843,
											"end": 849,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 838,
											"end": 841,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 834,
											"end": 850,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 827,
											"end": 854,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 722,
											"end": 861,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 722,
											"end": 861,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 722,
											"end": 861,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 722,
											"end": 861,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 867,
											"end": 969,
											"name": "tag",
											"source": 9,
											"value": "190"
										},
										{
											"begin": 867,
											"end": 969,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 908,
											"end": 914,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 959,
											"end": 961,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 955,
											"end": 962,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 950,
											"end": 952,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 943,
											"end": 948,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 939,
											"end": 953,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 935,
											"end": 963,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 925,
											"end": 963,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 925,
											"end": 963,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 867,
											"end": 969,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 867,
											"end": 969,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 867,
											"end": 969,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 867,
											"end": 969,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 975,
											"end": 1352,
											"name": "tag",
											"source": 9,
											"value": "191"
										},
										{
											"begin": 975,
											"end": 1352,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1063,
											"end": 1066,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1091,
											"end": 1130,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "255"
										},
										{
											"begin": 1124,
											"end": 1129,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1091,
											"end": 1130,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "187"
										},
										{
											"begin": 1091,
											"end": 1130,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1091,
											"end": 1130,
											"name": "tag",
											"source": 9,
											"value": "255"
										},
										{
											"begin": 1091,
											"end": 1130,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1146,
											"end": 1217,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "256"
										},
										{
											"begin": 1210,
											"end": 1216,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1205,
											"end": 1208,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1146,
											"end": 1217,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "188"
										},
										{
											"begin": 1146,
											"end": 1217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1146,
											"end": 1217,
											"name": "tag",
											"source": 9,
											"value": "256"
										},
										{
											"begin": 1146,
											"end": 1217,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1139,
											"end": 1217,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 1139,
											"end": 1217,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1226,
											"end": 1291,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "257"
										},
										{
											"begin": 1284,
											"end": 1290,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1279,
											"end": 1282,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1272,
											"end": 1276,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1265,
											"end": 1270,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1261,
											"end": 1277,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1226,
											"end": 1291,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "189"
										},
										{
											"begin": 1226,
											"end": 1291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1226,
											"end": 1291,
											"name": "tag",
											"source": 9,
											"value": "257"
										},
										{
											"begin": 1226,
											"end": 1291,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1316,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "258"
										},
										{
											"begin": 1338,
											"end": 1344,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1316,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "190"
										},
										{
											"begin": 1316,
											"end": 1345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1316,
											"end": 1345,
											"name": "tag",
											"source": 9,
											"value": "258"
										},
										{
											"begin": 1316,
											"end": 1345,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1311,
											"end": 1314,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1307,
											"end": 1346,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1300,
											"end": 1346,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1300,
											"end": 1346,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1067,
											"end": 1352,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 975,
											"end": 1352,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 975,
											"end": 1352,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 975,
											"end": 1352,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 975,
											"end": 1352,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 975,
											"end": 1352,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1358,
											"end": 1671,
											"name": "tag",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 1358,
											"end": 1671,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1471,
											"end": 1475,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1509,
											"end": 1511,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1498,
											"end": 1507,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1494,
											"end": 1512,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1486,
											"end": 1512,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1486,
											"end": 1512,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1558,
											"end": 1567,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1552,
											"end": 1556,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1548,
											"end": 1568,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1544,
											"end": 1545,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1533,
											"end": 1542,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1529,
											"end": 1546,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1522,
											"end": 1569,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1586,
											"end": 1664,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "260"
										},
										{
											"begin": 1659,
											"end": 1663,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1650,
											"end": 1656,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1586,
											"end": 1664,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "191"
										},
										{
											"begin": 1586,
											"end": 1664,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1586,
											"end": 1664,
											"name": "tag",
											"source": 9,
											"value": "260"
										},
										{
											"begin": 1586,
											"end": 1664,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1578,
											"end": 1664,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1578,
											"end": 1664,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1358,
											"end": 1671,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1358,
											"end": 1671,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1358,
											"end": 1671,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1358,
											"end": 1671,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1358,
											"end": 1671,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1677,
											"end": 1752,
											"name": "tag",
											"source": 9,
											"value": "192"
										},
										{
											"begin": 1677,
											"end": 1752,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1743,
											"end": 1745,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1737,
											"end": 1746,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1727,
											"end": 1746,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1727,
											"end": 1746,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1677,
											"end": 1752,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1677,
											"end": 1752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1758,
											"end": 1875,
											"name": "tag",
											"source": 9,
											"value": "193"
										},
										{
											"begin": 1758,
											"end": 1875,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1867,
											"end": 1868,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1864,
											"end": 1865,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1857,
											"end": 1869,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1881,
											"end": 1998,
											"name": "tag",
											"source": 9,
											"value": "194"
										},
										{
											"begin": 1881,
											"end": 1998,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1990,
											"end": 1991,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1987,
											"end": 1988,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1980,
											"end": 1992,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2004,
											"end": 2130,
											"name": "tag",
											"source": 9,
											"value": "195"
										},
										{
											"begin": 2004,
											"end": 2130,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2041,
											"end": 2048,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2081,
											"end": 2123,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2074,
											"end": 2079,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2070,
											"end": 2124,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2059,
											"end": 2124,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2059,
											"end": 2124,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2004,
											"end": 2130,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2004,
											"end": 2130,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2004,
											"end": 2130,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2004,
											"end": 2130,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2136,
											"end": 2232,
											"name": "tag",
											"source": 9,
											"value": "196"
										},
										{
											"begin": 2136,
											"end": 2232,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2173,
											"end": 2180,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2202,
											"end": 2226,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "266"
										},
										{
											"begin": 2220,
											"end": 2225,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2202,
											"end": 2226,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "195"
										},
										{
											"begin": 2202,
											"end": 2226,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2202,
											"end": 2226,
											"name": "tag",
											"source": 9,
											"value": "266"
										},
										{
											"begin": 2202,
											"end": 2226,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2191,
											"end": 2226,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2191,
											"end": 2226,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2136,
											"end": 2232,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2136,
											"end": 2232,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2136,
											"end": 2232,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2136,
											"end": 2232,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2238,
											"end": 2360,
											"name": "tag",
											"source": 9,
											"value": "197"
										},
										{
											"begin": 2238,
											"end": 2360,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2311,
											"end": 2335,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "268"
										},
										{
											"begin": 2329,
											"end": 2334,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2311,
											"end": 2335,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "196"
										},
										{
											"begin": 2311,
											"end": 2335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2311,
											"end": 2335,
											"name": "tag",
											"source": 9,
											"value": "268"
										},
										{
											"begin": 2311,
											"end": 2335,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2304,
											"end": 2309,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2301,
											"end": 2336,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2291,
											"end": 2354,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "269"
										},
										{
											"begin": 2291,
											"end": 2354,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2350,
											"end": 2351,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2347,
											"end": 2348,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2340,
											"end": 2352,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2291,
											"end": 2354,
											"name": "tag",
											"source": 9,
											"value": "269"
										},
										{
											"begin": 2291,
											"end": 2354,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2238,
											"end": 2360,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2238,
											"end": 2360,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2366,
											"end": 2505,
											"name": "tag",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 2366,
											"end": 2505,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2412,
											"end": 2417,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2450,
											"end": 2456,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2437,
											"end": 2457,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 2428,
											"end": 2457,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2428,
											"end": 2457,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2466,
											"end": 2499,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "271"
										},
										{
											"begin": 2493,
											"end": 2498,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2466,
											"end": 2499,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "197"
										},
										{
											"begin": 2466,
											"end": 2499,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2466,
											"end": 2499,
											"name": "tag",
											"source": 9,
											"value": "271"
										},
										{
											"begin": 2466,
											"end": 2499,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2366,
											"end": 2505,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2366,
											"end": 2505,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2366,
											"end": 2505,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2366,
											"end": 2505,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2366,
											"end": 2505,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2511,
											"end": 2633,
											"name": "tag",
											"source": 9,
											"value": "199"
										},
										{
											"begin": 2511,
											"end": 2633,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2584,
											"end": 2608,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "273"
										},
										{
											"begin": 2602,
											"end": 2607,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2584,
											"end": 2608,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "185"
										},
										{
											"begin": 2584,
											"end": 2608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2584,
											"end": 2608,
											"name": "tag",
											"source": 9,
											"value": "273"
										},
										{
											"begin": 2584,
											"end": 2608,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2577,
											"end": 2582,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2574,
											"end": 2609,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2564,
											"end": 2627,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "274"
										},
										{
											"begin": 2564,
											"end": 2627,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2623,
											"end": 2624,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2620,
											"end": 2621,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2613,
											"end": 2625,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2564,
											"end": 2627,
											"name": "tag",
											"source": 9,
											"value": "274"
										},
										{
											"begin": 2564,
											"end": 2627,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2511,
											"end": 2633,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2511,
											"end": 2633,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2639,
											"end": 2778,
											"name": "tag",
											"source": 9,
											"value": "200"
										},
										{
											"begin": 2639,
											"end": 2778,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2685,
											"end": 2690,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2723,
											"end": 2729,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2710,
											"end": 2730,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 2701,
											"end": 2730,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2701,
											"end": 2730,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2739,
											"end": 2772,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "276"
										},
										{
											"begin": 2766,
											"end": 2771,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2739,
											"end": 2772,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "199"
										},
										{
											"begin": 2739,
											"end": 2772,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2739,
											"end": 2772,
											"name": "tag",
											"source": 9,
											"value": "276"
										},
										{
											"begin": 2739,
											"end": 2772,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2639,
											"end": 2778,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2639,
											"end": 2778,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2639,
											"end": 2778,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2639,
											"end": 2778,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2639,
											"end": 2778,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2784,
											"end": 3258,
											"name": "tag",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 2784,
											"end": 3258,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2852,
											"end": 2858,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2860,
											"end": 2866,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2909,
											"end": 2911,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2897,
											"end": 2906,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2888,
											"end": 2895,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2884,
											"end": 2907,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2880,
											"end": 2912,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 2877,
											"end": 2996,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2877,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "278"
										},
										{
											"begin": 2877,
											"end": 2996,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2915,
											"end": 2994,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "279"
										},
										{
											"begin": 2915,
											"end": 2994,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "193"
										},
										{
											"begin": 2915,
											"end": 2994,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2915,
											"end": 2994,
											"name": "tag",
											"source": 9,
											"value": "279"
										},
										{
											"begin": 2915,
											"end": 2994,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2877,
											"end": 2996,
											"name": "tag",
											"source": 9,
											"value": "278"
										},
										{
											"begin": 2877,
											"end": 2996,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3035,
											"end": 3036,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3060,
											"end": 3113,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "280"
										},
										{
											"begin": 3105,
											"end": 3112,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3096,
											"end": 3102,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3085,
											"end": 3094,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 3081,
											"end": 3103,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3060,
											"end": 3113,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 3060,
											"end": 3113,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3060,
											"end": 3113,
											"name": "tag",
											"source": 9,
											"value": "280"
										},
										{
											"begin": 3060,
											"end": 3113,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3050,
											"end": 3113,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3050,
											"end": 3113,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3006,
											"end": 3123,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3162,
											"end": 3164,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3188,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "281"
										},
										{
											"begin": 3233,
											"end": 3240,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3224,
											"end": 3230,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3213,
											"end": 3222,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 3209,
											"end": 3231,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3188,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "200"
										},
										{
											"begin": 3188,
											"end": 3241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3188,
											"end": 3241,
											"name": "tag",
											"source": 9,
											"value": "281"
										},
										{
											"begin": 3188,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3178,
											"end": 3241,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3178,
											"end": 3241,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3133,
											"end": 3251,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2784,
											"end": 3258,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2784,
											"end": 3258,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2784,
											"end": 3258,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2784,
											"end": 3258,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2784,
											"end": 3258,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2784,
											"end": 3258,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3264,
											"end": 3354,
											"name": "tag",
											"source": 9,
											"value": "201"
										},
										{
											"begin": 3264,
											"end": 3354,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3298,
											"end": 3305,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3341,
											"end": 3346,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3334,
											"end": 3347,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3327,
											"end": 3348,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3316,
											"end": 3348,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3316,
											"end": 3348,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3264,
											"end": 3354,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3264,
											"end": 3354,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3264,
											"end": 3354,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3264,
											"end": 3354,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3360,
											"end": 3469,
											"name": "tag",
											"source": 9,
											"value": "202"
										},
										{
											"begin": 3360,
											"end": 3469,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3441,
											"end": 3462,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "284"
										},
										{
											"begin": 3456,
											"end": 3461,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3441,
											"end": 3462,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "201"
										},
										{
											"begin": 3441,
											"end": 3462,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3441,
											"end": 3462,
											"name": "tag",
											"source": 9,
											"value": "284"
										},
										{
											"begin": 3441,
											"end": 3462,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3436,
											"end": 3439,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3429,
											"end": 3463,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3360,
											"end": 3469,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3360,
											"end": 3469,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3360,
											"end": 3469,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3475,
											"end": 3685,
											"name": "tag",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 3475,
											"end": 3685,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3562,
											"end": 3566,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3600,
											"end": 3602,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3589,
											"end": 3598,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3585,
											"end": 3603,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3577,
											"end": 3603,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3577,
											"end": 3603,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3613,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "286"
										},
										{
											"begin": 3675,
											"end": 3676,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3664,
											"end": 3673,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3660,
											"end": 3677,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3651,
											"end": 3657,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3613,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "202"
										},
										{
											"begin": 3613,
											"end": 3678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3613,
											"end": 3678,
											"name": "tag",
											"source": 9,
											"value": "286"
										},
										{
											"begin": 3613,
											"end": 3678,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3475,
											"end": 3685,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3475,
											"end": 3685,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3475,
											"end": 3685,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3475,
											"end": 3685,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3475,
											"end": 3685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "tag",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3768,
											"end": 3774,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3776,
											"end": 3782,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3784,
											"end": 3790,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3833,
											"end": 3835,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 3821,
											"end": 3830,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3812,
											"end": 3819,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 3808,
											"end": 3831,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3804,
											"end": 3836,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "288"
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "289"
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "193"
										},
										{
											"begin": 3839,
											"end": 3918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "tag",
											"source": 9,
											"value": "289"
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "tag",
											"source": 9,
											"value": "288"
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3959,
											"end": 3960,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "290"
										},
										{
											"begin": 4029,
											"end": 4036,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 4020,
											"end": 4026,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4009,
											"end": 4018,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 4005,
											"end": 4027,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 3984,
											"end": 4037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "tag",
											"source": 9,
											"value": "290"
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3974,
											"end": 4037,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 3974,
											"end": 4037,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3930,
											"end": 4047,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4086,
											"end": 4088,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "291"
										},
										{
											"begin": 4157,
											"end": 4164,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 4148,
											"end": 4154,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4137,
											"end": 4146,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 4133,
											"end": 4155,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 4112,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "tag",
											"source": 9,
											"value": "291"
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4102,
											"end": 4165,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4102,
											"end": 4165,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4057,
											"end": 4175,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4214,
											"end": 4216,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "292"
										},
										{
											"begin": 4285,
											"end": 4292,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 4276,
											"end": 4282,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4265,
											"end": 4274,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 4261,
											"end": 4283,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "200"
										},
										{
											"begin": 4240,
											"end": 4293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "tag",
											"source": 9,
											"value": "292"
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4185,
											"end": 4303,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3691,
											"end": 4310,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4316,
											"end": 4645,
											"name": "tag",
											"source": 9,
											"value": "48"
										},
										{
											"begin": 4316,
											"end": 4645,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4375,
											"end": 4381,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4424,
											"end": 4426,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4412,
											"end": 4421,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4403,
											"end": 4410,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4399,
											"end": 4422,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4395,
											"end": 4427,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 4392,
											"end": 4511,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4392,
											"end": 4511,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "294"
										},
										{
											"begin": 4392,
											"end": 4511,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4430,
											"end": 4509,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "295"
										},
										{
											"begin": 4430,
											"end": 4509,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "193"
										},
										{
											"begin": 4430,
											"end": 4509,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4430,
											"end": 4509,
											"name": "tag",
											"source": 9,
											"value": "295"
										},
										{
											"begin": 4430,
											"end": 4509,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4392,
											"end": 4511,
											"name": "tag",
											"source": 9,
											"value": "294"
										},
										{
											"begin": 4392,
											"end": 4511,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4550,
											"end": 4551,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4575,
											"end": 4628,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "296"
										},
										{
											"begin": 4620,
											"end": 4627,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4611,
											"end": 4617,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4600,
											"end": 4609,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4596,
											"end": 4618,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4575,
											"end": 4628,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "200"
										},
										{
											"begin": 4575,
											"end": 4628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4575,
											"end": 4628,
											"name": "tag",
											"source": 9,
											"value": "296"
										},
										{
											"begin": 4575,
											"end": 4628,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4565,
											"end": 4628,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4565,
											"end": 4628,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4521,
											"end": 4638,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4316,
											"end": 4645,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4316,
											"end": 4645,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4316,
											"end": 4645,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4316,
											"end": 4645,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4316,
											"end": 4645,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4651,
											"end": 4737,
											"name": "tag",
											"source": 9,
											"value": "203"
										},
										{
											"begin": 4651,
											"end": 4737,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4686,
											"end": 4693,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4726,
											"end": 4730,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 4719,
											"end": 4724,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4715,
											"end": 4731,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4704,
											"end": 4731,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4704,
											"end": 4731,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4651,
											"end": 4737,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4651,
											"end": 4737,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4651,
											"end": 4737,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4651,
											"end": 4737,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4743,
											"end": 4855,
											"name": "tag",
											"source": 9,
											"value": "204"
										},
										{
											"begin": 4743,
											"end": 4855,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4826,
											"end": 4848,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "299"
										},
										{
											"begin": 4842,
											"end": 4847,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4826,
											"end": 4848,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "203"
										},
										{
											"begin": 4826,
											"end": 4848,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4826,
											"end": 4848,
											"name": "tag",
											"source": 9,
											"value": "299"
										},
										{
											"begin": 4826,
											"end": 4848,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4821,
											"end": 4824,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4814,
											"end": 4849,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4743,
											"end": 4855,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4743,
											"end": 4855,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4743,
											"end": 4855,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4861,
											"end": 5075,
											"name": "tag",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 4861,
											"end": 5075,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4950,
											"end": 4954,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4988,
											"end": 4990,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4977,
											"end": 4986,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4973,
											"end": 4991,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4965,
											"end": 4991,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4965,
											"end": 4991,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5001,
											"end": 5068,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "301"
										},
										{
											"begin": 5065,
											"end": 5066,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5054,
											"end": 5063,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5050,
											"end": 5067,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5041,
											"end": 5047,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5001,
											"end": 5068,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "204"
										},
										{
											"begin": 5001,
											"end": 5068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5001,
											"end": 5068,
											"name": "tag",
											"source": 9,
											"value": "301"
										},
										{
											"begin": 5001,
											"end": 5068,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4861,
											"end": 5075,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4861,
											"end": 5075,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4861,
											"end": 5075,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4861,
											"end": 5075,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4861,
											"end": 5075,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "tag",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5140,
											"end": 5146,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5189,
											"end": 5191,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5177,
											"end": 5186,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5168,
											"end": 5175,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5164,
											"end": 5187,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5160,
											"end": 5192,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 5157,
											"end": 5276,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5157,
											"end": 5276,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "303"
										},
										{
											"begin": 5157,
											"end": 5276,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5195,
											"end": 5274,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "304"
										},
										{
											"begin": 5195,
											"end": 5274,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "193"
										},
										{
											"begin": 5195,
											"end": 5274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5195,
											"end": 5274,
											"name": "tag",
											"source": 9,
											"value": "304"
										},
										{
											"begin": 5195,
											"end": 5274,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5157,
											"end": 5276,
											"name": "tag",
											"source": 9,
											"value": "303"
										},
										{
											"begin": 5157,
											"end": 5276,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5315,
											"end": 5316,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5340,
											"end": 5393,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "305"
										},
										{
											"begin": 5385,
											"end": 5392,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5376,
											"end": 5382,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5365,
											"end": 5374,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 5361,
											"end": 5383,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5340,
											"end": 5393,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 5340,
											"end": 5393,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5340,
											"end": 5393,
											"name": "tag",
											"source": 9,
											"value": "305"
										},
										{
											"begin": 5340,
											"end": 5393,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5330,
											"end": 5393,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5330,
											"end": 5393,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5286,
											"end": 5403,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5081,
											"end": 5410,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5416,
											"end": 5534,
											"name": "tag",
											"source": 9,
											"value": "205"
										},
										{
											"begin": 5416,
											"end": 5534,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5503,
											"end": 5527,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "307"
										},
										{
											"begin": 5521,
											"end": 5526,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5503,
											"end": 5527,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "196"
										},
										{
											"begin": 5503,
											"end": 5527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5503,
											"end": 5527,
											"name": "tag",
											"source": 9,
											"value": "307"
										},
										{
											"begin": 5503,
											"end": 5527,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5498,
											"end": 5501,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5491,
											"end": 5528,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5416,
											"end": 5534,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5416,
											"end": 5534,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5416,
											"end": 5534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5540,
											"end": 5762,
											"name": "tag",
											"source": 9,
											"value": "67"
										},
										{
											"begin": 5540,
											"end": 5762,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5633,
											"end": 5637,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5671,
											"end": 5673,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5660,
											"end": 5669,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5656,
											"end": 5674,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5648,
											"end": 5674,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5648,
											"end": 5674,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5684,
											"end": 5755,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "309"
										},
										{
											"begin": 5752,
											"end": 5753,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5741,
											"end": 5750,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5737,
											"end": 5754,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5728,
											"end": 5734,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5684,
											"end": 5755,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "205"
										},
										{
											"begin": 5684,
											"end": 5755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5684,
											"end": 5755,
											"name": "tag",
											"source": 9,
											"value": "309"
										},
										{
											"begin": 5684,
											"end": 5755,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5540,
											"end": 5762,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5540,
											"end": 5762,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5540,
											"end": 5762,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5540,
											"end": 5762,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5540,
											"end": 5762,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "tag",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5836,
											"end": 5842,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5844,
											"end": 5850,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5893,
											"end": 5895,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5881,
											"end": 5890,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5872,
											"end": 5879,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 5868,
											"end": 5891,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5864,
											"end": 5896,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 5861,
											"end": 5980,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5861,
											"end": 5980,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "311"
										},
										{
											"begin": 5861,
											"end": 5980,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5899,
											"end": 5978,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "312"
										},
										{
											"begin": 5899,
											"end": 5978,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "193"
										},
										{
											"begin": 5899,
											"end": 5978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5899,
											"end": 5978,
											"name": "tag",
											"source": 9,
											"value": "312"
										},
										{
											"begin": 5899,
											"end": 5978,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5861,
											"end": 5980,
											"name": "tag",
											"source": 9,
											"value": "311"
										},
										{
											"begin": 5861,
											"end": 5980,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6019,
											"end": 6020,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6044,
											"end": 6097,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "313"
										},
										{
											"begin": 6089,
											"end": 6096,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6080,
											"end": 6086,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6069,
											"end": 6078,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 6065,
											"end": 6087,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6044,
											"end": 6097,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 6044,
											"end": 6097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6044,
											"end": 6097,
											"name": "tag",
											"source": 9,
											"value": "313"
										},
										{
											"begin": 6044,
											"end": 6097,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6034,
											"end": 6097,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6034,
											"end": 6097,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5990,
											"end": 6107,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6146,
											"end": 6148,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6172,
											"end": 6225,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "314"
										},
										{
											"begin": 6217,
											"end": 6224,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6208,
											"end": 6214,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6197,
											"end": 6206,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 6193,
											"end": 6215,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6172,
											"end": 6225,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 6172,
											"end": 6225,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6172,
											"end": 6225,
											"name": "tag",
											"source": 9,
											"value": "314"
										},
										{
											"begin": 6172,
											"end": 6225,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6162,
											"end": 6225,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6162,
											"end": 6225,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6117,
											"end": 6235,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5768,
											"end": 6242,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6248,
											"end": 6365,
											"name": "tag",
											"source": 9,
											"value": "206"
										},
										{
											"begin": 6248,
											"end": 6365,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6357,
											"end": 6358,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6354,
											"end": 6355,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6347,
											"end": 6359,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 6371,
											"end": 6488,
											"name": "tag",
											"source": 9,
											"value": "207"
										},
										{
											"begin": 6371,
											"end": 6488,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6480,
											"end": 6481,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6477,
											"end": 6478,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6470,
											"end": 6482,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 6494,
											"end": 6674,
											"name": "tag",
											"source": 9,
											"value": "208"
										},
										{
											"begin": 6494,
											"end": 6674,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6542,
											"end": 6619,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6539,
											"end": 6540,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6532,
											"end": 6620,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6639,
											"end": 6643,
											"name": "PUSH",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 6636,
											"end": 6637,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6629,
											"end": 6644,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6663,
											"end": 6667,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 6660,
											"end": 6661,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6653,
											"end": 6668,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 6680,
											"end": 6961,
											"name": "tag",
											"source": 9,
											"value": "209"
										},
										{
											"begin": 6680,
											"end": 6961,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6763,
											"end": 6790,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "319"
										},
										{
											"begin": 6785,
											"end": 6789,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6763,
											"end": 6790,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "190"
										},
										{
											"begin": 6763,
											"end": 6790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6763,
											"end": 6790,
											"name": "tag",
											"source": 9,
											"value": "319"
										},
										{
											"begin": 6763,
											"end": 6790,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6755,
											"end": 6761,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6751,
											"end": 6791,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6893,
											"end": 6899,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6881,
											"end": 6891,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6878,
											"end": 6900,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 6857,
											"end": 6875,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6845,
											"end": 6855,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6842,
											"end": 6876,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 6839,
											"end": 6901,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 6836,
											"end": 6924,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6836,
											"end": 6924,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "320"
										},
										{
											"begin": 6836,
											"end": 6924,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6904,
											"end": 6922,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "321"
										},
										{
											"begin": 6904,
											"end": 6922,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "208"
										},
										{
											"begin": 6904,
											"end": 6922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6904,
											"end": 6922,
											"name": "tag",
											"source": 9,
											"value": "321"
										},
										{
											"begin": 6904,
											"end": 6922,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6836,
											"end": 6924,
											"name": "tag",
											"source": 9,
											"value": "320"
										},
										{
											"begin": 6836,
											"end": 6924,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6944,
											"end": 6954,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6940,
											"end": 6942,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6933,
											"end": 6955,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6723,
											"end": 6961,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6680,
											"end": 6961,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6680,
											"end": 6961,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6680,
											"end": 6961,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6967,
											"end": 7096,
											"name": "tag",
											"source": 9,
											"value": "210"
										},
										{
											"begin": 6967,
											"end": 7096,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7001,
											"end": 7007,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7028,
											"end": 7048,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "323"
										},
										{
											"begin": 7028,
											"end": 7048,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "192"
										},
										{
											"begin": 7028,
											"end": 7048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7028,
											"end": 7048,
											"name": "tag",
											"source": 9,
											"value": "323"
										},
										{
											"begin": 7028,
											"end": 7048,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7018,
											"end": 7048,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7018,
											"end": 7048,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7057,
											"end": 7090,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "324"
										},
										{
											"begin": 7085,
											"end": 7089,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7077,
											"end": 7083,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7057,
											"end": 7090,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "209"
										},
										{
											"begin": 7057,
											"end": 7090,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7057,
											"end": 7090,
											"name": "tag",
											"source": 9,
											"value": "324"
										},
										{
											"begin": 7057,
											"end": 7090,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6967,
											"end": 7096,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6967,
											"end": 7096,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6967,
											"end": 7096,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6967,
											"end": 7096,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7102,
											"end": 7410,
											"name": "tag",
											"source": 9,
											"value": "211"
										},
										{
											"begin": 7102,
											"end": 7410,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7164,
											"end": 7168,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7254,
											"end": 7272,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7246,
											"end": 7252,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7243,
											"end": 7273,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 7240,
											"end": 7296,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7240,
											"end": 7296,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "326"
										},
										{
											"begin": 7240,
											"end": 7296,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7276,
											"end": 7294,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "327"
										},
										{
											"begin": 7276,
											"end": 7294,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "208"
										},
										{
											"begin": 7276,
											"end": 7294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7276,
											"end": 7294,
											"name": "tag",
											"source": 9,
											"value": "327"
										},
										{
											"begin": 7276,
											"end": 7294,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7240,
											"end": 7296,
											"name": "tag",
											"source": 9,
											"value": "326"
										},
										{
											"begin": 7240,
											"end": 7296,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7314,
											"end": 7343,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "328"
										},
										{
											"begin": 7336,
											"end": 7342,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7314,
											"end": 7343,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "190"
										},
										{
											"begin": 7314,
											"end": 7343,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7314,
											"end": 7343,
											"name": "tag",
											"source": 9,
											"value": "328"
										},
										{
											"begin": 7314,
											"end": 7343,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7306,
											"end": 7343,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7306,
											"end": 7343,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7398,
											"end": 7402,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7392,
											"end": 7396,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7388,
											"end": 7403,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7380,
											"end": 7403,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7380,
											"end": 7403,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7102,
											"end": 7410,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7102,
											"end": 7410,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7102,
											"end": 7410,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7102,
											"end": 7410,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7416,
											"end": 7564,
											"name": "tag",
											"source": 9,
											"value": "212"
										},
										{
											"begin": 7416,
											"end": 7564,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7514,
											"end": 7520,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7509,
											"end": 7512,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7504,
											"end": 7507,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7491,
											"end": 7521,
											"name": "CALLDATACOPY",
											"source": 9
										},
										{
											"begin": 7555,
											"end": 7556,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7546,
											"end": 7552,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7541,
											"end": 7544,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7537,
											"end": 7553,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7530,
											"end": 7557,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7416,
											"end": 7564,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7416,
											"end": 7564,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7416,
											"end": 7564,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7416,
											"end": 7564,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7570,
											"end": 7995,
											"name": "tag",
											"source": 9,
											"value": "213"
										},
										{
											"begin": 7570,
											"end": 7995,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7648,
											"end": 7653,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7673,
											"end": 7739,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "331"
										},
										{
											"begin": 7689,
											"end": 7738,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "332"
										},
										{
											"begin": 7731,
											"end": 7737,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7689,
											"end": 7738,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "211"
										},
										{
											"begin": 7689,
											"end": 7738,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7689,
											"end": 7738,
											"name": "tag",
											"source": 9,
											"value": "332"
										},
										{
											"begin": 7689,
											"end": 7738,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7673,
											"end": 7739,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "210"
										},
										{
											"begin": 7673,
											"end": 7739,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7673,
											"end": 7739,
											"name": "tag",
											"source": 9,
											"value": "331"
										},
										{
											"begin": 7673,
											"end": 7739,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7664,
											"end": 7739,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7664,
											"end": 7739,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7762,
											"end": 7768,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7755,
											"end": 7760,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7748,
											"end": 7769,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7800,
											"end": 7804,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7793,
											"end": 7798,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7789,
											"end": 7805,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7838,
											"end": 7841,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7829,
											"end": 7835,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7824,
											"end": 7827,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7820,
											"end": 7836,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7817,
											"end": 7842,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 7814,
											"end": 7926,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7814,
											"end": 7926,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "333"
										},
										{
											"begin": 7814,
											"end": 7926,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7845,
											"end": 7924,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "334"
										},
										{
											"begin": 7845,
											"end": 7924,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "207"
										},
										{
											"begin": 7845,
											"end": 7924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7845,
											"end": 7924,
											"name": "tag",
											"source": 9,
											"value": "334"
										},
										{
											"begin": 7845,
											"end": 7924,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7814,
											"end": 7926,
											"name": "tag",
											"source": 9,
											"value": "333"
										},
										{
											"begin": 7814,
											"end": 7926,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7935,
											"end": 7989,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "335"
										},
										{
											"begin": 7982,
											"end": 7988,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7977,
											"end": 7980,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7972,
											"end": 7975,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 7935,
											"end": 7989,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "212"
										},
										{
											"begin": 7935,
											"end": 7989,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7935,
											"end": 7989,
											"name": "tag",
											"source": 9,
											"value": "335"
										},
										{
											"begin": 7935,
											"end": 7989,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7654,
											"end": 7995,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7570,
											"end": 7995,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 7570,
											"end": 7995,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7570,
											"end": 7995,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7570,
											"end": 7995,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7570,
											"end": 7995,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7570,
											"end": 7995,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8015,
											"end": 8355,
											"name": "tag",
											"source": 9,
											"value": "214"
										},
										{
											"begin": 8015,
											"end": 8355,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8071,
											"end": 8076,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8120,
											"end": 8123,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8113,
											"end": 8117,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 8105,
											"end": 8111,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8101,
											"end": 8118,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8097,
											"end": 8124,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 8087,
											"end": 8209,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "337"
										},
										{
											"begin": 8087,
											"end": 8209,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8128,
											"end": 8207,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "338"
										},
										{
											"begin": 8128,
											"end": 8207,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "206"
										},
										{
											"begin": 8128,
											"end": 8207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8128,
											"end": 8207,
											"name": "tag",
											"source": 9,
											"value": "338"
										},
										{
											"begin": 8128,
											"end": 8207,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8087,
											"end": 8209,
											"name": "tag",
											"source": 9,
											"value": "337"
										},
										{
											"begin": 8087,
											"end": 8209,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8245,
											"end": 8251,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8232,
											"end": 8252,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 8270,
											"end": 8349,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "339"
										},
										{
											"begin": 8345,
											"end": 8348,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8337,
											"end": 8343,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8330,
											"end": 8334,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8322,
											"end": 8328,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 8318,
											"end": 8335,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8270,
											"end": 8349,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "213"
										},
										{
											"begin": 8270,
											"end": 8349,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8270,
											"end": 8349,
											"name": "tag",
											"source": 9,
											"value": "339"
										},
										{
											"begin": 8270,
											"end": 8349,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8261,
											"end": 8349,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8261,
											"end": 8349,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8077,
											"end": 8355,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8015,
											"end": 8355,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8015,
											"end": 8355,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8015,
											"end": 8355,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8015,
											"end": 8355,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8015,
											"end": 8355,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8361,
											"end": 9778,
											"name": "tag",
											"source": 9,
											"value": "85"
										},
										{
											"begin": 8361,
											"end": 9778,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8485,
											"end": 8491,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8493,
											"end": 8499,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8501,
											"end": 8507,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8509,
											"end": 8515,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8517,
											"end": 8523,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8525,
											"end": 8531,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8574,
											"end": 8577,
											"name": "PUSH",
											"source": 9,
											"value": "C0"
										},
										{
											"begin": 8562,
											"end": 8571,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 8553,
											"end": 8560,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 8549,
											"end": 8572,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8545,
											"end": 8578,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 8542,
											"end": 8662,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8542,
											"end": 8662,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "341"
										},
										{
											"begin": 8542,
											"end": 8662,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8581,
											"end": 8660,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "342"
										},
										{
											"begin": 8581,
											"end": 8660,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "193"
										},
										{
											"begin": 8581,
											"end": 8660,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8581,
											"end": 8660,
											"name": "tag",
											"source": 9,
											"value": "342"
										},
										{
											"begin": 8581,
											"end": 8660,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8542,
											"end": 8662,
											"name": "tag",
											"source": 9,
											"value": "341"
										},
										{
											"begin": 8542,
											"end": 8662,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8701,
											"end": 8702,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8726,
											"end": 8779,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "343"
										},
										{
											"begin": 8771,
											"end": 8778,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 8762,
											"end": 8768,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8751,
											"end": 8760,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 8747,
											"end": 8769,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8726,
											"end": 8779,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 8726,
											"end": 8779,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8726,
											"end": 8779,
											"name": "tag",
											"source": 9,
											"value": "343"
										},
										{
											"begin": 8726,
											"end": 8779,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8716,
											"end": 8779,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 8716,
											"end": 8779,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8672,
											"end": 8789,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8828,
											"end": 8830,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8854,
											"end": 8907,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "344"
										},
										{
											"begin": 8899,
											"end": 8906,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 8890,
											"end": 8896,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8879,
											"end": 8888,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 8875,
											"end": 8897,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8854,
											"end": 8907,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 8854,
											"end": 8907,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8854,
											"end": 8907,
											"name": "tag",
											"source": 9,
											"value": "344"
										},
										{
											"begin": 8854,
											"end": 8907,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8844,
											"end": 8907,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 8844,
											"end": 8907,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8799,
											"end": 8917,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8956,
											"end": 8958,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8982,
											"end": 9035,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "345"
										},
										{
											"begin": 9027,
											"end": 9034,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 9018,
											"end": 9024,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9007,
											"end": 9016,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 9003,
											"end": 9025,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8982,
											"end": 9035,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "200"
										},
										{
											"begin": 8982,
											"end": 9035,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8982,
											"end": 9035,
											"name": "tag",
											"source": 9,
											"value": "345"
										},
										{
											"begin": 8982,
											"end": 9035,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8972,
											"end": 9035,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 8972,
											"end": 9035,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8927,
											"end": 9045,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9084,
											"end": 9086,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 9110,
											"end": 9163,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "346"
										},
										{
											"begin": 9155,
											"end": 9162,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 9146,
											"end": 9152,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9135,
											"end": 9144,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 9131,
											"end": 9153,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9110,
											"end": 9163,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "200"
										},
										{
											"begin": 9110,
											"end": 9163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9110,
											"end": 9163,
											"name": "tag",
											"source": 9,
											"value": "346"
										},
										{
											"begin": 9110,
											"end": 9163,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9100,
											"end": 9163,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 9100,
											"end": 9163,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9055,
											"end": 9173,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9240,
											"end": 9243,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 9229,
											"end": 9238,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 9225,
											"end": 9244,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9212,
											"end": 9245,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 9272,
											"end": 9290,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9264,
											"end": 9270,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9261,
											"end": 9291,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 9258,
											"end": 9375,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9258,
											"end": 9375,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "347"
										},
										{
											"begin": 9258,
											"end": 9375,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9294,
											"end": 9373,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "348"
										},
										{
											"begin": 9294,
											"end": 9373,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "194"
										},
										{
											"begin": 9294,
											"end": 9373,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9294,
											"end": 9373,
											"name": "tag",
											"source": 9,
											"value": "348"
										},
										{
											"begin": 9294,
											"end": 9373,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9258,
											"end": 9375,
											"name": "tag",
											"source": 9,
											"value": "347"
										},
										{
											"begin": 9258,
											"end": 9375,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9399,
											"end": 9462,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "349"
										},
										{
											"begin": 9454,
											"end": 9461,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 9445,
											"end": 9451,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9434,
											"end": 9443,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 9430,
											"end": 9452,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9399,
											"end": 9462,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "214"
										},
										{
											"begin": 9399,
											"end": 9462,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9399,
											"end": 9462,
											"name": "tag",
											"source": 9,
											"value": "349"
										},
										{
											"begin": 9399,
											"end": 9462,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9389,
											"end": 9462,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 9389,
											"end": 9462,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9183,
											"end": 9472,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9539,
											"end": 9542,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 9528,
											"end": 9537,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 9524,
											"end": 9543,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9511,
											"end": 9544,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 9571,
											"end": 9589,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9563,
											"end": 9569,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9560,
											"end": 9590,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 9557,
											"end": 9674,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9557,
											"end": 9674,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "350"
										},
										{
											"begin": 9557,
											"end": 9674,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9593,
											"end": 9672,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "351"
										},
										{
											"begin": 9593,
											"end": 9672,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "194"
										},
										{
											"begin": 9593,
											"end": 9672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9593,
											"end": 9672,
											"name": "tag",
											"source": 9,
											"value": "351"
										},
										{
											"begin": 9593,
											"end": 9672,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9557,
											"end": 9674,
											"name": "tag",
											"source": 9,
											"value": "350"
										},
										{
											"begin": 9557,
											"end": 9674,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9698,
											"end": 9761,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "352"
										},
										{
											"begin": 9753,
											"end": 9760,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 9744,
											"end": 9750,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9733,
											"end": 9742,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 9729,
											"end": 9751,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9698,
											"end": 9761,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "214"
										},
										{
											"begin": 9698,
											"end": 9761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9698,
											"end": 9761,
											"name": "tag",
											"source": 9,
											"value": "352"
										},
										{
											"begin": 9698,
											"end": 9761,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9688,
											"end": 9761,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9688,
											"end": 9761,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9482,
											"end": 9771,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8361,
											"end": 9778,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8361,
											"end": 9778,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 8361,
											"end": 9778,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8361,
											"end": 9778,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8361,
											"end": 9778,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 8361,
											"end": 9778,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8361,
											"end": 9778,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8361,
											"end": 9778,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 8361,
											"end": 9778,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9784,
											"end": 9844,
											"name": "tag",
											"source": 9,
											"value": "215"
										},
										{
											"begin": 9784,
											"end": 9844,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9812,
											"end": 9815,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9833,
											"end": 9838,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9826,
											"end": 9838,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9826,
											"end": 9838,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9784,
											"end": 9844,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9784,
											"end": 9844,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9784,
											"end": 9844,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9784,
											"end": 9844,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9850,
											"end": 9992,
											"name": "tag",
											"source": 9,
											"value": "216"
										},
										{
											"begin": 9850,
											"end": 9992,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9900,
											"end": 9909,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9933,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "355"
										},
										{
											"begin": 9951,
											"end": 9985,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "356"
										},
										{
											"begin": 9960,
											"end": 9984,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "357"
										},
										{
											"begin": 9978,
											"end": 9983,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 9960,
											"end": 9984,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "195"
										},
										{
											"begin": 9960,
											"end": 9984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9960,
											"end": 9984,
											"name": "tag",
											"source": 9,
											"value": "357"
										},
										{
											"begin": 9960,
											"end": 9984,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9951,
											"end": 9985,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "215"
										},
										{
											"begin": 9951,
											"end": 9985,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9951,
											"end": 9985,
											"name": "tag",
											"source": 9,
											"value": "356"
										},
										{
											"begin": 9951,
											"end": 9985,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9933,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "195"
										},
										{
											"begin": 9933,
											"end": 9986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9933,
											"end": 9986,
											"name": "tag",
											"source": 9,
											"value": "355"
										},
										{
											"begin": 9933,
											"end": 9986,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9920,
											"end": 9986,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9920,
											"end": 9986,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9850,
											"end": 9992,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9850,
											"end": 9992,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9850,
											"end": 9992,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9850,
											"end": 9992,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9998,
											"end": 10124,
											"name": "tag",
											"source": 9,
											"value": "217"
										},
										{
											"begin": 9998,
											"end": 10124,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10048,
											"end": 10057,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10081,
											"end": 10118,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "359"
										},
										{
											"begin": 10112,
											"end": 10117,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10081,
											"end": 10118,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "216"
										},
										{
											"begin": 10081,
											"end": 10118,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10081,
											"end": 10118,
											"name": "tag",
											"source": 9,
											"value": "359"
										},
										{
											"begin": 10081,
											"end": 10118,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10068,
											"end": 10118,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10068,
											"end": 10118,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9998,
											"end": 10124,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9998,
											"end": 10124,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9998,
											"end": 10124,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9998,
											"end": 10124,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10130,
											"end": 10270,
											"name": "tag",
											"source": 9,
											"value": "218"
										},
										{
											"begin": 10130,
											"end": 10270,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10194,
											"end": 10203,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10227,
											"end": 10264,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "361"
										},
										{
											"begin": 10258,
											"end": 10263,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10227,
											"end": 10264,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "217"
										},
										{
											"begin": 10227,
											"end": 10264,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10227,
											"end": 10264,
											"name": "tag",
											"source": 9,
											"value": "361"
										},
										{
											"begin": 10227,
											"end": 10264,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10214,
											"end": 10264,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10214,
											"end": 10264,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10130,
											"end": 10270,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10130,
											"end": 10270,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10130,
											"end": 10270,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10130,
											"end": 10270,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10276,
											"end": 10435,
											"name": "tag",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 10276,
											"end": 10435,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10377,
											"end": 10428,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "363"
										},
										{
											"begin": 10422,
											"end": 10427,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10377,
											"end": 10428,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "218"
										},
										{
											"begin": 10377,
											"end": 10428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10377,
											"end": 10428,
											"name": "tag",
											"source": 9,
											"value": "363"
										},
										{
											"begin": 10377,
											"end": 10428,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10372,
											"end": 10375,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10365,
											"end": 10429,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10276,
											"end": 10435,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10276,
											"end": 10435,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10276,
											"end": 10435,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10441,
											"end": 10691,
											"name": "tag",
											"source": 9,
											"value": "93"
										},
										{
											"begin": 10441,
											"end": 10691,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10548,
											"end": 10552,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10586,
											"end": 10588,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10575,
											"end": 10584,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10571,
											"end": 10589,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10563,
											"end": 10589,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10563,
											"end": 10589,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10599,
											"end": 10684,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "365"
										},
										{
											"begin": 10681,
											"end": 10682,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10670,
											"end": 10679,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10666,
											"end": 10683,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10657,
											"end": 10663,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 10599,
											"end": 10684,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 10599,
											"end": 10684,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10599,
											"end": 10684,
											"name": "tag",
											"source": 9,
											"value": "365"
										},
										{
											"begin": 10599,
											"end": 10684,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10441,
											"end": 10691,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 10441,
											"end": 10691,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10441,
											"end": 10691,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10441,
											"end": 10691,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10441,
											"end": 10691,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10697,
											"end": 10877,
											"name": "tag",
											"source": 9,
											"value": "220"
										},
										{
											"begin": 10697,
											"end": 10877,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10745,
											"end": 10822,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10742,
											"end": 10743,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10735,
											"end": 10823,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10842,
											"end": 10846,
											"name": "PUSH",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 10839,
											"end": 10840,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 10832,
											"end": 10847,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10866,
											"end": 10870,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 10863,
											"end": 10864,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10856,
											"end": 10871,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 10883,
											"end": 11203,
											"name": "tag",
											"source": 9,
											"value": "95"
										},
										{
											"begin": 10883,
											"end": 11203,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10927,
											"end": 10933,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10964,
											"end": 10965,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 10958,
											"end": 10962,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10954,
											"end": 10966,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 10944,
											"end": 10966,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10944,
											"end": 10966,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11011,
											"end": 11012,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 11005,
											"end": 11009,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11001,
											"end": 11013,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11032,
											"end": 11050,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11022,
											"end": 11103,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "368"
										},
										{
											"begin": 11022,
											"end": 11103,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11088,
											"end": 11092,
											"name": "PUSH",
											"source": 9,
											"value": "7F"
										},
										{
											"begin": 11080,
											"end": 11086,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11076,
											"end": 11093,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11066,
											"end": 11093,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11066,
											"end": 11093,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11022,
											"end": 11103,
											"name": "tag",
											"source": 9,
											"value": "368"
										},
										{
											"begin": 11022,
											"end": 11103,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11150,
											"end": 11152,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11142,
											"end": 11148,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11139,
											"end": 11153,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 11119,
											"end": 11137,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11116,
											"end": 11154,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 11113,
											"end": 11197,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "369"
										},
										{
											"begin": 11113,
											"end": 11197,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11169,
											"end": 11187,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "370"
										},
										{
											"begin": 11169,
											"end": 11187,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "220"
										},
										{
											"begin": 11169,
											"end": 11187,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11169,
											"end": 11187,
											"name": "tag",
											"source": 9,
											"value": "370"
										},
										{
											"begin": 11169,
											"end": 11187,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11113,
											"end": 11197,
											"name": "tag",
											"source": 9,
											"value": "369"
										},
										{
											"begin": 11113,
											"end": 11197,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10934,
											"end": 11203,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10883,
											"end": 11203,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10883,
											"end": 11203,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10883,
											"end": 11203,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10883,
											"end": 11203,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11209,
											"end": 11389,
											"name": "tag",
											"source": 9,
											"value": "221"
										},
										{
											"begin": 11209,
											"end": 11389,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11257,
											"end": 11334,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11254,
											"end": 11255,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11247,
											"end": 11335,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11354,
											"end": 11358,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 11351,
											"end": 11352,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 11344,
											"end": 11359,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11378,
											"end": 11382,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 11375,
											"end": 11376,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11368,
											"end": 11383,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 11395,
											"end": 11586,
											"name": "tag",
											"source": 9,
											"value": "105"
										},
										{
											"begin": 11395,
											"end": 11586,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11435,
											"end": 11438,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11454,
											"end": 11474,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "373"
										},
										{
											"begin": 11472,
											"end": 11473,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11454,
											"end": 11474,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "185"
										},
										{
											"begin": 11454,
											"end": 11474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11454,
											"end": 11474,
											"name": "tag",
											"source": 9,
											"value": "373"
										},
										{
											"begin": 11454,
											"end": 11474,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11449,
											"end": 11474,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11449,
											"end": 11474,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11488,
											"end": 11508,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "374"
										},
										{
											"begin": 11506,
											"end": 11507,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11488,
											"end": 11508,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "185"
										},
										{
											"begin": 11488,
											"end": 11508,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11488,
											"end": 11508,
											"name": "tag",
											"source": 9,
											"value": "374"
										},
										{
											"begin": 11488,
											"end": 11508,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11483,
											"end": 11508,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 11483,
											"end": 11508,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11531,
											"end": 11532,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11528,
											"end": 11529,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11524,
											"end": 11533,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11517,
											"end": 11533,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11517,
											"end": 11533,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11552,
											"end": 11555,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11549,
											"end": 11550,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11546,
											"end": 11556,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 11543,
											"end": 11579,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 11543,
											"end": 11579,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "375"
										},
										{
											"begin": 11543,
											"end": 11579,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11559,
											"end": 11577,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "376"
										},
										{
											"begin": 11559,
											"end": 11577,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "221"
										},
										{
											"begin": 11559,
											"end": 11577,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11559,
											"end": 11577,
											"name": "tag",
											"source": 9,
											"value": "376"
										},
										{
											"begin": 11559,
											"end": 11577,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11543,
											"end": 11579,
											"name": "tag",
											"source": 9,
											"value": "375"
										},
										{
											"begin": 11543,
											"end": 11579,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11395,
											"end": 11586,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 11395,
											"end": 11586,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11395,
											"end": 11586,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11395,
											"end": 11586,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11395,
											"end": 11586,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11592,
											"end": 11786,
											"name": "tag",
											"source": 9,
											"value": "109"
										},
										{
											"begin": 11592,
											"end": 11786,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11632,
											"end": 11636,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11652,
											"end": 11672,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "378"
										},
										{
											"begin": 11670,
											"end": 11671,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11652,
											"end": 11672,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "185"
										},
										{
											"begin": 11652,
											"end": 11672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11652,
											"end": 11672,
											"name": "tag",
											"source": 9,
											"value": "378"
										},
										{
											"begin": 11652,
											"end": 11672,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11647,
											"end": 11672,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11647,
											"end": 11672,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11686,
											"end": 11706,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "379"
										},
										{
											"begin": 11704,
											"end": 11705,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11686,
											"end": 11706,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "185"
										},
										{
											"begin": 11686,
											"end": 11706,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11686,
											"end": 11706,
											"name": "tag",
											"source": 9,
											"value": "379"
										},
										{
											"begin": 11686,
											"end": 11706,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11681,
											"end": 11706,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 11681,
											"end": 11706,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11730,
											"end": 11731,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11727,
											"end": 11728,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11723,
											"end": 11732,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 11715,
											"end": 11732,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11715,
											"end": 11732,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11754,
											"end": 11755,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11748,
											"end": 11752,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11745,
											"end": 11756,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 11742,
											"end": 11779,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 11742,
											"end": 11779,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "380"
										},
										{
											"begin": 11742,
											"end": 11779,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11759,
											"end": 11777,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "381"
										},
										{
											"begin": 11759,
											"end": 11777,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "221"
										},
										{
											"begin": 11759,
											"end": 11777,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11759,
											"end": 11777,
											"name": "tag",
											"source": 9,
											"value": "381"
										},
										{
											"begin": 11759,
											"end": 11777,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11742,
											"end": 11779,
											"name": "tag",
											"source": 9,
											"value": "380"
										},
										{
											"begin": 11742,
											"end": 11779,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11592,
											"end": 11786,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 11592,
											"end": 11786,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11592,
											"end": 11786,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11592,
											"end": 11786,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11592,
											"end": 11786,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11792,
											"end": 12124,
											"name": "tag",
											"source": 9,
											"value": "112"
										},
										{
											"begin": 11792,
											"end": 12124,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11913,
											"end": 11917,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11951,
											"end": 11953,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 11940,
											"end": 11949,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11936,
											"end": 11954,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11928,
											"end": 11954,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11928,
											"end": 11954,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11964,
											"end": 12035,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "383"
										},
										{
											"begin": 12032,
											"end": 12033,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12021,
											"end": 12030,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12017,
											"end": 12034,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12008,
											"end": 12014,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 11964,
											"end": 12035,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "205"
										},
										{
											"begin": 11964,
											"end": 12035,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11964,
											"end": 12035,
											"name": "tag",
											"source": 9,
											"value": "383"
										},
										{
											"begin": 11964,
											"end": 12035,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12045,
											"end": 12117,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "384"
										},
										{
											"begin": 12113,
											"end": 12115,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12102,
											"end": 12111,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12098,
											"end": 12116,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12089,
											"end": 12095,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 12045,
											"end": 12117,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "186"
										},
										{
											"begin": 12045,
											"end": 12117,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12045,
											"end": 12117,
											"name": "tag",
											"source": 9,
											"value": "384"
										},
										{
											"begin": 12045,
											"end": 12117,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11792,
											"end": 12124,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 11792,
											"end": 12124,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 11792,
											"end": 12124,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11792,
											"end": 12124,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11792,
											"end": 12124,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11792,
											"end": 12124,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12130,
											"end": 12246,
											"name": "tag",
											"source": 9,
											"value": "222"
										},
										{
											"begin": 12130,
											"end": 12246,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12200,
											"end": 12221,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "386"
										},
										{
											"begin": 12215,
											"end": 12220,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12200,
											"end": 12221,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "201"
										},
										{
											"begin": 12200,
											"end": 12221,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12200,
											"end": 12221,
											"name": "tag",
											"source": 9,
											"value": "386"
										},
										{
											"begin": 12200,
											"end": 12221,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12193,
											"end": 12198,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12190,
											"end": 12222,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 12180,
											"end": 12240,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "387"
										},
										{
											"begin": 12180,
											"end": 12240,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 12236,
											"end": 12237,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12233,
											"end": 12234,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12226,
											"end": 12238,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 12180,
											"end": 12240,
											"name": "tag",
											"source": 9,
											"value": "387"
										},
										{
											"begin": 12180,
											"end": 12240,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12130,
											"end": 12246,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12130,
											"end": 12246,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12252,
											"end": 12389,
											"name": "tag",
											"source": 9,
											"value": "223"
										},
										{
											"begin": 12252,
											"end": 12389,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12306,
											"end": 12311,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12337,
											"end": 12343,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12331,
											"end": 12344,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 12322,
											"end": 12344,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12322,
											"end": 12344,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12353,
											"end": 12383,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "389"
										},
										{
											"begin": 12377,
											"end": 12382,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12353,
											"end": 12383,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "222"
										},
										{
											"begin": 12353,
											"end": 12383,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12353,
											"end": 12383,
											"name": "tag",
											"source": 9,
											"value": "389"
										},
										{
											"begin": 12353,
											"end": 12383,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12252,
											"end": 12389,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 12252,
											"end": 12389,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12252,
											"end": 12389,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12252,
											"end": 12389,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12252,
											"end": 12389,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12395,
											"end": 12740,
											"name": "tag",
											"source": 9,
											"value": "116"
										},
										{
											"begin": 12395,
											"end": 12740,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12462,
											"end": 12468,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12511,
											"end": 12513,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12499,
											"end": 12508,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12490,
											"end": 12497,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 12486,
											"end": 12509,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 12482,
											"end": 12514,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 12479,
											"end": 12598,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 12479,
											"end": 12598,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "391"
										},
										{
											"begin": 12479,
											"end": 12598,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 12517,
											"end": 12596,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "392"
										},
										{
											"begin": 12517,
											"end": 12596,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "193"
										},
										{
											"begin": 12517,
											"end": 12596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12517,
											"end": 12596,
											"name": "tag",
											"source": 9,
											"value": "392"
										},
										{
											"begin": 12517,
											"end": 12596,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12479,
											"end": 12598,
											"name": "tag",
											"source": 9,
											"value": "391"
										},
										{
											"begin": 12479,
											"end": 12598,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12637,
											"end": 12638,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12662,
											"end": 12723,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "393"
										},
										{
											"begin": 12715,
											"end": 12722,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 12706,
											"end": 12712,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12695,
											"end": 12704,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 12691,
											"end": 12713,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12662,
											"end": 12723,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "223"
										},
										{
											"begin": 12662,
											"end": 12723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12662,
											"end": 12723,
											"name": "tag",
											"source": 9,
											"value": "393"
										},
										{
											"begin": 12662,
											"end": 12723,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12652,
											"end": 12723,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12652,
											"end": 12723,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12608,
											"end": 12733,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12395,
											"end": 12740,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 12395,
											"end": 12740,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12395,
											"end": 12740,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12395,
											"end": 12740,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12395,
											"end": 12740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12746,
											"end": 12864,
											"name": "tag",
											"source": 9,
											"value": "224"
										},
										{
											"begin": 12746,
											"end": 12864,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12817,
											"end": 12839,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "395"
										},
										{
											"begin": 12833,
											"end": 12838,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12817,
											"end": 12839,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "203"
										},
										{
											"begin": 12817,
											"end": 12839,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12817,
											"end": 12839,
											"name": "tag",
											"source": 9,
											"value": "395"
										},
										{
											"begin": 12817,
											"end": 12839,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12810,
											"end": 12815,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12807,
											"end": 12840,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 12797,
											"end": 12858,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "396"
										},
										{
											"begin": 12797,
											"end": 12858,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 12854,
											"end": 12855,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12851,
											"end": 12852,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12844,
											"end": 12856,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 12797,
											"end": 12858,
											"name": "tag",
											"source": 9,
											"value": "396"
										},
										{
											"begin": 12797,
											"end": 12858,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12746,
											"end": 12864,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12746,
											"end": 12864,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12870,
											"end": 13009,
											"name": "tag",
											"source": 9,
											"value": "225"
										},
										{
											"begin": 12870,
											"end": 13009,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12925,
											"end": 12930,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12956,
											"end": 12962,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12950,
											"end": 12963,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 12941,
											"end": 12963,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12941,
											"end": 12963,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12972,
											"end": 13003,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "398"
										},
										{
											"begin": 12997,
											"end": 13002,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12972,
											"end": 13003,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "224"
										},
										{
											"begin": 12972,
											"end": 13003,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12972,
											"end": 13003,
											"name": "tag",
											"source": 9,
											"value": "398"
										},
										{
											"begin": 12972,
											"end": 13003,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12870,
											"end": 13009,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 12870,
											"end": 13009,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12870,
											"end": 13009,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12870,
											"end": 13009,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12870,
											"end": 13009,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13015,
											"end": 13362,
											"name": "tag",
											"source": 9,
											"value": "123"
										},
										{
											"begin": 13015,
											"end": 13362,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13083,
											"end": 13089,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13132,
											"end": 13134,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 13120,
											"end": 13129,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13111,
											"end": 13118,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 13107,
											"end": 13130,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 13103,
											"end": 13135,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 13100,
											"end": 13219,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 13100,
											"end": 13219,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "400"
										},
										{
											"begin": 13100,
											"end": 13219,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 13138,
											"end": 13217,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "401"
										},
										{
											"begin": 13138,
											"end": 13217,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "193"
										},
										{
											"begin": 13138,
											"end": 13217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13138,
											"end": 13217,
											"name": "tag",
											"source": 9,
											"value": "401"
										},
										{
											"begin": 13138,
											"end": 13217,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13100,
											"end": 13219,
											"name": "tag",
											"source": 9,
											"value": "400"
										},
										{
											"begin": 13100,
											"end": 13219,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13258,
											"end": 13259,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13283,
											"end": 13345,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "402"
										},
										{
											"begin": 13337,
											"end": 13344,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 13328,
											"end": 13334,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13317,
											"end": 13326,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 13313,
											"end": 13335,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13283,
											"end": 13345,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "225"
										},
										{
											"begin": 13283,
											"end": 13345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13283,
											"end": 13345,
											"name": "tag",
											"source": 9,
											"value": "402"
										},
										{
											"begin": 13283,
											"end": 13345,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13273,
											"end": 13345,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13273,
											"end": 13345,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13229,
											"end": 13355,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13015,
											"end": 13362,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 13015,
											"end": 13362,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13015,
											"end": 13362,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13015,
											"end": 13362,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13015,
											"end": 13362,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13368,
											"end": 13810,
											"name": "tag",
											"source": 9,
											"value": "144"
										},
										{
											"begin": 13368,
											"end": 13810,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13517,
											"end": 13521,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13555,
											"end": 13557,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 13544,
											"end": 13553,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13540,
											"end": 13558,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13532,
											"end": 13558,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13532,
											"end": 13558,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13568,
											"end": 13639,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "404"
										},
										{
											"begin": 13636,
											"end": 13637,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13625,
											"end": 13634,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13621,
											"end": 13638,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13612,
											"end": 13618,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 13568,
											"end": 13639,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "205"
										},
										{
											"begin": 13568,
											"end": 13639,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13568,
											"end": 13639,
											"name": "tag",
											"source": 9,
											"value": "404"
										},
										{
											"begin": 13568,
											"end": 13639,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13649,
											"end": 13721,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "405"
										},
										{
											"begin": 13717,
											"end": 13719,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 13706,
											"end": 13715,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13702,
											"end": 13720,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13693,
											"end": 13699,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 13649,
											"end": 13721,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "205"
										},
										{
											"begin": 13649,
											"end": 13721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13649,
											"end": 13721,
											"name": "tag",
											"source": 9,
											"value": "405"
										},
										{
											"begin": 13649,
											"end": 13721,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13731,
											"end": 13803,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "406"
										},
										{
											"begin": 13799,
											"end": 13801,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 13788,
											"end": 13797,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13784,
											"end": 13802,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13775,
											"end": 13781,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 13731,
											"end": 13803,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "186"
										},
										{
											"begin": 13731,
											"end": 13803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13731,
											"end": 13803,
											"name": "tag",
											"source": 9,
											"value": "406"
										},
										{
											"begin": 13731,
											"end": 13803,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13368,
											"end": 13810,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 13368,
											"end": 13810,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 13368,
											"end": 13810,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13368,
											"end": 13810,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13368,
											"end": 13810,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13368,
											"end": 13810,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13368,
											"end": 13810,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13816,
											"end": 13957,
											"name": "tag",
											"source": 9,
											"value": "226"
										},
										{
											"begin": 13816,
											"end": 13957,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13865,
											"end": 13869,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13888,
											"end": 13891,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13880,
											"end": 13891,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13880,
											"end": 13891,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13911,
											"end": 13914,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13908,
											"end": 13909,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13901,
											"end": 13915,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13945,
											"end": 13949,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 13942,
											"end": 13943,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13932,
											"end": 13950,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 13924,
											"end": 13950,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13924,
											"end": 13950,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13816,
											"end": 13957,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13816,
											"end": 13957,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13816,
											"end": 13957,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13816,
											"end": 13957,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13963,
											"end": 14056,
											"name": "tag",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 13963,
											"end": 14056,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14000,
											"end": 14006,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14047,
											"end": 14049,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 14042,
											"end": 14044,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 14035,
											"end": 14040,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 14031,
											"end": 14045,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14027,
											"end": 14050,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 14017,
											"end": 14050,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14017,
											"end": 14050,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13963,
											"end": 14056,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13963,
											"end": 14056,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13963,
											"end": 14056,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13963,
											"end": 14056,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14062,
											"end": 14169,
											"name": "tag",
											"source": 9,
											"value": "228"
										},
										{
											"begin": 14062,
											"end": 14169,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14106,
											"end": 14114,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14156,
											"end": 14161,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14150,
											"end": 14154,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14146,
											"end": 14162,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 14125,
											"end": 14162,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14125,
											"end": 14162,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14062,
											"end": 14169,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 14062,
											"end": 14169,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14062,
											"end": 14169,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14062,
											"end": 14169,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14062,
											"end": 14169,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14175,
											"end": 14568,
											"name": "tag",
											"source": 9,
											"value": "229"
										},
										{
											"begin": 14175,
											"end": 14568,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14244,
											"end": 14250,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14294,
											"end": 14295,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 14282,
											"end": 14292,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 14278,
											"end": 14296,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 14317,
											"end": 14414,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "411"
										},
										{
											"begin": 14347,
											"end": 14413,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14336,
											"end": 14345,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14317,
											"end": 14414,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "228"
										},
										{
											"begin": 14317,
											"end": 14414,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14317,
											"end": 14414,
											"name": "tag",
											"source": 9,
											"value": "411"
										},
										{
											"begin": 14317,
											"end": 14414,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14435,
											"end": 14474,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "412"
										},
										{
											"begin": 14465,
											"end": 14473,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 14454,
											"end": 14463,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 14435,
											"end": 14474,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "228"
										},
										{
											"begin": 14435,
											"end": 14474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14435,
											"end": 14474,
											"name": "tag",
											"source": 9,
											"value": "412"
										},
										{
											"begin": 14435,
											"end": 14474,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14423,
											"end": 14474,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 14423,
											"end": 14474,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14507,
											"end": 14511,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 14503,
											"end": 14512,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 14496,
											"end": 14501,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 14492,
											"end": 14513,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 14483,
											"end": 14513,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 14483,
											"end": 14513,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14556,
											"end": 14560,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 14546,
											"end": 14554,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 14542,
											"end": 14561,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 14535,
											"end": 14540,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 14532,
											"end": 14562,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 14522,
											"end": 14562,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 14522,
											"end": 14562,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14251,
											"end": 14568,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14251,
											"end": 14568,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14175,
											"end": 14568,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 14175,
											"end": 14568,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 14175,
											"end": 14568,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14175,
											"end": 14568,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14175,
											"end": 14568,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14175,
											"end": 14568,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14574,
											"end": 14716,
											"name": "tag",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 14574,
											"end": 14716,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14624,
											"end": 14633,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14657,
											"end": 14710,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "414"
										},
										{
											"begin": 14675,
											"end": 14709,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "415"
										},
										{
											"begin": 14684,
											"end": 14708,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "416"
										},
										{
											"begin": 14702,
											"end": 14707,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 14684,
											"end": 14708,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "185"
										},
										{
											"begin": 14684,
											"end": 14708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14684,
											"end": 14708,
											"name": "tag",
											"source": 9,
											"value": "416"
										},
										{
											"begin": 14684,
											"end": 14708,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14675,
											"end": 14709,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "215"
										},
										{
											"begin": 14675,
											"end": 14709,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14675,
											"end": 14709,
											"name": "tag",
											"source": 9,
											"value": "415"
										},
										{
											"begin": 14675,
											"end": 14709,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14657,
											"end": 14710,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "185"
										},
										{
											"begin": 14657,
											"end": 14710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14657,
											"end": 14710,
											"name": "tag",
											"source": 9,
											"value": "414"
										},
										{
											"begin": 14657,
											"end": 14710,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14644,
											"end": 14710,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14644,
											"end": 14710,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14574,
											"end": 14716,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14574,
											"end": 14716,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14574,
											"end": 14716,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14574,
											"end": 14716,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14722,
											"end": 14797,
											"name": "tag",
											"source": 9,
											"value": "231"
										},
										{
											"begin": 14722,
											"end": 14797,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14765,
											"end": 14768,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14786,
											"end": 14791,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14779,
											"end": 14791,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14779,
											"end": 14791,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14722,
											"end": 14797,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14722,
											"end": 14797,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14722,
											"end": 14797,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14722,
											"end": 14797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14803,
											"end": 15072,
											"name": "tag",
											"source": 9,
											"value": "232"
										},
										{
											"begin": 14803,
											"end": 15072,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14913,
											"end": 14952,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "419"
										},
										{
											"begin": 14944,
											"end": 14951,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 14913,
											"end": 14952,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 14913,
											"end": 14952,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14913,
											"end": 14952,
											"name": "tag",
											"source": 9,
											"value": "419"
										},
										{
											"begin": 14913,
											"end": 14952,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14974,
											"end": 15065,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "420"
										},
										{
											"begin": 15023,
											"end": 15064,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "421"
										},
										{
											"begin": 15047,
											"end": 15063,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15023,
											"end": 15064,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "231"
										},
										{
											"begin": 15023,
											"end": 15064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15023,
											"end": 15064,
											"name": "tag",
											"source": 9,
											"value": "421"
										},
										{
											"begin": 15023,
											"end": 15064,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15015,
											"end": 15021,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 15008,
											"end": 15012,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 15002,
											"end": 15013,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 14974,
											"end": 15065,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "229"
										},
										{
											"begin": 14974,
											"end": 15065,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14974,
											"end": 15065,
											"name": "tag",
											"source": 9,
											"value": "420"
										},
										{
											"begin": 14974,
											"end": 15065,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14968,
											"end": 14972,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14961,
											"end": 15066,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 14879,
											"end": 15072,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14803,
											"end": 15072,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14803,
											"end": 15072,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14803,
											"end": 15072,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14803,
											"end": 15072,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15078,
											"end": 15151,
											"name": "tag",
											"source": 9,
											"value": "233"
										},
										{
											"begin": 15078,
											"end": 15151,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15123,
											"end": 15126,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15078,
											"end": 15151,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15078,
											"end": 15151,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15157,
											"end": 15346,
											"name": "tag",
											"source": 9,
											"value": "234"
										},
										{
											"begin": 15157,
											"end": 15346,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15234,
											"end": 15266,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "424"
										},
										{
											"begin": 15234,
											"end": 15266,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "233"
										},
										{
											"begin": 15234,
											"end": 15266,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15234,
											"end": 15266,
											"name": "tag",
											"source": 9,
											"value": "424"
										},
										{
											"begin": 15234,
											"end": 15266,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15275,
											"end": 15340,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "425"
										},
										{
											"begin": 15333,
											"end": 15339,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15325,
											"end": 15331,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 15319,
											"end": 15323,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 15275,
											"end": 15340,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "232"
										},
										{
											"begin": 15275,
											"end": 15340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15275,
											"end": 15340,
											"name": "tag",
											"source": 9,
											"value": "425"
										},
										{
											"begin": 15275,
											"end": 15340,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15210,
											"end": 15346,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15157,
											"end": 15346,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15157,
											"end": 15346,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15157,
											"end": 15346,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15352,
											"end": 15538,
											"name": "tag",
											"source": 9,
											"value": "235"
										},
										{
											"begin": 15352,
											"end": 15538,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15412,
											"end": 15532,
											"name": "tag",
											"source": 9,
											"value": "427"
										},
										{
											"begin": 15412,
											"end": 15532,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15429,
											"end": 15432,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15422,
											"end": 15427,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15419,
											"end": 15433,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 15412,
											"end": 15532,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 15412,
											"end": 15532,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "429"
										},
										{
											"begin": 15412,
											"end": 15532,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 15483,
											"end": 15522,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "430"
										},
										{
											"begin": 15520,
											"end": 15521,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15513,
											"end": 15518,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15483,
											"end": 15522,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "234"
										},
										{
											"begin": 15483,
											"end": 15522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15483,
											"end": 15522,
											"name": "tag",
											"source": 9,
											"value": "430"
										},
										{
											"begin": 15483,
											"end": 15522,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15456,
											"end": 15457,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 15449,
											"end": 15454,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15445,
											"end": 15458,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15436,
											"end": 15458,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15436,
											"end": 15458,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15412,
											"end": 15532,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "427"
										},
										{
											"begin": 15412,
											"end": 15532,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15412,
											"end": 15532,
											"name": "tag",
											"source": 9,
											"value": "429"
										},
										{
											"begin": 15412,
											"end": 15532,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15352,
											"end": 15538,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15352,
											"end": 15538,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15352,
											"end": 15538,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15544,
											"end": 16087,
											"name": "tag",
											"source": 9,
											"value": "236"
										},
										{
											"begin": 15544,
											"end": 16087,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15645,
											"end": 15647,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 15640,
											"end": 15643,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15637,
											"end": 15648,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 15634,
											"end": 16080,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 15634,
											"end": 16080,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "432"
										},
										{
											"begin": 15634,
											"end": 16080,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 15679,
											"end": 15717,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "433"
										},
										{
											"begin": 15711,
											"end": 15716,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15679,
											"end": 15717,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "226"
										},
										{
											"begin": 15679,
											"end": 15717,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15679,
											"end": 15717,
											"name": "tag",
											"source": 9,
											"value": "433"
										},
										{
											"begin": 15679,
											"end": 15717,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15763,
											"end": 15792,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "434"
										},
										{
											"begin": 15781,
											"end": 15791,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 15763,
											"end": 15792,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 15763,
											"end": 15792,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15763,
											"end": 15792,
											"name": "tag",
											"source": 9,
											"value": "434"
										},
										{
											"begin": 15763,
											"end": 15792,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15753,
											"end": 15761,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15749,
											"end": 15793,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15946,
											"end": 15948,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 15934,
											"end": 15944,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 15931,
											"end": 15949,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 15928,
											"end": 15977,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 15928,
											"end": 15977,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "435"
										},
										{
											"begin": 15928,
											"end": 15977,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 15967,
											"end": 15975,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15952,
											"end": 15975,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15952,
											"end": 15975,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15928,
											"end": 15977,
											"name": "tag",
											"source": 9,
											"value": "435"
										},
										{
											"begin": 15928,
											"end": 15977,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15990,
											"end": 16070,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "436"
										},
										{
											"begin": 16046,
											"end": 16068,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "437"
										},
										{
											"begin": 16064,
											"end": 16067,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 16046,
											"end": 16068,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 16046,
											"end": 16068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16046,
											"end": 16068,
											"name": "tag",
											"source": 9,
											"value": "437"
										},
										{
											"begin": 16046,
											"end": 16068,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16036,
											"end": 16044,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 16032,
											"end": 16069,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16019,
											"end": 16030,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15990,
											"end": 16070,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "235"
										},
										{
											"begin": 15990,
											"end": 16070,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15990,
											"end": 16070,
											"name": "tag",
											"source": 9,
											"value": "436"
										},
										{
											"begin": 15990,
											"end": 16070,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15649,
											"end": 16080,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15649,
											"end": 16080,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15634,
											"end": 16080,
											"name": "tag",
											"source": 9,
											"value": "432"
										},
										{
											"begin": 15634,
											"end": 16080,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15544,
											"end": 16087,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15544,
											"end": 16087,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15544,
											"end": 16087,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15544,
											"end": 16087,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16093,
											"end": 16210,
											"name": "tag",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 16093,
											"end": 16210,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16147,
											"end": 16155,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16197,
											"end": 16202,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16191,
											"end": 16195,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16187,
											"end": 16203,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 16166,
											"end": 16203,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16166,
											"end": 16203,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16093,
											"end": 16210,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 16093,
											"end": 16210,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 16093,
											"end": 16210,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16093,
											"end": 16210,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16093,
											"end": 16210,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16216,
											"end": 16385,
											"name": "tag",
											"source": 9,
											"value": "238"
										},
										{
											"begin": 16216,
											"end": 16385,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16260,
											"end": 16266,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16293,
											"end": 16344,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "440"
										},
										{
											"begin": 16341,
											"end": 16342,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16337,
											"end": 16343,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 16329,
											"end": 16334,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 16326,
											"end": 16327,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 16322,
											"end": 16335,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 16293,
											"end": 16344,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 16293,
											"end": 16344,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16293,
											"end": 16344,
											"name": "tag",
											"source": 9,
											"value": "440"
										},
										{
											"begin": 16293,
											"end": 16344,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16289,
											"end": 16345,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 16374,
											"end": 16378,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 16368,
											"end": 16372,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 16364,
											"end": 16379,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 16354,
											"end": 16379,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 16354,
											"end": 16379,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16267,
											"end": 16385,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16216,
											"end": 16385,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 16216,
											"end": 16385,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 16216,
											"end": 16385,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16216,
											"end": 16385,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16216,
											"end": 16385,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16390,
											"end": 16685,
											"name": "tag",
											"source": 9,
											"value": "239"
										},
										{
											"begin": 16390,
											"end": 16685,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16466,
											"end": 16470,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16612,
											"end": 16641,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "442"
										},
										{
											"begin": 16637,
											"end": 16640,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 16631,
											"end": 16635,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 16612,
											"end": 16641,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "238"
										},
										{
											"begin": 16612,
											"end": 16641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16612,
											"end": 16641,
											"name": "tag",
											"source": 9,
											"value": "442"
										},
										{
											"begin": 16612,
											"end": 16641,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16604,
											"end": 16641,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 16604,
											"end": 16641,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16674,
											"end": 16677,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16671,
											"end": 16672,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 16667,
											"end": 16678,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 16661,
											"end": 16665,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16658,
											"end": 16679,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 16650,
											"end": 16679,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16650,
											"end": 16679,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16390,
											"end": 16685,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 16390,
											"end": 16685,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 16390,
											"end": 16685,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16390,
											"end": 16685,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16390,
											"end": 16685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16690,
											"end": 18085,
											"name": "tag",
											"source": 9,
											"value": "162"
										},
										{
											"begin": 16690,
											"end": 18085,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16807,
											"end": 16844,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "444"
										},
										{
											"begin": 16840,
											"end": 16843,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16807,
											"end": 16844,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "187"
										},
										{
											"begin": 16807,
											"end": 16844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16807,
											"end": 16844,
											"name": "tag",
											"source": 9,
											"value": "444"
										},
										{
											"begin": 16807,
											"end": 16844,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16909,
											"end": 16927,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16901,
											"end": 16907,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16898,
											"end": 16928,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 16895,
											"end": 16951,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 16895,
											"end": 16951,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "445"
										},
										{
											"begin": 16895,
											"end": 16951,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 16931,
											"end": 16949,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "446"
										},
										{
											"begin": 16931,
											"end": 16949,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "208"
										},
										{
											"begin": 16931,
											"end": 16949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16931,
											"end": 16949,
											"name": "tag",
											"source": 9,
											"value": "446"
										},
										{
											"begin": 16931,
											"end": 16949,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16895,
											"end": 16951,
											"name": "tag",
											"source": 9,
											"value": "445"
										},
										{
											"begin": 16895,
											"end": 16951,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16975,
											"end": 17013,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "447"
										},
										{
											"begin": 17007,
											"end": 17011,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17001,
											"end": 17012,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 16975,
											"end": 17013,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "95"
										},
										{
											"begin": 16975,
											"end": 17013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16975,
											"end": 17013,
											"name": "tag",
											"source": 9,
											"value": "447"
										},
										{
											"begin": 16975,
											"end": 17013,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17060,
											"end": 17127,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "448"
										},
										{
											"begin": 17120,
											"end": 17126,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17112,
											"end": 17118,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17106,
											"end": 17110,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 17060,
											"end": 17127,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "236"
										},
										{
											"begin": 17060,
											"end": 17127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17060,
											"end": 17127,
											"name": "tag",
											"source": 9,
											"value": "448"
										},
										{
											"begin": 17060,
											"end": 17127,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17154,
											"end": 17155,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17178,
											"end": 17182,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 17165,
											"end": 17182,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17165,
											"end": 17182,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17210,
											"end": 17212,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 17202,
											"end": 17208,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 17199,
											"end": 17213,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 17227,
											"end": 17228,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 17222,
											"end": 17840,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17222,
											"end": 17840,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 17222,
											"end": 17840,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "450"
										},
										{
											"begin": 17222,
											"end": 17840,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 17884,
											"end": 17885,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17901,
											"end": 17907,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 17898,
											"end": 17975,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 17898,
											"end": 17975,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "451"
										},
										{
											"begin": 17898,
											"end": 17975,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 17950,
											"end": 17959,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17945,
											"end": 17948,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 17941,
											"end": 17960,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17935,
											"end": 17961,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 17926,
											"end": 17961,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17926,
											"end": 17961,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17898,
											"end": 17975,
											"name": "tag",
											"source": 9,
											"value": "451"
										},
										{
											"begin": 17898,
											"end": 17975,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18001,
											"end": 18068,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "452"
										},
										{
											"begin": 18061,
											"end": 18067,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 18054,
											"end": 18059,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18001,
											"end": 18068,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "239"
										},
										{
											"begin": 18001,
											"end": 18068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18001,
											"end": 18068,
											"name": "tag",
											"source": 9,
											"value": "452"
										},
										{
											"begin": 18001,
											"end": 18068,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17995,
											"end": 17999,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 17988,
											"end": 18069,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 17857,
											"end": 18079,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17192,
											"end": 18079,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "449"
										},
										{
											"begin": 17192,
											"end": 18079,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17222,
											"end": 17840,
											"name": "tag",
											"source": 9,
											"value": "450"
										},
										{
											"begin": 17222,
											"end": 17840,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17274,
											"end": 17278,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 17270,
											"end": 17279,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 17262,
											"end": 17268,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 17258,
											"end": 17280,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 17308,
											"end": 17345,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "453"
										},
										{
											"begin": 17340,
											"end": 17344,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 17308,
											"end": 17345,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "226"
										},
										{
											"begin": 17308,
											"end": 17345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17308,
											"end": 17345,
											"name": "tag",
											"source": 9,
											"value": "453"
										},
										{
											"begin": 17308,
											"end": 17345,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17367,
											"end": 17368,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17381,
											"end": 17589,
											"name": "tag",
											"source": 9,
											"value": "454"
										},
										{
											"begin": 17381,
											"end": 17589,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17395,
											"end": 17402,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17392,
											"end": 17393,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17389,
											"end": 17403,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 17381,
											"end": 17589,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 17381,
											"end": 17589,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "456"
										},
										{
											"begin": 17381,
											"end": 17589,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 17474,
											"end": 17483,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 17469,
											"end": 17472,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 17465,
											"end": 17484,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17459,
											"end": 17485,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 17451,
											"end": 17457,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17444,
											"end": 17486,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 17525,
											"end": 17526,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 17517,
											"end": 17523,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17513,
											"end": 17527,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17503,
											"end": 17527,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 17503,
											"end": 17527,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17572,
											"end": 17574,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 17561,
											"end": 17570,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 17557,
											"end": 17575,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17544,
											"end": 17575,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 17544,
											"end": 17575,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17418,
											"end": 17422,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 17415,
											"end": 17416,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17411,
											"end": 17423,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17406,
											"end": 17423,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17406,
											"end": 17423,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17381,
											"end": 17589,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "454"
										},
										{
											"begin": 17381,
											"end": 17589,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17381,
											"end": 17589,
											"name": "tag",
											"source": 9,
											"value": "456"
										},
										{
											"begin": 17381,
											"end": 17589,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17617,
											"end": 17623,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 17608,
											"end": 17615,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 17605,
											"end": 17624,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 17602,
											"end": 17781,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 17602,
											"end": 17781,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "457"
										},
										{
											"begin": 17602,
											"end": 17781,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 17675,
											"end": 17684,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 17670,
											"end": 17673,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 17666,
											"end": 17685,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17660,
											"end": 17686,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 17718,
											"end": 17766,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "458"
										},
										{
											"begin": 17760,
											"end": 17764,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 17752,
											"end": 17758,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 17748,
											"end": 17765,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 17737,
											"end": 17746,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17718,
											"end": 17766,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "238"
										},
										{
											"begin": 17718,
											"end": 17766,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17718,
											"end": 17766,
											"name": "tag",
											"source": 9,
											"value": "458"
										},
										{
											"begin": 17718,
											"end": 17766,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17710,
											"end": 17716,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 17703,
											"end": 17767,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 17625,
											"end": 17781,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17602,
											"end": 17781,
											"name": "tag",
											"source": 9,
											"value": "457"
										},
										{
											"begin": 17602,
											"end": 17781,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17827,
											"end": 17828,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 17823,
											"end": 17824,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 17815,
											"end": 17821,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 17811,
											"end": 17825,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 17807,
											"end": 17829,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17801,
											"end": 17805,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 17794,
											"end": 17830,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 17229,
											"end": 17840,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17229,
											"end": 17840,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17229,
											"end": 17840,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17192,
											"end": 18079,
											"name": "tag",
											"source": 9,
											"value": "449"
										},
										{
											"begin": 17192,
											"end": 18079,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17192,
											"end": 18079,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16782,
											"end": 18085,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16782,
											"end": 18085,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16782,
											"end": 18085,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16690,
											"end": 18085,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16690,
											"end": 18085,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16690,
											"end": 18085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18091,
											"end": 18176,
											"name": "tag",
											"source": 9,
											"value": "240"
										},
										{
											"begin": 18091,
											"end": 18176,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18136,
											"end": 18143,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18165,
											"end": 18170,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 18154,
											"end": 18170,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18154,
											"end": 18170,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18091,
											"end": 18176,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 18091,
											"end": 18176,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18091,
											"end": 18176,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18091,
											"end": 18176,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18182,
											"end": 18283,
											"name": "tag",
											"source": 9,
											"value": "241"
										},
										{
											"begin": 18182,
											"end": 18283,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18218,
											"end": 18225,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18258,
											"end": 18276,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18251,
											"end": 18256,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18247,
											"end": 18277,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 18236,
											"end": 18277,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18236,
											"end": 18277,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18182,
											"end": 18283,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 18182,
											"end": 18283,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18182,
											"end": 18283,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18182,
											"end": 18283,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18289,
											"end": 18445,
											"name": "tag",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 18289,
											"end": 18445,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18346,
											"end": 18355,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18379,
											"end": 18439,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "462"
										},
										{
											"begin": 18396,
											"end": 18438,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "463"
										},
										{
											"begin": 18405,
											"end": 18437,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "464"
										},
										{
											"begin": 18431,
											"end": 18436,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 18405,
											"end": 18437,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "240"
										},
										{
											"begin": 18405,
											"end": 18437,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18405,
											"end": 18437,
											"name": "tag",
											"source": 9,
											"value": "464"
										},
										{
											"begin": 18405,
											"end": 18437,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18396,
											"end": 18438,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "215"
										},
										{
											"begin": 18396,
											"end": 18438,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18396,
											"end": 18438,
											"name": "tag",
											"source": 9,
											"value": "463"
										},
										{
											"begin": 18396,
											"end": 18438,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18379,
											"end": 18439,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "241"
										},
										{
											"begin": 18379,
											"end": 18439,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18379,
											"end": 18439,
											"name": "tag",
											"source": 9,
											"value": "462"
										},
										{
											"begin": 18379,
											"end": 18439,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18366,
											"end": 18439,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18366,
											"end": 18439,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18289,
											"end": 18445,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 18289,
											"end": 18445,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18289,
											"end": 18445,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18289,
											"end": 18445,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18451,
											"end": 18596,
											"name": "tag",
											"source": 9,
											"value": "243"
										},
										{
											"begin": 18451,
											"end": 18596,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18545,
											"end": 18589,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "466"
										},
										{
											"begin": 18583,
											"end": 18588,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 18545,
											"end": 18589,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 18545,
											"end": 18589,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18545,
											"end": 18589,
											"name": "tag",
											"source": 9,
											"value": "466"
										},
										{
											"begin": 18545,
											"end": 18589,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18540,
											"end": 18543,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18533,
											"end": 18590,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 18451,
											"end": 18596,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18451,
											"end": 18596,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18451,
											"end": 18596,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18602,
											"end": 18838,
											"name": "tag",
											"source": 9,
											"value": "166"
										},
										{
											"begin": 18602,
											"end": 18838,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18702,
											"end": 18706,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18740,
											"end": 18742,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 18729,
											"end": 18738,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18725,
											"end": 18743,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18717,
											"end": 18743,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18717,
											"end": 18743,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18753,
											"end": 18831,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "468"
										},
										{
											"begin": 18828,
											"end": 18829,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18817,
											"end": 18826,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 18813,
											"end": 18830,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18804,
											"end": 18810,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 18753,
											"end": 18831,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "243"
										},
										{
											"begin": 18753,
											"end": 18831,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18753,
											"end": 18831,
											"name": "tag",
											"source": 9,
											"value": "468"
										},
										{
											"begin": 18753,
											"end": 18831,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18602,
											"end": 18838,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 18602,
											"end": 18838,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 18602,
											"end": 18838,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18602,
											"end": 18838,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18602,
											"end": 18838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/ERC20/OwnershipLockedToke.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"deposit(uint256)": "b6b55f25",
							"depositDeadline()": "61603d89",
							"initialize(address,address,uint256,uint256,string,string)": "e001ff52",
							"lockDuration()": "04554443",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"token()": "fc0c546a",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"withdraw(uint256)": "2e1a7d4d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DepositPeriodOver\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExceedsBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LockPeriodOngoing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotSupported\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFailed\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"depositDeadline\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_depositDeadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_lockDuration\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lockDuration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Lock claim tokens are non-transferrable: ERC-20 allowance is not supported\"},\"approve(address,uint256)\":{\"details\":\"Lock claim tokens are non-transferrable: ERC-20 approve is not supported\"},\"decimals()\":{\"details\":\"Returns the number of decimals of the locked token\"},\"deposit(uint256)\":{\"details\":\"Deposit tokens to be locked until the end of the locking period\",\"params\":{\"amount\":\"The amount of tokens to deposit\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transfer(address,uint256)\":{\"details\":\"Lock claim tokens are non-transferrable: ERC-20 transfer is not supported\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Lock claim tokens are non-transferrable: ERC-20 transferFrom is not supported\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"withdraw(uint256)\":{\"details\":\"Withdraw tokens after the end of the locking period or during the deposit period\",\"params\":{\"amount\":\"The amount of tokens to withdraw\"}}},\"stateVariables\":{\"balanceOf\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply\":{\"details\":\"Returns the value of tokens in existence.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"DepositPeriodOver()\":[{\"notice\":\"Deposit is not possible anymore because the deposit period is over\"}],\"ExceedsBalance()\":[{\"notice\":\"Withdraw amount exceeds sender's balance of the locked token\"}],\"LockPeriodOngoing()\":[{\"notice\":\"Withdraw is not possible because the lock period is not over yet\"}],\"NotSupported()\":[{\"notice\":\"ERC-20 function is not supported\"}],\"TransferFailed()\":[{\"notice\":\"Could not transfer the designated ERC20 token\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC20/OwnershipLockedToke.sol\":\"TokenLock\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xbf61ab2ae1d575a17ea58fbb99ca232baddcc4e0eeea180e84cbc74b0c348b31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e0968705bad99747a8e5288aa008678c2be2f471f919dce3925a3cc4f1dee09\",\"dweb:/ipfs/QmbAFnCQfo4tw6ssfQSjhA5LzwHWNNryXN8bX7ty8jiqqn\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/ERC20/OwnershipLockedToke.sol\":{\"keccak256\":\"0x57e79f632fce45513bef590a11dc4b75c850121d890225601ee0a054343ce751\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://1de11fe5698f8893b809615ad6150bf11a84e21684970d44dd915c50b79f8288\",\"dweb:/ipfs/QmbMzfAgf11f2uE9fR4pP6vbnvWh7ke2gQsjr659x8SeVU\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1292,
								"contract": "contracts/ERC20/OwnershipLockedToke.sol:TokenLock",
								"label": "token",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(ERC20)1146"
							},
							{
								"astId": 1294,
								"contract": "contracts/ERC20/OwnershipLockedToke.sol:TokenLock",
								"label": "depositDeadline",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 1296,
								"contract": "contracts/ERC20/OwnershipLockedToke.sol:TokenLock",
								"label": "lockDuration",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 1298,
								"contract": "contracts/ERC20/OwnershipLockedToke.sol:TokenLock",
								"label": "name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 1300,
								"contract": "contracts/ERC20/OwnershipLockedToke.sol:TokenLock",
								"label": "symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 1303,
								"contract": "contracts/ERC20/OwnershipLockedToke.sol:TokenLock",
								"label": "totalSupply",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 1308,
								"contract": "contracts/ERC20/OwnershipLockedToke.sol:TokenLock",
								"label": "balanceOf",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(ERC20)1146": {
								"encoding": "inplace",
								"label": "contract ERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"errors": {
							"DepositPeriodOver()": [
								{
									"notice": "Deposit is not possible anymore because the deposit period is over"
								}
							],
							"ExceedsBalance()": [
								{
									"notice": "Withdraw amount exceeds sender's balance of the locked token"
								}
							],
							"LockPeriodOngoing()": [
								{
									"notice": "Withdraw is not possible because the lock period is not over yet"
								}
							],
							"NotSupported()": [
								{
									"notice": "ERC-20 function is not supported"
								}
							],
							"TransferFailed()": [
								{
									"notice": "Could not transfer the designated ERC20 token"
								}
							]
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							494
						],
						"Initializable": [
							448
						],
						"OwnableUpgradeable": [
							194
						]
					},
					"id": 195,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
							"file": "../utils/ContextUpgradeable.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 195,
							"sourceUnit": 495,
							"src": "128:67:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "ContextUpgradeable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 494,
										"src": "136:18:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 195,
							"sourceUnit": 449,
							"src": "196:63:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 448,
										"src": "204:13:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 7,
										"name": "Initializable",
										"nameLocations": [
											"789:13:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 448,
										"src": "789:13:0"
									},
									"id": 8,
									"nodeType": "InheritanceSpecifier",
									"src": "789:13:0"
								},
								{
									"baseName": {
										"id": 9,
										"name": "ContextUpgradeable",
										"nameLocations": [
											"804:18:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 494,
										"src": "804:18:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "804:18:0"
								}
							],
							"canonicalName": "OwnableUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 6,
								"nodeType": "StructuredDocumentation",
								"src": "261:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 194,
							"linearizedBaseContracts": [
								194,
								494,
								448
							],
							"name": "OwnableUpgradeable",
							"nameLocation": "767:18:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "OwnableUpgradeable.OwnableStorage",
									"documentation": {
										"id": 11,
										"nodeType": "StructuredDocumentation",
										"src": "829:65:0",
										"text": "@custom:storage-location erc7201:openzeppelin.storage.Ownable"
									},
									"id": 14,
									"members": [
										{
											"constant": false,
											"id": 13,
											"mutability": "mutable",
											"name": "_owner",
											"nameLocation": "939:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 14,
											"src": "931:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 12,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "931:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "OwnableStorage",
									"nameLocation": "906:14:0",
									"nodeType": "StructDefinition",
									"scope": 194,
									"src": "899:53:0",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 17,
									"mutability": "constant",
									"name": "OwnableStorageLocation",
									"nameLocation": "1094:22:0",
									"nodeType": "VariableDeclaration",
									"scope": 194,
									"src": "1069:116:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 15,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1069:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307839303136643039643732643430666461653266643863656163366236323334633737303632313466643339633163643165363039613035323863313939333030",
										"id": 16,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1119:66:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_65173360639460082030725920392146925864023520599682862633725751242436743107328_by_1",
											"typeString": "int_const 6517...(69 digits omitted)...7328"
										},
										"value": "0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 24,
										"nodeType": "Block",
										"src": "1270:81:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1289:56:0",
													"nodeType": "YulBlock",
													"src": "1289:56:0",
													"statements": [
														{
															"nativeSrc": "1303:32:0",
															"nodeType": "YulAssignment",
															"src": "1303:32:0",
															"value": {
																"name": "OwnableStorageLocation",
																"nativeSrc": "1313:22:0",
																"nodeType": "YulIdentifier",
																"src": "1313:22:0"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "1303:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "1303:6:0"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 21,
														"isOffset": false,
														"isSlot": true,
														"src": "1303:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 17,
														"isOffset": false,
														"isSlot": false,
														"src": "1313:22:0",
														"valueSize": 1
													}
												],
												"id": 23,
												"nodeType": "InlineAssembly",
												"src": "1280:65:0"
											}
										]
									},
									"id": 25,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getOwnableStorage",
									"nameLocation": "1201:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1219:2:0"
									},
									"returnParameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "1267:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 25,
												"src": "1244:24:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
													"typeString": "struct OwnableUpgradeable.OwnableStorage"
												},
												"typeName": {
													"id": 20,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 19,
														"name": "OwnableStorage",
														"nameLocations": [
															"1244:14:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 14,
														"src": "1244:14:0"
													},
													"referencedDeclaration": 14,
													"src": "1244:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
														"typeString": "struct OwnableUpgradeable.OwnableStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1243:26:0"
									},
									"scope": 194,
									"src": "1192:159:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 26,
										"nodeType": "StructuredDocumentation",
										"src": "1357:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 30,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "1453:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1488:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1480:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 27,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1480:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1479:17:0"
									},
									"src": "1447:50:0"
								},
								{
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "1503:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 35,
									"name": "OwnableInvalidOwner",
									"nameLocation": "1596:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1624:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1616:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1616:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1615:15:0"
									},
									"src": "1590:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 41,
									"name": "OwnershipTransferred",
									"nameLocation": "1643:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1680:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "1664:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1664:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1711:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "1695:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 38,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1695:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1663:57:0"
									},
									"src": "1637:84:0"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1919:55:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 50,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 44,
															"src": "1954:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 49,
														"name": "__Ownable_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 81,
														"src": "1929:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1929:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1929:38:0"
											}
										]
									},
									"documentation": {
										"id": 42,
										"nodeType": "StructuredDocumentation",
										"src": "1727:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 47,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 46,
												"name": "onlyInitializing",
												"nameLocations": [
													"1902:16:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "1902:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1902:16:0"
										}
									],
									"name": "__Ownable_init",
									"nameLocation": "1856:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1879:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1871:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 43,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1871:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1870:22:0"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1919:0:0"
									},
									"scope": 194,
									"src": "1847:127:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 80,
										"nodeType": "Block",
										"src": "2062:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 66,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 61,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 56,
														"src": "2076:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 64,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 63,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2092:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 62,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2092:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 65,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2092:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2076:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 75,
												"nodeType": "IfStatement",
												"src": "2072:95:0",
												"trueBody": {
													"id": 74,
													"nodeType": "Block",
													"src": "2104:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 70,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2153:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 69,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2145:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 68,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2145:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 71,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2145:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 67,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "2125:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 72,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2125:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 73,
															"nodeType": "RevertStatement",
															"src": "2118:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 77,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 56,
															"src": "2195:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 76,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "2176:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 78,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2176:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 79,
												"nodeType": "ExpressionStatement",
												"src": "2176:32:0"
											}
										]
									},
									"id": 81,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 59,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 58,
												"name": "onlyInitializing",
												"nameLocations": [
													"2045:16:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "2045:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2045:16:0"
										}
									],
									"name": "__Ownable_init_unchained",
									"nameLocation": "1989:24:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "2022:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "2014:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 55,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2014:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2013:22:0"
									},
									"returnParameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2062:0:0"
									},
									"scope": 194,
									"src": "1980:235:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 88,
										"nodeType": "Block",
										"src": "2324:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 84,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 122,
														"src": "2334:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 85,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2334:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 86,
												"nodeType": "ExpressionStatement",
												"src": "2334:13:0"
											},
											{
												"id": 87,
												"nodeType": "PlaceholderStatement",
												"src": "2357:1:0"
											}
										]
									},
									"documentation": {
										"id": 82,
										"nodeType": "StructuredDocumentation",
										"src": "2221:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 89,
									"name": "onlyOwner",
									"nameLocation": "2312:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2321:2:0"
									},
									"src": "2303:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 104,
										"nodeType": "Block",
										"src": "2496:89:0",
										"statements": [
											{
												"assignments": [
													97
												],
												"declarations": [
													{
														"constant": false,
														"id": 97,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "2529:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 104,
														"src": "2506:24:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage"
														},
														"typeName": {
															"id": 96,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 95,
																"name": "OwnableStorage",
																"nameLocations": [
																	"2506:14:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 14,
																"src": "2506:14:0"
															},
															"referencedDeclaration": 14,
															"src": "2506:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
																"typeString": "struct OwnableUpgradeable.OwnableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 98,
														"name": "_getOwnableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "2533:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$14_storage_ptr_$",
															"typeString": "function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"
														}
													},
													"id": 99,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2533:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
														"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2506:47:0"
											},
											{
												"expression": {
													"expression": {
														"id": 101,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 97,
														"src": "2570:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
														}
													},
													"id": 102,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2572:6:0",
													"memberName": "_owner",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 13,
													"src": "2570:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 94,
												"id": 103,
												"nodeType": "Return",
												"src": "2563:15:0"
											}
										]
									},
									"documentation": {
										"id": 90,
										"nodeType": "StructuredDocumentation",
										"src": "2371:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 105,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "2450:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2455:2:0"
									},
									"returnParameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 105,
												"src": "2487:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2487:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2486:9:0"
									},
									"scope": 194,
									"src": "2441:144:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 121,
										"nodeType": "Block",
										"src": "2703:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 109,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 105,
															"src": "2717:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2717:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 111,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 476,
															"src": "2728:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 112,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2728:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2717:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2713:101:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2742:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 115,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 476,
																			"src": "2790:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2790:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 114,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 30,
																	"src": "2763:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2763:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2756:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 106,
										"nodeType": "StructuredDocumentation",
										"src": "2591:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 122,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "2667:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 107,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2678:2:0"
									},
									"returnParameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2703:0:0"
									},
									"scope": 194,
									"src": "2658:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 135,
										"nodeType": "Block",
										"src": "3209:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 131,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3246:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 130,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3238:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 129,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3238:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 132,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3238:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 128,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "3219:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3219:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 134,
												"nodeType": "ExpressionStatement",
												"src": "3219:30:0"
											}
										]
									},
									"documentation": {
										"id": 123,
										"nodeType": "StructuredDocumentation",
										"src": "2826:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 136,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 126,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 125,
												"name": "onlyOwner",
												"nameLocations": [
													"3199:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "3199:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3199:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "3164:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3181:2:0"
									},
									"returnParameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3209:0:0"
									},
									"scope": 194,
									"src": "3155:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 163,
										"nodeType": "Block",
										"src": "3475:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 144,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 139,
														"src": "3489:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 147,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3509:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 146,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3501:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 145,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3501:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 148,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3501:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3489:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 158,
												"nodeType": "IfStatement",
												"src": "3485:91:0",
												"trueBody": {
													"id": 157,
													"nodeType": "Block",
													"src": "3513:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 153,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3562:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 152,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3554:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 151,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3554:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 154,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3554:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 150,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "3534:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 155,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3534:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 156,
															"nodeType": "RevertStatement",
															"src": "3527:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 160,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 139,
															"src": "3604:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 159,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "3585:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3585:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 162,
												"nodeType": "ExpressionStatement",
												"src": "3585:28:0"
											}
										]
									},
									"documentation": {
										"id": 137,
										"nodeType": "StructuredDocumentation",
										"src": "3262:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 164,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 142,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 141,
												"name": "onlyOwner",
												"nameLocations": [
													"3465:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "3465:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3465:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "3414:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "3440:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "3432:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 138,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3432:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3431:18:0"
									},
									"returnParameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3475:0:0"
									},
									"scope": 194,
									"src": "3405:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 192,
										"nodeType": "Block",
										"src": "3837:185:0",
										"statements": [
											{
												"assignments": [
													172
												],
												"declarations": [
													{
														"constant": false,
														"id": 172,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "3870:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 192,
														"src": "3847:24:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage"
														},
														"typeName": {
															"id": 171,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 170,
																"name": "OwnableStorage",
																"nameLocations": [
																	"3847:14:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 14,
																"src": "3847:14:0"
															},
															"referencedDeclaration": 14,
															"src": "3847:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
																"typeString": "struct OwnableUpgradeable.OwnableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 175,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 173,
														"name": "_getOwnableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "3874:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$14_storage_ptr_$",
															"typeString": "function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"
														}
													},
													"id": 174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3874:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
														"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3847:47:0"
											},
											{
												"assignments": [
													177
												],
												"declarations": [
													{
														"constant": false,
														"id": 177,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "3912:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 192,
														"src": "3904:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 176,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3904:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 180,
												"initialValue": {
													"expression": {
														"id": 178,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 172,
														"src": "3923:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
														}
													},
													"id": 179,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3925:6:0",
													"memberName": "_owner",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 13,
													"src": "3923:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3904:27:0"
											},
											{
												"expression": {
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 181,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 172,
															"src": "3941:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
																"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
															}
														},
														"id": 183,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3943:6:0",
														"memberName": "_owner",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 13,
														"src": "3941:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 184,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 167,
														"src": "3952:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3941:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "3941:19:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 188,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 177,
															"src": "3996:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 189,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 167,
															"src": "4006:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 187,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 41,
														"src": "3975:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 190,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3975:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 191,
												"nodeType": "EmitStatement",
												"src": "3970:45:0"
											}
										]
									},
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "3626:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 193,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "3783:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "3810:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "3802:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3802:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3801:18:0"
									},
									"returnParameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3837:0:0"
									},
									"scope": 194,
									"src": "3774:248:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 195,
							"src": "749:3275:0",
							"usedErrors": [
								30,
								35,
								211,
								214
							],
							"usedEvents": [
								41,
								219
							]
						}
					],
					"src": "102:3923:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
					"exportedSymbols": {
						"Initializable": [
							448
						]
					},
					"id": 449,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 196,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "113:24:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Initializable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 197,
								"nodeType": "StructuredDocumentation",
								"src": "139:2209:1",
								"text": " @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="
							},
							"fullyImplemented": true,
							"id": 448,
							"linearizedBaseContracts": [
								448
							],
							"name": "Initializable",
							"nameLocation": "2367:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Initializable.InitializableStorage",
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "2387:293:1",
										"text": " @dev Storage of the initializable contract.\n It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n when using with upgradeable contracts.\n @custom:storage-location erc7201:openzeppelin.storage.Initializable"
									},
									"id": 205,
									"members": [
										{
											"constant": false,
											"id": 201,
											"mutability": "mutable",
											"name": "_initialized",
											"nameLocation": "2820:12:1",
											"nodeType": "VariableDeclaration",
											"scope": 205,
											"src": "2813:19:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 200,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "2813:6:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 204,
											"mutability": "mutable",
											"name": "_initializing",
											"nameLocation": "2955:13:1",
											"nodeType": "VariableDeclaration",
											"scope": 205,
											"src": "2950:18:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 203,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2950:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "InitializableStorage",
									"nameLocation": "2692:20:1",
									"nodeType": "StructDefinition",
									"scope": 448,
									"src": "2685:290:1",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 208,
									"mutability": "constant",
									"name": "INITIALIZABLE_STORAGE",
									"nameLocation": "3123:21:1",
									"nodeType": "VariableDeclaration",
									"scope": 448,
									"src": "3098:115:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 206,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "3098:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307866306335376531363834306466303430663135303838646332663831666533393163333932336265633733653233613936363265666339633232396336613030",
										"id": 207,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3147:66:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_108904022758810753673719992590105913556127789646572562039383141376366747609600_by_1",
											"typeString": "int_const 1089...(70 digits omitted)...9600"
										},
										"value": "0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 209,
										"nodeType": "StructuredDocumentation",
										"src": "3220:60:1",
										"text": " @dev The contract is already initialized."
									},
									"errorSelector": "f92ee8a9",
									"id": 211,
									"name": "InvalidInitialization",
									"nameLocation": "3291:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3312:2:1"
									},
									"src": "3285:30:1"
								},
								{
									"documentation": {
										"id": 212,
										"nodeType": "StructuredDocumentation",
										"src": "3321:57:1",
										"text": " @dev The contract is not initializing."
									},
									"errorSelector": "d7e6bcf8",
									"id": 214,
									"name": "NotInitializing",
									"nameLocation": "3389:15:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3404:2:1"
									},
									"src": "3383:24:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3413:90:1",
										"text": " @dev Triggered when the contract has been initialized or reinitialized."
									},
									"eventSelector": "c7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2",
									"id": 219,
									"name": "Initialized",
									"nameLocation": "3514:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"indexed": false,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "3533:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3526:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 216,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3526:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3525:16:1"
									},
									"src": "3508:34:1"
								},
								{
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "4092:1081:1",
										"statements": [
											{
												"assignments": [
													224
												],
												"declarations": [
													{
														"constant": false,
														"id": 224,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "4187:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4158:30:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 223,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 222,
																"name": "InitializableStorage",
																"nameLocations": [
																	"4158:20:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 205,
																"src": "4158:20:1"
															},
															"referencedDeclaration": 205,
															"src": "4158:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 227,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 225,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 447,
														"src": "4191:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4191:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4158:59:1"
											},
											{
												"assignments": [
													229
												],
												"declarations": [
													{
														"constant": false,
														"id": 229,
														"mutability": "mutable",
														"name": "isTopLevelCall",
														"nameLocation": "4284:14:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4279:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 228,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4279:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 233,
												"initialValue": {
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4301:16:1",
													"subExpression": {
														"expression": {
															"id": 230,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 224,
															"src": "4302:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 231,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4304:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 204,
														"src": "4302:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4279:38:1"
											},
											{
												"assignments": [
													235
												],
												"declarations": [
													{
														"constant": false,
														"id": 235,
														"mutability": "mutable",
														"name": "initialized",
														"nameLocation": "4334:11:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4327:18:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"typeName": {
															"id": 234,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "4327:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 238,
												"initialValue": {
													"expression": {
														"id": 236,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 224,
														"src": "4348:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 237,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4350:12:1",
													"memberName": "_initialized",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 201,
													"src": "4348:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4327:35:1"
											},
											{
												"assignments": [
													240
												],
												"declarations": [
													{
														"constant": false,
														"id": 240,
														"mutability": "mutable",
														"name": "initialSetup",
														"nameLocation": "4711:12:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4706:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 239,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4706:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 246,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 245,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 243,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 241,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 235,
															"src": "4726:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 242,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4741:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4726:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 244,
														"name": "isTopLevelCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 229,
														"src": "4746:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4726:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4706:54:1"
											},
											{
												"assignments": [
													248
												],
												"declarations": [
													{
														"constant": false,
														"id": 248,
														"mutability": "mutable",
														"name": "construction",
														"nameLocation": "4775:12:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4770:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 247,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4770:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 261,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 251,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 249,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 235,
															"src": "4790:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "31",
															"id": 250,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4805:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "4790:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 259,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 254,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4818:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Initializable_$448",
																				"typeString": "contract Initializable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Initializable_$448",
																				"typeString": "contract Initializable"
																			}
																		],
																		"id": 253,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4810:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 252,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4810:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 255,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4810:13:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 256,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4824:4:1",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "4810:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 257,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4829:6:1",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4810:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 258,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4839:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4810:30:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4790:50:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4770:70:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 263,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4855:13:1",
														"subExpression": {
															"id": 262,
															"name": "initialSetup",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "4856:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 265,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4872:13:1",
														"subExpression": {
															"id": 264,
															"name": "construction",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 248,
															"src": "4873:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4855:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 271,
												"nodeType": "IfStatement",
												"src": "4851:91:1",
												"trueBody": {
													"id": 270,
													"nodeType": "Block",
													"src": "4887:55:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 267,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 211,
																	"src": "4908:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 268,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4908:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 269,
															"nodeType": "RevertStatement",
															"src": "4901:30:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 272,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 224,
															"src": "4951:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 274,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4953:12:1",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 201,
														"src": "4951:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 275,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4968:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "4951:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 277,
												"nodeType": "ExpressionStatement",
												"src": "4951:18:1"
											},
											{
												"condition": {
													"id": 278,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 229,
													"src": "4983:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 286,
												"nodeType": "IfStatement",
												"src": "4979:67:1",
												"trueBody": {
													"id": 285,
													"nodeType": "Block",
													"src": "4999:47:1",
													"statements": [
														{
															"expression": {
																"id": 283,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 279,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 224,
																		"src": "5013:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 281,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5015:13:1",
																	"memberName": "_initializing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 204,
																	"src": "5013:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 282,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5031:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "5013:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 284,
															"nodeType": "ExpressionStatement",
															"src": "5013:22:1"
														}
													]
												}
											},
											{
												"id": 287,
												"nodeType": "PlaceholderStatement",
												"src": "5055:1:1"
											},
											{
												"condition": {
													"id": 288,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 229,
													"src": "5070:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 300,
												"nodeType": "IfStatement",
												"src": "5066:101:1",
												"trueBody": {
													"id": 299,
													"nodeType": "Block",
													"src": "5086:81:1",
													"statements": [
														{
															"expression": {
																"id": 293,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 289,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 224,
																		"src": "5100:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 291,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5102:13:1",
																	"memberName": "_initializing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 204,
																	"src": "5100:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 292,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5118:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "5100:23:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 294,
															"nodeType": "ExpressionStatement",
															"src": "5100:23:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"hexValue": "31",
																		"id": 296,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5154:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		}
																	],
																	"id": 295,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 219,
																	"src": "5142:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 297,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5142:14:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 298,
															"nodeType": "EmitStatement",
															"src": "5137:19:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3548:516:1",
										"text": " @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n production.\n Emits an {Initialized} event."
									},
									"id": 302,
									"name": "initializer",
									"nameLocation": "4078:11:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4089:2:1"
									},
									"src": "4069:1104:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 348,
										"nodeType": "Block",
										"src": "6291:392:1",
										"statements": [
											{
												"assignments": [
													309
												],
												"declarations": [
													{
														"constant": false,
														"id": 309,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "6386:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 348,
														"src": "6357:30:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 308,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 307,
																"name": "InitializableStorage",
																"nameLocations": [
																	"6357:20:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 205,
																"src": "6357:20:1"
															},
															"referencedDeclaration": 205,
															"src": "6357:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 312,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 310,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 447,
														"src": "6390:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6390:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6357:59:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 313,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "6431:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 314,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6433:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 204,
														"src": "6431:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 318,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 315,
																"name": "$",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 309,
																"src": "6450:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																	"typeString": "struct Initializable.InitializableStorage storage pointer"
																}
															},
															"id": 316,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6452:12:1",
															"memberName": "_initialized",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 201,
															"src": "6450:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"id": 317,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "6468:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"src": "6450:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6431:44:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 324,
												"nodeType": "IfStatement",
												"src": "6427:105:1",
												"trueBody": {
													"id": 323,
													"nodeType": "Block",
													"src": "6477:55:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 320,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 211,
																	"src": "6498:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 321,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6498:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 322,
															"nodeType": "RevertStatement",
															"src": "6491:30:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 325,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "6541:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 327,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6543:12:1",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 201,
														"src": "6541:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 328,
														"name": "version",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 305,
														"src": "6558:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "6541:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "6541:24:1"
											},
											{
												"expression": {
													"id": 335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 331,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "6575:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 333,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6577:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 204,
														"src": "6575:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 334,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6593:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "6575:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 336,
												"nodeType": "ExpressionStatement",
												"src": "6575:22:1"
											},
											{
												"id": 337,
												"nodeType": "PlaceholderStatement",
												"src": "6607:1:1"
											},
											{
												"expression": {
													"id": 342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 338,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "6618:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 340,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6620:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 204,
														"src": "6618:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 341,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6636:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "6618:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 343,
												"nodeType": "ExpressionStatement",
												"src": "6618:23:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 345,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "6668:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"id": 344,
														"name": "Initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 219,
														"src": "6656:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
															"typeString": "function (uint64)"
														}
													},
													"id": 346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6656:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 347,
												"nodeType": "EmitStatement",
												"src": "6651:25:1"
											}
										]
									},
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "5179:1068:1",
										"text": " @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n Emits an {Initialized} event."
									},
									"id": 349,
									"name": "reinitializer",
									"nameLocation": "6261:13:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "6282:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "6275:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 304,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "6275:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6274:16:1"
									},
									"src": "6252:431:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 356,
										"nodeType": "Block",
										"src": "6921:48:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 352,
														"name": "_checkInitializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 370,
														"src": "6931:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 353,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6931:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 354,
												"nodeType": "ExpressionStatement",
												"src": "6931:20:1"
											},
											{
												"id": 355,
												"nodeType": "PlaceholderStatement",
												"src": "6961:1:1"
											}
										]
									},
									"documentation": {
										"id": 350,
										"nodeType": "StructuredDocumentation",
										"src": "6689:199:1",
										"text": " @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."
									},
									"id": 357,
									"name": "onlyInitializing",
									"nameLocation": "6902:16:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6918:2:1"
									},
									"src": "6893:76:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 369,
										"nodeType": "Block",
										"src": "7136:89:1",
										"statements": [
											{
												"condition": {
													"id": 363,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7150:18:1",
													"subExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 361,
															"name": "_isInitializing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 438,
															"src": "7151:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																"typeString": "function () view returns (bool)"
															}
														},
														"id": 362,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7151:17:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 368,
												"nodeType": "IfStatement",
												"src": "7146:73:1",
												"trueBody": {
													"id": 367,
													"nodeType": "Block",
													"src": "7170:49:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 364,
																	"name": "NotInitializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 214,
																	"src": "7191:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 365,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7191:17:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 366,
															"nodeType": "RevertStatement",
															"src": "7184:24:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 358,
										"nodeType": "StructuredDocumentation",
										"src": "6975:104:1",
										"text": " @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}."
									},
									"id": 370,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkInitializing",
									"nameLocation": "7093:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7111:2:1"
									},
									"returnParameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7136:0:1"
									},
									"scope": 448,
									"src": "7084:141:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 415,
										"nodeType": "Block",
										"src": "7760:373:1",
										"statements": [
											{
												"assignments": [
													376
												],
												"declarations": [
													{
														"constant": false,
														"id": 376,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "7855:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 415,
														"src": "7826:30:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 375,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 374,
																"name": "InitializableStorage",
																"nameLocations": [
																	"7826:20:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 205,
																"src": "7826:20:1"
															},
															"referencedDeclaration": 205,
															"src": "7826:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 379,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 377,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 447,
														"src": "7859:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7859:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7826:59:1"
											},
											{
												"condition": {
													"expression": {
														"id": 380,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 376,
														"src": "7900:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 381,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "7902:13:1",
													"memberName": "_initializing",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 204,
													"src": "7900:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 386,
												"nodeType": "IfStatement",
												"src": "7896:76:1",
												"trueBody": {
													"id": 385,
													"nodeType": "Block",
													"src": "7917:55:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 382,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 211,
																	"src": "7938:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 383,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7938:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 384,
															"nodeType": "RevertStatement",
															"src": "7931:30:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													},
													"id": 394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 387,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 376,
															"src": "7985:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 388,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7987:12:1",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 201,
														"src": "7985:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 391,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8008:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 390,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "8008:6:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	}
																],
																"id": 389,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "8003:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 392,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8003:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint64",
																"typeString": "type(uint64)"
															}
														},
														"id": 393,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "8016:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "8003:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "7985:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 414,
												"nodeType": "IfStatement",
												"src": "7981:146:1",
												"trueBody": {
													"id": 413,
													"nodeType": "Block",
													"src": "8021:106:1",
													"statements": [
														{
															"expression": {
																"id": 403,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 395,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 376,
																		"src": "8035:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 397,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "8037:12:1",
																	"memberName": "_initialized",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 201,
																	"src": "8035:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 400,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8057:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				},
																				"typeName": {
																					"id": 399,
																					"name": "uint64",
																					"nodeType": "ElementaryTypeName",
																					"src": "8057:6:1",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				}
																			],
																			"id": 398,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "8052:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 401,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8052:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_uint64",
																			"typeString": "type(uint64)"
																		}
																	},
																	"id": 402,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "8065:3:1",
																	"memberName": "max",
																	"nodeType": "MemberAccess",
																	"src": "8052:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"src": "8035:33:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"id": 404,
															"nodeType": "ExpressionStatement",
															"src": "8035:33:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 408,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "8104:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					},
																					"typeName": {
																						"id": 407,
																						"name": "uint64",
																						"nodeType": "ElementaryTypeName",
																						"src": "8104:6:1",
																						"typeDescriptions": {}
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					}
																				],
																				"id": 406,
																				"name": "type",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967269,
																				"src": "8099:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 409,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8099:12:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_meta_type_t_uint64",
																				"typeString": "type(uint64)"
																			}
																		},
																		"id": 410,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "8112:3:1",
																		"memberName": "max",
																		"nodeType": "MemberAccess",
																		"src": "8099:16:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	],
																	"id": 405,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 219,
																	"src": "8087:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 411,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8087:29:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 412,
															"nodeType": "EmitStatement",
															"src": "8082:34:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 371,
										"nodeType": "StructuredDocumentation",
										"src": "7231:475:1",
										"text": " @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."
									},
									"id": 416,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_disableInitializers",
									"nameLocation": "7720:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7740:2:1"
									},
									"returnParameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7760:0:1"
									},
									"scope": 448,
									"src": "7711:422:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 426,
										"nodeType": "Block",
										"src": "8308:63:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 422,
															"name": "_getInitializableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 447,
															"src": "8325:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
																"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
															}
														},
														"id": 423,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8325:26:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 424,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8352:12:1",
													"memberName": "_initialized",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 201,
													"src": "8325:39:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 421,
												"id": 425,
												"nodeType": "Return",
												"src": "8318:46:1"
											}
										]
									},
									"documentation": {
										"id": 417,
										"nodeType": "StructuredDocumentation",
										"src": "8139:99:1",
										"text": " @dev Returns the highest version that has been initialized. See {reinitializer}."
									},
									"id": 427,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializedVersion",
									"nameLocation": "8252:22:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8274:2:1"
									},
									"returnParameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 420,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 427,
												"src": "8300:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 419,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "8300:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8299:8:1"
									},
									"scope": 448,
									"src": "8243:128:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 437,
										"nodeType": "Block",
										"src": "8543:64:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 433,
															"name": "_getInitializableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 447,
															"src": "8560:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
																"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
															}
														},
														"id": 434,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8560:26:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 435,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8587:13:1",
													"memberName": "_initializing",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 204,
													"src": "8560:40:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 432,
												"id": 436,
												"nodeType": "Return",
												"src": "8553:47:1"
											}
										]
									},
									"documentation": {
										"id": 428,
										"nodeType": "StructuredDocumentation",
										"src": "8377:105:1",
										"text": " @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."
									},
									"id": 438,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isInitializing",
									"nameLocation": "8496:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 429,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8511:2:1"
									},
									"returnParameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "8537:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 430,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8537:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8536:6:1"
									},
									"scope": 448,
									"src": "8487:120:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 446,
										"nodeType": "Block",
										"src": "8827:80:1",
										"statements": [
											{
												"AST": {
													"nativeSrc": "8846:55:1",
													"nodeType": "YulBlock",
													"src": "8846:55:1",
													"statements": [
														{
															"nativeSrc": "8860:31:1",
															"nodeType": "YulAssignment",
															"src": "8860:31:1",
															"value": {
																"name": "INITIALIZABLE_STORAGE",
																"nativeSrc": "8870:21:1",
																"nodeType": "YulIdentifier",
																"src": "8870:21:1"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "8860:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8860:6:1"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 443,
														"isOffset": false,
														"isSlot": true,
														"src": "8860:6:1",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 208,
														"isOffset": false,
														"isSlot": false,
														"src": "8870:21:1",
														"valueSize": 1
													}
												],
												"id": 445,
												"nodeType": "InlineAssembly",
												"src": "8837:64:1"
											}
										]
									},
									"documentation": {
										"id": 439,
										"nodeType": "StructuredDocumentation",
										"src": "8613:67:1",
										"text": " @dev Returns a pointer to the storage namespace."
									},
									"id": 447,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializableStorage",
									"nameLocation": "8746:24:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 440,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8770:2:1"
									},
									"returnParameters": {
										"id": 444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 443,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "8824:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "8795:30:1",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
													"typeString": "struct Initializable.InitializableStorage"
												},
												"typeName": {
													"id": 442,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 441,
														"name": "InitializableStorage",
														"nameLocations": [
															"8795:20:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 205,
														"src": "8795:20:1"
													},
													"referencedDeclaration": 205,
													"src": "8795:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8794:32:1"
									},
									"scope": 448,
									"src": "8737:170:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 449,
							"src": "2349:6560:1",
							"usedErrors": [
								211,
								214
							],
							"usedEvents": [
								219
							]
						}
					],
					"src": "113:8797:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							494
						],
						"Initializable": [
							448
						]
					},
					"id": 495,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 450,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 452,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 495,
							"sourceUnit": 449,
							"src": "126:63:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 451,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 448,
										"src": "134:13:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 454,
										"name": "Initializable",
										"nameLocations": [
											"728:13:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 448,
										"src": "728:13:2"
									},
									"id": 455,
									"nodeType": "InheritanceSpecifier",
									"src": "728:13:2"
								}
							],
							"canonicalName": "ContextUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 453,
								"nodeType": "StructuredDocumentation",
								"src": "191:496:2",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 494,
							"linearizedBaseContracts": [
								494,
								448
							],
							"name": "ContextUpgradeable",
							"nameLocation": "706:18:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 460,
										"nodeType": "Block",
										"src": "800:7:2",
										"statements": []
									},
									"id": 461,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 458,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 457,
												"name": "onlyInitializing",
												"nameLocations": [
													"783:16:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "783:16:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "783:16:2"
										}
									],
									"name": "__Context_init",
									"nameLocation": "757:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 456,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "771:2:2"
									},
									"returnParameters": {
										"id": 459,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "800:0:2"
									},
									"scope": 494,
									"src": "748:59:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 466,
										"nodeType": "Block",
										"src": "875:7:2",
										"statements": []
									},
									"id": 467,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 464,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 463,
												"name": "onlyInitializing",
												"nameLocations": [
													"858:16:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "858:16:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "858:16:2"
										}
									],
									"name": "__Context_init_unchained",
									"nameLocation": "822:24:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 462,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "846:2:2"
									},
									"returnParameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "875:0:2"
									},
									"scope": 494,
									"src": "813:69:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 475,
										"nodeType": "Block",
										"src": "949:34:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 472,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "966:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 473,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "970:6:2",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "966:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 471,
												"id": 474,
												"nodeType": "Return",
												"src": "959:17:2"
											}
										]
									},
									"id": 476,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "896:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 468,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "906:2:2"
									},
									"returnParameters": {
										"id": 471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 470,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "940:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 469,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "940:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "939:9:2"
									},
									"scope": 494,
									"src": "887:96:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 484,
										"nodeType": "Block",
										"src": "1056:32:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 481,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1073:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 482,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1077:4:2",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "1073:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 480,
												"id": 483,
												"nodeType": "Return",
												"src": "1066:15:2"
											}
										]
									},
									"id": 485,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "998:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 477,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1006:2:2"
									},
									"returnParameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "1040:14:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 478,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1040:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1039:16:2"
									},
									"scope": 494,
									"src": "989:99:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 492,
										"nodeType": "Block",
										"src": "1166:25:2",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 490,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1183:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 489,
												"id": 491,
												"nodeType": "Return",
												"src": "1176:8:2"
											}
										]
									},
									"id": 493,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "1103:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 486,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1123:2:2"
									},
									"returnParameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 488,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 493,
												"src": "1157:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 487,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1157:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1156:9:2"
									},
									"scope": 494,
									"src": "1094:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 495,
							"src": "688:505:2",
							"usedErrors": [
								211,
								214
							],
							"usedEvents": [
								219
							]
						}
					],
					"src": "101:1093:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							631
						],
						"IERC20Errors": [
							536
						],
						"IERC721Errors": [
							584
						]
					},
					"id": 632,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 496,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 497,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:3",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 536,
							"linearizedBaseContracts": [
								536
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 498,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:3",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 506,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 505,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 500,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 506,
												"src": "654:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 499,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 502,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 506,
												"src": "670:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 501,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 504,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 506,
												"src": "687:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 503,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:3"
									},
									"src": "623:80:3"
								},
								{
									"documentation": {
										"id": 507,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:3",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 511,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 510,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 509,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 511,
												"src": "891:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 508,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:3"
									},
									"src": "866:41:3"
								},
								{
									"documentation": {
										"id": 512,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:3",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 516,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 515,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 514,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 516,
												"src": "1104:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 513,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:3"
									},
									"src": "1077:45:3"
								},
								{
									"documentation": {
										"id": 517,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:3",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 525,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 524,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 519,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 525,
												"src": "1511:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 518,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 521,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 525,
												"src": "1528:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 520,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 523,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 525,
												"src": "1547:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 522,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:3"
									},
									"src": "1478:85:3"
								},
								{
									"documentation": {
										"id": 526,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:3",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 530,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 528,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 530,
												"src": "1775:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 527,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:3"
									},
									"src": "1748:45:3"
								},
								{
									"documentation": {
										"id": 531,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:3",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 535,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 533,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 535,
												"src": "2025:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 532,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:3"
									},
									"src": "1999:43:3"
								}
							],
							"scope": 632,
							"src": "280:1764:3",
							"usedErrors": [
								506,
								511,
								516,
								525,
								530,
								535
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 537,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:3",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 584,
							"linearizedBaseContracts": [
								584
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 538,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:3",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 542,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 541,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 540,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "2469:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 539,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:3"
									},
									"src": "2444:40:3"
								},
								{
									"documentation": {
										"id": 543,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:3",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 547,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 546,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 547,
												"src": "2656:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 544,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:3"
									},
									"src": "2627:46:3"
								},
								{
									"documentation": {
										"id": 548,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:3",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 556,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 550,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 556,
												"src": "3000:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 549,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 552,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 556,
												"src": "3016:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 551,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 554,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 556,
												"src": "3033:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 553,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:3"
									},
									"src": "2973:75:3"
								},
								{
									"documentation": {
										"id": 557,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:3",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 561,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 560,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 559,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 561,
												"src": "3237:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 558,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:3"
									},
									"src": "3211:42:3"
								},
								{
									"documentation": {
										"id": 562,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:3",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 566,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 565,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 564,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 566,
												"src": "3451:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 563,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:3"
									},
									"src": "3423:46:3"
								},
								{
									"documentation": {
										"id": 567,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:3",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 573,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 572,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 569,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 573,
												"src": "3760:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 568,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 571,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 573,
												"src": "3778:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 570,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:3"
									},
									"src": "3727:68:3"
								},
								{
									"documentation": {
										"id": 574,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:3",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 578,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 577,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 576,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "4008:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 575,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:3"
									},
									"src": "3980:46:3"
								},
								{
									"documentation": {
										"id": 579,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:3",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 583,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 582,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 581,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 583,
												"src": "4262:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 580,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:3"
									},
									"src": "4234:46:3"
								}
							],
							"scope": 632,
							"src": "2190:2092:3",
							"usedErrors": [
								542,
								547,
								556,
								561,
								566,
								573,
								578,
								583
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 585,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:3",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 631,
							"linearizedBaseContracts": [
								631
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 586,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:3",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 596,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 595,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 588,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 596,
												"src": "4860:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 587,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 590,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 596,
												"src": "4876:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 589,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 592,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 596,
												"src": "4893:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 591,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 594,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 596,
												"src": "4909:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 593,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:3"
									},
									"src": "4827:99:3"
								},
								{
									"documentation": {
										"id": 597,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:3",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 601,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 600,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 599,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 601,
												"src": "5116:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 598,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:3"
									},
									"src": "5089:43:3"
								},
								{
									"documentation": {
										"id": 602,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:3",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 606,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 605,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 604,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "5331:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 603,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:3"
									},
									"src": "5302:47:3"
								},
								{
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:3",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 613,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 613,
												"src": "5651:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 613,
												"src": "5669:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 610,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:3"
									},
									"src": "5616:68:3"
								},
								{
									"documentation": {
										"id": 614,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:3",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 618,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 616,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 618,
												"src": "5898:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 615,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:3"
									},
									"src": "5869:47:3"
								},
								{
									"documentation": {
										"id": 619,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:3",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 623,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 622,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 621,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 623,
												"src": "6153:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 620,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:3"
									},
									"src": "6124:47:3"
								},
								{
									"documentation": {
										"id": 624,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:3",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 630,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 629,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 626,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "6494:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 625,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 628,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "6513:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 627,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:3"
									},
									"src": "6462:73:3"
								}
							],
							"scope": 632,
							"src": "4430:2107:3",
							"usedErrors": [
								596,
								601,
								606,
								613,
								618,
								623,
								630
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							1280
						],
						"ERC20": [
							1146
						],
						"IERC20": [
							1224
						],
						"IERC20Errors": [
							536
						],
						"IERC20Metadata": [
							1250
						]
					},
					"id": 1147,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 633,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 635,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1147,
							"sourceUnit": 1225,
							"src": "131:36:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 634,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1224,
										"src": "139:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 637,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1147,
							"sourceUnit": 1251,
							"src": "168:63:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 636,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1250,
										"src": "176:14:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 639,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1147,
							"sourceUnit": 1281,
							"src": "232:48:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 638,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1280,
										"src": "240:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 641,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1147,
							"sourceUnit": 632,
							"src": "281:65:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 640,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 536,
										"src": "289:12:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 643,
										"name": "Context",
										"nameLocations": [
											"1133:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1280,
										"src": "1133:7:4"
									},
									"id": 644,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:4"
								},
								{
									"baseName": {
										"id": 645,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1224,
										"src": "1142:6:4"
									},
									"id": 646,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:4"
								},
								{
									"baseName": {
										"id": 647,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1250,
										"src": "1150:14:4"
									},
									"id": 648,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:4"
								},
								{
									"baseName": {
										"id": 649,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 536,
										"src": "1166:12:4"
									},
									"id": 650,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:4"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 642,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:4",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 1146,
							"linearizedBaseContracts": [
								1146,
								536,
								1250,
								1224,
								1280
							],
							"name": "ERC20",
							"nameLocation": "1124:5:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 654,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:4",
									"nodeType": "VariableDeclaration",
									"scope": 1146,
									"src": "1185:53:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 653,
										"keyName": "account",
										"keyNameLocation": "1201:7:4",
										"keyType": {
											"id": 651,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 652,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 660,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:4",
									"nodeType": "VariableDeclaration",
									"scope": 1146,
									"src": "1245:83:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 659,
										"keyName": "account",
										"keyNameLocation": "1261:7:4",
										"keyType": {
											"id": 655,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 658,
											"keyName": "spender",
											"keyNameLocation": "1288:7:4",
											"keyType": {
												"id": 656,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:4",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 657,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 662,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:4",
									"nodeType": "VariableDeclaration",
									"scope": 1146,
									"src": "1335:28:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 661,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 664,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:4",
									"nodeType": "VariableDeclaration",
									"scope": 1146,
									"src": "1370:20:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 663,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 666,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:4",
									"nodeType": "VariableDeclaration",
									"scope": 1146,
									"src": "1396:22:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 665,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 682,
										"nodeType": "Block",
										"src": "1657:57:4",
										"statements": [
											{
												"expression": {
													"id": 676,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 674,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 664,
														"src": "1667:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 675,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 669,
														"src": "1675:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1667:13:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 677,
												"nodeType": "ExpressionStatement",
												"src": "1667:13:4"
											},
											{
												"expression": {
													"id": 680,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 678,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 666,
														"src": "1690:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 679,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 671,
														"src": "1700:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1690:17:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 681,
												"nodeType": "ExpressionStatement",
												"src": "1690:17:4"
											}
										]
									},
									"documentation": {
										"id": 667,
										"nodeType": "StructuredDocumentation",
										"src": "1425:171:4",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 683,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 672,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 669,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1627:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 683,
												"src": "1613:19:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 668,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1613:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 671,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1648:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 683,
												"src": "1634:21:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 670,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1634:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1612:44:4"
									},
									"returnParameters": {
										"id": 673,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1657:0:4"
									},
									"scope": 1146,
									"src": "1601:113:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1237
									],
									"body": {
										"id": 691,
										"nodeType": "Block",
										"src": "1839:29:4",
										"statements": [
											{
												"expression": {
													"id": 689,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 664,
													"src": "1856:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 688,
												"id": 690,
												"nodeType": "Return",
												"src": "1849:12:4"
											}
										]
									},
									"documentation": {
										"id": 684,
										"nodeType": "StructuredDocumentation",
										"src": "1720:54:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 692,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1788:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1792:2:4"
									},
									"returnParameters": {
										"id": 688,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 687,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 692,
												"src": "1824:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 686,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1824:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1823:15:4"
									},
									"scope": 1146,
									"src": "1779:89:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1243
									],
									"body": {
										"id": 700,
										"nodeType": "Block",
										"src": "2043:31:4",
										"statements": [
											{
												"expression": {
													"id": 698,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 666,
													"src": "2060:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 697,
												"id": 699,
												"nodeType": "Return",
												"src": "2053:14:4"
											}
										]
									},
									"documentation": {
										"id": 693,
										"nodeType": "StructuredDocumentation",
										"src": "1874:102:4",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 701,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1990:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 694,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1996:2:4"
									},
									"returnParameters": {
										"id": 697,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 696,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 701,
												"src": "2028:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 695,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2028:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2027:15:4"
									},
									"scope": 1146,
									"src": "1981:93:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1249
									],
									"body": {
										"id": 709,
										"nodeType": "Block",
										"src": "2763:26:4",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2780:2:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 706,
												"id": 708,
												"nodeType": "Return",
												"src": "2773:9:4"
											}
										]
									},
									"documentation": {
										"id": 702,
										"nodeType": "StructuredDocumentation",
										"src": "2080:622:4",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 710,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2716:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 703,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2724:2:4"
									},
									"returnParameters": {
										"id": 706,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 705,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 710,
												"src": "2756:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 704,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2756:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2755:7:4"
									},
									"scope": 1146,
									"src": "2707:82:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1173
									],
									"body": {
										"id": 718,
										"nodeType": "Block",
										"src": "2910:36:4",
										"statements": [
											{
												"expression": {
													"id": 716,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 662,
													"src": "2927:12:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 715,
												"id": 717,
												"nodeType": "Return",
												"src": "2920:19:4"
											}
										]
									},
									"documentation": {
										"id": 711,
										"nodeType": "StructuredDocumentation",
										"src": "2795:49:4",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 719,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2858:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 712,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2869:2:4"
									},
									"returnParameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 719,
												"src": "2901:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 713,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2901:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2900:9:4"
									},
									"scope": 1146,
									"src": "2849:97:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1181
									],
									"body": {
										"id": 731,
										"nodeType": "Block",
										"src": "3078:42:4",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 727,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 654,
														"src": "3095:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 729,
													"indexExpression": {
														"id": 728,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 722,
														"src": "3105:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3095:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 726,
												"id": 730,
												"nodeType": "Return",
												"src": "3088:25:4"
											}
										]
									},
									"documentation": {
										"id": 720,
										"nodeType": "StructuredDocumentation",
										"src": "2952:47:4",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 732,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3013:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 723,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 722,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3031:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 732,
												"src": "3023:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 721,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3023:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3022:17:4"
									},
									"returnParameters": {
										"id": 726,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 725,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 732,
												"src": "3069:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 724,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3069:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3068:9:4"
									},
									"scope": 1146,
									"src": "3004:116:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1191
									],
									"body": {
										"id": 755,
										"nodeType": "Block",
										"src": "3390:103:4",
										"statements": [
											{
												"assignments": [
													743
												],
												"declarations": [
													{
														"constant": false,
														"id": 743,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3408:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 755,
														"src": "3400:13:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 742,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3400:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 746,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 744,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1262,
														"src": "3416:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 745,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3416:12:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3400:28:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 748,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 743,
															"src": "3448:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 749,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 735,
															"src": "3455:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 750,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 737,
															"src": "3459:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 747,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 876,
														"src": "3438:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 751,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3438:27:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 752,
												"nodeType": "ExpressionStatement",
												"src": "3438:27:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 753,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3482:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 741,
												"id": 754,
												"nodeType": "Return",
												"src": "3475:11:4"
											}
										]
									},
									"documentation": {
										"id": 733,
										"nodeType": "StructuredDocumentation",
										"src": "3126:184:4",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 756,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3324:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 738,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 735,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3341:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 756,
												"src": "3333:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 734,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3333:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 737,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3353:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 756,
												"src": "3345:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 736,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3345:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3332:27:4"
									},
									"returnParameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 756,
												"src": "3384:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 739,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3384:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3383:6:4"
									},
									"scope": 1146,
									"src": "3315:178:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1201
									],
									"body": {
										"id": 772,
										"nodeType": "Block",
										"src": "3640:51:4",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 766,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 660,
															"src": "3657:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 768,
														"indexExpression": {
															"id": 767,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 759,
															"src": "3669:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3657:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 770,
													"indexExpression": {
														"id": 769,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 761,
														"src": "3676:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3657:27:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 765,
												"id": 771,
												"nodeType": "Return",
												"src": "3650:34:4"
											}
										]
									},
									"documentation": {
										"id": 757,
										"nodeType": "StructuredDocumentation",
										"src": "3499:47:4",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 773,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3560:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 759,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3578:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 773,
												"src": "3570:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 758,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3570:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3593:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 773,
												"src": "3585:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 760,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3585:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3569:32:4"
									},
									"returnParameters": {
										"id": 765,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 764,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 773,
												"src": "3631:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 763,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3631:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3630:9:4"
									},
									"scope": 1146,
									"src": "3551:140:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1211
									],
									"body": {
										"id": 796,
										"nodeType": "Block",
										"src": "4077:107:4",
										"statements": [
											{
												"assignments": [
													784
												],
												"declarations": [
													{
														"constant": false,
														"id": 784,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4095:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 796,
														"src": "4087:13:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 783,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4087:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 787,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 785,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1262,
														"src": "4103:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 786,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4103:12:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4087:28:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 789,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 784,
															"src": "4134:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 790,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 776,
															"src": "4141:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 791,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 778,
															"src": "4150:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 788,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1037,
															1097
														],
														"referencedDeclaration": 1037,
														"src": "4125:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 792,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4125:31:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 793,
												"nodeType": "ExpressionStatement",
												"src": "4125:31:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 794,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4173:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 782,
												"id": 795,
												"nodeType": "Return",
												"src": "4166:11:4"
											}
										]
									},
									"documentation": {
										"id": 774,
										"nodeType": "StructuredDocumentation",
										"src": "3697:296:4",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 797,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4007:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 779,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 776,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4023:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 797,
												"src": "4015:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 775,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4015:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 778,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4040:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 797,
												"src": "4032:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 777,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4032:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4014:32:4"
									},
									"returnParameters": {
										"id": 782,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 781,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 797,
												"src": "4071:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 780,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4071:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4070:6:4"
									},
									"scope": 1146,
									"src": "3998:186:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1223
									],
									"body": {
										"id": 828,
										"nodeType": "Block",
										"src": "4869:151:4",
										"statements": [
											{
												"assignments": [
													810
												],
												"declarations": [
													{
														"constant": false,
														"id": 810,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4887:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 828,
														"src": "4879:15:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 809,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4879:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 813,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 811,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1262,
														"src": "4897:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 812,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4897:12:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4879:30:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 815,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 800,
															"src": "4935:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 816,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 810,
															"src": "4941:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 817,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 804,
															"src": "4950:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 814,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1145,
														"src": "4919:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 818,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4919:37:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 819,
												"nodeType": "ExpressionStatement",
												"src": "4919:37:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 821,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 800,
															"src": "4976:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 822,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 802,
															"src": "4982:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 823,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 804,
															"src": "4986:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 820,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 876,
														"src": "4966:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 824,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4966:26:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 825,
												"nodeType": "ExpressionStatement",
												"src": "4966:26:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 826,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5009:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 808,
												"id": 827,
												"nodeType": "Return",
												"src": "5002:11:4"
											}
										]
									},
									"documentation": {
										"id": 798,
										"nodeType": "StructuredDocumentation",
										"src": "4190:581:4",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 829,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4785:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 805,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 800,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4806:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 829,
												"src": "4798:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 799,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4798:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 802,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4820:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 829,
												"src": "4812:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 801,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4812:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 804,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4832:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 829,
												"src": "4824:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 803,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4824:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4797:41:4"
									},
									"returnParameters": {
										"id": 808,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 807,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 829,
												"src": "4863:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 806,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4863:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4862:6:4"
									},
									"scope": 1146,
									"src": "4776:244:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 875,
										"nodeType": "Block",
										"src": "5462:231:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 844,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 839,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 832,
														"src": "5476:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 842,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5492:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 841,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5484:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 840,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5484:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 843,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5484:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5476:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 853,
												"nodeType": "IfStatement",
												"src": "5472:86:4",
												"trueBody": {
													"id": 852,
													"nodeType": "Block",
													"src": "5496:62:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 848,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5544:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 847,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5536:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 846,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5536:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 849,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5536:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 845,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 511,
																	"src": "5517:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 850,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5517:30:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 851,
															"nodeType": "RevertStatement",
															"src": "5510:37:4"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 859,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 854,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 834,
														"src": "5571:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 857,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5585:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 856,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5577:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 855,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5577:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 858,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5577:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5571:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 868,
												"nodeType": "IfStatement",
												"src": "5567:86:4",
												"trueBody": {
													"id": 867,
													"nodeType": "Block",
													"src": "5589:64:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 863,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5639:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 862,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5631:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 861,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5631:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 864,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5631:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 860,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 516,
																	"src": "5610:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 865,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5610:32:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 866,
															"nodeType": "RevertStatement",
															"src": "5603:39:4"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 870,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 832,
															"src": "5670:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 871,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 834,
															"src": "5676:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 872,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 836,
															"src": "5680:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 869,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 953,
														"src": "5662:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 873,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5662:24:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 874,
												"nodeType": "ExpressionStatement",
												"src": "5662:24:4"
											}
										]
									},
									"documentation": {
										"id": 830,
										"nodeType": "StructuredDocumentation",
										"src": "5026:362:4",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 876,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5402:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 837,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5420:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "5412:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 831,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5412:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 834,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5434:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "5426:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 833,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5426:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 836,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5446:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "5438:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 835,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5438:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5411:41:4"
									},
									"returnParameters": {
										"id": 838,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5462:0:4"
									},
									"scope": 1146,
									"src": "5393:300:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 952,
										"nodeType": "Block",
										"src": "6083:1032:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 891,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 886,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 879,
														"src": "6097:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 889,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6113:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 888,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6105:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 887,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6105:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 890,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6105:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6097:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 923,
													"nodeType": "Block",
													"src": "6271:362:4",
													"statements": [
														{
															"assignments": [
																898
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 898,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6293:11:4",
																	"nodeType": "VariableDeclaration",
																	"scope": 923,
																	"src": "6285:19:4",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 897,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6285:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 902,
															"initialValue": {
																"baseExpression": {
																	"id": 899,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 654,
																	"src": "6307:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 901,
																"indexExpression": {
																	"id": 900,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 879,
																	"src": "6317:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6307:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6285:37:4"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 905,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 903,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 898,
																	"src": "6340:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 904,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 883,
																	"src": "6354:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6340:19:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 913,
															"nodeType": "IfStatement",
															"src": "6336:115:4",
															"trueBody": {
																"id": 912,
																"nodeType": "Block",
																"src": "6361:90:4",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 907,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 879,
																					"src": "6411:4:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 908,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 898,
																					"src": "6417:11:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 909,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 883,
																					"src": "6430:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 906,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 506,
																				"src": "6386:24:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 910,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6386:50:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 911,
																		"nodeType": "RevertStatement",
																		"src": "6379:57:4"
																	}
																]
															}
														},
														{
															"id": 922,
															"nodeType": "UncheckedBlock",
															"src": "6464:159:4",
															"statements": [
																{
																	"expression": {
																		"id": 920,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 914,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 654,
																				"src": "6571:9:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 916,
																			"indexExpression": {
																				"id": 915,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 879,
																				"src": "6581:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6571:15:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 919,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 917,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 898,
																				"src": "6589:11:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 918,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 883,
																				"src": "6603:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6589:19:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6571:37:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 921,
																	"nodeType": "ExpressionStatement",
																	"src": "6571:37:4"
																}
															]
														}
													]
												},
												"id": 924,
												"nodeType": "IfStatement",
												"src": "6093:540:4",
												"trueBody": {
													"id": 896,
													"nodeType": "Block",
													"src": "6117:148:4",
													"statements": [
														{
															"expression": {
																"id": 894,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 892,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 662,
																	"src": "6233:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 893,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 883,
																	"src": "6249:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6233:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 895,
															"nodeType": "ExpressionStatement",
															"src": "6233:21:4"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 930,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 925,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 881,
														"src": "6647:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 928,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6661:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 927,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6653:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 926,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6653:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 929,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6653:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6647:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 944,
													"nodeType": "Block",
													"src": "6862:206:4",
													"statements": [
														{
															"id": 943,
															"nodeType": "UncheckedBlock",
															"src": "6876:182:4",
															"statements": [
																{
																	"expression": {
																		"id": 941,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 937,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 654,
																				"src": "7021:9:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 939,
																			"indexExpression": {
																				"id": 938,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 881,
																				"src": "7031:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7021:13:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 940,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 883,
																			"src": "7038:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7021:22:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 942,
																	"nodeType": "ExpressionStatement",
																	"src": "7021:22:4"
																}
															]
														}
													]
												},
												"id": 945,
												"nodeType": "IfStatement",
												"src": "6643:425:4",
												"trueBody": {
													"id": 936,
													"nodeType": "Block",
													"src": "6665:191:4",
													"statements": [
														{
															"id": 935,
															"nodeType": "UncheckedBlock",
															"src": "6679:167:4",
															"statements": [
																{
																	"expression": {
																		"id": 933,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 931,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 662,
																			"src": "6810:12:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 932,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 883,
																			"src": "6826:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6810:21:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 934,
																	"nodeType": "ExpressionStatement",
																	"src": "6810:21:4"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 947,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 879,
															"src": "7092:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 948,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 881,
															"src": "7098:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 949,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 883,
															"src": "7102:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 946,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1158,
														"src": "7083:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 950,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7083:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 951,
												"nodeType": "EmitStatement",
												"src": "7078:30:4"
											}
										]
									},
									"documentation": {
										"id": 877,
										"nodeType": "StructuredDocumentation",
										"src": "5699:304:4",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 953,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6017:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 884,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 879,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6033:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 953,
												"src": "6025:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 878,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6025:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 881,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6047:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 953,
												"src": "6039:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 880,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6039:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 883,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6059:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 953,
												"src": "6051:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 882,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6051:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6024:41:4"
									},
									"returnParameters": {
										"id": 885,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6083:0:4"
									},
									"scope": 1146,
									"src": "6008:1107:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 985,
										"nodeType": "Block",
										"src": "7514:152:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 966,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 961,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 956,
														"src": "7528:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 964,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7547:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 963,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7539:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 962,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7539:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 965,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7539:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7528:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 975,
												"nodeType": "IfStatement",
												"src": "7524:91:4",
												"trueBody": {
													"id": 974,
													"nodeType": "Block",
													"src": "7551:64:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 970,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7601:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 969,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7593:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 968,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7593:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 971,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7593:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 967,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 516,
																	"src": "7572:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 972,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7572:32:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 973,
															"nodeType": "RevertStatement",
															"src": "7565:39:4"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 979,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7640:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 978,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7632:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 977,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7632:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 980,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7632:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 981,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 956,
															"src": "7644:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 982,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 958,
															"src": "7653:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 976,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 953,
														"src": "7624:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 983,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7624:35:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 984,
												"nodeType": "ExpressionStatement",
												"src": "7624:35:4"
											}
										]
									},
									"documentation": {
										"id": 954,
										"nodeType": "StructuredDocumentation",
										"src": "7121:332:4",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 986,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7467:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 959,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 956,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7481:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 986,
												"src": "7473:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 955,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7473:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 958,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7498:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 986,
												"src": "7490:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 957,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7490:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7472:32:4"
									},
									"returnParameters": {
										"id": 960,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7514:0:4"
									},
									"scope": 1146,
									"src": "7458:208:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1018,
										"nodeType": "Block",
										"src": "8040:150:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 999,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 994,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 989,
														"src": "8054:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 997,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8073:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 996,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8065:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 995,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8065:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 998,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8065:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8054:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1008,
												"nodeType": "IfStatement",
												"src": "8050:89:4",
												"trueBody": {
													"id": 1007,
													"nodeType": "Block",
													"src": "8077:62:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1003,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8125:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1002,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8117:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1001,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8117:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1004,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8117:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1000,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 511,
																	"src": "8098:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1005,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8098:30:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1006,
															"nodeType": "RevertStatement",
															"src": "8091:37:4"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1010,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 989,
															"src": "8156:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1013,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8173:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1012,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8165:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1011,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8165:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1014,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8165:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1015,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 991,
															"src": "8177:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1009,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 953,
														"src": "8148:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1016,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8148:35:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1017,
												"nodeType": "ExpressionStatement",
												"src": "8148:35:4"
											}
										]
									},
									"documentation": {
										"id": 987,
										"nodeType": "StructuredDocumentation",
										"src": "7672:307:4",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 1019,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7993:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 992,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 989,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8007:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1019,
												"src": "7999:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 988,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7999:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 991,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8024:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1019,
												"src": "8016:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 990,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8016:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7998:32:4"
									},
									"returnParameters": {
										"id": 993,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8040:0:4"
									},
									"scope": 1146,
									"src": "7984:206:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1036,
										"nodeType": "Block",
										"src": "8800:54:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1030,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1022,
															"src": "8819:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1031,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1024,
															"src": "8826:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1032,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1026,
															"src": "8835:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 1033,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8842:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1029,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1037,
															1097
														],
														"referencedDeclaration": 1097,
														"src": "8810:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 1034,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8810:37:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1035,
												"nodeType": "ExpressionStatement",
												"src": "8810:37:4"
											}
										]
									},
									"documentation": {
										"id": 1020,
										"nodeType": "StructuredDocumentation",
										"src": "8196:525:4",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 1037,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8735:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1027,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1022,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8752:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1037,
												"src": "8744:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1021,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8744:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1024,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8767:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1037,
												"src": "8759:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1023,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8759:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1026,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8784:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1037,
												"src": "8776:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1025,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8776:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8743:47:4"
									},
									"returnParameters": {
										"id": 1028,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8800:0:4"
									},
									"scope": 1146,
									"src": "8726:128:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1096,
										"nodeType": "Block",
										"src": "9799:334:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1054,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1049,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1040,
														"src": "9813:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1052,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9830:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1051,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9822:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1050,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9822:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1053,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9822:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9813:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1063,
												"nodeType": "IfStatement",
												"src": "9809:89:4",
												"trueBody": {
													"id": 1062,
													"nodeType": "Block",
													"src": "9834:64:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1058,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9884:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1057,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9876:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1056,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9876:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1059,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9876:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1055,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 530,
																	"src": "9855:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1060,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9855:32:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1061,
															"nodeType": "RevertStatement",
															"src": "9848:39:4"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1069,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1064,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1042,
														"src": "9911:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1067,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9930:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1066,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9922:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1065,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9922:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1068,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9922:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9911:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1078,
												"nodeType": "IfStatement",
												"src": "9907:90:4",
												"trueBody": {
													"id": 1077,
													"nodeType": "Block",
													"src": "9934:63:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1073,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9983:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1072,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9975:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1071,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9975:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1074,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9975:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1070,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 535,
																	"src": "9955:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1075,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9955:31:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1076,
															"nodeType": "RevertStatement",
															"src": "9948:38:4"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1085,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1079,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 660,
																"src": "10006:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1082,
															"indexExpression": {
																"id": 1080,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1040,
																"src": "10018:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10006:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1083,
														"indexExpression": {
															"id": 1081,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1042,
															"src": "10025:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10006:27:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1084,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1044,
														"src": "10036:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10006:35:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1086,
												"nodeType": "ExpressionStatement",
												"src": "10006:35:4"
											},
											{
												"condition": {
													"id": 1087,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1046,
													"src": "10055:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1095,
												"nodeType": "IfStatement",
												"src": "10051:76:4",
												"trueBody": {
													"id": 1094,
													"nodeType": "Block",
													"src": "10066:61:4",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 1089,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1040,
																		"src": "10094:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1090,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1042,
																		"src": "10101:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1091,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1044,
																		"src": "10110:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1088,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1167,
																	"src": "10085:8:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1092,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10085:31:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1093,
															"nodeType": "EmitStatement",
															"src": "10080:36:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1038,
										"nodeType": "StructuredDocumentation",
										"src": "8860:836:4",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 1097,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9710:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1047,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1040,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9727:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1097,
												"src": "9719:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1039,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9719:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1042,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9742:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1097,
												"src": "9734:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1041,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9734:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1044,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9759:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1097,
												"src": "9751:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1043,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9751:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1046,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9771:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 1097,
												"src": "9766:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1045,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9766:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9718:63:4"
									},
									"returnParameters": {
										"id": 1048,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9799:0:4"
									},
									"scope": 1146,
									"src": "9701:432:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1144,
										"nodeType": "Block",
										"src": "10504:388:4",
										"statements": [
											{
												"assignments": [
													1108
												],
												"declarations": [
													{
														"constant": false,
														"id": 1108,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10522:16:4",
														"nodeType": "VariableDeclaration",
														"scope": 1144,
														"src": "10514:24:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1107,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10514:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1113,
												"initialValue": {
													"arguments": [
														{
															"id": 1110,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1100,
															"src": "10551:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1111,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1102,
															"src": "10558:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1109,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 773,
														"src": "10541:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 1112,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10541:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10514:52:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1120,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1114,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1108,
														"src": "10580:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1117,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10605:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1116,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10605:7:4",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 1115,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10600:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1118,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10600:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 1119,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10614:3:4",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10600:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10580:37:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1143,
												"nodeType": "IfStatement",
												"src": "10576:310:4",
												"trueBody": {
													"id": 1142,
													"nodeType": "Block",
													"src": "10619:267:4",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1123,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1121,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1108,
																	"src": "10637:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1122,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1104,
																	"src": "10656:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10637:24:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1131,
															"nodeType": "IfStatement",
															"src": "10633:130:4",
															"trueBody": {
																"id": 1130,
																"nodeType": "Block",
																"src": "10663:100:4",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1125,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1102,
																					"src": "10715:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1126,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1108,
																					"src": "10724:16:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 1127,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1104,
																					"src": "10742:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1124,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 525,
																				"src": "10688:26:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 1128,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10688:60:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 1129,
																		"nodeType": "RevertStatement",
																		"src": "10681:67:4"
																	}
																]
															}
														},
														{
															"id": 1141,
															"nodeType": "UncheckedBlock",
															"src": "10776:100:4",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 1133,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1100,
																				"src": "10813:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1134,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1102,
																				"src": "10820:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1137,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1135,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1108,
																					"src": "10829:16:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 1136,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1104,
																					"src": "10848:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10829:24:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 1138,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10855:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 1132,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				1037,
																				1097
																			],
																			"referencedDeclaration": 1097,
																			"src": "10804:8:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 1139,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10804:57:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1140,
																	"nodeType": "ExpressionStatement",
																	"src": "10804:57:4"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1098,
										"nodeType": "StructuredDocumentation",
										"src": "10139:271:4",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 1145,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10424:15:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1100,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10448:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1145,
												"src": "10440:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1099,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10440:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1102,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10463:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1145,
												"src": "10455:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1101,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10455:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1104,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10480:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1145,
												"src": "10472:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1103,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10472:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10439:47:4"
									},
									"returnParameters": {
										"id": 1106,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10504:0:4"
									},
									"scope": 1146,
									"src": "10415:477:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1147,
							"src": "1106:9788:4",
							"usedErrors": [
								506,
								511,
								516,
								525,
								530,
								535
							],
							"usedEvents": [
								1158,
								1167
							]
						}
					],
					"src": "105:10790:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							1224
						]
					},
					"id": 1225,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1148,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1149,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:5",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 1224,
							"linearizedBaseContracts": [
								1224
							],
							"name": "IERC20",
							"nameLocation": "214:6:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1150,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:5",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1158,
									"name": "Transfer",
									"nameLocation": "396:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1152,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1158,
												"src": "405:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1151,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1154,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1158,
												"src": "427:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1153,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1156,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1158,
												"src": "447:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1155,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:5"
									},
									"src": "390:72:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1159,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:5",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1167,
									"name": "Approval",
									"nameLocation": "627:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1161,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1167,
												"src": "636:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1163,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1167,
												"src": "659:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1162,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1165,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1167,
												"src": "684:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:5"
									},
									"src": "621:78:5"
								},
								{
									"documentation": {
										"id": 1168,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:5",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 1173,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1169,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:5"
									},
									"returnParameters": {
										"id": 1172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1171,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1173,
												"src": "821:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1170,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:5"
									},
									"scope": 1224,
									"src": "775:55:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1174,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:5",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 1181,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1176,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1181,
												"src": "931:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1175,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:5"
									},
									"returnParameters": {
										"id": 1180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1179,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1181,
												"src": "971:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:5"
									},
									"scope": 1224,
									"src": "912:68:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1182,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:5",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 1191,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1184,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1191,
												"src": "1222:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1183,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1186,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1191,
												"src": "1234:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1185,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:5"
									},
									"returnParameters": {
										"id": 1190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1189,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1191,
												"src": "1267:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1188,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:5"
									},
									"scope": 1224,
									"src": "1204:69:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1192,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:5",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 1201,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1194,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1201,
												"src": "1567:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1193,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1196,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1201,
												"src": "1582:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1195,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:5"
									},
									"returnParameters": {
										"id": 1200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1199,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1201,
												"src": "1622:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1198,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:5"
									},
									"scope": 1224,
									"src": "1548:83:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1202,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:5",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1211,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1204,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1211,
												"src": "2326:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1203,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1206,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1211,
												"src": "2343:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1205,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:5"
									},
									"returnParameters": {
										"id": 1210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1209,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1211,
												"src": "2376:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1208,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:5"
									},
									"scope": 1224,
									"src": "2309:73:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1212,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:5",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1223,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1214,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1223,
												"src": "2712:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1213,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1216,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1223,
												"src": "2726:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1215,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1218,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1223,
												"src": "2738:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1217,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:5"
									},
									"returnParameters": {
										"id": 1222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1221,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1223,
												"src": "2771:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1220,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:5"
									},
									"scope": 1224,
									"src": "2690:87:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1225,
							"src": "204:2575:5",
							"usedErrors": [],
							"usedEvents": [
								1158,
								1167
							]
						}
					],
					"src": "106:2674:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							1224
						],
						"IERC20Metadata": [
							1250
						]
					},
					"id": 1251,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1226,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 1228,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1251,
							"sourceUnit": 1225,
							"src": "151:37:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1227,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1224,
										"src": "159:6:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1230,
										"name": "IERC20",
										"nameLocations": [
											"306:6:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1224,
										"src": "306:6:6"
									},
									"id": 1231,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:6"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1229,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:6",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 1250,
							"linearizedBaseContracts": [
								1250,
								1224
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1232,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:6",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 1237,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1233,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:6"
									},
									"returnParameters": {
										"id": 1236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1235,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1237,
												"src": "417:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1234,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:6"
									},
									"scope": 1250,
									"src": "378:54:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1238,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:6",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 1243,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1239,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:6"
									},
									"returnParameters": {
										"id": 1242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1241,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1243,
												"src": "540:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1240,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:6"
									},
									"scope": 1250,
									"src": "499:56:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1244,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:6",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 1249,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1245,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:6"
									},
									"returnParameters": {
										"id": 1248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1247,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1249,
												"src": "674:5:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1246,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:6"
									},
									"scope": 1250,
									"src": "631:50:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1251,
							"src": "278:405:6",
							"usedErrors": [],
							"usedEvents": [
								1158,
								1167
							]
						}
					],
					"src": "125:559:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1280
						]
					},
					"id": 1281,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1252,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:7"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1253,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:7",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1280,
							"linearizedBaseContracts": [
								1280
							],
							"name": "Context",
							"nameLocation": "642:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1261,
										"nodeType": "Block",
										"src": "718:34:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1258,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1259,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:7",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1257,
												"id": 1260,
												"nodeType": "Return",
												"src": "728:17:7"
											}
										]
									},
									"id": 1262,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1254,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:7"
									},
									"returnParameters": {
										"id": 1257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1256,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1262,
												"src": "709:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1255,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:7"
									},
									"scope": 1280,
									"src": "656:96:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1270,
										"nodeType": "Block",
										"src": "825:32:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1267,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1268,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:7",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1266,
												"id": 1269,
												"nodeType": "Return",
												"src": "835:15:7"
											}
										]
									},
									"id": 1271,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1263,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:7"
									},
									"returnParameters": {
										"id": 1266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1265,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1271,
												"src": "809:14:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1264,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:7"
									},
									"scope": 1280,
									"src": "758:99:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1278,
										"nodeType": "Block",
										"src": "935:25:7",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1276,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1275,
												"id": 1277,
												"nodeType": "Return",
												"src": "945:8:7"
											}
										]
									},
									"id": 1279,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1272,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:7"
									},
									"returnParameters": {
										"id": 1275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1274,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1279,
												"src": "926:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1273,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:7"
									},
									"scope": 1280,
									"src": "863:97:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1281,
							"src": "624:338:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:7"
				},
				"id": 7
			},
			"contracts/ERC20/OwnershipLockedToke.sol": {
				"ast": {
					"absolutePath": "contracts/ERC20/OwnershipLockedToke.sol",
					"exportedSymbols": {
						"Context": [
							1280
						],
						"ContextUpgradeable": [
							494
						],
						"ERC20": [
							1146
						],
						"IERC20": [
							1224
						],
						"IERC20Errors": [
							536
						],
						"IERC20Metadata": [
							1250
						],
						"Initializable": [
							448
						],
						"OwnableUpgradeable": [
							194
						],
						"TokenLock": [
							1565
						]
					},
					"id": 1566,
					"license": "LGPL-3.0-only",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1282,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".6"
							],
							"nodeType": "PragmaDirective",
							"src": "43:23:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
							"id": 1283,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1566,
							"sourceUnit": 195,
							"src": "70:75:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 1284,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1566,
							"sourceUnit": 1147,
							"src": "147:55:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 1285,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1566,
							"sourceUnit": 1225,
							"src": "204:56:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1286,
										"name": "OwnableUpgradeable",
										"nameLocations": [
											"286:18:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 194,
										"src": "286:18:8"
									},
									"id": 1287,
									"nodeType": "InheritanceSpecifier",
									"src": "286:18:8"
								},
								{
									"baseName": {
										"id": 1288,
										"name": "IERC20",
										"nameLocations": [
											"306:6:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1224,
										"src": "306:6:8"
									},
									"id": 1289,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:8"
								}
							],
							"canonicalName": "TokenLock",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1565,
							"linearizedBaseContracts": [
								1565,
								1224,
								194,
								494,
								448
							],
							"name": "TokenLock",
							"nameLocation": "273:9:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "fc0c546a",
									"id": 1292,
									"mutability": "mutable",
									"name": "token",
									"nameLocation": "331:5:8",
									"nodeType": "VariableDeclaration",
									"scope": 1565,
									"src": "318:18:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_ERC20_$1146",
										"typeString": "contract ERC20"
									},
									"typeName": {
										"id": 1291,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1290,
											"name": "ERC20",
											"nameLocations": [
												"318:5:8"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1146,
											"src": "318:5:8"
										},
										"referencedDeclaration": 1146,
										"src": "318:5:8",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ERC20_$1146",
											"typeString": "contract ERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "61603d89",
									"id": 1294,
									"mutability": "mutable",
									"name": "depositDeadline",
									"nameLocation": "356:15:8",
									"nodeType": "VariableDeclaration",
									"scope": 1565,
									"src": "341:30:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1293,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "341:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "04554443",
									"id": 1296,
									"mutability": "mutable",
									"name": "lockDuration",
									"nameLocation": "391:12:8",
									"nodeType": "VariableDeclaration",
									"scope": 1565,
									"src": "376:27:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1295,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "376:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "06fdde03",
									"id": 1298,
									"mutability": "mutable",
									"name": "name",
									"nameLocation": "424:4:8",
									"nodeType": "VariableDeclaration",
									"scope": 1565,
									"src": "410:18:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 1297,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "410:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "95d89b41",
									"id": 1300,
									"mutability": "mutable",
									"name": "symbol",
									"nameLocation": "447:6:8",
									"nodeType": "VariableDeclaration",
									"scope": 1565,
									"src": "433:20:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 1299,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "433:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1173
									],
									"constant": false,
									"functionSelector": "18160ddd",
									"id": 1303,
									"mutability": "mutable",
									"name": "totalSupply",
									"nameLocation": "482:11:8",
									"nodeType": "VariableDeclaration",
									"overrides": {
										"id": 1302,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "473:8:8"
									},
									"scope": 1565,
									"src": "458:35:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1301,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "458:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1181
									],
									"constant": false,
									"functionSelector": "70a08231",
									"id": 1308,
									"mutability": "mutable",
									"name": "balanceOf",
									"nameLocation": "542:9:8",
									"nodeType": "VariableDeclaration",
									"overrides": {
										"id": 1307,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "533:8:8"
									},
									"scope": 1565,
									"src": "498:53:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1306,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1304,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "506:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "498:27:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1305,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "517:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 1309,
										"nodeType": "StructuredDocumentation",
										"src": "558:64:8",
										"text": "Withdraw amount exceeds sender's balance of the locked token"
									},
									"errorSelector": "7fa62f9d",
									"id": 1311,
									"name": "ExceedsBalance",
									"nameLocation": "632:14:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1310,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "646:2:8"
									},
									"src": "626:23:8"
								},
								{
									"documentation": {
										"id": 1312,
										"nodeType": "StructuredDocumentation",
										"src": "653:70:8",
										"text": "Deposit is not possible anymore because the deposit period is over"
									},
									"errorSelector": "9883528e",
									"id": 1314,
									"name": "DepositPeriodOver",
									"nameLocation": "733:17:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1313,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "750:2:8"
									},
									"src": "727:26:8"
								},
								{
									"documentation": {
										"id": 1315,
										"nodeType": "StructuredDocumentation",
										"src": "757:68:8",
										"text": "Withdraw is not possible because the lock period is not over yet"
									},
									"errorSelector": "3c2c6e9d",
									"id": 1317,
									"name": "LockPeriodOngoing",
									"nameLocation": "835:17:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1316,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "852:2:8"
									},
									"src": "829:26:8"
								},
								{
									"documentation": {
										"id": 1318,
										"nodeType": "StructuredDocumentation",
										"src": "859:49:8",
										"text": "Could not transfer the designated ERC20 token"
									},
									"errorSelector": "90b8ec18",
									"id": 1320,
									"name": "TransferFailed",
									"nameLocation": "918:14:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1319,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "932:2:8"
									},
									"src": "912:23:8"
								},
								{
									"documentation": {
										"id": 1321,
										"nodeType": "StructuredDocumentation",
										"src": "939:36:8",
										"text": "ERC-20 function is not supported"
									},
									"errorSelector": "a0387940",
									"id": 1323,
									"name": "NotSupported",
									"nameLocation": "985:12:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1322,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "997:2:8"
									},
									"src": "979:21:8"
								},
								{
									"body": {
										"id": 1370,
										"nodeType": "Block",
										"src": "1205:206:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1341,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1325,
															"src": "1230:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1340,
														"name": "transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 164,
														"src": "1212:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1212:25:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1343,
												"nodeType": "ExpressionStatement",
												"src": "1212:25:8"
											},
											{
												"expression": {
													"id": 1348,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1344,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1292,
														"src": "1244:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ERC20_$1146",
															"typeString": "contract ERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1346,
																"name": "_token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1327,
																"src": "1258:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1345,
															"name": "ERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1146,
															"src": "1252:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC20_$1146_$",
																"typeString": "type(contract ERC20)"
															}
														},
														"id": 1347,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1252:13:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ERC20_$1146",
															"typeString": "contract ERC20"
														}
													},
													"src": "1244:21:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ERC20_$1146",
														"typeString": "contract ERC20"
													}
												},
												"id": 1349,
												"nodeType": "ExpressionStatement",
												"src": "1244:21:8"
											},
											{
												"expression": {
													"id": 1352,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1350,
														"name": "depositDeadline",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1294,
														"src": "1272:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1351,
														"name": "_depositDeadline",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1329,
														"src": "1290:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1272:34:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1353,
												"nodeType": "ExpressionStatement",
												"src": "1272:34:8"
											},
											{
												"expression": {
													"id": 1356,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1354,
														"name": "lockDuration",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1296,
														"src": "1313:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1355,
														"name": "_lockDuration",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1331,
														"src": "1328:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1313:28:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1357,
												"nodeType": "ExpressionStatement",
												"src": "1313:28:8"
											},
											{
												"expression": {
													"id": 1360,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1358,
														"name": "name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1298,
														"src": "1348:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1359,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1333,
														"src": "1355:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1348:12:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1361,
												"nodeType": "ExpressionStatement",
												"src": "1348:12:8"
											},
											{
												"expression": {
													"id": 1364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1362,
														"name": "symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1300,
														"src": "1367:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1363,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1335,
														"src": "1376:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1367:16:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1365,
												"nodeType": "ExpressionStatement",
												"src": "1367:16:8"
											},
											{
												"expression": {
													"id": 1368,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1366,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1303,
														"src": "1390:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1367,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1404:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1390:15:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1369,
												"nodeType": "ExpressionStatement",
												"src": "1390:15:8"
											}
										]
									},
									"functionSelector": "e001ff52",
									"id": 1371,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1338,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1337,
												"name": "initializer",
												"nameLocations": [
													"1193:11:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 302,
												"src": "1193:11:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "1193:11:8"
										}
									],
									"name": "initialize",
									"nameLocation": "1015:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1325,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "1040:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1371,
												"src": "1032:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1324,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1032:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1327,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "1061:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1371,
												"src": "1053:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1326,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1053:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1329,
												"mutability": "mutable",
												"name": "_depositDeadline",
												"nameLocation": "1082:16:8",
												"nodeType": "VariableDeclaration",
												"scope": 1371,
												"src": "1074:24:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1328,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1074:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1331,
												"mutability": "mutable",
												"name": "_lockDuration",
												"nameLocation": "1113:13:8",
												"nodeType": "VariableDeclaration",
												"scope": 1371,
												"src": "1105:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1330,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1105:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1333,
												"mutability": "mutable",
												"name": "_name",
												"nameLocation": "1147:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1371,
												"src": "1133:19:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1332,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1133:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1335,
												"mutability": "mutable",
												"name": "_symbol",
												"nameLocation": "1173:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1371,
												"src": "1159:21:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1334,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1159:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1025:160:8"
									},
									"returnParameters": {
										"id": 1339,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1205:0:8"
									},
									"scope": 1565,
									"src": "1006:405:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1423,
										"nodeType": "Block",
										"src": "1586:327:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1380,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1377,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "1597:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1378,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1603:9:8",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "1597:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 1379,
														"name": "depositDeadline",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1294,
														"src": "1615:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1597:33:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1385,
												"nodeType": "IfStatement",
												"src": "1593:82:8",
												"trueBody": {
													"id": 1384,
													"nodeType": "Block",
													"src": "1632:43:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1381,
																	"name": "DepositPeriodOver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1314,
																	"src": "1648:17:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1382,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1648:19:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1383,
															"nodeType": "RevertStatement",
															"src": "1641:26:8"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1391,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1386,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1308,
															"src": "1683:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1389,
														"indexExpression": {
															"expression": {
																"id": 1387,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1693:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1388,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1697:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1693:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1683:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1390,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1374,
														"src": "1708:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1683:31:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1392,
												"nodeType": "ExpressionStatement",
												"src": "1683:31:8"
											},
											{
												"expression": {
													"id": 1395,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1393,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1303,
														"src": "1721:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1394,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1374,
														"src": "1736:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1721:21:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1396,
												"nodeType": "ExpressionStatement",
												"src": "1721:21:8"
											},
											{
												"condition": {
													"id": 1407,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1755:54:8",
													"subExpression": {
														"arguments": [
															{
																"expression": {
																	"id": 1399,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1775:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1400,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1779:6:8",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1775:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"arguments": [
																	{
																		"id": 1403,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "1795:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_TokenLock_$1565",
																			"typeString": "contract TokenLock"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_TokenLock_$1565",
																			"typeString": "contract TokenLock"
																		}
																	],
																	"id": 1402,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1787:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1401,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1787:7:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 1404,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1787:13:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1405,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1374,
																"src": "1802:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1397,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1292,
																"src": "1756:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_ERC20_$1146",
																	"typeString": "contract ERC20"
																}
															},
															"id": 1398,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1762:12:8",
															"memberName": "transferFrom",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 829,
															"src": "1756:18:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,address,uint256) external returns (bool)"
															}
														},
														"id": 1406,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1756:53:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1412,
												"nodeType": "IfStatement",
												"src": "1751:100:8",
												"trueBody": {
													"id": 1411,
													"nodeType": "Block",
													"src": "1811:40:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1408,
																	"name": "TransferFailed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1320,
																	"src": "1827:14:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1409,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1827:16:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1410,
															"nodeType": "RevertStatement",
															"src": "1820:23:8"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1414,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1873:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1415,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1877:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1873:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1418,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1893:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_TokenLock_$1565",
																		"typeString": "contract TokenLock"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_TokenLock_$1565",
																		"typeString": "contract TokenLock"
																	}
																],
																"id": 1417,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1885:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1416,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1885:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1419,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1885:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1420,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1374,
															"src": "1900:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1413,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1158,
														"src": "1864:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1421,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1864:43:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1422,
												"nodeType": "EmitStatement",
												"src": "1859:48:8"
											}
										]
									},
									"documentation": {
										"id": 1372,
										"nodeType": "StructuredDocumentation",
										"src": "1417:125:8",
										"text": "@dev Deposit tokens to be locked until the end of the locking period\n @param amount The amount of tokens to deposit"
									},
									"functionSelector": "b6b55f25",
									"id": 1424,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nameLocation": "1555:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1374,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1571:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1424,
												"src": "1563:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1373,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1563:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1562:16:8"
									},
									"returnParameters": {
										"id": 1376,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1586:0:8"
									},
									"scope": 1565,
									"src": "1546:367:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1490,
										"nodeType": "Block",
										"src": "2107:463:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1440,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1433,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1430,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "2126:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1431,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2132:9:8",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "2126:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 1432,
															"name": "depositDeadline",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1294,
															"src": "2144:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2126:33:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1439,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1434,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "2170:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1435,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2176:9:8",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "2170:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1438,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1436,
																"name": "depositDeadline",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1294,
																"src": "2188:15:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1437,
																"name": "lockDuration",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1296,
																"src": "2206:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2188:30:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2170:48:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2126:92:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1445,
												"nodeType": "IfStatement",
												"src": "2114:155:8",
												"trueBody": {
													"id": 1444,
													"nodeType": "Block",
													"src": "2226:43:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1441,
																	"name": "LockPeriodOngoing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1317,
																	"src": "2242:17:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1442,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2242:19:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1443,
															"nodeType": "RevertStatement",
															"src": "2235:26:8"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1451,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 1446,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1308,
															"src": "2279:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1449,
														"indexExpression": {
															"expression": {
																"id": 1447,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2289:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1448,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2293:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2289:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2279:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1450,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1427,
														"src": "2303:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2279:30:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1456,
												"nodeType": "IfStatement",
												"src": "2275:76:8",
												"trueBody": {
													"id": 1455,
													"nodeType": "Block",
													"src": "2311:40:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1452,
																	"name": "ExceedsBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1311,
																	"src": "2327:14:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1453,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2327:16:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1454,
															"nodeType": "RevertStatement",
															"src": "2320:23:8"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1462,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1457,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1308,
															"src": "2359:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1460,
														"indexExpression": {
															"expression": {
																"id": 1458,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2369:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1459,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2373:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2369:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2359:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1461,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1427,
														"src": "2384:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2359:31:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1463,
												"nodeType": "ExpressionStatement",
												"src": "2359:31:8"
											},
											{
												"expression": {
													"id": 1466,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1464,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1303,
														"src": "2397:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1465,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1427,
														"src": "2412:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2397:21:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1467,
												"nodeType": "ExpressionStatement",
												"src": "2397:21:8"
											},
											{
												"condition": {
													"id": 1474,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "2431:35:8",
													"subExpression": {
														"arguments": [
															{
																"expression": {
																	"id": 1470,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2447:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1471,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2451:6:8",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2447:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1472,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1427,
																"src": "2459:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1468,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1292,
																"src": "2432:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_ERC20_$1146",
																	"typeString": "contract ERC20"
																}
															},
															"id": 1469,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2438:8:8",
															"memberName": "transfer",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 756,
															"src": "2432:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														"id": 1473,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2432:34:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1479,
												"nodeType": "IfStatement",
												"src": "2427:81:8",
												"trueBody": {
													"id": 1478,
													"nodeType": "Block",
													"src": "2468:40:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1475,
																	"name": "TransferFailed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1320,
																	"src": "2484:14:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1476,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2484:16:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1477,
															"nodeType": "RevertStatement",
															"src": "2477:23:8"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1483,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2538:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_TokenLock_$1565",
																		"typeString": "contract TokenLock"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_TokenLock_$1565",
																		"typeString": "contract TokenLock"
																	}
																],
																"id": 1482,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2530:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1481,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2530:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1484,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2530:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1485,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2545:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1486,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2549:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2545:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1487,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1427,
															"src": "2557:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1480,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1158,
														"src": "2521:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2521:43:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1489,
												"nodeType": "EmitStatement",
												"src": "2516:48:8"
											}
										]
									},
									"documentation": {
										"id": 1425,
										"nodeType": "StructuredDocumentation",
										"src": "1919:143:8",
										"text": "@dev Withdraw tokens after the end of the locking period or during the deposit period\n @param amount The amount of tokens to withdraw"
									},
									"functionSelector": "2e1a7d4d",
									"id": 1491,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "2075:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1428,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1427,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2092:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1491,
												"src": "2084:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1426,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2084:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2083:16:8"
									},
									"returnParameters": {
										"id": 1429,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2107:0:8"
									},
									"scope": 1565,
									"src": "2066:504:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1501,
										"nodeType": "Block",
										"src": "2687:36:8",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1497,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1292,
															"src": "2701:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20_$1146",
																"typeString": "contract ERC20"
															}
														},
														"id": 1498,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2707:8:8",
														"memberName": "decimals",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 710,
														"src": "2701:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
															"typeString": "function () view external returns (uint8)"
														}
													},
													"id": 1499,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2701:16:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 1496,
												"id": 1500,
												"nodeType": "Return",
												"src": "2694:23:8"
											}
										]
									},
									"documentation": {
										"id": 1492,
										"nodeType": "StructuredDocumentation",
										"src": "2576:59:8",
										"text": "@dev Returns the number of decimals of the locked token"
									},
									"functionSelector": "313ce567",
									"id": 1502,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2648:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1493,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:8"
									},
									"returnParameters": {
										"id": 1496,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1495,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1502,
												"src": "2680:5:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1494,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2680:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2679:7:8"
									},
									"scope": 1565,
									"src": "2639:84:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1191
									],
									"body": {
										"id": 1516,
										"nodeType": "Block",
										"src": "2889:34:8",
										"statements": [
											{
												"errorCall": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1513,
														"name": "NotSupported",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1323,
														"src": "2903:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
															"typeString": "function () pure returns (error)"
														}
													},
													"id": 1514,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2903:14:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_error",
														"typeString": "error"
													}
												},
												"id": 1515,
												"nodeType": "RevertStatement",
												"src": "2896:21:8"
											}
										]
									},
									"documentation": {
										"id": 1503,
										"nodeType": "StructuredDocumentation",
										"src": "2729:82:8",
										"text": "@dev Lock claim tokens are non-transferrable: ERC-20 transfer is not supported"
									},
									"functionSelector": "a9059cbb",
									"id": 1517,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "2824:8:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1509,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2865:8:8"
									},
									"parameters": {
										"id": 1508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1505,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1517,
												"src": "2833:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1504,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2833:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1507,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1517,
												"src": "2842:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1506,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2842:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2832:18:8"
									},
									"returnParameters": {
										"id": 1512,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1511,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1517,
												"src": "2883:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1510,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2883:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2882:6:8"
									},
									"scope": 1565,
									"src": "2815:108:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1201
									],
									"body": {
										"id": 1531,
										"nodeType": "Block",
										"src": "3117:34:8",
										"statements": [
											{
												"errorCall": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1528,
														"name": "NotSupported",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1323,
														"src": "3131:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
															"typeString": "function () pure returns (error)"
														}
													},
													"id": 1529,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3131:14:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_error",
														"typeString": "error"
													}
												},
												"id": 1530,
												"nodeType": "RevertStatement",
												"src": "3124:21:8"
											}
										]
									},
									"documentation": {
										"id": 1518,
										"nodeType": "StructuredDocumentation",
										"src": "2929:83:8",
										"text": "@dev Lock claim tokens are non-transferrable: ERC-20 allowance is not supported"
									},
									"functionSelector": "dd62ed3e",
									"id": 1532,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3025:9:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1524,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3082:8:8"
									},
									"parameters": {
										"id": 1523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1520,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1532,
												"src": "3035:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1519,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3035:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1522,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1532,
												"src": "3044:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1521,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3044:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3034:18:8"
									},
									"returnParameters": {
										"id": 1527,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1526,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1532,
												"src": "3105:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1525,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3105:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3104:9:8"
									},
									"scope": 1565,
									"src": "3016:135:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1211
									],
									"body": {
										"id": 1546,
										"nodeType": "Block",
										"src": "3315:34:8",
										"statements": [
											{
												"errorCall": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1543,
														"name": "NotSupported",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1323,
														"src": "3329:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
															"typeString": "function () pure returns (error)"
														}
													},
													"id": 1544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3329:14:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_error",
														"typeString": "error"
													}
												},
												"id": 1545,
												"nodeType": "RevertStatement",
												"src": "3322:21:8"
											}
										]
									},
									"documentation": {
										"id": 1533,
										"nodeType": "StructuredDocumentation",
										"src": "3157:81:8",
										"text": "@dev Lock claim tokens are non-transferrable: ERC-20 approve is not supported"
									},
									"functionSelector": "095ea7b3",
									"id": 1547,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3251:7:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1539,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3291:8:8"
									},
									"parameters": {
										"id": 1538,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1535,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1547,
												"src": "3259:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1534,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3259:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1537,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1547,
												"src": "3268:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1536,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3268:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3258:18:8"
									},
									"returnParameters": {
										"id": 1542,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1541,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1547,
												"src": "3309:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1540,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3309:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3308:6:8"
									},
									"scope": 1565,
									"src": "3242:107:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1223
									],
									"body": {
										"id": 1563,
										"nodeType": "Block",
										"src": "3552:34:8",
										"statements": [
											{
												"errorCall": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1560,
														"name": "NotSupported",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1323,
														"src": "3566:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
															"typeString": "function () pure returns (error)"
														}
													},
													"id": 1561,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3566:14:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_error",
														"typeString": "error"
													}
												},
												"id": 1562,
												"nodeType": "RevertStatement",
												"src": "3559:21:8"
											}
										]
									},
									"documentation": {
										"id": 1548,
										"nodeType": "StructuredDocumentation",
										"src": "3355:86:8",
										"text": "@dev Lock claim tokens are non-transferrable: ERC-20 transferFrom is not supported"
									},
									"functionSelector": "23b872dd",
									"id": 1564,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3454:12:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1556,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3528:8:8"
									},
									"parameters": {
										"id": 1555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1550,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1564,
												"src": "3473:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1549,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3473:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1552,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1564,
												"src": "3487:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1551,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3487:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1554,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1564,
												"src": "3501:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1553,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3501:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3466:47:8"
									},
									"returnParameters": {
										"id": 1559,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1558,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1564,
												"src": "3546:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1557,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3546:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3545:6:8"
									},
									"scope": 1565,
									"src": "3445:141:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1566,
							"src": "264:3325:8",
							"usedErrors": [
								30,
								35,
								211,
								214,
								1311,
								1314,
								1317,
								1320,
								1323
							],
							"usedEvents": [
								41,
								219,
								1158,
								1167
							]
						}
					],
					"src": "43:3546:8"
				},
				"id": 8
			}
		}
	}
}