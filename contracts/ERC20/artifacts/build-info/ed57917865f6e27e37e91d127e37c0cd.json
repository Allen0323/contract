{
	"id": "ed57917865f6e27e37e91d127e37c0cd",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/ERC20/TimeLock.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\n\r\ncontract TimeLockedToken is ERC20 {\r\n    uint256 public unlockTime;  // Timestamp after which the tokens can be transferred\r\n\r\n    constructor(uint256 initialSupply, uint256 lockTimeInSeconds) ERC20(\"TimeLockedToken\", \"TLT\") {\r\n        // Mint the initial supply to the deployer's address\r\n        _mint(msg.sender, initialSupply * 10 ** decimals());\r\n\r\n        // Set the unlock time\r\n        unlockTime = block.timestamp + lockTimeInSeconds;  // Lock tokens for the specified duration\r\n    }\r\n\r\n    // Override the transfer function to enforce the lock\r\n    function transfer(address recipient, uint256 amount) public override returns (bool) {\r\n        require(block.timestamp >= unlockTime, \"Tokens are locked until the unlock time has passed\");\r\n        return super.transfer(recipient, amount);\r\n    }\r\n\r\n    // Override the transferFrom function to enforce the lock\r\n    function transferFrom(address sender, address recipient, uint256 amount) public override returns (bool) {\r\n        require(block.timestamp >= unlockTime, \"Tokens are locked until the unlock time has passed\");\r\n        return super.transferFrom(sender, recipient, amount);\r\n    }\r\n}\r\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xbf61ab2ae1d575a17ea58fbb99ca232baddcc4e0eeea180e84cbc74b0c348b31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e0968705bad99747a8e5288aa008678c2be2f471f919dce3925a3cc4f1dee09\",\"dweb:/ipfs/QmbAFnCQfo4tw6ssfQSjhA5LzwHWNNryXN8bX7ty8jiqqn\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 159,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 165,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 167,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 169,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 171,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/ERC20/TimeLock.sol": {
				"TimeLockedToken": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "initialSupply",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "lockTimeInSeconds",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unlockTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/ERC20/TimeLock.sol\":119:1277  contract TimeLockedToken is ERC20 {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/ERC20/TimeLock.sol\":250:612  constructor(uint256 initialSupply, uint256 lockTimeInSeconds) ERC20(\"TimeLockedToken\", \"TLT\") {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1601:1714  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0f\n  dup2\n  mstore\n  0x20\n  add\n  0x54696d654c6f636b6564546f6b656e0000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  0x544c540000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1675:1680  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1667:1672  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1667:1680  _name = name_ */\n  swap1\n  dup2\n  tag_7\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_7:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1700:1707  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1697  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1707  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_9\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_9:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1601:1714  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"contracts/ERC20/TimeLock.sol\":417:468  _mint(msg.sender, initialSupply * 10 ** decimals()) */\n  tag_11\n    /* \"contracts/ERC20/TimeLock.sol\":423:433  msg.sender */\n  caller\n    /* \"contracts/ERC20/TimeLock.sol\":457:467  decimals() */\n  tag_12\n    /* \"contracts/ERC20/TimeLock.sol\":457:465  decimals */\n  shl(0x20, tag_13)\n    /* \"contracts/ERC20/TimeLock.sol\":457:467  decimals() */\n  0x20\n  shr\n  jump\t// in\ntag_12:\n    /* \"contracts/ERC20/TimeLock.sol\":451:453  10 */\n  0x0a\n    /* \"contracts/ERC20/TimeLock.sol\":451:467  10 ** decimals() */\n  tag_14\n  swap2\n  swap1\n  tag_15\n  jump\t// in\ntag_14:\n    /* \"contracts/ERC20/TimeLock.sol\":435:448  initialSupply */\n  dup5\n    /* \"contracts/ERC20/TimeLock.sol\":435:467  initialSupply * 10 ** decimals() */\n  tag_16\n  swap2\n  swap1\n  tag_17\n  jump\t// in\ntag_16:\n    /* \"contracts/ERC20/TimeLock.sol\":417:422  _mint */\n  shl(0x20, tag_18)\n    /* \"contracts/ERC20/TimeLock.sol\":417:468  _mint(msg.sender, initialSupply * 10 ** decimals()) */\n  0x20\n  shr\n  jump\t// in\ntag_11:\n    /* \"contracts/ERC20/TimeLock.sol\":544:561  lockTimeInSeconds */\n  dup1\n    /* \"contracts/ERC20/TimeLock.sol\":526:541  block.timestamp */\n  timestamp\n    /* \"contracts/ERC20/TimeLock.sol\":526:561  block.timestamp + lockTimeInSeconds */\n  tag_19\n  swap2\n  swap1\n  tag_20\n  jump\t// in\ntag_19:\n    /* \"contracts/ERC20/TimeLock.sol\":513:523  unlockTime */\n  0x05\n    /* \"contracts/ERC20/TimeLock.sol\":513:561  unlockTime = block.timestamp + lockTimeInSeconds */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/ERC20/TimeLock.sol\":250:612  constructor(uint256 initialSupply, uint256 lockTimeInSeconds) ERC20(\"TimeLockedToken\", \"TLT\") {... */\n  pop\n  pop\n    /* \"contracts/ERC20/TimeLock.sol\":119:1277  contract TimeLockedToken is ERC20 {... */\n  jump(tag_21)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\ntag_13:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2756:2761  uint8 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2780:2782  18 */\n  0x12\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2773:2782  return 18 */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\ntag_18:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7547:7548  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7535  account */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\n  tag_24\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7601:7602  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7572:7604  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  0xec442f0500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_25\n  swap2\n  swap1\n  tag_26\n  jump\t// in\ntag_25:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\ntag_24:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n  tag_27\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7640:7641  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7644:7651  account */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7653:7658  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7631  _update */\n  shl(0x20, tag_28)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n  0x20\n  shr\n  jump\t// in\ntag_27:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_28:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6113:6114  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6101  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n  tag_30\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6249:6254  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6245  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6254  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_31\n  swap2\n  swap1\n  tag_20\n  jump\t// in\ntag_31:\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n  jump(tag_32)\ntag_30:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6304  uint256 fromBalance */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6316  _balances */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6321  from */\n  dup6\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  sload\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6322  uint256 fromBalance = _balances[from] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6354:6359  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6351  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6359  fromBalance < value */\n  lt\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n  iszero\n  tag_33\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6411:6415  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6417:6428  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6430:6435  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  0xe450d38c00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_34\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_35\n  jump\t// in\ntag_34:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\ntag_33:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6608  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6600  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6608  fromBalance - value */\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6580  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6581:6585  from */\n  dup7\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6608  _balances[from] = fromBalance - value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:6633  {... */\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\ntag_32:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6661:6662  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6649  to */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n  tag_36\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6826:6831  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6822  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6831  _totalSupply -= value */\n  dup3\n  dup3\n  sload\n  sub\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n  jump(tag_37)\ntag_36:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7038:7043  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7030  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7031:7033  to */\n  dup5\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7043  _balances[to] += value */\n  dup3\n  dup3\n  sload\n  add\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\ntag_37:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7098:7100  to */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7092:7096  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7102:7107  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n  mload(0x40)\n  tag_38\n  swap2\n  swap1\n  tag_39\n  jump\t// in\ntag_38:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_41:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:411   */\ntag_43:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":400:405   */\n  dup2\n    /* \"#utility.yul\":389:405   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:411   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":417:539   */\ntag_44:\n    /* \"#utility.yul\":490:514   */\n  tag_80\n    /* \"#utility.yul\":508:513   */\n  dup2\n    /* \"#utility.yul\":490:514   */\n  tag_43\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":483:488   */\n  dup2\n    /* \"#utility.yul\":480:515   */\n  eq\n    /* \"#utility.yul\":470:533   */\n  tag_81\n  jumpi\n    /* \"#utility.yul\":529:530   */\n  0x00\n    /* \"#utility.yul\":526:527   */\n  dup1\n    /* \"#utility.yul\":519:531   */\n  revert\n    /* \"#utility.yul\":470:533   */\ntag_81:\n    /* \"#utility.yul\":417:539   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":545:688   */\ntag_45:\n    /* \"#utility.yul\":602:607   */\n  0x00\n    /* \"#utility.yul\":633:639   */\n  dup2\n    /* \"#utility.yul\":627:640   */\n  mload\n    /* \"#utility.yul\":618:640   */\n  swap1\n  pop\n    /* \"#utility.yul\":649:682   */\n  tag_83\n    /* \"#utility.yul\":676:681   */\n  dup2\n    /* \"#utility.yul\":649:682   */\n  tag_44\n  jump\t// in\ntag_83:\n    /* \"#utility.yul\":545:688   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":694:1201   */\ntag_3:\n    /* \"#utility.yul\":773:779   */\n  0x00\n    /* \"#utility.yul\":781:787   */\n  dup1\n    /* \"#utility.yul\":830:832   */\n  0x40\n    /* \"#utility.yul\":818:827   */\n  dup4\n    /* \"#utility.yul\":809:816   */\n  dup6\n    /* \"#utility.yul\":805:828   */\n  sub\n    /* \"#utility.yul\":801:833   */\n  slt\n    /* \"#utility.yul\":798:917   */\n  iszero\n  tag_85\n  jumpi\n    /* \"#utility.yul\":836:915   */\n  tag_86\n  tag_41\n  jump\t// in\ntag_86:\n    /* \"#utility.yul\":798:917   */\ntag_85:\n    /* \"#utility.yul\":956:957   */\n  0x00\n    /* \"#utility.yul\":981:1045   */\n  tag_87\n    /* \"#utility.yul\":1037:1044   */\n  dup6\n    /* \"#utility.yul\":1028:1034   */\n  dup3\n    /* \"#utility.yul\":1017:1026   */\n  dup7\n    /* \"#utility.yul\":1013:1035   */\n  add\n    /* \"#utility.yul\":981:1045   */\n  tag_45\n  jump\t// in\ntag_87:\n    /* \"#utility.yul\":971:1045   */\n  swap3\n  pop\n    /* \"#utility.yul\":927:1055   */\n  pop\n    /* \"#utility.yul\":1094:1096   */\n  0x20\n    /* \"#utility.yul\":1120:1184   */\n  tag_88\n    /* \"#utility.yul\":1176:1183   */\n  dup6\n    /* \"#utility.yul\":1167:1173   */\n  dup3\n    /* \"#utility.yul\":1156:1165   */\n  dup7\n    /* \"#utility.yul\":1152:1174   */\n  add\n    /* \"#utility.yul\":1120:1184   */\n  tag_45\n  jump\t// in\ntag_88:\n    /* \"#utility.yul\":1110:1184   */\n  swap2\n  pop\n    /* \"#utility.yul\":1065:1194   */\n  pop\n    /* \"#utility.yul\":694:1201   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1207:1306   */\ntag_46:\n    /* \"#utility.yul\":1259:1265   */\n  0x00\n    /* \"#utility.yul\":1293:1298   */\n  dup2\n    /* \"#utility.yul\":1287:1299   */\n  mload\n    /* \"#utility.yul\":1277:1299   */\n  swap1\n  pop\n    /* \"#utility.yul\":1207:1306   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1312:1492   */\ntag_47:\n    /* \"#utility.yul\":1360:1437   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1357:1358   */\n  0x00\n    /* \"#utility.yul\":1350:1438   */\n  mstore\n    /* \"#utility.yul\":1457:1461   */\n  0x41\n    /* \"#utility.yul\":1454:1455   */\n  0x04\n    /* \"#utility.yul\":1447:1462   */\n  mstore\n    /* \"#utility.yul\":1481:1485   */\n  0x24\n    /* \"#utility.yul\":1478:1479   */\n  0x00\n    /* \"#utility.yul\":1471:1486   */\n  revert\n    /* \"#utility.yul\":1498:1678   */\ntag_48:\n    /* \"#utility.yul\":1546:1623   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1543:1544   */\n  0x00\n    /* \"#utility.yul\":1536:1624   */\n  mstore\n    /* \"#utility.yul\":1643:1647   */\n  0x22\n    /* \"#utility.yul\":1640:1641   */\n  0x04\n    /* \"#utility.yul\":1633:1648   */\n  mstore\n    /* \"#utility.yul\":1667:1671   */\n  0x24\n    /* \"#utility.yul\":1664:1665   */\n  0x00\n    /* \"#utility.yul\":1657:1672   */\n  revert\n    /* \"#utility.yul\":1684:2004   */\ntag_49:\n    /* \"#utility.yul\":1728:1734   */\n  0x00\n    /* \"#utility.yul\":1765:1766   */\n  0x02\n    /* \"#utility.yul\":1759:1763   */\n  dup3\n    /* \"#utility.yul\":1755:1767   */\n  div\n    /* \"#utility.yul\":1745:1767   */\n  swap1\n  pop\n    /* \"#utility.yul\":1812:1813   */\n  0x01\n    /* \"#utility.yul\":1806:1810   */\n  dup3\n    /* \"#utility.yul\":1802:1814   */\n  and\n    /* \"#utility.yul\":1833:1851   */\n  dup1\n    /* \"#utility.yul\":1823:1904   */\n  tag_93\n  jumpi\n    /* \"#utility.yul\":1889:1893   */\n  0x7f\n    /* \"#utility.yul\":1881:1887   */\n  dup3\n    /* \"#utility.yul\":1877:1894   */\n  and\n    /* \"#utility.yul\":1867:1894   */\n  swap2\n  pop\n    /* \"#utility.yul\":1823:1904   */\ntag_93:\n    /* \"#utility.yul\":1951:1953   */\n  0x20\n    /* \"#utility.yul\":1943:1949   */\n  dup3\n    /* \"#utility.yul\":1940:1954   */\n  lt\n    /* \"#utility.yul\":1920:1938   */\n  dup2\n    /* \"#utility.yul\":1917:1955   */\n  sub\n    /* \"#utility.yul\":1914:1998   */\n  tag_94\n  jumpi\n    /* \"#utility.yul\":1970:1988   */\n  tag_95\n  tag_48\n  jump\t// in\ntag_95:\n    /* \"#utility.yul\":1914:1998   */\ntag_94:\n    /* \"#utility.yul\":1735:2004   */\n  pop\n    /* \"#utility.yul\":1684:2004   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2010:2151   */\ntag_50:\n    /* \"#utility.yul\":2059:2063   */\n  0x00\n    /* \"#utility.yul\":2082:2085   */\n  dup2\n    /* \"#utility.yul\":2074:2085   */\n  swap1\n  pop\n    /* \"#utility.yul\":2105:2108   */\n  dup2\n    /* \"#utility.yul\":2102:2103   */\n  0x00\n    /* \"#utility.yul\":2095:2109   */\n  mstore\n    /* \"#utility.yul\":2139:2143   */\n  0x20\n    /* \"#utility.yul\":2136:2137   */\n  0x00\n    /* \"#utility.yul\":2126:2144   */\n  keccak256\n    /* \"#utility.yul\":2118:2144   */\n  swap1\n  pop\n    /* \"#utility.yul\":2010:2151   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2157:2250   */\ntag_51:\n    /* \"#utility.yul\":2194:2200   */\n  0x00\n    /* \"#utility.yul\":2241:2243   */\n  0x20\n    /* \"#utility.yul\":2236:2238   */\n  0x1f\n    /* \"#utility.yul\":2229:2234   */\n  dup4\n    /* \"#utility.yul\":2225:2239   */\n  add\n    /* \"#utility.yul\":2221:2244   */\n  div\n    /* \"#utility.yul\":2211:2244   */\n  swap1\n  pop\n    /* \"#utility.yul\":2157:2250   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2256:2363   */\ntag_52:\n    /* \"#utility.yul\":2300:2308   */\n  0x00\n    /* \"#utility.yul\":2350:2355   */\n  dup3\n    /* \"#utility.yul\":2344:2348   */\n  dup3\n    /* \"#utility.yul\":2340:2356   */\n  shl\n    /* \"#utility.yul\":2319:2356   */\n  swap1\n  pop\n    /* \"#utility.yul\":2256:2363   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2369:2762   */\ntag_53:\n    /* \"#utility.yul\":2438:2444   */\n  0x00\n    /* \"#utility.yul\":2488:2489   */\n  0x08\n    /* \"#utility.yul\":2476:2486   */\n  dup4\n    /* \"#utility.yul\":2472:2490   */\n  mul\n    /* \"#utility.yul\":2511:2608   */\n  tag_100\n    /* \"#utility.yul\":2541:2607   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":2530:2539   */\n  dup3\n    /* \"#utility.yul\":2511:2608   */\n  tag_52\n  jump\t// in\ntag_100:\n    /* \"#utility.yul\":2629:2668   */\n  tag_101\n    /* \"#utility.yul\":2659:2667   */\n  dup7\n    /* \"#utility.yul\":2648:2657   */\n  dup4\n    /* \"#utility.yul\":2629:2668   */\n  tag_52\n  jump\t// in\ntag_101:\n    /* \"#utility.yul\":2617:2668   */\n  swap6\n  pop\n    /* \"#utility.yul\":2701:2705   */\n  dup1\n    /* \"#utility.yul\":2697:2706   */\n  not\n    /* \"#utility.yul\":2690:2695   */\n  dup5\n    /* \"#utility.yul\":2686:2707   */\n  and\n    /* \"#utility.yul\":2677:2707   */\n  swap4\n  pop\n    /* \"#utility.yul\":2750:2754   */\n  dup1\n    /* \"#utility.yul\":2740:2748   */\n  dup7\n    /* \"#utility.yul\":2736:2755   */\n  and\n    /* \"#utility.yul\":2729:2734   */\n  dup5\n    /* \"#utility.yul\":2726:2756   */\n  or\n    /* \"#utility.yul\":2716:2756   */\n  swap3\n  pop\n    /* \"#utility.yul\":2445:2762   */\n  pop\n  pop\n    /* \"#utility.yul\":2369:2762   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2768:2828   */\ntag_54:\n    /* \"#utility.yul\":2796:2799   */\n  0x00\n    /* \"#utility.yul\":2817:2822   */\n  dup2\n    /* \"#utility.yul\":2810:2822   */\n  swap1\n  pop\n    /* \"#utility.yul\":2768:2828   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2834:2976   */\ntag_55:\n    /* \"#utility.yul\":2884:2893   */\n  0x00\n    /* \"#utility.yul\":2917:2970   */\n  tag_104\n    /* \"#utility.yul\":2935:2969   */\n  tag_105\n    /* \"#utility.yul\":2944:2968   */\n  tag_106\n    /* \"#utility.yul\":2962:2967   */\n  dup5\n    /* \"#utility.yul\":2944:2968   */\n  tag_43\n  jump\t// in\ntag_106:\n    /* \"#utility.yul\":2935:2969   */\n  tag_54\n  jump\t// in\ntag_105:\n    /* \"#utility.yul\":2917:2970   */\n  tag_43\n  jump\t// in\ntag_104:\n    /* \"#utility.yul\":2904:2970   */\n  swap1\n  pop\n    /* \"#utility.yul\":2834:2976   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2982:3057   */\ntag_56:\n    /* \"#utility.yul\":3025:3028   */\n  0x00\n    /* \"#utility.yul\":3046:3051   */\n  dup2\n    /* \"#utility.yul\":3039:3051   */\n  swap1\n  pop\n    /* \"#utility.yul\":2982:3057   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3063:3332   */\ntag_57:\n    /* \"#utility.yul\":3173:3212   */\n  tag_109\n    /* \"#utility.yul\":3204:3211   */\n  dup4\n    /* \"#utility.yul\":3173:3212   */\n  tag_55\n  jump\t// in\ntag_109:\n    /* \"#utility.yul\":3234:3325   */\n  tag_110\n    /* \"#utility.yul\":3283:3324   */\n  tag_111\n    /* \"#utility.yul\":3307:3323   */\n  dup3\n    /* \"#utility.yul\":3283:3324   */\n  tag_56\n  jump\t// in\ntag_111:\n    /* \"#utility.yul\":3275:3281   */\n  dup5\n    /* \"#utility.yul\":3268:3272   */\n  dup5\n    /* \"#utility.yul\":3262:3273   */\n  sload\n    /* \"#utility.yul\":3234:3325   */\n  tag_53\n  jump\t// in\ntag_110:\n    /* \"#utility.yul\":3228:3232   */\n  dup3\n    /* \"#utility.yul\":3221:3326   */\n  sstore\n    /* \"#utility.yul\":3139:3332   */\n  pop\n    /* \"#utility.yul\":3063:3332   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3338:3411   */\ntag_58:\n    /* \"#utility.yul\":3383:3386   */\n  0x00\n    /* \"#utility.yul\":3338:3411   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":3417:3606   */\ntag_59:\n    /* \"#utility.yul\":3494:3526   */\n  tag_114\n  tag_58\n  jump\t// in\ntag_114:\n    /* \"#utility.yul\":3535:3600   */\n  tag_115\n    /* \"#utility.yul\":3593:3599   */\n  dup2\n    /* \"#utility.yul\":3585:3591   */\n  dup5\n    /* \"#utility.yul\":3579:3583   */\n  dup5\n    /* \"#utility.yul\":3535:3600   */\n  tag_57\n  jump\t// in\ntag_115:\n    /* \"#utility.yul\":3470:3606   */\n  pop\n    /* \"#utility.yul\":3417:3606   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3612:3798   */\ntag_60:\n    /* \"#utility.yul\":3672:3792   */\ntag_117:\n    /* \"#utility.yul\":3689:3692   */\n  dup2\n    /* \"#utility.yul\":3682:3687   */\n  dup2\n    /* \"#utility.yul\":3679:3693   */\n  lt\n    /* \"#utility.yul\":3672:3792   */\n  iszero\n  tag_119\n  jumpi\n    /* \"#utility.yul\":3743:3782   */\n  tag_120\n    /* \"#utility.yul\":3780:3781   */\n  0x00\n    /* \"#utility.yul\":3773:3778   */\n  dup3\n    /* \"#utility.yul\":3743:3782   */\n  tag_59\n  jump\t// in\ntag_120:\n    /* \"#utility.yul\":3716:3717   */\n  0x01\n    /* \"#utility.yul\":3709:3714   */\n  dup2\n    /* \"#utility.yul\":3705:3718   */\n  add\n    /* \"#utility.yul\":3696:3718   */\n  swap1\n  pop\n    /* \"#utility.yul\":3672:3792   */\n  jump(tag_117)\ntag_119:\n    /* \"#utility.yul\":3612:3798   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3804:4347   */\ntag_61:\n    /* \"#utility.yul\":3905:3907   */\n  0x1f\n    /* \"#utility.yul\":3900:3903   */\n  dup3\n    /* \"#utility.yul\":3897:3908   */\n  gt\n    /* \"#utility.yul\":3894:4340   */\n  iszero\n  tag_122\n  jumpi\n    /* \"#utility.yul\":3939:3977   */\n  tag_123\n    /* \"#utility.yul\":3971:3976   */\n  dup2\n    /* \"#utility.yul\":3939:3977   */\n  tag_50\n  jump\t// in\ntag_123:\n    /* \"#utility.yul\":4023:4052   */\n  tag_124\n    /* \"#utility.yul\":4041:4051   */\n  dup5\n    /* \"#utility.yul\":4023:4052   */\n  tag_51\n  jump\t// in\ntag_124:\n    /* \"#utility.yul\":4013:4021   */\n  dup2\n    /* \"#utility.yul\":4009:4053   */\n  add\n    /* \"#utility.yul\":4206:4208   */\n  0x20\n    /* \"#utility.yul\":4194:4204   */\n  dup6\n    /* \"#utility.yul\":4191:4209   */\n  lt\n    /* \"#utility.yul\":4188:4237   */\n  iszero\n  tag_125\n  jumpi\n    /* \"#utility.yul\":4227:4235   */\n  dup2\n    /* \"#utility.yul\":4212:4235   */\n  swap1\n  pop\n    /* \"#utility.yul\":4188:4237   */\ntag_125:\n    /* \"#utility.yul\":4250:4330   */\n  tag_126\n    /* \"#utility.yul\":4306:4328   */\n  tag_127\n    /* \"#utility.yul\":4324:4327   */\n  dup6\n    /* \"#utility.yul\":4306:4328   */\n  tag_51\n  jump\t// in\ntag_127:\n    /* \"#utility.yul\":4296:4304   */\n  dup4\n    /* \"#utility.yul\":4292:4329   */\n  add\n    /* \"#utility.yul\":4279:4290   */\n  dup3\n    /* \"#utility.yul\":4250:4330   */\n  tag_60\n  jump\t// in\ntag_126:\n    /* \"#utility.yul\":3909:4340   */\n  pop\n  pop\n    /* \"#utility.yul\":3894:4340   */\ntag_122:\n    /* \"#utility.yul\":3804:4347   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4353:4470   */\ntag_62:\n    /* \"#utility.yul\":4407:4415   */\n  0x00\n    /* \"#utility.yul\":4457:4462   */\n  dup3\n    /* \"#utility.yul\":4451:4455   */\n  dup3\n    /* \"#utility.yul\":4447:4463   */\n  shr\n    /* \"#utility.yul\":4426:4463   */\n  swap1\n  pop\n    /* \"#utility.yul\":4353:4470   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4476:4645   */\ntag_63:\n    /* \"#utility.yul\":4520:4526   */\n  0x00\n    /* \"#utility.yul\":4553:4604   */\n  tag_130\n    /* \"#utility.yul\":4601:4602   */\n  0x00\n    /* \"#utility.yul\":4597:4603   */\n  not\n    /* \"#utility.yul\":4589:4594   */\n  dup5\n    /* \"#utility.yul\":4586:4587   */\n  0x08\n    /* \"#utility.yul\":4582:4595   */\n  mul\n    /* \"#utility.yul\":4553:4604   */\n  tag_62\n  jump\t// in\ntag_130:\n    /* \"#utility.yul\":4549:4605   */\n  not\n    /* \"#utility.yul\":4634:4638   */\n  dup1\n    /* \"#utility.yul\":4628:4632   */\n  dup4\n    /* \"#utility.yul\":4624:4639   */\n  and\n    /* \"#utility.yul\":4614:4639   */\n  swap2\n  pop\n    /* \"#utility.yul\":4527:4645   */\n  pop\n    /* \"#utility.yul\":4476:4645   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4650:4945   */\ntag_64:\n    /* \"#utility.yul\":4726:4730   */\n  0x00\n    /* \"#utility.yul\":4872:4901   */\n  tag_132\n    /* \"#utility.yul\":4897:4900   */\n  dup4\n    /* \"#utility.yul\":4891:4895   */\n  dup4\n    /* \"#utility.yul\":4872:4901   */\n  tag_63\n  jump\t// in\ntag_132:\n    /* \"#utility.yul\":4864:4901   */\n  swap2\n  pop\n    /* \"#utility.yul\":4934:4937   */\n  dup3\n    /* \"#utility.yul\":4931:4932   */\n  0x02\n    /* \"#utility.yul\":4927:4938   */\n  mul\n    /* \"#utility.yul\":4921:4925   */\n  dup3\n    /* \"#utility.yul\":4918:4939   */\n  or\n    /* \"#utility.yul\":4910:4939   */\n  swap1\n  pop\n    /* \"#utility.yul\":4650:4945   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4950:6345   */\ntag_8:\n    /* \"#utility.yul\":5067:5104   */\n  tag_134\n    /* \"#utility.yul\":5100:5103   */\n  dup3\n    /* \"#utility.yul\":5067:5104   */\n  tag_46\n  jump\t// in\ntag_134:\n    /* \"#utility.yul\":5169:5187   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":5161:5167   */\n  dup2\n    /* \"#utility.yul\":5158:5188   */\n  gt\n    /* \"#utility.yul\":5155:5211   */\n  iszero\n  tag_135\n  jumpi\n    /* \"#utility.yul\":5191:5209   */\n  tag_136\n  tag_47\n  jump\t// in\ntag_136:\n    /* \"#utility.yul\":5155:5211   */\ntag_135:\n    /* \"#utility.yul\":5235:5273   */\n  tag_137\n    /* \"#utility.yul\":5267:5271   */\n  dup3\n    /* \"#utility.yul\":5261:5272   */\n  sload\n    /* \"#utility.yul\":5235:5273   */\n  tag_49\n  jump\t// in\ntag_137:\n    /* \"#utility.yul\":5320:5387   */\n  tag_138\n    /* \"#utility.yul\":5380:5386   */\n  dup3\n    /* \"#utility.yul\":5372:5378   */\n  dup3\n    /* \"#utility.yul\":5366:5370   */\n  dup6\n    /* \"#utility.yul\":5320:5387   */\n  tag_61\n  jump\t// in\ntag_138:\n    /* \"#utility.yul\":5414:5415   */\n  0x00\n    /* \"#utility.yul\":5438:5442   */\n  0x20\n    /* \"#utility.yul\":5425:5442   */\n  swap1\n  pop\n    /* \"#utility.yul\":5470:5472   */\n  0x1f\n    /* \"#utility.yul\":5462:5468   */\n  dup4\n    /* \"#utility.yul\":5459:5473   */\n  gt\n    /* \"#utility.yul\":5487:5488   */\n  0x01\n    /* \"#utility.yul\":5482:6100   */\n  dup2\n  eq\n  tag_140\n  jumpi\n    /* \"#utility.yul\":6144:6145   */\n  0x00\n    /* \"#utility.yul\":6161:6167   */\n  dup5\n    /* \"#utility.yul\":6158:6235   */\n  iszero\n  tag_141\n  jumpi\n    /* \"#utility.yul\":6210:6219   */\n  dup3\n    /* \"#utility.yul\":6205:6208   */\n  dup8\n    /* \"#utility.yul\":6201:6220   */\n  add\n    /* \"#utility.yul\":6195:6221   */\n  mload\n    /* \"#utility.yul\":6186:6221   */\n  swap1\n  pop\n    /* \"#utility.yul\":6158:6235   */\ntag_141:\n    /* \"#utility.yul\":6261:6328   */\n  tag_142\n    /* \"#utility.yul\":6321:6327   */\n  dup6\n    /* \"#utility.yul\":6314:6319   */\n  dup3\n    /* \"#utility.yul\":6261:6328   */\n  tag_64\n  jump\t// in\ntag_142:\n    /* \"#utility.yul\":6255:6259   */\n  dup7\n    /* \"#utility.yul\":6248:6329   */\n  sstore\n    /* \"#utility.yul\":6117:6339   */\n  pop\n    /* \"#utility.yul\":5452:6339   */\n  jump(tag_139)\n    /* \"#utility.yul\":5482:6100   */\ntag_140:\n    /* \"#utility.yul\":5534:5538   */\n  0x1f\n    /* \"#utility.yul\":5530:5539   */\n  not\n    /* \"#utility.yul\":5522:5528   */\n  dup5\n    /* \"#utility.yul\":5518:5540   */\n  and\n    /* \"#utility.yul\":5568:5605   */\n  tag_143\n    /* \"#utility.yul\":5600:5604   */\n  dup7\n    /* \"#utility.yul\":5568:5605   */\n  tag_50\n  jump\t// in\ntag_143:\n    /* \"#utility.yul\":5627:5628   */\n  0x00\n    /* \"#utility.yul\":5641:5849   */\ntag_144:\n    /* \"#utility.yul\":5655:5662   */\n  dup3\n    /* \"#utility.yul\":5652:5653   */\n  dup2\n    /* \"#utility.yul\":5649:5663   */\n  lt\n    /* \"#utility.yul\":5641:5849   */\n  iszero\n  tag_146\n  jumpi\n    /* \"#utility.yul\":5734:5743   */\n  dup5\n    /* \"#utility.yul\":5729:5732   */\n  dup10\n    /* \"#utility.yul\":5725:5744   */\n  add\n    /* \"#utility.yul\":5719:5745   */\n  mload\n    /* \"#utility.yul\":5711:5717   */\n  dup3\n    /* \"#utility.yul\":5704:5746   */\n  sstore\n    /* \"#utility.yul\":5785:5786   */\n  0x01\n    /* \"#utility.yul\":5777:5783   */\n  dup3\n    /* \"#utility.yul\":5773:5787   */\n  add\n    /* \"#utility.yul\":5763:5787   */\n  swap2\n  pop\n    /* \"#utility.yul\":5832:5834   */\n  0x20\n    /* \"#utility.yul\":5821:5830   */\n  dup6\n    /* \"#utility.yul\":5817:5835   */\n  add\n    /* \"#utility.yul\":5804:5835   */\n  swap5\n  pop\n    /* \"#utility.yul\":5678:5682   */\n  0x20\n    /* \"#utility.yul\":5675:5676   */\n  dup2\n    /* \"#utility.yul\":5671:5683   */\n  add\n    /* \"#utility.yul\":5666:5683   */\n  swap1\n  pop\n    /* \"#utility.yul\":5641:5849   */\n  jump(tag_144)\ntag_146:\n    /* \"#utility.yul\":5877:5883   */\n  dup7\n    /* \"#utility.yul\":5868:5875   */\n  dup4\n    /* \"#utility.yul\":5865:5884   */\n  lt\n    /* \"#utility.yul\":5862:6041   */\n  iszero\n  tag_147\n  jumpi\n    /* \"#utility.yul\":5935:5944   */\n  dup5\n    /* \"#utility.yul\":5930:5933   */\n  dup10\n    /* \"#utility.yul\":5926:5945   */\n  add\n    /* \"#utility.yul\":5920:5946   */\n  mload\n    /* \"#utility.yul\":5978:6026   */\n  tag_148\n    /* \"#utility.yul\":6020:6024   */\n  0x1f\n    /* \"#utility.yul\":6012:6018   */\n  dup10\n    /* \"#utility.yul\":6008:6025   */\n  and\n    /* \"#utility.yul\":5997:6006   */\n  dup3\n    /* \"#utility.yul\":5978:6026   */\n  tag_63\n  jump\t// in\ntag_148:\n    /* \"#utility.yul\":5970:5976   */\n  dup4\n    /* \"#utility.yul\":5963:6027   */\n  sstore\n    /* \"#utility.yul\":5885:6041   */\n  pop\n    /* \"#utility.yul\":5862:6041   */\ntag_147:\n    /* \"#utility.yul\":6087:6088   */\n  0x01\n    /* \"#utility.yul\":6083:6084   */\n  0x02\n    /* \"#utility.yul\":6075:6081   */\n  dup9\n    /* \"#utility.yul\":6071:6085   */\n  mul\n    /* \"#utility.yul\":6067:6089   */\n  add\n    /* \"#utility.yul\":6061:6065   */\n  dup9\n    /* \"#utility.yul\":6054:6090   */\n  sstore\n    /* \"#utility.yul\":5489:6100   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5452:6339   */\ntag_139:\n  pop\n    /* \"#utility.yul\":5042:6345   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":4950:6345   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6351:6531   */\ntag_65:\n    /* \"#utility.yul\":6399:6476   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":6396:6397   */\n  0x00\n    /* \"#utility.yul\":6389:6477   */\n  mstore\n    /* \"#utility.yul\":6496:6500   */\n  0x11\n    /* \"#utility.yul\":6493:6494   */\n  0x04\n    /* \"#utility.yul\":6486:6501   */\n  mstore\n    /* \"#utility.yul\":6520:6524   */\n  0x24\n    /* \"#utility.yul\":6517:6518   */\n  0x00\n    /* \"#utility.yul\":6510:6525   */\n  revert\n    /* \"#utility.yul\":6537:6639   */\ntag_66:\n    /* \"#utility.yul\":6579:6587   */\n  0x00\n    /* \"#utility.yul\":6626:6631   */\n  dup2\n    /* \"#utility.yul\":6623:6624   */\n  0x01\n    /* \"#utility.yul\":6619:6632   */\n  shr\n    /* \"#utility.yul\":6598:6632   */\n  swap1\n  pop\n    /* \"#utility.yul\":6537:6639   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6645:7493   */\ntag_67:\n    /* \"#utility.yul\":6706:6711   */\n  0x00\n    /* \"#utility.yul\":6713:6717   */\n  dup1\n    /* \"#utility.yul\":6737:6743   */\n  dup3\n    /* \"#utility.yul\":6728:6743   */\n  swap2\n  pop\n    /* \"#utility.yul\":6761:6766   */\n  dup4\n    /* \"#utility.yul\":6752:6766   */\n  swap1\n  pop\n    /* \"#utility.yul\":6775:7487   */\ntag_152:\n    /* \"#utility.yul\":6796:6797   */\n  0x01\n    /* \"#utility.yul\":6786:6794   */\n  dup6\n    /* \"#utility.yul\":6783:6798   */\n  gt\n    /* \"#utility.yul\":6775:7487   */\n  iszero\n  tag_154\n  jumpi\n    /* \"#utility.yul\":6891:6895   */\n  dup1\n    /* \"#utility.yul\":6886:6889   */\n  dup7\n    /* \"#utility.yul\":6882:6896   */\n  div\n    /* \"#utility.yul\":6876:6880   */\n  dup2\n    /* \"#utility.yul\":6873:6897   */\n  gt\n    /* \"#utility.yul\":6870:6920   */\n  iszero\n  tag_155\n  jumpi\n    /* \"#utility.yul\":6900:6918   */\n  tag_156\n  tag_65\n  jump\t// in\ntag_156:\n    /* \"#utility.yul\":6870:6920   */\ntag_155:\n    /* \"#utility.yul\":6950:6951   */\n  0x01\n    /* \"#utility.yul\":6940:6948   */\n  dup6\n    /* \"#utility.yul\":6936:6952   */\n  and\n    /* \"#utility.yul\":6933:7384   */\n  iszero\n  tag_157\n  jumpi\n    /* \"#utility.yul\":7365:7369   */\n  dup1\n    /* \"#utility.yul\":7358:7363   */\n  dup3\n    /* \"#utility.yul\":7354:7370   */\n  mul\n    /* \"#utility.yul\":7345:7370   */\n  swap2\n  pop\n    /* \"#utility.yul\":6933:7384   */\ntag_157:\n    /* \"#utility.yul\":7415:7419   */\n  dup1\n    /* \"#utility.yul\":7409:7413   */\n  dup2\n    /* \"#utility.yul\":7405:7420   */\n  mul\n    /* \"#utility.yul\":7397:7420   */\n  swap1\n  pop\n    /* \"#utility.yul\":7445:7477   */\n  tag_158\n    /* \"#utility.yul\":7468:7476   */\n  dup6\n    /* \"#utility.yul\":7445:7477   */\n  tag_66\n  jump\t// in\ntag_158:\n    /* \"#utility.yul\":7433:7477   */\n  swap5\n  pop\n    /* \"#utility.yul\":6775:7487   */\n  jump(tag_152)\ntag_154:\n    /* \"#utility.yul\":6645:7493   */\n  swap5\n  pop\n  swap5\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7499:8572   */\ntag_68:\n    /* \"#utility.yul\":7553:7558   */\n  0x00\n    /* \"#utility.yul\":7744:7752   */\n  dup3\n    /* \"#utility.yul\":7734:7774   */\n  tag_160\n  jumpi\n    /* \"#utility.yul\":7765:7766   */\n  0x01\n    /* \"#utility.yul\":7756:7766   */\n  swap1\n  pop\n    /* \"#utility.yul\":7767:7772   */\n  jump(tag_159)\n    /* \"#utility.yul\":7734:7774   */\ntag_160:\n    /* \"#utility.yul\":7793:7797   */\n  dup2\n    /* \"#utility.yul\":7783:7819   */\n  tag_161\n  jumpi\n    /* \"#utility.yul\":7810:7811   */\n  0x00\n    /* \"#utility.yul\":7801:7811   */\n  swap1\n  pop\n    /* \"#utility.yul\":7812:7817   */\n  jump(tag_159)\n    /* \"#utility.yul\":7783:7819   */\ntag_161:\n    /* \"#utility.yul\":7879:7883   */\n  dup2\n    /* \"#utility.yul\":7927:7928   */\n  0x01\n    /* \"#utility.yul\":7922:7949   */\n  dup2\n  eq\n  tag_163\n  jumpi\n    /* \"#utility.yul\":7963:7964   */\n  0x02\n    /* \"#utility.yul\":7958:8149   */\n  dup2\n  eq\n  tag_164\n  jumpi\n    /* \"#utility.yul\":7872:8149   */\n  jump(tag_162)\n    /* \"#utility.yul\":7922:7949   */\ntag_163:\n    /* \"#utility.yul\":7940:7941   */\n  0x01\n    /* \"#utility.yul\":7931:7941   */\n  swap2\n  pop\n    /* \"#utility.yul\":7942:7947   */\n  pop\n  jump(tag_159)\n    /* \"#utility.yul\":7958:8149   */\ntag_164:\n    /* \"#utility.yul\":8003:8006   */\n  0xff\n    /* \"#utility.yul\":7993:8001   */\n  dup5\n    /* \"#utility.yul\":7990:8007   */\n  gt\n    /* \"#utility.yul\":7987:8030   */\n  iszero\n  tag_165\n  jumpi\n    /* \"#utility.yul\":8010:8028   */\n  tag_166\n  tag_65\n  jump\t// in\ntag_166:\n    /* \"#utility.yul\":7987:8030   */\ntag_165:\n    /* \"#utility.yul\":8059:8067   */\n  dup4\n    /* \"#utility.yul\":8056:8057   */\n  0x02\n    /* \"#utility.yul\":8052:8068   */\n  exp\n    /* \"#utility.yul\":8043:8068   */\n  swap2\n  pop\n    /* \"#utility.yul\":8094:8097   */\n  dup5\n    /* \"#utility.yul\":8087:8092   */\n  dup3\n    /* \"#utility.yul\":8084:8098   */\n  gt\n    /* \"#utility.yul\":8081:8121   */\n  iszero\n  tag_167\n  jumpi\n    /* \"#utility.yul\":8101:8119   */\n  tag_168\n  tag_65\n  jump\t// in\ntag_168:\n    /* \"#utility.yul\":8081:8121   */\ntag_167:\n    /* \"#utility.yul\":8134:8139   */\n  pop\n  jump(tag_159)\n    /* \"#utility.yul\":7872:8149   */\ntag_162:\n  pop\n    /* \"#utility.yul\":8258:8260   */\n  0x20\n    /* \"#utility.yul\":8248:8256   */\n  dup4\n    /* \"#utility.yul\":8245:8261   */\n  lt\n    /* \"#utility.yul\":8239:8242   */\n  0x0133\n    /* \"#utility.yul\":8233:8237   */\n  dup4\n    /* \"#utility.yul\":8230:8243   */\n  lt\n    /* \"#utility.yul\":8226:8262   */\n  and\n    /* \"#utility.yul\":8208:8210   */\n  0x4e\n    /* \"#utility.yul\":8198:8206   */\n  dup5\n    /* \"#utility.yul\":8195:8211   */\n  lt\n    /* \"#utility.yul\":8190:8192   */\n  0x0b\n    /* \"#utility.yul\":8184:8188   */\n  dup5\n    /* \"#utility.yul\":8181:8193   */\n  lt\n    /* \"#utility.yul\":8177:8212   */\n  and\n    /* \"#utility.yul\":8161:8272   */\n  or\n    /* \"#utility.yul\":8158:8404   */\n  iszero\n  tag_169\n  jumpi\n    /* \"#utility.yul\":8314:8322   */\n  dup3\n    /* \"#utility.yul\":8308:8312   */\n  dup3\n    /* \"#utility.yul\":8304:8323   */\n  exp\n    /* \"#utility.yul\":8295:8323   */\n  swap1\n  pop\n    /* \"#utility.yul\":8349:8352   */\n  dup4\n    /* \"#utility.yul\":8342:8347   */\n  dup2\n    /* \"#utility.yul\":8339:8353   */\n  gt\n    /* \"#utility.yul\":8336:8376   */\n  iszero\n  tag_170\n  jumpi\n    /* \"#utility.yul\":8356:8374   */\n  tag_171\n  tag_65\n  jump\t// in\ntag_171:\n    /* \"#utility.yul\":8336:8376   */\ntag_170:\n    /* \"#utility.yul\":8389:8394   */\n  jump(tag_159)\n    /* \"#utility.yul\":8158:8404   */\ntag_169:\n    /* \"#utility.yul\":8429:8471   */\n  tag_172\n    /* \"#utility.yul\":8467:8470   */\n  dup5\n    /* \"#utility.yul\":8457:8465   */\n  dup5\n    /* \"#utility.yul\":8451:8455   */\n  dup5\n    /* \"#utility.yul\":8448:8449   */\n  0x01\n    /* \"#utility.yul\":8429:8471   */\n  tag_67\n  jump\t// in\ntag_172:\n    /* \"#utility.yul\":8414:8471   */\n  swap3\n  pop\n  swap1\n  pop\n    /* \"#utility.yul\":8503:8507   */\n  dup2\n    /* \"#utility.yul\":8498:8501   */\n  dup5\n    /* \"#utility.yul\":8494:8508   */\n  div\n    /* \"#utility.yul\":8487:8492   */\n  dup2\n    /* \"#utility.yul\":8484:8509   */\n  gt\n    /* \"#utility.yul\":8481:8532   */\n  iszero\n  tag_173\n  jumpi\n    /* \"#utility.yul\":8512:8530   */\n  tag_174\n  tag_65\n  jump\t// in\ntag_174:\n    /* \"#utility.yul\":8481:8532   */\ntag_173:\n    /* \"#utility.yul\":8561:8565   */\n  dup2\n    /* \"#utility.yul\":8554:8559   */\n  dup2\n    /* \"#utility.yul\":8550:8566   */\n  mul\n    /* \"#utility.yul\":8541:8566   */\n  swap1\n  pop\n    /* \"#utility.yul\":7499:8572   */\ntag_159:\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8578:8664   */\ntag_69:\n    /* \"#utility.yul\":8613:8620   */\n  0x00\n    /* \"#utility.yul\":8653:8657   */\n  0xff\n    /* \"#utility.yul\":8646:8651   */\n  dup3\n    /* \"#utility.yul\":8642:8658   */\n  and\n    /* \"#utility.yul\":8631:8658   */\n  swap1\n  pop\n    /* \"#utility.yul\":8578:8664   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8670:8951   */\ntag_15:\n    /* \"#utility.yul\":8728:8733   */\n  0x00\n    /* \"#utility.yul\":8752:8775   */\n  tag_177\n    /* \"#utility.yul\":8770:8774   */\n  dup3\n    /* \"#utility.yul\":8752:8775   */\n  tag_43\n  jump\t// in\ntag_177:\n    /* \"#utility.yul\":8744:8775   */\n  swap2\n  pop\n    /* \"#utility.yul\":8796:8821   */\n  tag_178\n    /* \"#utility.yul\":8812:8820   */\n  dup4\n    /* \"#utility.yul\":8796:8821   */\n  tag_69\n  jump\t// in\ntag_178:\n    /* \"#utility.yul\":8784:8821   */\n  swap3\n  pop\n    /* \"#utility.yul\":8840:8944   */\n  tag_179\n    /* \"#utility.yul\":8877:8943   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":8867:8875   */\n  dup5\n    /* \"#utility.yul\":8861:8865   */\n  dup5\n    /* \"#utility.yul\":8840:8944   */\n  tag_68\n  jump\t// in\ntag_179:\n    /* \"#utility.yul\":8831:8944   */\n  swap1\n  pop\n    /* \"#utility.yul\":8670:8951   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8957:9367   */\ntag_17:\n    /* \"#utility.yul\":8997:9004   */\n  0x00\n    /* \"#utility.yul\":9020:9040   */\n  tag_181\n    /* \"#utility.yul\":9038:9039   */\n  dup3\n    /* \"#utility.yul\":9020:9040   */\n  tag_43\n  jump\t// in\ntag_181:\n    /* \"#utility.yul\":9015:9040   */\n  swap2\n  pop\n    /* \"#utility.yul\":9054:9074   */\n  tag_182\n    /* \"#utility.yul\":9072:9073   */\n  dup4\n    /* \"#utility.yul\":9054:9074   */\n  tag_43\n  jump\t// in\ntag_182:\n    /* \"#utility.yul\":9049:9074   */\n  swap3\n  pop\n    /* \"#utility.yul\":9109:9110   */\n  dup3\n    /* \"#utility.yul\":9106:9107   */\n  dup3\n    /* \"#utility.yul\":9102:9111   */\n  mul\n    /* \"#utility.yul\":9131:9161   */\n  tag_183\n    /* \"#utility.yul\":9149:9160   */\n  dup2\n    /* \"#utility.yul\":9131:9161   */\n  tag_43\n  jump\t// in\ntag_183:\n    /* \"#utility.yul\":9120:9161   */\n  swap2\n  pop\n    /* \"#utility.yul\":9310:9311   */\n  dup3\n    /* \"#utility.yul\":9301:9308   */\n  dup3\n    /* \"#utility.yul\":9297:9312   */\n  div\n    /* \"#utility.yul\":9294:9295   */\n  dup5\n    /* \"#utility.yul\":9291:9313   */\n  eq\n    /* \"#utility.yul\":9271:9272   */\n  dup4\n    /* \"#utility.yul\":9264:9273   */\n  iszero\n    /* \"#utility.yul\":9244:9327   */\n  or\n    /* \"#utility.yul\":9221:9360   */\n  tag_184\n  jumpi\n    /* \"#utility.yul\":9340:9358   */\n  tag_185\n  tag_65\n  jump\t// in\ntag_185:\n    /* \"#utility.yul\":9221:9360   */\ntag_184:\n    /* \"#utility.yul\":9005:9367   */\n  pop\n    /* \"#utility.yul\":8957:9367   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9373:9564   */\ntag_20:\n    /* \"#utility.yul\":9413:9416   */\n  0x00\n    /* \"#utility.yul\":9432:9452   */\n  tag_187\n    /* \"#utility.yul\":9450:9451   */\n  dup3\n    /* \"#utility.yul\":9432:9452   */\n  tag_43\n  jump\t// in\ntag_187:\n    /* \"#utility.yul\":9427:9452   */\n  swap2\n  pop\n    /* \"#utility.yul\":9466:9486   */\n  tag_188\n    /* \"#utility.yul\":9484:9485   */\n  dup4\n    /* \"#utility.yul\":9466:9486   */\n  tag_43\n  jump\t// in\ntag_188:\n    /* \"#utility.yul\":9461:9486   */\n  swap3\n  pop\n    /* \"#utility.yul\":9509:9510   */\n  dup3\n    /* \"#utility.yul\":9506:9507   */\n  dup3\n    /* \"#utility.yul\":9502:9511   */\n  add\n    /* \"#utility.yul\":9495:9511   */\n  swap1\n  pop\n    /* \"#utility.yul\":9530:9533   */\n  dup1\n    /* \"#utility.yul\":9527:9528   */\n  dup3\n    /* \"#utility.yul\":9524:9534   */\n  gt\n    /* \"#utility.yul\":9521:9557   */\n  iszero\n  tag_189\n  jumpi\n    /* \"#utility.yul\":9537:9555   */\n  tag_190\n  tag_65\n  jump\t// in\ntag_190:\n    /* \"#utility.yul\":9521:9557   */\ntag_189:\n    /* \"#utility.yul\":9373:9564   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9570:9696   */\ntag_70:\n    /* \"#utility.yul\":9607:9614   */\n  0x00\n    /* \"#utility.yul\":9647:9689   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":9640:9645   */\n  dup3\n    /* \"#utility.yul\":9636:9690   */\n  and\n    /* \"#utility.yul\":9625:9690   */\n  swap1\n  pop\n    /* \"#utility.yul\":9570:9696   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9702:9798   */\ntag_71:\n    /* \"#utility.yul\":9739:9746   */\n  0x00\n    /* \"#utility.yul\":9768:9792   */\n  tag_193\n    /* \"#utility.yul\":9786:9791   */\n  dup3\n    /* \"#utility.yul\":9768:9792   */\n  tag_70\n  jump\t// in\ntag_193:\n    /* \"#utility.yul\":9757:9792   */\n  swap1\n  pop\n    /* \"#utility.yul\":9702:9798   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9804:9922   */\ntag_72:\n    /* \"#utility.yul\":9891:9915   */\n  tag_195\n    /* \"#utility.yul\":9909:9914   */\n  dup2\n    /* \"#utility.yul\":9891:9915   */\n  tag_71\n  jump\t// in\ntag_195:\n    /* \"#utility.yul\":9886:9889   */\n  dup3\n    /* \"#utility.yul\":9879:9916   */\n  mstore\n    /* \"#utility.yul\":9804:9922   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9928:10150   */\ntag_26:\n    /* \"#utility.yul\":10021:10025   */\n  0x00\n    /* \"#utility.yul\":10059:10061   */\n  0x20\n    /* \"#utility.yul\":10048:10057   */\n  dup3\n    /* \"#utility.yul\":10044:10062   */\n  add\n    /* \"#utility.yul\":10036:10062   */\n  swap1\n  pop\n    /* \"#utility.yul\":10072:10143   */\n  tag_197\n    /* \"#utility.yul\":10140:10141   */\n  0x00\n    /* \"#utility.yul\":10129:10138   */\n  dup4\n    /* \"#utility.yul\":10125:10142   */\n  add\n    /* \"#utility.yul\":10116:10122   */\n  dup5\n    /* \"#utility.yul\":10072:10143   */\n  tag_72\n  jump\t// in\ntag_197:\n    /* \"#utility.yul\":9928:10150   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10156:10274   */\ntag_73:\n    /* \"#utility.yul\":10243:10267   */\n  tag_199\n    /* \"#utility.yul\":10261:10266   */\n  dup2\n    /* \"#utility.yul\":10243:10267   */\n  tag_43\n  jump\t// in\ntag_199:\n    /* \"#utility.yul\":10238:10241   */\n  dup3\n    /* \"#utility.yul\":10231:10268   */\n  mstore\n    /* \"#utility.yul\":10156:10274   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10280:10722   */\ntag_35:\n    /* \"#utility.yul\":10429:10433   */\n  0x00\n    /* \"#utility.yul\":10467:10469   */\n  0x60\n    /* \"#utility.yul\":10456:10465   */\n  dup3\n    /* \"#utility.yul\":10452:10470   */\n  add\n    /* \"#utility.yul\":10444:10470   */\n  swap1\n  pop\n    /* \"#utility.yul\":10480:10551   */\n  tag_201\n    /* \"#utility.yul\":10548:10549   */\n  0x00\n    /* \"#utility.yul\":10537:10546   */\n  dup4\n    /* \"#utility.yul\":10533:10550   */\n  add\n    /* \"#utility.yul\":10524:10530   */\n  dup7\n    /* \"#utility.yul\":10480:10551   */\n  tag_72\n  jump\t// in\ntag_201:\n    /* \"#utility.yul\":10561:10633   */\n  tag_202\n    /* \"#utility.yul\":10629:10631   */\n  0x20\n    /* \"#utility.yul\":10618:10627   */\n  dup4\n    /* \"#utility.yul\":10614:10632   */\n  add\n    /* \"#utility.yul\":10605:10611   */\n  dup6\n    /* \"#utility.yul\":10561:10633   */\n  tag_73\n  jump\t// in\ntag_202:\n    /* \"#utility.yul\":10643:10715   */\n  tag_203\n    /* \"#utility.yul\":10711:10713   */\n  0x40\n    /* \"#utility.yul\":10700:10709   */\n  dup4\n    /* \"#utility.yul\":10696:10714   */\n  add\n    /* \"#utility.yul\":10687:10693   */\n  dup5\n    /* \"#utility.yul\":10643:10715   */\n  tag_73\n  jump\t// in\ntag_203:\n    /* \"#utility.yul\":10280:10722   */\n  swap5\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10728:10950   */\ntag_39:\n    /* \"#utility.yul\":10821:10825   */\n  0x00\n    /* \"#utility.yul\":10859:10861   */\n  0x20\n    /* \"#utility.yul\":10848:10857   */\n  dup3\n    /* \"#utility.yul\":10844:10862   */\n  add\n    /* \"#utility.yul\":10836:10862   */\n  swap1\n  pop\n    /* \"#utility.yul\":10872:10943   */\n  tag_205\n    /* \"#utility.yul\":10940:10941   */\n  0x00\n    /* \"#utility.yul\":10929:10938   */\n  dup4\n    /* \"#utility.yul\":10925:10942   */\n  add\n    /* \"#utility.yul\":10916:10922   */\n  dup5\n    /* \"#utility.yul\":10872:10943   */\n  tag_73\n  jump\t// in\ntag_205:\n    /* \"#utility.yul\":10728:10950   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/ERC20/TimeLock.sol\":119:1277  contract TimeLockedToken is ERC20 {... */\ntag_21:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/ERC20/TimeLock.sol\":119:1277  contract TimeLockedToken is ERC20 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x313ce567\n      gt\n      tag_13\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_13:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x251c1aa3\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_14\n      tag_15\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      tag_18\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      tag_21\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n    tag_5:\n      tag_24\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20/TimeLock.sol\":996:1274  function transferFrom(address sender, address recipient, uint256 amount) public override returns (bool) {... */\n    tag_6:\n      tag_28\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      tag_31\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20/TimeLock.sol\":160:185  uint256 public unlockTime */\n    tag_7:\n      tag_33\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      tag_35\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n    tag_8:\n      tag_36\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_9:\n      tag_40\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      tag_43\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      tag_44\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n    tag_10:\n      tag_45\n      tag_46\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      tag_47\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20/TimeLock.sol\":679:925  function transfer(address recipient, uint256 amount) public override returns (bool) {... */\n    tag_11:\n      tag_48\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_49\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_49:\n      tag_50\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      tag_51\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_12:\n      tag_52\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_53\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_53:\n      tag_55\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      tag_56\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n    tag_15:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1824:1837  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1856:1861  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1849:1861  return _name */\n      dup1\n      sload\n      tag_58\n      swap1\n      tag_59\n      jump\t// in\n    tag_58:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_60\n      swap1\n      tag_59\n      jump\t// in\n    tag_60:\n      dup1\n      iszero\n      tag_61\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_62\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_61)\n    tag_62:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_63:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_63\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_61:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_21:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4071:4075  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4087:4100  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4115  _msgSender() */\n      tag_65\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4113  _msgSender */\n      tag_66\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4115  _msgSender() */\n      jump\t// in\n    tag_65:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4087:4115  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4156  _approve(owner, spender, value) */\n      tag_67\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4134:4139  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4141:4148  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4150:4155  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4133  _approve */\n      tag_68\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4156  _approve(owner, spender, value) */\n      jump\t// in\n    tag_67:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4173:4177  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4166:4177  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n    tag_25:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2901:2908  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2927:2939  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2920:2939  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/ERC20/TimeLock.sol\":996:1274  function transferFrom(address sender, address recipient, uint256 amount) public override returns (bool) {... */\n    tag_31:\n        /* \"contracts/ERC20/TimeLock.sol\":1094:1098  bool */\n      0x00\n        /* \"contracts/ERC20/TimeLock.sol\":1138:1148  unlockTime */\n      sload(0x05)\n        /* \"contracts/ERC20/TimeLock.sol\":1119:1134  block.timestamp */\n      timestamp\n        /* \"contracts/ERC20/TimeLock.sol\":1119:1148  block.timestamp >= unlockTime */\n      lt\n      iszero\n        /* \"contracts/ERC20/TimeLock.sol\":1111:1203  require(block.timestamp >= unlockTime, \"Tokens are locked until the unlock time has passed\") */\n      tag_71\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_72\n      swap1\n      tag_73\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_71:\n        /* \"contracts/ERC20/TimeLock.sol\":1221:1266  super.transferFrom(sender, recipient, amount) */\n      tag_74\n        /* \"contracts/ERC20/TimeLock.sol\":1240:1246  sender */\n      dup5\n        /* \"contracts/ERC20/TimeLock.sol\":1248:1257  recipient */\n      dup5\n        /* \"contracts/ERC20/TimeLock.sol\":1259:1265  amount */\n      dup5\n        /* \"contracts/ERC20/TimeLock.sol\":1221:1239  super.transferFrom */\n      tag_75\n        /* \"contracts/ERC20/TimeLock.sol\":1221:1266  super.transferFrom(sender, recipient, amount) */\n      jump\t// in\n    tag_74:\n        /* \"contracts/ERC20/TimeLock.sol\":1214:1266  return super.transferFrom(sender, recipient, amount) */\n      swap1\n      pop\n        /* \"contracts/ERC20/TimeLock.sol\":996:1274  function transferFrom(address sender, address recipient, uint256 amount) public override returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC20/TimeLock.sol\":160:185  uint256 public unlockTime */\n    tag_34:\n      sload(0x05)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n    tag_37:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2756:2761  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2780:2782  18 */\n      0x12\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2773:2782  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_43:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3069:3076  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3104  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3105:3112  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3088:3113  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n    tag_46:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2028:2041  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2060:2067  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2053:2067  return _symbol */\n      dup1\n      sload\n      tag_79\n      swap1\n      tag_59\n      jump\t// in\n    tag_79:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_80\n      swap1\n      tag_59\n      jump\t// in\n    tag_80:\n      dup1\n      iszero\n      tag_81\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_82\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_81)\n    tag_82:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_83:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_83\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_81:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/ERC20/TimeLock.sol\":679:925  function transfer(address recipient, uint256 amount) public override returns (bool) {... */\n    tag_50:\n        /* \"contracts/ERC20/TimeLock.sol\":757:761  bool */\n      0x00\n        /* \"contracts/ERC20/TimeLock.sol\":801:811  unlockTime */\n      sload(0x05)\n        /* \"contracts/ERC20/TimeLock.sol\":782:797  block.timestamp */\n      timestamp\n        /* \"contracts/ERC20/TimeLock.sol\":782:811  block.timestamp >= unlockTime */\n      lt\n      iszero\n        /* \"contracts/ERC20/TimeLock.sol\":774:866  require(block.timestamp >= unlockTime, \"Tokens are locked until the unlock time has passed\") */\n      tag_85\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_86\n      swap1\n      tag_73\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_85:\n        /* \"contracts/ERC20/TimeLock.sol\":884:917  super.transfer(recipient, amount) */\n      tag_87\n        /* \"contracts/ERC20/TimeLock.sol\":899:908  recipient */\n      dup4\n        /* \"contracts/ERC20/TimeLock.sol\":910:916  amount */\n      dup4\n        /* \"contracts/ERC20/TimeLock.sol\":884:898  super.transfer */\n      tag_88\n        /* \"contracts/ERC20/TimeLock.sol\":884:917  super.transfer(recipient, amount) */\n      jump\t// in\n    tag_87:\n        /* \"contracts/ERC20/TimeLock.sol\":877:917  return super.transfer(recipient, amount) */\n      swap1\n      pop\n        /* \"contracts/ERC20/TimeLock.sol\":679:925  function transfer(address recipient, uint256 amount) public override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_55:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3631:3638  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3668  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3669:3674  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3684  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3676:3683  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3684  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3650:3684  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_66:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8726:8854  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_68:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8847  _approve(owner, spender, value, true) */\n      tag_92\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8819:8824  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8826:8833  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8835:8840  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8842:8846  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8818  _approve */\n      tag_93\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8847  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_92:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8726:8854  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_75:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4863:4867  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4879:4894  address spender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4909  _msgSender() */\n      tag_95\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4907  _msgSender */\n      tag_66\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4909  _msgSender() */\n      jump\t// in\n    tag_95:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4879:4909  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4956  _spendAllowance(from, spender, value) */\n      tag_96\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4935:4939  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4941:4948  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4950:4955  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4934  _spendAllowance */\n      tag_97\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4956  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_96:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4992  _transfer(from, to, value) */\n      tag_98\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4976:4980  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4982:4984  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4986:4991  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4975  _transfer */\n      tag_99\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4992  _transfer(from, to, value) */\n      jump\t// in\n    tag_98:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5009:5013  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5002:5013  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_88:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3384:3388  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3413  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3428  _msgSender() */\n      tag_101\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3426  _msgSender */\n      tag_66\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3428  _msgSender() */\n      jump\t// in\n    tag_101:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3428  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3465  _transfer(owner, to, value) */\n      tag_102\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3448:3453  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3455:3457  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3459:3464  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3447  _transfer */\n      tag_99\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3465  _transfer(owner, to, value) */\n      jump\t// in\n    tag_102:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3482:3486  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3475:3486  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9701:10133  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_93:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9830:9831  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9832  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9818  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9832  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9809:9898  if (owner == address(0)) {... */\n      tag_104\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9884:9885  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9855:9887  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_105\n      swap2\n      swap1\n      tag_106\n      jump\t// in\n    tag_105:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9809:9898  if (owner == address(0)) {... */\n    tag_104:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9930:9931  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9932  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9918  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9932  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9907:9997  if (spender == address(0)) {... */\n      tag_107\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9983:9984  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9955:9986  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_108\n      swap2\n      swap1\n      tag_106\n      jump\t// in\n    tag_108:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9907:9997  if (spender == address(0)) {... */\n    tag_107:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10036:10041  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10017  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10024  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10018:10023  owner */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10024  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10033  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10025:10032  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10033  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10041  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10055:10064  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10051:10127  if (emitEvent) {... */\n      iszero\n      tag_109\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10101:10108  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10094:10099  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10110:10115  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_110\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_110:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10051:10127  if (emitEvent) {... */\n    tag_109:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9701:10133  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10415:10892  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_97:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10514:10538  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10566  allowance(owner, spender) */\n      tag_112\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10551:10556  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10558:10565  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10550  allowance */\n      tag_55\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10566  allowance(owner, spender) */\n      jump\t// in\n    tag_112:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10514:10566  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10600:10617  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10580:10596  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10580:10617  currentAllowance != type(uint256).max */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10576:10886  if (currentAllowance != type(uint256).max) {... */\n      tag_113\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10656:10661  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10637:10653  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10637:10661  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10633:10763  if (currentAllowance < value) {... */\n      iszero\n      tag_114\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10715:10722  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10724:10740  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10742:10747  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10688:10748  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_115\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_116\n      jump\t// in\n    tag_115:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10633:10763  if (currentAllowance < value) {... */\n    tag_114:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10804:10861  _approve(owner, spender, currentAllowance - value, false) */\n      tag_117\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10813:10818  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10820:10827  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10848:10853  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10829:10845  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10829:10853  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10855:10860  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10804:10812  _approve */\n      tag_93\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10804:10861  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_117:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10576:10886  if (currentAllowance != type(uint256).max) {... */\n    tag_113:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10504:10892  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10415:10892  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5393:5693  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_99:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5492:5493  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5494  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5480  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5494  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5472:5558  if (from == address(0)) {... */\n      tag_119\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5544:5545  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5517:5547  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_120\n      swap2\n      swap1\n      tag_106\n      jump\t// in\n    tag_120:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5472:5558  if (from == address(0)) {... */\n    tag_119:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5585:5586  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5587  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5573  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5587  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5567:5653  if (to == address(0)) {... */\n      tag_121\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5639:5640  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5610:5642  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_122\n      swap2\n      swap1\n      tag_106\n      jump\t// in\n    tag_122:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5567:5653  if (to == address(0)) {... */\n    tag_121:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5686  _update(from, to, value) */\n      tag_123\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5670:5674  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5676:5678  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5680:5685  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5669  _update */\n      tag_124\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5686  _update(from, to, value) */\n      jump\t// in\n    tag_123:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5393:5693  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_124:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6113:6114  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6101  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n      tag_126\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6249:6254  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6245  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6254  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_127\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n    tag_127:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n      jump(tag_129)\n    tag_126:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6304  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6316  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6321  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6322  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6354:6359  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6351  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6359  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n      iszero\n      tag_130\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6411:6415  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6417:6428  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6430:6435  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_131\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_116\n      jump\t// in\n    tag_131:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n    tag_130:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6608  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6600  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6608  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6580  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6581:6585  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6608  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:6633  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n    tag_129:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6661:6662  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6649  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n      tag_132\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6826:6831  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6822  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6831  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n      jump(tag_133)\n    tag_132:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7038:7043  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7030  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7031:7033  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7043  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n    tag_133:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7098:7100  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7092:7096  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7102:7107  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      mload(0x40)\n      tag_134\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_134:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_135:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_136:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:426   */\n    tag_137:\n        /* \"#utility.yul\":376:382   */\n      dup3\n        /* \"#utility.yul\":371:374   */\n      dup2\n        /* \"#utility.yul\":366:369   */\n      dup4\n        /* \"#utility.yul\":360:383   */\n      mcopy\n        /* \"#utility.yul\":417:418   */\n      0x00\n        /* \"#utility.yul\":408:414   */\n      dup4\n        /* \"#utility.yul\":403:406   */\n      dup4\n        /* \"#utility.yul\":399:415   */\n      add\n        /* \"#utility.yul\":392:419   */\n      mstore\n        /* \"#utility.yul\":287:426   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":432:534   */\n    tag_138:\n        /* \"#utility.yul\":473:479   */\n      0x00\n        /* \"#utility.yul\":524:526   */\n      0x1f\n        /* \"#utility.yul\":520:527   */\n      not\n        /* \"#utility.yul\":515:517   */\n      0x1f\n        /* \"#utility.yul\":508:513   */\n      dup4\n        /* \"#utility.yul\":504:518   */\n      add\n        /* \"#utility.yul\":500:528   */\n      and\n        /* \"#utility.yul\":490:528   */\n      swap1\n      pop\n        /* \"#utility.yul\":432:534   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":540:917   */\n    tag_139:\n        /* \"#utility.yul\":628:631   */\n      0x00\n        /* \"#utility.yul\":656:695   */\n      tag_166\n        /* \"#utility.yul\":689:694   */\n      dup3\n        /* \"#utility.yul\":656:695   */\n      tag_135\n      jump\t// in\n    tag_166:\n        /* \"#utility.yul\":711:782   */\n      tag_167\n        /* \"#utility.yul\":775:781   */\n      dup2\n        /* \"#utility.yul\":770:773   */\n      dup6\n        /* \"#utility.yul\":711:782   */\n      tag_136\n      jump\t// in\n    tag_167:\n        /* \"#utility.yul\":704:782   */\n      swap4\n      pop\n        /* \"#utility.yul\":791:856   */\n      tag_168\n        /* \"#utility.yul\":849:855   */\n      dup2\n        /* \"#utility.yul\":844:847   */\n      dup6\n        /* \"#utility.yul\":837:841   */\n      0x20\n        /* \"#utility.yul\":830:835   */\n      dup7\n        /* \"#utility.yul\":826:842   */\n      add\n        /* \"#utility.yul\":791:856   */\n      tag_137\n      jump\t// in\n    tag_168:\n        /* \"#utility.yul\":881:910   */\n      tag_169\n        /* \"#utility.yul\":903:909   */\n      dup2\n        /* \"#utility.yul\":881:910   */\n      tag_138\n      jump\t// in\n    tag_169:\n        /* \"#utility.yul\":876:879   */\n      dup5\n        /* \"#utility.yul\":872:911   */\n      add\n        /* \"#utility.yul\":865:911   */\n      swap2\n      pop\n        /* \"#utility.yul\":632:917   */\n      pop\n        /* \"#utility.yul\":540:917   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":923:1236   */\n    tag_17:\n        /* \"#utility.yul\":1036:1040   */\n      0x00\n        /* \"#utility.yul\":1074:1076   */\n      0x20\n        /* \"#utility.yul\":1063:1072   */\n      dup3\n        /* \"#utility.yul\":1059:1077   */\n      add\n        /* \"#utility.yul\":1051:1077   */\n      swap1\n      pop\n        /* \"#utility.yul\":1123:1132   */\n      dup2\n        /* \"#utility.yul\":1117:1121   */\n      dup2\n        /* \"#utility.yul\":1113:1133   */\n      sub\n        /* \"#utility.yul\":1109:1110   */\n      0x00\n        /* \"#utility.yul\":1098:1107   */\n      dup4\n        /* \"#utility.yul\":1094:1111   */\n      add\n        /* \"#utility.yul\":1087:1134   */\n      mstore\n        /* \"#utility.yul\":1151:1229   */\n      tag_171\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1215:1221   */\n      dup5\n        /* \"#utility.yul\":1151:1229   */\n      tag_139\n      jump\t// in\n    tag_171:\n        /* \"#utility.yul\":1143:1229   */\n      swap1\n      pop\n        /* \"#utility.yul\":923:1236   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1323:1440   */\n    tag_141:\n        /* \"#utility.yul\":1432:1433   */\n      0x00\n        /* \"#utility.yul\":1429:1430   */\n      dup1\n        /* \"#utility.yul\":1422:1434   */\n      revert\n        /* \"#utility.yul\":1569:1695   */\n    tag_143:\n        /* \"#utility.yul\":1606:1613   */\n      0x00\n        /* \"#utility.yul\":1646:1688   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1639:1644   */\n      dup3\n        /* \"#utility.yul\":1635:1689   */\n      and\n        /* \"#utility.yul\":1624:1689   */\n      swap1\n      pop\n        /* \"#utility.yul\":1569:1695   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1701:1797   */\n    tag_144:\n        /* \"#utility.yul\":1738:1745   */\n      0x00\n        /* \"#utility.yul\":1767:1791   */\n      tag_177\n        /* \"#utility.yul\":1785:1790   */\n      dup3\n        /* \"#utility.yul\":1767:1791   */\n      tag_143\n      jump\t// in\n    tag_177:\n        /* \"#utility.yul\":1756:1791   */\n      swap1\n      pop\n        /* \"#utility.yul\":1701:1797   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1803:1925   */\n    tag_145:\n        /* \"#utility.yul\":1876:1900   */\n      tag_179\n        /* \"#utility.yul\":1894:1899   */\n      dup2\n        /* \"#utility.yul\":1876:1900   */\n      tag_144\n      jump\t// in\n    tag_179:\n        /* \"#utility.yul\":1869:1874   */\n      dup2\n        /* \"#utility.yul\":1866:1901   */\n      eq\n        /* \"#utility.yul\":1856:1919   */\n      tag_180\n      jumpi\n        /* \"#utility.yul\":1915:1916   */\n      0x00\n        /* \"#utility.yul\":1912:1913   */\n      dup1\n        /* \"#utility.yul\":1905:1917   */\n      revert\n        /* \"#utility.yul\":1856:1919   */\n    tag_180:\n        /* \"#utility.yul\":1803:1925   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1931:2070   */\n    tag_146:\n        /* \"#utility.yul\":1977:1982   */\n      0x00\n        /* \"#utility.yul\":2015:2021   */\n      dup2\n        /* \"#utility.yul\":2002:2022   */\n      calldataload\n        /* \"#utility.yul\":1993:2022   */\n      swap1\n      pop\n        /* \"#utility.yul\":2031:2064   */\n      tag_182\n        /* \"#utility.yul\":2058:2063   */\n      dup2\n        /* \"#utility.yul\":2031:2064   */\n      tag_145\n      jump\t// in\n    tag_182:\n        /* \"#utility.yul\":1931:2070   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2076:2153   */\n    tag_147:\n        /* \"#utility.yul\":2113:2120   */\n      0x00\n        /* \"#utility.yul\":2142:2147   */\n      dup2\n        /* \"#utility.yul\":2131:2147   */\n      swap1\n      pop\n        /* \"#utility.yul\":2076:2153   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2159:2281   */\n    tag_148:\n        /* \"#utility.yul\":2232:2256   */\n      tag_185\n        /* \"#utility.yul\":2250:2255   */\n      dup2\n        /* \"#utility.yul\":2232:2256   */\n      tag_147\n      jump\t// in\n    tag_185:\n        /* \"#utility.yul\":2225:2230   */\n      dup2\n        /* \"#utility.yul\":2222:2257   */\n      eq\n        /* \"#utility.yul\":2212:2275   */\n      tag_186\n      jumpi\n        /* \"#utility.yul\":2271:2272   */\n      0x00\n        /* \"#utility.yul\":2268:2269   */\n      dup1\n        /* \"#utility.yul\":2261:2273   */\n      revert\n        /* \"#utility.yul\":2212:2275   */\n    tag_186:\n        /* \"#utility.yul\":2159:2281   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2287:2426   */\n    tag_149:\n        /* \"#utility.yul\":2333:2338   */\n      0x00\n        /* \"#utility.yul\":2371:2377   */\n      dup2\n        /* \"#utility.yul\":2358:2378   */\n      calldataload\n        /* \"#utility.yul\":2349:2378   */\n      swap1\n      pop\n        /* \"#utility.yul\":2387:2420   */\n      tag_188\n        /* \"#utility.yul\":2414:2419   */\n      dup2\n        /* \"#utility.yul\":2387:2420   */\n      tag_148\n      jump\t// in\n    tag_188:\n        /* \"#utility.yul\":2287:2426   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2432:2906   */\n    tag_20:\n        /* \"#utility.yul\":2500:2506   */\n      0x00\n        /* \"#utility.yul\":2508:2514   */\n      dup1\n        /* \"#utility.yul\":2557:2559   */\n      0x40\n        /* \"#utility.yul\":2545:2554   */\n      dup4\n        /* \"#utility.yul\":2536:2543   */\n      dup6\n        /* \"#utility.yul\":2532:2555   */\n      sub\n        /* \"#utility.yul\":2528:2560   */\n      slt\n        /* \"#utility.yul\":2525:2644   */\n      iszero\n      tag_190\n      jumpi\n        /* \"#utility.yul\":2563:2642   */\n      tag_191\n      tag_141\n      jump\t// in\n    tag_191:\n        /* \"#utility.yul\":2525:2644   */\n    tag_190:\n        /* \"#utility.yul\":2683:2684   */\n      0x00\n        /* \"#utility.yul\":2708:2761   */\n      tag_192\n        /* \"#utility.yul\":2753:2760   */\n      dup6\n        /* \"#utility.yul\":2744:2750   */\n      dup3\n        /* \"#utility.yul\":2733:2742   */\n      dup7\n        /* \"#utility.yul\":2729:2751   */\n      add\n        /* \"#utility.yul\":2708:2761   */\n      tag_146\n      jump\t// in\n    tag_192:\n        /* \"#utility.yul\":2698:2761   */\n      swap3\n      pop\n        /* \"#utility.yul\":2654:2771   */\n      pop\n        /* \"#utility.yul\":2810:2812   */\n      0x20\n        /* \"#utility.yul\":2836:2889   */\n      tag_193\n        /* \"#utility.yul\":2881:2888   */\n      dup6\n        /* \"#utility.yul\":2872:2878   */\n      dup3\n        /* \"#utility.yul\":2861:2870   */\n      dup7\n        /* \"#utility.yul\":2857:2879   */\n      add\n        /* \"#utility.yul\":2836:2889   */\n      tag_149\n      jump\t// in\n    tag_193:\n        /* \"#utility.yul\":2826:2889   */\n      swap2\n      pop\n        /* \"#utility.yul\":2781:2899   */\n      pop\n        /* \"#utility.yul\":2432:2906   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2912:3002   */\n    tag_150:\n        /* \"#utility.yul\":2946:2953   */\n      0x00\n        /* \"#utility.yul\":2989:2994   */\n      dup2\n        /* \"#utility.yul\":2982:2995   */\n      iszero\n        /* \"#utility.yul\":2975:2996   */\n      iszero\n        /* \"#utility.yul\":2964:2996   */\n      swap1\n      pop\n        /* \"#utility.yul\":2912:3002   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3008:3117   */\n    tag_151:\n        /* \"#utility.yul\":3089:3110   */\n      tag_196\n        /* \"#utility.yul\":3104:3109   */\n      dup2\n        /* \"#utility.yul\":3089:3110   */\n      tag_150\n      jump\t// in\n    tag_196:\n        /* \"#utility.yul\":3084:3087   */\n      dup3\n        /* \"#utility.yul\":3077:3111   */\n      mstore\n        /* \"#utility.yul\":3008:3117   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3123:3333   */\n    tag_23:\n        /* \"#utility.yul\":3210:3214   */\n      0x00\n        /* \"#utility.yul\":3248:3250   */\n      0x20\n        /* \"#utility.yul\":3237:3246   */\n      dup3\n        /* \"#utility.yul\":3233:3251   */\n      add\n        /* \"#utility.yul\":3225:3251   */\n      swap1\n      pop\n        /* \"#utility.yul\":3261:3326   */\n      tag_198\n        /* \"#utility.yul\":3323:3324   */\n      0x00\n        /* \"#utility.yul\":3312:3321   */\n      dup4\n        /* \"#utility.yul\":3308:3325   */\n      add\n        /* \"#utility.yul\":3299:3305   */\n      dup5\n        /* \"#utility.yul\":3261:3326   */\n      tag_151\n      jump\t// in\n    tag_198:\n        /* \"#utility.yul\":3123:3333   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3339:3457   */\n    tag_152:\n        /* \"#utility.yul\":3426:3450   */\n      tag_200\n        /* \"#utility.yul\":3444:3449   */\n      dup2\n        /* \"#utility.yul\":3426:3450   */\n      tag_147\n      jump\t// in\n    tag_200:\n        /* \"#utility.yul\":3421:3424   */\n      dup3\n        /* \"#utility.yul\":3414:3451   */\n      mstore\n        /* \"#utility.yul\":3339:3457   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3463:3685   */\n    tag_27:\n        /* \"#utility.yul\":3556:3560   */\n      0x00\n        /* \"#utility.yul\":3594:3596   */\n      0x20\n        /* \"#utility.yul\":3583:3592   */\n      dup3\n        /* \"#utility.yul\":3579:3597   */\n      add\n        /* \"#utility.yul\":3571:3597   */\n      swap1\n      pop\n        /* \"#utility.yul\":3607:3678   */\n      tag_202\n        /* \"#utility.yul\":3675:3676   */\n      0x00\n        /* \"#utility.yul\":3664:3673   */\n      dup4\n        /* \"#utility.yul\":3660:3677   */\n      add\n        /* \"#utility.yul\":3651:3657   */\n      dup5\n        /* \"#utility.yul\":3607:3678   */\n      tag_152\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":3463:3685   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3691:4310   */\n    tag_30:\n        /* \"#utility.yul\":3768:3774   */\n      0x00\n        /* \"#utility.yul\":3776:3782   */\n      dup1\n        /* \"#utility.yul\":3784:3790   */\n      0x00\n        /* \"#utility.yul\":3833:3835   */\n      0x60\n        /* \"#utility.yul\":3821:3830   */\n      dup5\n        /* \"#utility.yul\":3812:3819   */\n      dup7\n        /* \"#utility.yul\":3808:3831   */\n      sub\n        /* \"#utility.yul\":3804:3836   */\n      slt\n        /* \"#utility.yul\":3801:3920   */\n      iszero\n      tag_204\n      jumpi\n        /* \"#utility.yul\":3839:3918   */\n      tag_205\n      tag_141\n      jump\t// in\n    tag_205:\n        /* \"#utility.yul\":3801:3920   */\n    tag_204:\n        /* \"#utility.yul\":3959:3960   */\n      0x00\n        /* \"#utility.yul\":3984:4037   */\n      tag_206\n        /* \"#utility.yul\":4029:4036   */\n      dup7\n        /* \"#utility.yul\":4020:4026   */\n      dup3\n        /* \"#utility.yul\":4009:4018   */\n      dup8\n        /* \"#utility.yul\":4005:4027   */\n      add\n        /* \"#utility.yul\":3984:4037   */\n      tag_146\n      jump\t// in\n    tag_206:\n        /* \"#utility.yul\":3974:4037   */\n      swap4\n      pop\n        /* \"#utility.yul\":3930:4047   */\n      pop\n        /* \"#utility.yul\":4086:4088   */\n      0x20\n        /* \"#utility.yul\":4112:4165   */\n      tag_207\n        /* \"#utility.yul\":4157:4164   */\n      dup7\n        /* \"#utility.yul\":4148:4154   */\n      dup3\n        /* \"#utility.yul\":4137:4146   */\n      dup8\n        /* \"#utility.yul\":4133:4155   */\n      add\n        /* \"#utility.yul\":4112:4165   */\n      tag_146\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":4102:4165   */\n      swap3\n      pop\n        /* \"#utility.yul\":4057:4175   */\n      pop\n        /* \"#utility.yul\":4214:4216   */\n      0x40\n        /* \"#utility.yul\":4240:4293   */\n      tag_208\n        /* \"#utility.yul\":4285:4292   */\n      dup7\n        /* \"#utility.yul\":4276:4282   */\n      dup3\n        /* \"#utility.yul\":4265:4274   */\n      dup8\n        /* \"#utility.yul\":4261:4283   */\n      add\n        /* \"#utility.yul\":4240:4293   */\n      tag_149\n      jump\t// in\n    tag_208:\n        /* \"#utility.yul\":4230:4293   */\n      swap2\n      pop\n        /* \"#utility.yul\":4185:4303   */\n      pop\n        /* \"#utility.yul\":3691:4310   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4316:4402   */\n    tag_153:\n        /* \"#utility.yul\":4351:4358   */\n      0x00\n        /* \"#utility.yul\":4391:4395   */\n      0xff\n        /* \"#utility.yul\":4384:4389   */\n      dup3\n        /* \"#utility.yul\":4380:4396   */\n      and\n        /* \"#utility.yul\":4369:4396   */\n      swap1\n      pop\n        /* \"#utility.yul\":4316:4402   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4408:4520   */\n    tag_154:\n        /* \"#utility.yul\":4491:4513   */\n      tag_211\n        /* \"#utility.yul\":4507:4512   */\n      dup2\n        /* \"#utility.yul\":4491:4513   */\n      tag_153\n      jump\t// in\n    tag_211:\n        /* \"#utility.yul\":4486:4489   */\n      dup3\n        /* \"#utility.yul\":4479:4514   */\n      mstore\n        /* \"#utility.yul\":4408:4520   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4526:4740   */\n    tag_39:\n        /* \"#utility.yul\":4615:4619   */\n      0x00\n        /* \"#utility.yul\":4653:4655   */\n      0x20\n        /* \"#utility.yul\":4642:4651   */\n      dup3\n        /* \"#utility.yul\":4638:4656   */\n      add\n        /* \"#utility.yul\":4630:4656   */\n      swap1\n      pop\n        /* \"#utility.yul\":4666:4733   */\n      tag_213\n        /* \"#utility.yul\":4730:4731   */\n      0x00\n        /* \"#utility.yul\":4719:4728   */\n      dup4\n        /* \"#utility.yul\":4715:4732   */\n      add\n        /* \"#utility.yul\":4706:4712   */\n      dup5\n        /* \"#utility.yul\":4666:4733   */\n      tag_154\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":4526:4740   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4746:5075   */\n    tag_42:\n        /* \"#utility.yul\":4805:4811   */\n      0x00\n        /* \"#utility.yul\":4854:4856   */\n      0x20\n        /* \"#utility.yul\":4842:4851   */\n      dup3\n        /* \"#utility.yul\":4833:4840   */\n      dup5\n        /* \"#utility.yul\":4829:4852   */\n      sub\n        /* \"#utility.yul\":4825:4857   */\n      slt\n        /* \"#utility.yul\":4822:4941   */\n      iszero\n      tag_215\n      jumpi\n        /* \"#utility.yul\":4860:4939   */\n      tag_216\n      tag_141\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":4822:4941   */\n    tag_215:\n        /* \"#utility.yul\":4980:4981   */\n      0x00\n        /* \"#utility.yul\":5005:5058   */\n      tag_217\n        /* \"#utility.yul\":5050:5057   */\n      dup5\n        /* \"#utility.yul\":5041:5047   */\n      dup3\n        /* \"#utility.yul\":5030:5039   */\n      dup6\n        /* \"#utility.yul\":5026:5048   */\n      add\n        /* \"#utility.yul\":5005:5058   */\n      tag_146\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":4995:5058   */\n      swap2\n      pop\n        /* \"#utility.yul\":4951:5068   */\n      pop\n        /* \"#utility.yul\":4746:5075   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5081:5555   */\n    tag_54:\n        /* \"#utility.yul\":5149:5155   */\n      0x00\n        /* \"#utility.yul\":5157:5163   */\n      dup1\n        /* \"#utility.yul\":5206:5208   */\n      0x40\n        /* \"#utility.yul\":5194:5203   */\n      dup4\n        /* \"#utility.yul\":5185:5192   */\n      dup6\n        /* \"#utility.yul\":5181:5204   */\n      sub\n        /* \"#utility.yul\":5177:5209   */\n      slt\n        /* \"#utility.yul\":5174:5293   */\n      iszero\n      tag_219\n      jumpi\n        /* \"#utility.yul\":5212:5291   */\n      tag_220\n      tag_141\n      jump\t// in\n    tag_220:\n        /* \"#utility.yul\":5174:5293   */\n    tag_219:\n        /* \"#utility.yul\":5332:5333   */\n      0x00\n        /* \"#utility.yul\":5357:5410   */\n      tag_221\n        /* \"#utility.yul\":5402:5409   */\n      dup6\n        /* \"#utility.yul\":5393:5399   */\n      dup3\n        /* \"#utility.yul\":5382:5391   */\n      dup7\n        /* \"#utility.yul\":5378:5400   */\n      add\n        /* \"#utility.yul\":5357:5410   */\n      tag_146\n      jump\t// in\n    tag_221:\n        /* \"#utility.yul\":5347:5410   */\n      swap3\n      pop\n        /* \"#utility.yul\":5303:5420   */\n      pop\n        /* \"#utility.yul\":5459:5461   */\n      0x20\n        /* \"#utility.yul\":5485:5538   */\n      tag_222\n        /* \"#utility.yul\":5530:5537   */\n      dup6\n        /* \"#utility.yul\":5521:5527   */\n      dup3\n        /* \"#utility.yul\":5510:5519   */\n      dup7\n        /* \"#utility.yul\":5506:5528   */\n      add\n        /* \"#utility.yul\":5485:5538   */\n      tag_146\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":5475:5538   */\n      swap2\n      pop\n        /* \"#utility.yul\":5430:5548   */\n      pop\n        /* \"#utility.yul\":5081:5555   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5561:5741   */\n    tag_155:\n        /* \"#utility.yul\":5609:5686   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5606:5607   */\n      0x00\n        /* \"#utility.yul\":5599:5687   */\n      mstore\n        /* \"#utility.yul\":5706:5710   */\n      0x22\n        /* \"#utility.yul\":5703:5704   */\n      0x04\n        /* \"#utility.yul\":5696:5711   */\n      mstore\n        /* \"#utility.yul\":5730:5734   */\n      0x24\n        /* \"#utility.yul\":5727:5728   */\n      0x00\n        /* \"#utility.yul\":5720:5735   */\n      revert\n        /* \"#utility.yul\":5747:6067   */\n    tag_59:\n        /* \"#utility.yul\":5791:5797   */\n      0x00\n        /* \"#utility.yul\":5828:5829   */\n      0x02\n        /* \"#utility.yul\":5822:5826   */\n      dup3\n        /* \"#utility.yul\":5818:5830   */\n      div\n        /* \"#utility.yul\":5808:5830   */\n      swap1\n      pop\n        /* \"#utility.yul\":5875:5876   */\n      0x01\n        /* \"#utility.yul\":5869:5873   */\n      dup3\n        /* \"#utility.yul\":5865:5877   */\n      and\n        /* \"#utility.yul\":5896:5914   */\n      dup1\n        /* \"#utility.yul\":5886:5967   */\n      tag_225\n      jumpi\n        /* \"#utility.yul\":5952:5956   */\n      0x7f\n        /* \"#utility.yul\":5944:5950   */\n      dup3\n        /* \"#utility.yul\":5940:5957   */\n      and\n        /* \"#utility.yul\":5930:5957   */\n      swap2\n      pop\n        /* \"#utility.yul\":5886:5967   */\n    tag_225:\n        /* \"#utility.yul\":6014:6016   */\n      0x20\n        /* \"#utility.yul\":6006:6012   */\n      dup3\n        /* \"#utility.yul\":6003:6017   */\n      lt\n        /* \"#utility.yul\":5983:6001   */\n      dup2\n        /* \"#utility.yul\":5980:6018   */\n      sub\n        /* \"#utility.yul\":5977:6061   */\n      tag_226\n      jumpi\n        /* \"#utility.yul\":6033:6051   */\n      tag_227\n      tag_155\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":5977:6061   */\n    tag_226:\n        /* \"#utility.yul\":5798:6067   */\n      pop\n        /* \"#utility.yul\":5747:6067   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6073:6310   */\n    tag_156:\n        /* \"#utility.yul\":6213:6247   */\n      0x546f6b656e7320617265206c6f636b656420756e74696c2074686520756e6c6f\n        /* \"#utility.yul\":6209:6210   */\n      0x00\n        /* \"#utility.yul\":6201:6207   */\n      dup3\n        /* \"#utility.yul\":6197:6211   */\n      add\n        /* \"#utility.yul\":6190:6248   */\n      mstore\n        /* \"#utility.yul\":6282:6302   */\n      0x636b2074696d6520686173207061737365640000000000000000000000000000\n        /* \"#utility.yul\":6277:6279   */\n      0x20\n        /* \"#utility.yul\":6269:6275   */\n      dup3\n        /* \"#utility.yul\":6265:6280   */\n      add\n        /* \"#utility.yul\":6258:6303   */\n      mstore\n        /* \"#utility.yul\":6073:6310   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6316:6682   */\n    tag_157:\n        /* \"#utility.yul\":6458:6461   */\n      0x00\n        /* \"#utility.yul\":6479:6546   */\n      tag_230\n        /* \"#utility.yul\":6543:6545   */\n      0x32\n        /* \"#utility.yul\":6538:6541   */\n      dup4\n        /* \"#utility.yul\":6479:6546   */\n      tag_136\n      jump\t// in\n    tag_230:\n        /* \"#utility.yul\":6472:6546   */\n      swap2\n      pop\n        /* \"#utility.yul\":6555:6648   */\n      tag_231\n        /* \"#utility.yul\":6644:6647   */\n      dup3\n        /* \"#utility.yul\":6555:6648   */\n      tag_156\n      jump\t// in\n    tag_231:\n        /* \"#utility.yul\":6673:6675   */\n      0x40\n        /* \"#utility.yul\":6668:6671   */\n      dup3\n        /* \"#utility.yul\":6664:6676   */\n      add\n        /* \"#utility.yul\":6657:6676   */\n      swap1\n      pop\n        /* \"#utility.yul\":6316:6682   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6688:7107   */\n    tag_73:\n        /* \"#utility.yul\":6854:6858   */\n      0x00\n        /* \"#utility.yul\":6892:6894   */\n      0x20\n        /* \"#utility.yul\":6881:6890   */\n      dup3\n        /* \"#utility.yul\":6877:6895   */\n      add\n        /* \"#utility.yul\":6869:6895   */\n      swap1\n      pop\n        /* \"#utility.yul\":6941:6950   */\n      dup2\n        /* \"#utility.yul\":6935:6939   */\n      dup2\n        /* \"#utility.yul\":6931:6951   */\n      sub\n        /* \"#utility.yul\":6927:6928   */\n      0x00\n        /* \"#utility.yul\":6916:6925   */\n      dup4\n        /* \"#utility.yul\":6912:6929   */\n      add\n        /* \"#utility.yul\":6905:6952   */\n      mstore\n        /* \"#utility.yul\":6969:7100   */\n      tag_233\n        /* \"#utility.yul\":7095:7099   */\n      dup2\n        /* \"#utility.yul\":6969:7100   */\n      tag_157\n      jump\t// in\n    tag_233:\n        /* \"#utility.yul\":6961:7100   */\n      swap1\n      pop\n        /* \"#utility.yul\":6688:7107   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7113:7231   */\n    tag_158:\n        /* \"#utility.yul\":7200:7224   */\n      tag_235\n        /* \"#utility.yul\":7218:7223   */\n      dup2\n        /* \"#utility.yul\":7200:7224   */\n      tag_144\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":7195:7198   */\n      dup3\n        /* \"#utility.yul\":7188:7225   */\n      mstore\n        /* \"#utility.yul\":7113:7231   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7237:7459   */\n    tag_106:\n        /* \"#utility.yul\":7330:7334   */\n      0x00\n        /* \"#utility.yul\":7368:7370   */\n      0x20\n        /* \"#utility.yul\":7357:7366   */\n      dup3\n        /* \"#utility.yul\":7353:7371   */\n      add\n        /* \"#utility.yul\":7345:7371   */\n      swap1\n      pop\n        /* \"#utility.yul\":7381:7452   */\n      tag_237\n        /* \"#utility.yul\":7449:7450   */\n      0x00\n        /* \"#utility.yul\":7438:7447   */\n      dup4\n        /* \"#utility.yul\":7434:7451   */\n      add\n        /* \"#utility.yul\":7425:7431   */\n      dup5\n        /* \"#utility.yul\":7381:7452   */\n      tag_158\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":7237:7459   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7465:7907   */\n    tag_116:\n        /* \"#utility.yul\":7614:7618   */\n      0x00\n        /* \"#utility.yul\":7652:7654   */\n      0x60\n        /* \"#utility.yul\":7641:7650   */\n      dup3\n        /* \"#utility.yul\":7637:7655   */\n      add\n        /* \"#utility.yul\":7629:7655   */\n      swap1\n      pop\n        /* \"#utility.yul\":7665:7736   */\n      tag_239\n        /* \"#utility.yul\":7733:7734   */\n      0x00\n        /* \"#utility.yul\":7722:7731   */\n      dup4\n        /* \"#utility.yul\":7718:7735   */\n      add\n        /* \"#utility.yul\":7709:7715   */\n      dup7\n        /* \"#utility.yul\":7665:7736   */\n      tag_158\n      jump\t// in\n    tag_239:\n        /* \"#utility.yul\":7746:7818   */\n      tag_240\n        /* \"#utility.yul\":7814:7816   */\n      0x20\n        /* \"#utility.yul\":7803:7812   */\n      dup4\n        /* \"#utility.yul\":7799:7817   */\n      add\n        /* \"#utility.yul\":7790:7796   */\n      dup6\n        /* \"#utility.yul\":7746:7818   */\n      tag_152\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":7828:7900   */\n      tag_241\n        /* \"#utility.yul\":7896:7898   */\n      0x40\n        /* \"#utility.yul\":7885:7894   */\n      dup4\n        /* \"#utility.yul\":7881:7899   */\n      add\n        /* \"#utility.yul\":7872:7878   */\n      dup5\n        /* \"#utility.yul\":7828:7900   */\n      tag_152\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":7465:7907   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7913:8093   */\n    tag_159:\n        /* \"#utility.yul\":7961:8038   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7958:7959   */\n      0x00\n        /* \"#utility.yul\":7951:8039   */\n      mstore\n        /* \"#utility.yul\":8058:8062   */\n      0x11\n        /* \"#utility.yul\":8055:8056   */\n      0x04\n        /* \"#utility.yul\":8048:8063   */\n      mstore\n        /* \"#utility.yul\":8082:8086   */\n      0x24\n        /* \"#utility.yul\":8079:8080   */\n      0x00\n        /* \"#utility.yul\":8072:8087   */\n      revert\n        /* \"#utility.yul\":8099:8290   */\n    tag_128:\n        /* \"#utility.yul\":8139:8142   */\n      0x00\n        /* \"#utility.yul\":8158:8178   */\n      tag_244\n        /* \"#utility.yul\":8176:8177   */\n      dup3\n        /* \"#utility.yul\":8158:8178   */\n      tag_147\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":8153:8178   */\n      swap2\n      pop\n        /* \"#utility.yul\":8192:8212   */\n      tag_245\n        /* \"#utility.yul\":8210:8211   */\n      dup4\n        /* \"#utility.yul\":8192:8212   */\n      tag_147\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":8187:8212   */\n      swap3\n      pop\n        /* \"#utility.yul\":8235:8236   */\n      dup3\n        /* \"#utility.yul\":8232:8233   */\n      dup3\n        /* \"#utility.yul\":8228:8237   */\n      add\n        /* \"#utility.yul\":8221:8237   */\n      swap1\n      pop\n        /* \"#utility.yul\":8256:8259   */\n      dup1\n        /* \"#utility.yul\":8253:8254   */\n      dup3\n        /* \"#utility.yul\":8250:8260   */\n      gt\n        /* \"#utility.yul\":8247:8283   */\n      iszero\n      tag_246\n      jumpi\n        /* \"#utility.yul\":8263:8281   */\n      tag_247\n      tag_159\n      jump\t// in\n    tag_247:\n        /* \"#utility.yul\":8247:8283   */\n    tag_246:\n        /* \"#utility.yul\":8099:8290   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212203933eee64e931878bddd6c48dcb998b12d0280746a0b35e39e0a03f80703c21064736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_188": {
									"entryPoint": null,
									"id": 188,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_822": {
									"entryPoint": null,
									"id": 822,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_mint_491": {
									"entryPoint": 276,
									"id": 491,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_update_458": {
									"entryPoint": 409,
									"id": 458,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@decimals_215": {
									"entryPoint": 268,
									"id": 215,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 981,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256_fromMemory": {
									"entryPoint": 1001,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2429,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2469,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2444,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 2484,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2537,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 1211,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 1063,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2330,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 1888,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint8": {
									"entryPoint": 2191,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 1970,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 2265,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1487,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 2412,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2381,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 950,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 2179,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1453,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 1346,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1624,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 1229,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1163,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1597,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 1337,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1569,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1831,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 1118,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1073,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 1379,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 946,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"shift_left_dynamic": {
									"entryPoint": 1244,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_1_unsigned": {
									"entryPoint": 1876,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1557,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1429,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 1256,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 1388,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 959,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 1425,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:10953:6",
										"nodeType": "YulBlock",
										"src": "0:10953:6",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:6",
													"nodeType": "YulBlock",
													"src": "47:35:6",
													"statements": [
														{
															"nativeSrc": "57:19:6",
															"nodeType": "YulAssignment",
															"src": "57:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:6",
																		"nodeType": "YulLiteral",
																		"src": "73:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:6"
																},
																"nativeSrc": "67:9:6",
																"nodeType": "YulFunctionCall",
																"src": "67:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:6",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:6",
														"nodeType": "YulTypedName",
														"src": "40:6:6",
														"type": ""
													}
												],
												"src": "7:75:6"
											},
											{
												"body": {
													"nativeSrc": "177:28:6",
													"nodeType": "YulBlock",
													"src": "177:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:6",
																		"nodeType": "YulLiteral",
																		"src": "194:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:6",
																		"nodeType": "YulLiteral",
																		"src": "197:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:6"
																},
																"nativeSrc": "187:12:6",
																"nodeType": "YulFunctionCall",
																"src": "187:12:6"
															},
															"nativeSrc": "187:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:6"
											},
											{
												"body": {
													"nativeSrc": "300:28:6",
													"nodeType": "YulBlock",
													"src": "300:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:6",
																		"nodeType": "YulLiteral",
																		"src": "317:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:6",
																		"nodeType": "YulLiteral",
																		"src": "320:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:6"
																},
																"nativeSrc": "310:12:6",
																"nodeType": "YulFunctionCall",
																"src": "310:12:6"
															},
															"nativeSrc": "310:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:6"
											},
											{
												"body": {
													"nativeSrc": "379:32:6",
													"nodeType": "YulBlock",
													"src": "379:32:6",
													"statements": [
														{
															"nativeSrc": "389:16:6",
															"nodeType": "YulAssignment",
															"src": "389:16:6",
															"value": {
																"name": "value",
																"nativeSrc": "400:5:6",
																"nodeType": "YulIdentifier",
																"src": "400:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "334:77:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:6",
														"nodeType": "YulTypedName",
														"src": "361:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:6",
														"nodeType": "YulTypedName",
														"src": "371:7:6",
														"type": ""
													}
												],
												"src": "334:77:6"
											},
											{
												"body": {
													"nativeSrc": "460:79:6",
													"nodeType": "YulBlock",
													"src": "460:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "517:16:6",
																"nodeType": "YulBlock",
																"src": "517:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "526:1:6",
																					"nodeType": "YulLiteral",
																					"src": "526:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "529:1:6",
																					"nodeType": "YulLiteral",
																					"src": "529:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "519:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:6"
																			},
																			"nativeSrc": "519:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:6"
																		},
																		"nativeSrc": "519:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "483:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "508:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "490:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:6"
																				},
																				"nativeSrc": "490:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "480:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:6"
																		},
																		"nativeSrc": "480:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "473:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:6"
																},
																"nativeSrc": "473:43:6",
																"nodeType": "YulFunctionCall",
																"src": "473:43:6"
															},
															"nativeSrc": "470:63:6",
															"nodeType": "YulIf",
															"src": "470:63:6"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "417:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "453:5:6",
														"nodeType": "YulTypedName",
														"src": "453:5:6",
														"type": ""
													}
												],
												"src": "417:122:6"
											},
											{
												"body": {
													"nativeSrc": "608:80:6",
													"nodeType": "YulBlock",
													"src": "608:80:6",
													"statements": [
														{
															"nativeSrc": "618:22:6",
															"nodeType": "YulAssignment",
															"src": "618:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "633:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "633:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "627:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "627:5:6"
																},
																"nativeSrc": "627:13:6",
																"nodeType": "YulFunctionCall",
																"src": "627:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "618:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "618:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "676:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "676:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "649:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "649:26:6"
																},
																"nativeSrc": "649:33:6",
																"nodeType": "YulFunctionCall",
																"src": "649:33:6"
															},
															"nativeSrc": "649:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "649:33:6"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "545:143:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "586:6:6",
														"nodeType": "YulTypedName",
														"src": "586:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "594:3:6",
														"nodeType": "YulTypedName",
														"src": "594:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "602:5:6",
														"nodeType": "YulTypedName",
														"src": "602:5:6",
														"type": ""
													}
												],
												"src": "545:143:6"
											},
											{
												"body": {
													"nativeSrc": "788:413:6",
													"nodeType": "YulBlock",
													"src": "788:413:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "834:83:6",
																"nodeType": "YulBlock",
																"src": "834:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "836:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "836:77:6"
																			},
																			"nativeSrc": "836:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "836:79:6"
																		},
																		"nativeSrc": "836:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "836:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "809:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "809:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "818:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "818:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "805:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "805:3:6"
																		},
																		"nativeSrc": "805:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "805:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "830:2:6",
																		"nodeType": "YulLiteral",
																		"src": "830:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "801:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "801:3:6"
																},
																"nativeSrc": "801:32:6",
																"nodeType": "YulFunctionCall",
																"src": "801:32:6"
															},
															"nativeSrc": "798:119:6",
															"nodeType": "YulIf",
															"src": "798:119:6"
														},
														{
															"nativeSrc": "927:128:6",
															"nodeType": "YulBlock",
															"src": "927:128:6",
															"statements": [
																{
																	"nativeSrc": "942:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "942:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "956:1:6",
																		"nodeType": "YulLiteral",
																		"src": "956:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "946:6:6",
																			"nodeType": "YulTypedName",
																			"src": "946:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "971:74:6",
																	"nodeType": "YulAssignment",
																	"src": "971:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1017:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "1017:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1028:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "1028:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1013:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1013:3:6"
																				},
																				"nativeSrc": "1013:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1013:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1037:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1037:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "981:31:6",
																			"nodeType": "YulIdentifier",
																			"src": "981:31:6"
																		},
																		"nativeSrc": "981:64:6",
																		"nodeType": "YulFunctionCall",
																		"src": "981:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "971:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "971:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1065:129:6",
															"nodeType": "YulBlock",
															"src": "1065:129:6",
															"statements": [
																{
																	"nativeSrc": "1080:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1080:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1094:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1094:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1084:6:6",
																			"nodeType": "YulTypedName",
																			"src": "1084:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1110:74:6",
																	"nodeType": "YulAssignment",
																	"src": "1110:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1156:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "1156:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1167:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "1167:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1152:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1152:3:6"
																				},
																				"nativeSrc": "1152:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1152:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1176:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1176:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "1120:31:6",
																			"nodeType": "YulIdentifier",
																			"src": "1120:31:6"
																		},
																		"nativeSrc": "1120:64:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1120:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1110:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "1110:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256_fromMemory",
												"nativeSrc": "694:507:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "750:9:6",
														"nodeType": "YulTypedName",
														"src": "750:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "761:7:6",
														"nodeType": "YulTypedName",
														"src": "761:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "773:6:6",
														"nodeType": "YulTypedName",
														"src": "773:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "781:6:6",
														"nodeType": "YulTypedName",
														"src": "781:6:6",
														"type": ""
													}
												],
												"src": "694:507:6"
											},
											{
												"body": {
													"nativeSrc": "1266:40:6",
													"nodeType": "YulBlock",
													"src": "1266:40:6",
													"statements": [
														{
															"nativeSrc": "1277:22:6",
															"nodeType": "YulAssignment",
															"src": "1277:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1293:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1293:5:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1287:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1287:5:6"
																},
																"nativeSrc": "1287:12:6",
																"nodeType": "YulFunctionCall",
																"src": "1287:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1277:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1277:6:6"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1207:99:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1249:5:6",
														"nodeType": "YulTypedName",
														"src": "1249:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1259:6:6",
														"nodeType": "YulTypedName",
														"src": "1259:6:6",
														"type": ""
													}
												],
												"src": "1207:99:6"
											},
											{
												"body": {
													"nativeSrc": "1340:152:6",
													"nodeType": "YulBlock",
													"src": "1340:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1357:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1357:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1360:77:6",
																		"nodeType": "YulLiteral",
																		"src": "1360:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1350:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1350:6:6"
																},
																"nativeSrc": "1350:88:6",
																"nodeType": "YulFunctionCall",
																"src": "1350:88:6"
															},
															"nativeSrc": "1350:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "1350:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1454:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1454:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1457:4:6",
																		"nodeType": "YulLiteral",
																		"src": "1457:4:6",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1447:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1447:6:6"
																},
																"nativeSrc": "1447:15:6",
																"nodeType": "YulFunctionCall",
																"src": "1447:15:6"
															},
															"nativeSrc": "1447:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "1447:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1478:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1478:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1481:4:6",
																		"nodeType": "YulLiteral",
																		"src": "1481:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1471:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1471:6:6"
																},
																"nativeSrc": "1471:15:6",
																"nodeType": "YulFunctionCall",
																"src": "1471:15:6"
															},
															"nativeSrc": "1471:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "1471:15:6"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "1312:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "1312:180:6"
											},
											{
												"body": {
													"nativeSrc": "1526:152:6",
													"nodeType": "YulBlock",
													"src": "1526:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1543:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1543:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1546:77:6",
																		"nodeType": "YulLiteral",
																		"src": "1546:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1536:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1536:6:6"
																},
																"nativeSrc": "1536:88:6",
																"nodeType": "YulFunctionCall",
																"src": "1536:88:6"
															},
															"nativeSrc": "1536:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "1536:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1640:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1640:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1643:4:6",
																		"nodeType": "YulLiteral",
																		"src": "1643:4:6",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1633:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1633:6:6"
																},
																"nativeSrc": "1633:15:6",
																"nodeType": "YulFunctionCall",
																"src": "1633:15:6"
															},
															"nativeSrc": "1633:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "1633:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1664:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1664:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1667:4:6",
																		"nodeType": "YulLiteral",
																		"src": "1667:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1657:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1657:6:6"
																},
																"nativeSrc": "1657:15:6",
																"nodeType": "YulFunctionCall",
																"src": "1657:15:6"
															},
															"nativeSrc": "1657:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "1657:15:6"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "1498:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "1498:180:6"
											},
											{
												"body": {
													"nativeSrc": "1735:269:6",
													"nodeType": "YulBlock",
													"src": "1735:269:6",
													"statements": [
														{
															"nativeSrc": "1745:22:6",
															"nodeType": "YulAssignment",
															"src": "1745:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1759:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "1759:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1765:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1765:1:6",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "1755:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1755:3:6"
																},
																"nativeSrc": "1755:12:6",
																"nodeType": "YulFunctionCall",
																"src": "1755:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1745:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1745:6:6"
																}
															]
														},
														{
															"nativeSrc": "1776:38:6",
															"nodeType": "YulVariableDeclaration",
															"src": "1776:38:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1806:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "1806:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1812:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1812:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1802:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1802:3:6"
																},
																"nativeSrc": "1802:12:6",
																"nodeType": "YulFunctionCall",
																"src": "1802:12:6"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "1780:18:6",
																	"nodeType": "YulTypedName",
																	"src": "1780:18:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1853:51:6",
																"nodeType": "YulBlock",
																"src": "1853:51:6",
																"statements": [
																	{
																		"nativeSrc": "1867:27:6",
																		"nodeType": "YulAssignment",
																		"src": "1867:27:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "1881:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "1881:6:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1889:4:6",
																					"nodeType": "YulLiteral",
																					"src": "1889:4:6",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "1877:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "1877:3:6"
																			},
																			"nativeSrc": "1877:17:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1877:17:6"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "1867:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1867:6:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1833:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "1833:18:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1826:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1826:6:6"
																},
																"nativeSrc": "1826:26:6",
																"nodeType": "YulFunctionCall",
																"src": "1826:26:6"
															},
															"nativeSrc": "1823:81:6",
															"nodeType": "YulIf",
															"src": "1823:81:6"
														},
														{
															"body": {
																"nativeSrc": "1956:42:6",
																"nodeType": "YulBlock",
																"src": "1956:42:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "1970:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "1970:16:6"
																			},
																			"nativeSrc": "1970:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1970:18:6"
																		},
																		"nativeSrc": "1970:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1970:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1920:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "1920:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1943:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1943:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1951:2:6",
																				"nodeType": "YulLiteral",
																				"src": "1951:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1940:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "1940:2:6"
																		},
																		"nativeSrc": "1940:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1940:14:6"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "1917:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "1917:2:6"
																},
																"nativeSrc": "1917:38:6",
																"nodeType": "YulFunctionCall",
																"src": "1917:38:6"
															},
															"nativeSrc": "1914:84:6",
															"nodeType": "YulIf",
															"src": "1914:84:6"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "1684:320:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1719:4:6",
														"nodeType": "YulTypedName",
														"src": "1719:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1728:6:6",
														"nodeType": "YulTypedName",
														"src": "1728:6:6",
														"type": ""
													}
												],
												"src": "1684:320:6"
											},
											{
												"body": {
													"nativeSrc": "2064:87:6",
													"nodeType": "YulBlock",
													"src": "2064:87:6",
													"statements": [
														{
															"nativeSrc": "2074:11:6",
															"nodeType": "YulAssignment",
															"src": "2074:11:6",
															"value": {
																"name": "ptr",
																"nativeSrc": "2082:3:6",
																"nodeType": "YulIdentifier",
																"src": "2082:3:6"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2074:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "2074:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2102:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2102:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "2105:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2105:3:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2095:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2095:6:6"
																},
																"nativeSrc": "2095:14:6",
																"nodeType": "YulFunctionCall",
																"src": "2095:14:6"
															},
															"nativeSrc": "2095:14:6",
															"nodeType": "YulExpressionStatement",
															"src": "2095:14:6"
														},
														{
															"nativeSrc": "2118:26:6",
															"nodeType": "YulAssignment",
															"src": "2118:26:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2136:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2136:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2139:4:6",
																		"nodeType": "YulLiteral",
																		"src": "2139:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "2126:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "2126:9:6"
																},
																"nativeSrc": "2126:18:6",
																"nodeType": "YulFunctionCall",
																"src": "2126:18:6"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2118:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "2118:4:6"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "2010:141:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "2051:3:6",
														"nodeType": "YulTypedName",
														"src": "2051:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "2059:4:6",
														"nodeType": "YulTypedName",
														"src": "2059:4:6",
														"type": ""
													}
												],
												"src": "2010:141:6"
											},
											{
												"body": {
													"nativeSrc": "2201:49:6",
													"nodeType": "YulBlock",
													"src": "2201:49:6",
													"statements": [
														{
															"nativeSrc": "2211:33:6",
															"nodeType": "YulAssignment",
															"src": "2211:33:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2229:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "2229:5:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2236:2:6",
																				"nodeType": "YulLiteral",
																				"src": "2236:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2225:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2225:3:6"
																		},
																		"nativeSrc": "2225:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2225:14:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2241:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2241:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "2221:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2221:3:6"
																},
																"nativeSrc": "2221:23:6",
																"nodeType": "YulFunctionCall",
																"src": "2221:23:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2211:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2211:6:6"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "2157:93:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2184:5:6",
														"nodeType": "YulTypedName",
														"src": "2184:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2194:6:6",
														"nodeType": "YulTypedName",
														"src": "2194:6:6",
														"type": ""
													}
												],
												"src": "2157:93:6"
											},
											{
												"body": {
													"nativeSrc": "2309:54:6",
													"nodeType": "YulBlock",
													"src": "2309:54:6",
													"statements": [
														{
															"nativeSrc": "2319:37:6",
															"nodeType": "YulAssignment",
															"src": "2319:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "2344:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "2344:4:6"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "2350:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "2350:5:6"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "2340:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2340:3:6"
																},
																"nativeSrc": "2340:16:6",
																"nodeType": "YulFunctionCall",
																"src": "2340:16:6"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "2319:8:6",
																	"nodeType": "YulIdentifier",
																	"src": "2319:8:6"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "2256:107:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "2284:4:6",
														"nodeType": "YulTypedName",
														"src": "2284:4:6",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "2290:5:6",
														"nodeType": "YulTypedName",
														"src": "2290:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "2300:8:6",
														"nodeType": "YulTypedName",
														"src": "2300:8:6",
														"type": ""
													}
												],
												"src": "2256:107:6"
											},
											{
												"body": {
													"nativeSrc": "2445:317:6",
													"nodeType": "YulBlock",
													"src": "2445:317:6",
													"statements": [
														{
															"nativeSrc": "2455:35:6",
															"nodeType": "YulVariableDeclaration",
															"src": "2455:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "2476:10:6",
																		"nodeType": "YulIdentifier",
																		"src": "2476:10:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2488:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2488:1:6",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "2472:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2472:3:6"
																},
																"nativeSrc": "2472:18:6",
																"nodeType": "YulFunctionCall",
																"src": "2472:18:6"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "2459:9:6",
																	"nodeType": "YulTypedName",
																	"src": "2459:9:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2499:109:6",
															"nodeType": "YulVariableDeclaration",
															"src": "2499:109:6",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "2530:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2530:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2541:66:6",
																		"nodeType": "YulLiteral",
																		"src": "2541:66:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "2511:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "2511:18:6"
																},
																"nativeSrc": "2511:97:6",
																"nodeType": "YulFunctionCall",
																"src": "2511:97:6"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "2503:4:6",
																	"nodeType": "YulTypedName",
																	"src": "2503:4:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2617:51:6",
															"nodeType": "YulAssignment",
															"src": "2617:51:6",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "2648:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2648:9:6"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "2659:8:6",
																		"nodeType": "YulIdentifier",
																		"src": "2659:8:6"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "2629:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "2629:18:6"
																},
																"nativeSrc": "2629:39:6",
																"nodeType": "YulFunctionCall",
																"src": "2629:39:6"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "2617:8:6",
																	"nodeType": "YulIdentifier",
																	"src": "2617:8:6"
																}
															]
														},
														{
															"nativeSrc": "2677:30:6",
															"nodeType": "YulAssignment",
															"src": "2677:30:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2690:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "2690:5:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "2701:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "2701:4:6"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2697:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2697:3:6"
																		},
																		"nativeSrc": "2697:9:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2697:9:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2686:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2686:3:6"
																},
																"nativeSrc": "2686:21:6",
																"nodeType": "YulFunctionCall",
																"src": "2686:21:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2677:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "2677:5:6"
																}
															]
														},
														{
															"nativeSrc": "2716:40:6",
															"nodeType": "YulAssignment",
															"src": "2716:40:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2729:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "2729:5:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "2740:8:6",
																				"nodeType": "YulIdentifier",
																				"src": "2740:8:6"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "2750:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "2750:4:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2736:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2736:3:6"
																		},
																		"nativeSrc": "2736:19:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2736:19:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "2726:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "2726:2:6"
																},
																"nativeSrc": "2726:30:6",
																"nodeType": "YulFunctionCall",
																"src": "2726:30:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2716:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2716:6:6"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "2369:393:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2406:5:6",
														"nodeType": "YulTypedName",
														"src": "2406:5:6",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "2413:10:6",
														"nodeType": "YulTypedName",
														"src": "2413:10:6",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "2425:8:6",
														"nodeType": "YulTypedName",
														"src": "2425:8:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2438:6:6",
														"nodeType": "YulTypedName",
														"src": "2438:6:6",
														"type": ""
													}
												],
												"src": "2369:393:6"
											},
											{
												"body": {
													"nativeSrc": "2800:28:6",
													"nodeType": "YulBlock",
													"src": "2800:28:6",
													"statements": [
														{
															"nativeSrc": "2810:12:6",
															"nodeType": "YulAssignment",
															"src": "2810:12:6",
															"value": {
																"name": "value",
																"nativeSrc": "2817:5:6",
																"nodeType": "YulIdentifier",
																"src": "2817:5:6"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2810:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2810:3:6"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "2768:60:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2786:5:6",
														"nodeType": "YulTypedName",
														"src": "2786:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2796:3:6",
														"nodeType": "YulTypedName",
														"src": "2796:3:6",
														"type": ""
													}
												],
												"src": "2768:60:6"
											},
											{
												"body": {
													"nativeSrc": "2894:82:6",
													"nodeType": "YulBlock",
													"src": "2894:82:6",
													"statements": [
														{
															"nativeSrc": "2904:66:6",
															"nodeType": "YulAssignment",
															"src": "2904:66:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2962:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "2962:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2944:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "2944:17:6"
																				},
																				"nativeSrc": "2944:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2944:24:6"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "2935:8:6",
																			"nodeType": "YulIdentifier",
																			"src": "2935:8:6"
																		},
																		"nativeSrc": "2935:34:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2935:34:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "2917:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "2917:17:6"
																},
																"nativeSrc": "2917:53:6",
																"nodeType": "YulFunctionCall",
																"src": "2917:53:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2904:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "2904:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "2834:142:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2874:5:6",
														"nodeType": "YulTypedName",
														"src": "2874:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2884:9:6",
														"nodeType": "YulTypedName",
														"src": "2884:9:6",
														"type": ""
													}
												],
												"src": "2834:142:6"
											},
											{
												"body": {
													"nativeSrc": "3029:28:6",
													"nodeType": "YulBlock",
													"src": "3029:28:6",
													"statements": [
														{
															"nativeSrc": "3039:12:6",
															"nodeType": "YulAssignment",
															"src": "3039:12:6",
															"value": {
																"name": "value",
																"nativeSrc": "3046:5:6",
																"nodeType": "YulIdentifier",
																"src": "3046:5:6"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3039:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3039:3:6"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "2982:75:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3015:5:6",
														"nodeType": "YulTypedName",
														"src": "3015:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3025:3:6",
														"nodeType": "YulTypedName",
														"src": "3025:3:6",
														"type": ""
													}
												],
												"src": "2982:75:6"
											},
											{
												"body": {
													"nativeSrc": "3139:193:6",
													"nodeType": "YulBlock",
													"src": "3139:193:6",
													"statements": [
														{
															"nativeSrc": "3149:63:6",
															"nodeType": "YulVariableDeclaration",
															"src": "3149:63:6",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "3204:7:6",
																		"nodeType": "YulIdentifier",
																		"src": "3204:7:6"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "3173:30:6",
																	"nodeType": "YulIdentifier",
																	"src": "3173:30:6"
																},
																"nativeSrc": "3173:39:6",
																"nodeType": "YulFunctionCall",
																"src": "3173:39:6"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "3153:16:6",
																	"nodeType": "YulTypedName",
																	"src": "3153:16:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3228:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "3228:4:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "3268:4:6",
																						"nodeType": "YulIdentifier",
																						"src": "3268:4:6"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "3262:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "3262:5:6"
																				},
																				"nativeSrc": "3262:11:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3262:11:6"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "3275:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3275:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "3307:16:6",
																						"nodeType": "YulIdentifier",
																						"src": "3307:16:6"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "3283:23:6",
																					"nodeType": "YulIdentifier",
																					"src": "3283:23:6"
																				},
																				"nativeSrc": "3283:41:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3283:41:6"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "3234:27:6",
																			"nodeType": "YulIdentifier",
																			"src": "3234:27:6"
																		},
																		"nativeSrc": "3234:91:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3234:91:6"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "3221:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3221:6:6"
																},
																"nativeSrc": "3221:105:6",
																"nodeType": "YulFunctionCall",
																"src": "3221:105:6"
															},
															"nativeSrc": "3221:105:6",
															"nodeType": "YulExpressionStatement",
															"src": "3221:105:6"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "3063:269:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3116:4:6",
														"nodeType": "YulTypedName",
														"src": "3116:4:6",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "3122:6:6",
														"nodeType": "YulTypedName",
														"src": "3122:6:6",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "3130:7:6",
														"nodeType": "YulTypedName",
														"src": "3130:7:6",
														"type": ""
													}
												],
												"src": "3063:269:6"
											},
											{
												"body": {
													"nativeSrc": "3387:24:6",
													"nodeType": "YulBlock",
													"src": "3387:24:6",
													"statements": [
														{
															"nativeSrc": "3397:8:6",
															"nodeType": "YulAssignment",
															"src": "3397:8:6",
															"value": {
																"kind": "number",
																"nativeSrc": "3404:1:6",
																"nodeType": "YulLiteral",
																"src": "3404:1:6",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3397:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3397:3:6"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "3338:73:6",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3383:3:6",
														"nodeType": "YulTypedName",
														"src": "3383:3:6",
														"type": ""
													}
												],
												"src": "3338:73:6"
											},
											{
												"body": {
													"nativeSrc": "3470:136:6",
													"nodeType": "YulBlock",
													"src": "3470:136:6",
													"statements": [
														{
															"nativeSrc": "3480:46:6",
															"nodeType": "YulVariableDeclaration",
															"src": "3480:46:6",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "3494:30:6",
																	"nodeType": "YulIdentifier",
																	"src": "3494:30:6"
																},
																"nativeSrc": "3494:32:6",
																"nodeType": "YulFunctionCall",
																"src": "3494:32:6"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "3484:6:6",
																	"nodeType": "YulTypedName",
																	"src": "3484:6:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3579:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "3579:4:6"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "3585:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3585:6:6"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "3593:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3593:6:6"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "3535:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "3535:43:6"
																},
																"nativeSrc": "3535:65:6",
																"nodeType": "YulFunctionCall",
																"src": "3535:65:6"
															},
															"nativeSrc": "3535:65:6",
															"nodeType": "YulExpressionStatement",
															"src": "3535:65:6"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "3417:189:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3456:4:6",
														"nodeType": "YulTypedName",
														"src": "3456:4:6",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "3462:6:6",
														"nodeType": "YulTypedName",
														"src": "3462:6:6",
														"type": ""
													}
												],
												"src": "3417:189:6"
											},
											{
												"body": {
													"nativeSrc": "3662:136:6",
													"nodeType": "YulBlock",
													"src": "3662:136:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "3729:63:6",
																"nodeType": "YulBlock",
																"src": "3729:63:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "3773:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "3773:5:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3780:1:6",
																					"nodeType": "YulLiteral",
																					"src": "3780:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "3743:29:6",
																				"nodeType": "YulIdentifier",
																				"src": "3743:29:6"
																			},
																			"nativeSrc": "3743:39:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3743:39:6"
																		},
																		"nativeSrc": "3743:39:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3743:39:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "3682:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "3682:5:6"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "3689:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "3689:3:6"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "3679:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "3679:2:6"
																},
																"nativeSrc": "3679:14:6",
																"nodeType": "YulFunctionCall",
																"src": "3679:14:6"
															},
															"nativeSrc": "3672:120:6",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "3694:26:6",
																"nodeType": "YulBlock",
																"src": "3694:26:6",
																"statements": [
																	{
																		"nativeSrc": "3696:22:6",
																		"nodeType": "YulAssignment",
																		"src": "3696:22:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "3709:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "3709:5:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3716:1:6",
																					"nodeType": "YulLiteral",
																					"src": "3716:1:6",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3705:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "3705:3:6"
																			},
																			"nativeSrc": "3705:13:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3705:13:6"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "3696:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "3696:5:6"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "3676:2:6",
																"nodeType": "YulBlock",
																"src": "3676:2:6",
																"statements": []
															},
															"src": "3672:120:6"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "3612:186:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "3650:5:6",
														"nodeType": "YulTypedName",
														"src": "3650:5:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3657:3:6",
														"nodeType": "YulTypedName",
														"src": "3657:3:6",
														"type": ""
													}
												],
												"src": "3612:186:6"
											},
											{
												"body": {
													"nativeSrc": "3883:464:6",
													"nodeType": "YulBlock",
													"src": "3883:464:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "3909:431:6",
																"nodeType": "YulBlock",
																"src": "3909:431:6",
																"statements": [
																	{
																		"nativeSrc": "3923:54:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "3923:54:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "3971:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "3971:5:6"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "3939:31:6",
																				"nodeType": "YulIdentifier",
																				"src": "3939:31:6"
																			},
																			"nativeSrc": "3939:38:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3939:38:6"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "3927:8:6",
																				"nodeType": "YulTypedName",
																				"src": "3927:8:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "3990:63:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "3990:63:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "4013:8:6",
																					"nodeType": "YulIdentifier",
																					"src": "4013:8:6"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "4041:10:6",
																							"nodeType": "YulIdentifier",
																							"src": "4041:10:6"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "4023:17:6",
																						"nodeType": "YulIdentifier",
																						"src": "4023:17:6"
																					},
																					"nativeSrc": "4023:29:6",
																					"nodeType": "YulFunctionCall",
																					"src": "4023:29:6"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4009:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "4009:3:6"
																			},
																			"nativeSrc": "4009:44:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4009:44:6"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "3994:11:6",
																				"nodeType": "YulTypedName",
																				"src": "3994:11:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "4210:27:6",
																			"nodeType": "YulBlock",
																			"src": "4210:27:6",
																			"statements": [
																				{
																					"nativeSrc": "4212:23:6",
																					"nodeType": "YulAssignment",
																					"src": "4212:23:6",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "4227:8:6",
																						"nodeType": "YulIdentifier",
																						"src": "4227:8:6"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "4212:11:6",
																							"nodeType": "YulIdentifier",
																							"src": "4212:11:6"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "4194:10:6",
																					"nodeType": "YulIdentifier",
																					"src": "4194:10:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4206:2:6",
																					"nodeType": "YulLiteral",
																					"src": "4206:2:6",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "4191:2:6",
																				"nodeType": "YulIdentifier",
																				"src": "4191:2:6"
																			},
																			"nativeSrc": "4191:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4191:18:6"
																		},
																		"nativeSrc": "4188:49:6",
																		"nodeType": "YulIf",
																		"src": "4188:49:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "4279:11:6",
																					"nodeType": "YulIdentifier",
																					"src": "4279:11:6"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "4296:8:6",
																							"nodeType": "YulIdentifier",
																							"src": "4296:8:6"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "4324:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "4324:3:6"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "4306:17:6",
																								"nodeType": "YulIdentifier",
																								"src": "4306:17:6"
																							},
																							"nativeSrc": "4306:22:6",
																							"nodeType": "YulFunctionCall",
																							"src": "4306:22:6"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "4292:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "4292:3:6"
																					},
																					"nativeSrc": "4292:37:6",
																					"nodeType": "YulFunctionCall",
																					"src": "4292:37:6"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "4250:28:6",
																				"nodeType": "YulIdentifier",
																				"src": "4250:28:6"
																			},
																			"nativeSrc": "4250:80:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4250:80:6"
																		},
																		"nativeSrc": "4250:80:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "4250:80:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "3900:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "3900:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3905:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3905:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3897:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "3897:2:6"
																},
																"nativeSrc": "3897:11:6",
																"nodeType": "YulFunctionCall",
																"src": "3897:11:6"
															},
															"nativeSrc": "3894:446:6",
															"nodeType": "YulIf",
															"src": "3894:446:6"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "3804:543:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "3859:5:6",
														"nodeType": "YulTypedName",
														"src": "3859:5:6",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "3866:3:6",
														"nodeType": "YulTypedName",
														"src": "3866:3:6",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "3871:10:6",
														"nodeType": "YulTypedName",
														"src": "3871:10:6",
														"type": ""
													}
												],
												"src": "3804:543:6"
											},
											{
												"body": {
													"nativeSrc": "4416:54:6",
													"nodeType": "YulBlock",
													"src": "4416:54:6",
													"statements": [
														{
															"nativeSrc": "4426:37:6",
															"nodeType": "YulAssignment",
															"src": "4426:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "4451:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "4451:4:6"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "4457:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "4457:5:6"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "4447:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4447:3:6"
																},
																"nativeSrc": "4447:16:6",
																"nodeType": "YulFunctionCall",
																"src": "4447:16:6"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "4426:8:6",
																	"nodeType": "YulIdentifier",
																	"src": "4426:8:6"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "4353:117:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "4391:4:6",
														"nodeType": "YulTypedName",
														"src": "4391:4:6",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "4397:5:6",
														"nodeType": "YulTypedName",
														"src": "4397:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "4407:8:6",
														"nodeType": "YulTypedName",
														"src": "4407:8:6",
														"type": ""
													}
												],
												"src": "4353:117:6"
											},
											{
												"body": {
													"nativeSrc": "4527:118:6",
													"nodeType": "YulBlock",
													"src": "4527:118:6",
													"statements": [
														{
															"nativeSrc": "4537:68:6",
															"nodeType": "YulVariableDeclaration",
															"src": "4537:68:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4586:1:6",
																						"nodeType": "YulLiteral",
																						"src": "4586:1:6",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "4589:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "4589:5:6"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "4582:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4582:3:6"
																				},
																				"nativeSrc": "4582:13:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4582:13:6"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4601:1:6",
																						"nodeType": "YulLiteral",
																						"src": "4601:1:6",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4597:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4597:3:6"
																				},
																				"nativeSrc": "4597:6:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4597:6:6"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "4553:28:6",
																			"nodeType": "YulIdentifier",
																			"src": "4553:28:6"
																		},
																		"nativeSrc": "4553:51:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4553:51:6"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "4549:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4549:3:6"
																},
																"nativeSrc": "4549:56:6",
																"nodeType": "YulFunctionCall",
																"src": "4549:56:6"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "4541:4:6",
																	"nodeType": "YulTypedName",
																	"src": "4541:4:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4614:25:6",
															"nodeType": "YulAssignment",
															"src": "4614:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4628:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "4628:4:6"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "4634:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "4634:4:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4624:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4624:3:6"
																},
																"nativeSrc": "4624:15:6",
																"nodeType": "YulFunctionCall",
																"src": "4624:15:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4614:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4614:6:6"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "4476:169:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4504:4:6",
														"nodeType": "YulTypedName",
														"src": "4504:4:6",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "4510:5:6",
														"nodeType": "YulTypedName",
														"src": "4510:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4520:6:6",
														"nodeType": "YulTypedName",
														"src": "4520:6:6",
														"type": ""
													}
												],
												"src": "4476:169:6"
											},
											{
												"body": {
													"nativeSrc": "4731:214:6",
													"nodeType": "YulBlock",
													"src": "4731:214:6",
													"statements": [
														{
															"nativeSrc": "4864:37:6",
															"nodeType": "YulAssignment",
															"src": "4864:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4891:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "4891:4:6"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "4897:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "4897:3:6"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "4872:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "4872:18:6"
																},
																"nativeSrc": "4872:29:6",
																"nodeType": "YulFunctionCall",
																"src": "4872:29:6"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4864:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "4864:4:6"
																}
															]
														},
														{
															"nativeSrc": "4910:29:6",
															"nodeType": "YulAssignment",
															"src": "4910:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4921:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "4921:4:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "4931:1:6",
																				"nodeType": "YulLiteral",
																				"src": "4931:1:6",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "4934:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "4934:3:6"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "4927:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4927:3:6"
																		},
																		"nativeSrc": "4927:11:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4927:11:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "4918:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "4918:2:6"
																},
																"nativeSrc": "4918:21:6",
																"nodeType": "YulFunctionCall",
																"src": "4918:21:6"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "4910:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "4910:4:6"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "4650:295:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4712:4:6",
														"nodeType": "YulTypedName",
														"src": "4712:4:6",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "4718:3:6",
														"nodeType": "YulTypedName",
														"src": "4718:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "4726:4:6",
														"nodeType": "YulTypedName",
														"src": "4726:4:6",
														"type": ""
													}
												],
												"src": "4650:295:6"
											},
											{
												"body": {
													"nativeSrc": "5042:1303:6",
													"nodeType": "YulBlock",
													"src": "5042:1303:6",
													"statements": [
														{
															"nativeSrc": "5053:51:6",
															"nodeType": "YulVariableDeclaration",
															"src": "5053:51:6",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "5100:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "5100:3:6"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "5067:32:6",
																	"nodeType": "YulIdentifier",
																	"src": "5067:32:6"
																},
																"nativeSrc": "5067:37:6",
																"nodeType": "YulFunctionCall",
																"src": "5067:37:6"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "5057:6:6",
																	"nodeType": "YulTypedName",
																	"src": "5057:6:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5189:22:6",
																"nodeType": "YulBlock",
																"src": "5189:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "5191:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "5191:16:6"
																			},
																			"nativeSrc": "5191:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "5191:18:6"
																		},
																		"nativeSrc": "5191:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "5191:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "5161:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "5161:6:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5169:18:6",
																		"nodeType": "YulLiteral",
																		"src": "5169:18:6",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5158:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "5158:2:6"
																},
																"nativeSrc": "5158:30:6",
																"nodeType": "YulFunctionCall",
																"src": "5158:30:6"
															},
															"nativeSrc": "5155:56:6",
															"nodeType": "YulIf",
															"src": "5155:56:6"
														},
														{
															"nativeSrc": "5221:52:6",
															"nodeType": "YulVariableDeclaration",
															"src": "5221:52:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "5267:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "5267:4:6"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "5261:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "5261:5:6"
																		},
																		"nativeSrc": "5261:11:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5261:11:6"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "5235:25:6",
																	"nodeType": "YulIdentifier",
																	"src": "5235:25:6"
																},
																"nativeSrc": "5235:38:6",
																"nodeType": "YulFunctionCall",
																"src": "5235:38:6"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "5225:6:6",
																	"nodeType": "YulTypedName",
																	"src": "5225:6:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "5366:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "5366:4:6"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "5372:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "5372:6:6"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "5380:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "5380:6:6"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "5320:45:6",
																	"nodeType": "YulIdentifier",
																	"src": "5320:45:6"
																},
																"nativeSrc": "5320:67:6",
																"nodeType": "YulFunctionCall",
																"src": "5320:67:6"
															},
															"nativeSrc": "5320:67:6",
															"nodeType": "YulExpressionStatement",
															"src": "5320:67:6"
														},
														{
															"nativeSrc": "5397:18:6",
															"nodeType": "YulVariableDeclaration",
															"src": "5397:18:6",
															"value": {
																"kind": "number",
																"nativeSrc": "5414:1:6",
																"nodeType": "YulLiteral",
																"src": "5414:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "5401:9:6",
																	"nodeType": "YulTypedName",
																	"src": "5401:9:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5425:17:6",
															"nodeType": "YulAssignment",
															"src": "5425:17:6",
															"value": {
																"kind": "number",
																"nativeSrc": "5438:4:6",
																"nodeType": "YulLiteral",
																"src": "5438:4:6",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "5425:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "5425:9:6"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "5489:611:6",
																		"nodeType": "YulBlock",
																		"src": "5489:611:6",
																		"statements": [
																			{
																				"nativeSrc": "5503:37:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5503:37:6",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "5522:6:6",
																							"nodeType": "YulIdentifier",
																							"src": "5522:6:6"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "5534:4:6",
																									"nodeType": "YulLiteral",
																									"src": "5534:4:6",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "5530:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "5530:3:6"
																							},
																							"nativeSrc": "5530:9:6",
																							"nodeType": "YulFunctionCall",
																							"src": "5530:9:6"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "5518:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "5518:3:6"
																					},
																					"nativeSrc": "5518:22:6",
																					"nodeType": "YulFunctionCall",
																					"src": "5518:22:6"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "5507:7:6",
																						"nodeType": "YulTypedName",
																						"src": "5507:7:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "5554:51:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5554:51:6",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5600:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "5600:4:6"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "5568:31:6",
																						"nodeType": "YulIdentifier",
																						"src": "5568:31:6"
																					},
																					"nativeSrc": "5568:37:6",
																					"nodeType": "YulFunctionCall",
																					"src": "5568:37:6"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "5558:6:6",
																						"nodeType": "YulTypedName",
																						"src": "5558:6:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "5618:10:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5618:10:6",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5627:1:6",
																					"nodeType": "YulLiteral",
																					"src": "5627:1:6",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "5622:1:6",
																						"nodeType": "YulTypedName",
																						"src": "5622:1:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "5686:163:6",
																					"nodeType": "YulBlock",
																					"src": "5686:163:6",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "5711:6:6",
																										"nodeType": "YulIdentifier",
																										"src": "5711:6:6"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "5729:3:6",
																														"nodeType": "YulIdentifier",
																														"src": "5729:3:6"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "5734:9:6",
																														"nodeType": "YulIdentifier",
																														"src": "5734:9:6"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "5725:3:6",
																													"nodeType": "YulIdentifier",
																													"src": "5725:3:6"
																												},
																												"nativeSrc": "5725:19:6",
																												"nodeType": "YulFunctionCall",
																												"src": "5725:19:6"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "5719:5:6",
																											"nodeType": "YulIdentifier",
																											"src": "5719:5:6"
																										},
																										"nativeSrc": "5719:26:6",
																										"nodeType": "YulFunctionCall",
																										"src": "5719:26:6"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "5704:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "5704:6:6"
																								},
																								"nativeSrc": "5704:42:6",
																								"nodeType": "YulFunctionCall",
																								"src": "5704:42:6"
																							},
																							"nativeSrc": "5704:42:6",
																							"nodeType": "YulExpressionStatement",
																							"src": "5704:42:6"
																						},
																						{
																							"nativeSrc": "5763:24:6",
																							"nodeType": "YulAssignment",
																							"src": "5763:24:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "5777:6:6",
																										"nodeType": "YulIdentifier",
																										"src": "5777:6:6"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5785:1:6",
																										"nodeType": "YulLiteral",
																										"src": "5785:1:6",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5773:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "5773:3:6"
																								},
																								"nativeSrc": "5773:14:6",
																								"nodeType": "YulFunctionCall",
																								"src": "5773:14:6"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "5763:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "5763:6:6"
																								}
																							]
																						},
																						{
																							"nativeSrc": "5804:31:6",
																							"nodeType": "YulAssignment",
																							"src": "5804:31:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "5821:9:6",
																										"nodeType": "YulIdentifier",
																										"src": "5821:9:6"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5832:2:6",
																										"nodeType": "YulLiteral",
																										"src": "5832:2:6",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5817:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "5817:3:6"
																								},
																								"nativeSrc": "5817:18:6",
																								"nodeType": "YulFunctionCall",
																								"src": "5817:18:6"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "5804:9:6",
																									"nodeType": "YulIdentifier",
																									"src": "5804:9:6"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "5652:1:6",
																							"nodeType": "YulIdentifier",
																							"src": "5652:1:6"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "5655:7:6",
																							"nodeType": "YulIdentifier",
																							"src": "5655:7:6"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "5649:2:6",
																						"nodeType": "YulIdentifier",
																						"src": "5649:2:6"
																					},
																					"nativeSrc": "5649:14:6",
																					"nodeType": "YulFunctionCall",
																					"src": "5649:14:6"
																				},
																				"nativeSrc": "5641:208:6",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "5664:21:6",
																					"nodeType": "YulBlock",
																					"src": "5664:21:6",
																					"statements": [
																						{
																							"nativeSrc": "5666:17:6",
																							"nodeType": "YulAssignment",
																							"src": "5666:17:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "5675:1:6",
																										"nodeType": "YulIdentifier",
																										"src": "5675:1:6"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5678:4:6",
																										"nodeType": "YulLiteral",
																										"src": "5678:4:6",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5671:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "5671:3:6"
																								},
																								"nativeSrc": "5671:12:6",
																								"nodeType": "YulFunctionCall",
																								"src": "5671:12:6"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "5666:1:6",
																									"nodeType": "YulIdentifier",
																									"src": "5666:1:6"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "5645:3:6",
																					"nodeType": "YulBlock",
																					"src": "5645:3:6",
																					"statements": []
																				},
																				"src": "5641:208:6"
																			},
																			{
																				"body": {
																					"nativeSrc": "5885:156:6",
																					"nodeType": "YulBlock",
																					"src": "5885:156:6",
																					"statements": [
																						{
																							"nativeSrc": "5903:43:6",
																							"nodeType": "YulVariableDeclaration",
																							"src": "5903:43:6",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "5930:3:6",
																												"nodeType": "YulIdentifier",
																												"src": "5930:3:6"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "5935:9:6",
																												"nodeType": "YulIdentifier",
																												"src": "5935:9:6"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "5926:3:6",
																											"nodeType": "YulIdentifier",
																											"src": "5926:3:6"
																										},
																										"nativeSrc": "5926:19:6",
																										"nodeType": "YulFunctionCall",
																										"src": "5926:19:6"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "5920:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "5920:5:6"
																								},
																								"nativeSrc": "5920:26:6",
																								"nodeType": "YulFunctionCall",
																								"src": "5920:26:6"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "5907:9:6",
																									"nodeType": "YulTypedName",
																									"src": "5907:9:6",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "5970:6:6",
																										"nodeType": "YulIdentifier",
																										"src": "5970:6:6"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "5997:9:6",
																												"nodeType": "YulIdentifier",
																												"src": "5997:9:6"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "6012:6:6",
																														"nodeType": "YulIdentifier",
																														"src": "6012:6:6"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "6020:4:6",
																														"nodeType": "YulLiteral",
																														"src": "6020:4:6",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "6008:3:6",
																													"nodeType": "YulIdentifier",
																													"src": "6008:3:6"
																												},
																												"nativeSrc": "6008:17:6",
																												"nodeType": "YulFunctionCall",
																												"src": "6008:17:6"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "5978:18:6",
																											"nodeType": "YulIdentifier",
																											"src": "5978:18:6"
																										},
																										"nativeSrc": "5978:48:6",
																										"nodeType": "YulFunctionCall",
																										"src": "5978:48:6"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "5963:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "5963:6:6"
																								},
																								"nativeSrc": "5963:64:6",
																								"nodeType": "YulFunctionCall",
																								"src": "5963:64:6"
																							},
																							"nativeSrc": "5963:64:6",
																							"nodeType": "YulExpressionStatement",
																							"src": "5963:64:6"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "5868:7:6",
																							"nodeType": "YulIdentifier",
																							"src": "5868:7:6"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "5877:6:6",
																							"nodeType": "YulIdentifier",
																							"src": "5877:6:6"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "5865:2:6",
																						"nodeType": "YulIdentifier",
																						"src": "5865:2:6"
																					},
																					"nativeSrc": "5865:19:6",
																					"nodeType": "YulFunctionCall",
																					"src": "5865:19:6"
																				},
																				"nativeSrc": "5862:179:6",
																				"nodeType": "YulIf",
																				"src": "5862:179:6"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6061:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "6061:4:6"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "6075:6:6",
																											"nodeType": "YulIdentifier",
																											"src": "6075:6:6"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "6083:1:6",
																											"nodeType": "YulLiteral",
																											"src": "6083:1:6",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "6071:3:6",
																										"nodeType": "YulIdentifier",
																										"src": "6071:3:6"
																									},
																									"nativeSrc": "6071:14:6",
																									"nodeType": "YulFunctionCall",
																									"src": "6071:14:6"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "6087:1:6",
																									"nodeType": "YulLiteral",
																									"src": "6087:1:6",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "6067:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "6067:3:6"
																							},
																							"nativeSrc": "6067:22:6",
																							"nodeType": "YulFunctionCall",
																							"src": "6067:22:6"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "6054:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "6054:6:6"
																					},
																					"nativeSrc": "6054:36:6",
																					"nodeType": "YulFunctionCall",
																					"src": "6054:36:6"
																				},
																				"nativeSrc": "6054:36:6",
																				"nodeType": "YulExpressionStatement",
																				"src": "6054:36:6"
																			}
																		]
																	},
																	"nativeSrc": "5482:618:6",
																	"nodeType": "YulCase",
																	"src": "5482:618:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5487:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5487:1:6",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "6117:222:6",
																		"nodeType": "YulBlock",
																		"src": "6117:222:6",
																		"statements": [
																			{
																				"nativeSrc": "6131:14:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6131:14:6",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "6144:1:6",
																					"nodeType": "YulLiteral",
																					"src": "6144:1:6",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "6135:5:6",
																						"nodeType": "YulTypedName",
																						"src": "6135:5:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "6168:67:6",
																					"nodeType": "YulBlock",
																					"src": "6168:67:6",
																					"statements": [
																						{
																							"nativeSrc": "6186:35:6",
																							"nodeType": "YulAssignment",
																							"src": "6186:35:6",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "6205:3:6",
																												"nodeType": "YulIdentifier",
																												"src": "6205:3:6"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "6210:9:6",
																												"nodeType": "YulIdentifier",
																												"src": "6210:9:6"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "6201:3:6",
																											"nodeType": "YulIdentifier",
																											"src": "6201:3:6"
																										},
																										"nativeSrc": "6201:19:6",
																										"nodeType": "YulFunctionCall",
																										"src": "6201:19:6"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "6195:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "6195:5:6"
																								},
																								"nativeSrc": "6195:26:6",
																								"nodeType": "YulFunctionCall",
																								"src": "6195:26:6"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "6186:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "6186:5:6"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "6161:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "6161:6:6"
																				},
																				"nativeSrc": "6158:77:6",
																				"nodeType": "YulIf",
																				"src": "6158:77:6"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6255:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "6255:4:6"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "6314:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "6314:5:6"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "6321:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "6321:6:6"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "6261:52:6",
																								"nodeType": "YulIdentifier",
																								"src": "6261:52:6"
																							},
																							"nativeSrc": "6261:67:6",
																							"nodeType": "YulFunctionCall",
																							"src": "6261:67:6"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "6248:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "6248:6:6"
																					},
																					"nativeSrc": "6248:81:6",
																					"nodeType": "YulFunctionCall",
																					"src": "6248:81:6"
																				},
																				"nativeSrc": "6248:81:6",
																				"nodeType": "YulExpressionStatement",
																				"src": "6248:81:6"
																			}
																		]
																	},
																	"nativeSrc": "6109:230:6",
																	"nodeType": "YulCase",
																	"src": "6109:230:6",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "5462:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "5462:6:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5470:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5470:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5459:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "5459:2:6"
																},
																"nativeSrc": "5459:14:6",
																"nodeType": "YulFunctionCall",
																"src": "5459:14:6"
															},
															"nativeSrc": "5452:887:6",
															"nodeType": "YulSwitch",
															"src": "5452:887:6"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "4950:1395:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "5031:4:6",
														"nodeType": "YulTypedName",
														"src": "5031:4:6",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "5037:3:6",
														"nodeType": "YulTypedName",
														"src": "5037:3:6",
														"type": ""
													}
												],
												"src": "4950:1395:6"
											},
											{
												"body": {
													"nativeSrc": "6379:152:6",
													"nodeType": "YulBlock",
													"src": "6379:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6396:1:6",
																		"nodeType": "YulLiteral",
																		"src": "6396:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6399:77:6",
																		"nodeType": "YulLiteral",
																		"src": "6399:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6389:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6389:6:6"
																},
																"nativeSrc": "6389:88:6",
																"nodeType": "YulFunctionCall",
																"src": "6389:88:6"
															},
															"nativeSrc": "6389:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "6389:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6493:1:6",
																		"nodeType": "YulLiteral",
																		"src": "6493:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6496:4:6",
																		"nodeType": "YulLiteral",
																		"src": "6496:4:6",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6486:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6486:6:6"
																},
																"nativeSrc": "6486:15:6",
																"nodeType": "YulFunctionCall",
																"src": "6486:15:6"
															},
															"nativeSrc": "6486:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "6486:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6517:1:6",
																		"nodeType": "YulLiteral",
																		"src": "6517:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6520:4:6",
																		"nodeType": "YulLiteral",
																		"src": "6520:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6510:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6510:6:6"
																},
																"nativeSrc": "6510:15:6",
																"nodeType": "YulFunctionCall",
																"src": "6510:15:6"
															},
															"nativeSrc": "6510:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "6510:15:6"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "6351:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "6351:180:6"
											},
											{
												"body": {
													"nativeSrc": "6588:51:6",
													"nodeType": "YulBlock",
													"src": "6588:51:6",
													"statements": [
														{
															"nativeSrc": "6598:34:6",
															"nodeType": "YulAssignment",
															"src": "6598:34:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6623:1:6",
																		"nodeType": "YulLiteral",
																		"src": "6623:1:6",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "6626:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "6626:5:6"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "6619:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6619:3:6"
																},
																"nativeSrc": "6619:13:6",
																"nodeType": "YulFunctionCall",
																"src": "6619:13:6"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "6598:8:6",
																	"nodeType": "YulIdentifier",
																	"src": "6598:8:6"
																}
															]
														}
													]
												},
												"name": "shift_right_1_unsigned",
												"nativeSrc": "6537:102:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6569:5:6",
														"nodeType": "YulTypedName",
														"src": "6569:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "6579:8:6",
														"nodeType": "YulTypedName",
														"src": "6579:8:6",
														"type": ""
													}
												],
												"src": "6537:102:6"
											},
											{
												"body": {
													"nativeSrc": "6718:775:6",
													"nodeType": "YulBlock",
													"src": "6718:775:6",
													"statements": [
														{
															"nativeSrc": "6728:15:6",
															"nodeType": "YulAssignment",
															"src": "6728:15:6",
															"value": {
																"name": "_power",
																"nativeSrc": "6737:6:6",
																"nodeType": "YulIdentifier",
																"src": "6737:6:6"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "6728:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "6728:5:6"
																}
															]
														},
														{
															"nativeSrc": "6752:14:6",
															"nodeType": "YulAssignment",
															"src": "6752:14:6",
															"value": {
																"name": "_base",
																"nativeSrc": "6761:5:6",
																"nodeType": "YulIdentifier",
																"src": "6761:5:6"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "6752:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "6752:4:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6810:677:6",
																"nodeType": "YulBlock",
																"src": "6810:677:6",
																"statements": [
																	{
																		"body": {
																			"nativeSrc": "6898:22:6",
																			"nodeType": "YulBlock",
																			"src": "6898:22:6",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "6900:16:6",
																							"nodeType": "YulIdentifier",
																							"src": "6900:16:6"
																						},
																						"nativeSrc": "6900:18:6",
																						"nodeType": "YulFunctionCall",
																						"src": "6900:18:6"
																					},
																					"nativeSrc": "6900:18:6",
																					"nodeType": "YulExpressionStatement",
																					"src": "6900:18:6"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "6876:4:6",
																					"nodeType": "YulIdentifier",
																					"src": "6876:4:6"
																				},
																				{
																					"arguments": [
																						{
																							"name": "max",
																							"nativeSrc": "6886:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "6886:3:6"
																						},
																						{
																							"name": "base",
																							"nativeSrc": "6891:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "6891:4:6"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nativeSrc": "6882:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "6882:3:6"
																					},
																					"nativeSrc": "6882:14:6",
																					"nodeType": "YulFunctionCall",
																					"src": "6882:14:6"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "6873:2:6",
																				"nodeType": "YulIdentifier",
																				"src": "6873:2:6"
																			},
																			"nativeSrc": "6873:24:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6873:24:6"
																		},
																		"nativeSrc": "6870:50:6",
																		"nodeType": "YulIf",
																		"src": "6870:50:6"
																	},
																	{
																		"body": {
																			"nativeSrc": "6965:419:6",
																			"nodeType": "YulBlock",
																			"src": "6965:419:6",
																			"statements": [
																				{
																					"nativeSrc": "7345:25:6",
																					"nodeType": "YulAssignment",
																					"src": "7345:25:6",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nativeSrc": "7358:5:6",
																								"nodeType": "YulIdentifier",
																								"src": "7358:5:6"
																							},
																							{
																								"name": "base",
																								"nativeSrc": "7365:4:6",
																								"nodeType": "YulIdentifier",
																								"src": "7365:4:6"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nativeSrc": "7354:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "7354:3:6"
																						},
																						"nativeSrc": "7354:16:6",
																						"nodeType": "YulFunctionCall",
																						"src": "7354:16:6"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nativeSrc": "7345:5:6",
																							"nodeType": "YulIdentifier",
																							"src": "7345:5:6"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "6940:8:6",
																					"nodeType": "YulIdentifier",
																					"src": "6940:8:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6950:1:6",
																					"nodeType": "YulLiteral",
																					"src": "6950:1:6",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "6936:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "6936:3:6"
																			},
																			"nativeSrc": "6936:16:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6936:16:6"
																		},
																		"nativeSrc": "6933:451:6",
																		"nodeType": "YulIf",
																		"src": "6933:451:6"
																	},
																	{
																		"nativeSrc": "7397:23:6",
																		"nodeType": "YulAssignment",
																		"src": "7397:23:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "7409:4:6",
																					"nodeType": "YulIdentifier",
																					"src": "7409:4:6"
																				},
																				{
																					"name": "base",
																					"nativeSrc": "7415:4:6",
																					"nodeType": "YulIdentifier",
																					"src": "7415:4:6"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nativeSrc": "7405:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "7405:3:6"
																			},
																			"nativeSrc": "7405:15:6",
																			"nodeType": "YulFunctionCall",
																			"src": "7405:15:6"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nativeSrc": "7397:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "7397:4:6"
																			}
																		]
																	},
																	{
																		"nativeSrc": "7433:44:6",
																		"nodeType": "YulAssignment",
																		"src": "7433:44:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "7468:8:6",
																					"nodeType": "YulIdentifier",
																					"src": "7468:8:6"
																				}
																			],
																			"functionName": {
																				"name": "shift_right_1_unsigned",
																				"nativeSrc": "7445:22:6",
																				"nodeType": "YulIdentifier",
																				"src": "7445:22:6"
																			},
																			"nativeSrc": "7445:32:6",
																			"nodeType": "YulFunctionCall",
																			"src": "7445:32:6"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nativeSrc": "7433:8:6",
																				"nodeType": "YulIdentifier",
																				"src": "7433:8:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "6786:8:6",
																		"nodeType": "YulIdentifier",
																		"src": "6786:8:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6796:1:6",
																		"nodeType": "YulLiteral",
																		"src": "6796:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6783:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "6783:2:6"
																},
																"nativeSrc": "6783:15:6",
																"nodeType": "YulFunctionCall",
																"src": "6783:15:6"
															},
															"nativeSrc": "6775:712:6",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "6799:2:6",
																"nodeType": "YulBlock",
																"src": "6799:2:6",
																"statements": []
															},
															"pre": {
																"nativeSrc": "6779:3:6",
																"nodeType": "YulBlock",
																"src": "6779:3:6",
																"statements": []
															},
															"src": "6775:712:6"
														}
													]
												},
												"name": "checked_exp_helper",
												"nativeSrc": "6645:848:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_power",
														"nativeSrc": "6673:6:6",
														"nodeType": "YulTypedName",
														"src": "6673:6:6",
														"type": ""
													},
													{
														"name": "_base",
														"nativeSrc": "6681:5:6",
														"nodeType": "YulTypedName",
														"src": "6681:5:6",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "6688:8:6",
														"nodeType": "YulTypedName",
														"src": "6688:8:6",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "6698:3:6",
														"nodeType": "YulTypedName",
														"src": "6698:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "6706:5:6",
														"nodeType": "YulTypedName",
														"src": "6706:5:6",
														"type": ""
													},
													{
														"name": "base",
														"nativeSrc": "6713:4:6",
														"nodeType": "YulTypedName",
														"src": "6713:4:6",
														"type": ""
													}
												],
												"src": "6645:848:6"
											},
											{
												"body": {
													"nativeSrc": "7559:1013:6",
													"nodeType": "YulBlock",
													"src": "7559:1013:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "7754:20:6",
																"nodeType": "YulBlock",
																"src": "7754:20:6",
																"statements": [
																	{
																		"nativeSrc": "7756:10:6",
																		"nodeType": "YulAssignment",
																		"src": "7756:10:6",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "7765:1:6",
																			"nodeType": "YulLiteral",
																			"src": "7765:1:6",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "7756:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "7756:5:6"
																			}
																		]
																	},
																	{
																		"nativeSrc": "7767:5:6",
																		"nodeType": "YulLeave",
																		"src": "7767:5:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "7744:8:6",
																		"nodeType": "YulIdentifier",
																		"src": "7744:8:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7737:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7737:6:6"
																},
																"nativeSrc": "7737:16:6",
																"nodeType": "YulFunctionCall",
																"src": "7737:16:6"
															},
															"nativeSrc": "7734:40:6",
															"nodeType": "YulIf",
															"src": "7734:40:6"
														},
														{
															"body": {
																"nativeSrc": "7799:20:6",
																"nodeType": "YulBlock",
																"src": "7799:20:6",
																"statements": [
																	{
																		"nativeSrc": "7801:10:6",
																		"nodeType": "YulAssignment",
																		"src": "7801:10:6",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "7810:1:6",
																			"nodeType": "YulLiteral",
																			"src": "7810:1:6",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "7801:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "7801:5:6"
																			}
																		]
																	},
																	{
																		"nativeSrc": "7812:5:6",
																		"nodeType": "YulLeave",
																		"src": "7812:5:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "7793:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "7793:4:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7786:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7786:6:6"
																},
																"nativeSrc": "7786:12:6",
																"nodeType": "YulFunctionCall",
																"src": "7786:12:6"
															},
															"nativeSrc": "7783:36:6",
															"nodeType": "YulIf",
															"src": "7783:36:6"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "7929:20:6",
																		"nodeType": "YulBlock",
																		"src": "7929:20:6",
																		"statements": [
																			{
																				"nativeSrc": "7931:10:6",
																				"nodeType": "YulAssignment",
																				"src": "7931:10:6",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "7940:1:6",
																					"nodeType": "YulLiteral",
																					"src": "7940:1:6",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "7931:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "7931:5:6"
																					}
																				]
																			},
																			{
																				"nativeSrc": "7942:5:6",
																				"nodeType": "YulLeave",
																				"src": "7942:5:6"
																			}
																		]
																	},
																	"nativeSrc": "7922:27:6",
																	"nodeType": "YulCase",
																	"src": "7922:27:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7927:1:6",
																		"nodeType": "YulLiteral",
																		"src": "7927:1:6",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "7973:176:6",
																		"nodeType": "YulBlock",
																		"src": "7973:176:6",
																		"statements": [
																			{
																				"body": {
																					"nativeSrc": "8008:22:6",
																					"nodeType": "YulBlock",
																					"src": "8008:22:6",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "8010:16:6",
																									"nodeType": "YulIdentifier",
																									"src": "8010:16:6"
																								},
																								"nativeSrc": "8010:18:6",
																								"nodeType": "YulFunctionCall",
																								"src": "8010:18:6"
																							},
																							"nativeSrc": "8010:18:6",
																							"nodeType": "YulExpressionStatement",
																							"src": "8010:18:6"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "7993:8:6",
																							"nodeType": "YulIdentifier",
																							"src": "7993:8:6"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "8003:3:6",
																							"nodeType": "YulLiteral",
																							"src": "8003:3:6",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "7990:2:6",
																						"nodeType": "YulIdentifier",
																						"src": "7990:2:6"
																					},
																					"nativeSrc": "7990:17:6",
																					"nodeType": "YulFunctionCall",
																					"src": "7990:17:6"
																				},
																				"nativeSrc": "7987:43:6",
																				"nodeType": "YulIf",
																				"src": "7987:43:6"
																			},
																			{
																				"nativeSrc": "8043:25:6",
																				"nodeType": "YulAssignment",
																				"src": "8043:25:6",
																				"value": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "8056:1:6",
																							"nodeType": "YulLiteral",
																							"src": "8056:1:6",
																							"type": "",
																							"value": "2"
																						},
																						{
																							"name": "exponent",
																							"nativeSrc": "8059:8:6",
																							"nodeType": "YulIdentifier",
																							"src": "8059:8:6"
																						}
																					],
																					"functionName": {
																						"name": "exp",
																						"nativeSrc": "8052:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "8052:3:6"
																					},
																					"nativeSrc": "8052:16:6",
																					"nodeType": "YulFunctionCall",
																					"src": "8052:16:6"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "8043:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "8043:5:6"
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "8099:22:6",
																					"nodeType": "YulBlock",
																					"src": "8099:22:6",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "8101:16:6",
																									"nodeType": "YulIdentifier",
																									"src": "8101:16:6"
																								},
																								"nativeSrc": "8101:18:6",
																								"nodeType": "YulFunctionCall",
																								"src": "8101:18:6"
																							},
																							"nativeSrc": "8101:18:6",
																							"nodeType": "YulExpressionStatement",
																							"src": "8101:18:6"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "power",
																							"nativeSrc": "8087:5:6",
																							"nodeType": "YulIdentifier",
																							"src": "8087:5:6"
																						},
																						{
																							"name": "max",
																							"nativeSrc": "8094:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "8094:3:6"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "8084:2:6",
																						"nodeType": "YulIdentifier",
																						"src": "8084:2:6"
																					},
																					"nativeSrc": "8084:14:6",
																					"nodeType": "YulFunctionCall",
																					"src": "8084:14:6"
																				},
																				"nativeSrc": "8081:40:6",
																				"nodeType": "YulIf",
																				"src": "8081:40:6"
																			},
																			{
																				"nativeSrc": "8134:5:6",
																				"nodeType": "YulLeave",
																				"src": "8134:5:6"
																			}
																		]
																	},
																	"nativeSrc": "7958:191:6",
																	"nodeType": "YulCase",
																	"src": "7958:191:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7963:1:6",
																		"nodeType": "YulLiteral",
																		"src": "7963:1:6",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nativeSrc": "7879:4:6",
																"nodeType": "YulIdentifier",
																"src": "7879:4:6"
															},
															"nativeSrc": "7872:277:6",
															"nodeType": "YulSwitch",
															"src": "7872:277:6"
														},
														{
															"body": {
																"nativeSrc": "8281:123:6",
																"nodeType": "YulBlock",
																"src": "8281:123:6",
																"statements": [
																	{
																		"nativeSrc": "8295:28:6",
																		"nodeType": "YulAssignment",
																		"src": "8295:28:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "8308:4:6",
																					"nodeType": "YulIdentifier",
																					"src": "8308:4:6"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "8314:8:6",
																					"nodeType": "YulIdentifier",
																					"src": "8314:8:6"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nativeSrc": "8304:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "8304:3:6"
																			},
																			"nativeSrc": "8304:19:6",
																			"nodeType": "YulFunctionCall",
																			"src": "8304:19:6"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "8295:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "8295:5:6"
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "8354:22:6",
																			"nodeType": "YulBlock",
																			"src": "8354:22:6",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "8356:16:6",
																							"nodeType": "YulIdentifier",
																							"src": "8356:16:6"
																						},
																						"nativeSrc": "8356:18:6",
																						"nodeType": "YulFunctionCall",
																						"src": "8356:18:6"
																					},
																					"nativeSrc": "8356:18:6",
																					"nodeType": "YulExpressionStatement",
																					"src": "8356:18:6"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "power",
																					"nativeSrc": "8342:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "8342:5:6"
																				},
																				{
																					"name": "max",
																					"nativeSrc": "8349:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "8349:3:6"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "8339:2:6",
																				"nodeType": "YulIdentifier",
																				"src": "8339:2:6"
																			},
																			"nativeSrc": "8339:14:6",
																			"nodeType": "YulFunctionCall",
																			"src": "8339:14:6"
																		},
																		"nativeSrc": "8336:40:6",
																		"nodeType": "YulIf",
																		"src": "8336:40:6"
																	},
																	{
																		"nativeSrc": "8389:5:6",
																		"nodeType": "YulLeave",
																		"src": "8389:5:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "8184:4:6",
																						"nodeType": "YulIdentifier",
																						"src": "8184:4:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8190:2:6",
																						"nodeType": "YulLiteral",
																						"src": "8190:2:6",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "8181:2:6",
																					"nodeType": "YulIdentifier",
																					"src": "8181:2:6"
																				},
																				"nativeSrc": "8181:12:6",
																				"nodeType": "YulFunctionCall",
																				"src": "8181:12:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "8198:8:6",
																						"nodeType": "YulIdentifier",
																						"src": "8198:8:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8208:2:6",
																						"nodeType": "YulLiteral",
																						"src": "8208:2:6",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "8195:2:6",
																					"nodeType": "YulIdentifier",
																					"src": "8195:2:6"
																				},
																				"nativeSrc": "8195:16:6",
																				"nodeType": "YulFunctionCall",
																				"src": "8195:16:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "8177:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8177:3:6"
																		},
																		"nativeSrc": "8177:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8177:35:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "8233:4:6",
																						"nodeType": "YulIdentifier",
																						"src": "8233:4:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8239:3:6",
																						"nodeType": "YulLiteral",
																						"src": "8239:3:6",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "8230:2:6",
																					"nodeType": "YulIdentifier",
																					"src": "8230:2:6"
																				},
																				"nativeSrc": "8230:13:6",
																				"nodeType": "YulFunctionCall",
																				"src": "8230:13:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "8248:8:6",
																						"nodeType": "YulIdentifier",
																						"src": "8248:8:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8258:2:6",
																						"nodeType": "YulLiteral",
																						"src": "8258:2:6",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "8245:2:6",
																					"nodeType": "YulIdentifier",
																					"src": "8245:2:6"
																				},
																				"nativeSrc": "8245:16:6",
																				"nodeType": "YulFunctionCall",
																				"src": "8245:16:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "8226:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8226:3:6"
																		},
																		"nativeSrc": "8226:36:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8226:36:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "8161:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "8161:2:6"
																},
																"nativeSrc": "8161:111:6",
																"nodeType": "YulFunctionCall",
																"src": "8161:111:6"
															},
															"nativeSrc": "8158:246:6",
															"nodeType": "YulIf",
															"src": "8158:246:6"
														},
														{
															"nativeSrc": "8414:57:6",
															"nodeType": "YulAssignment",
															"src": "8414:57:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8448:1:6",
																		"nodeType": "YulLiteral",
																		"src": "8448:1:6",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "8451:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "8451:4:6"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "8457:8:6",
																		"nodeType": "YulIdentifier",
																		"src": "8457:8:6"
																	},
																	{
																		"name": "max",
																		"nativeSrc": "8467:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "8467:3:6"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nativeSrc": "8429:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "8429:18:6"
																},
																"nativeSrc": "8429:42:6",
																"nodeType": "YulFunctionCall",
																"src": "8429:42:6"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "8414:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "8414:5:6"
																},
																{
																	"name": "base",
																	"nativeSrc": "8421:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "8421:4:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8510:22:6",
																"nodeType": "YulBlock",
																"src": "8510:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8512:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "8512:16:6"
																			},
																			"nativeSrc": "8512:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "8512:18:6"
																		},
																		"nativeSrc": "8512:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "8512:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "8487:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "8487:5:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "max",
																				"nativeSrc": "8498:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "8498:3:6"
																			},
																			{
																				"name": "base",
																				"nativeSrc": "8503:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "8503:4:6"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "8494:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8494:3:6"
																		},
																		"nativeSrc": "8494:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8494:14:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8484:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "8484:2:6"
																},
																"nativeSrc": "8484:25:6",
																"nodeType": "YulFunctionCall",
																"src": "8484:25:6"
															},
															"nativeSrc": "8481:51:6",
															"nodeType": "YulIf",
															"src": "8481:51:6"
														},
														{
															"nativeSrc": "8541:25:6",
															"nodeType": "YulAssignment",
															"src": "8541:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "8554:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "8554:5:6"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "8561:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "8561:4:6"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "8550:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8550:3:6"
																},
																"nativeSrc": "8550:16:6",
																"nodeType": "YulFunctionCall",
																"src": "8550:16:6"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "8541:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "8541:5:6"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nativeSrc": "7499:1073:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "7529:4:6",
														"nodeType": "YulTypedName",
														"src": "7529:4:6",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "7535:8:6",
														"nodeType": "YulTypedName",
														"src": "7535:8:6",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "7545:3:6",
														"nodeType": "YulTypedName",
														"src": "7545:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "7553:5:6",
														"nodeType": "YulTypedName",
														"src": "7553:5:6",
														"type": ""
													}
												],
												"src": "7499:1073:6"
											},
											{
												"body": {
													"nativeSrc": "8621:43:6",
													"nodeType": "YulBlock",
													"src": "8621:43:6",
													"statements": [
														{
															"nativeSrc": "8631:27:6",
															"nodeType": "YulAssignment",
															"src": "8631:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8646:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "8646:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8653:4:6",
																		"nodeType": "YulLiteral",
																		"src": "8653:4:6",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "8642:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8642:3:6"
																},
																"nativeSrc": "8642:16:6",
																"nodeType": "YulFunctionCall",
																"src": "8642:16:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "8631:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "8631:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "8578:86:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8603:5:6",
														"nodeType": "YulTypedName",
														"src": "8603:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "8613:7:6",
														"nodeType": "YulTypedName",
														"src": "8613:7:6",
														"type": ""
													}
												],
												"src": "8578:86:6"
											},
											{
												"body": {
													"nativeSrc": "8734:217:6",
													"nodeType": "YulBlock",
													"src": "8734:217:6",
													"statements": [
														{
															"nativeSrc": "8744:31:6",
															"nodeType": "YulAssignment",
															"src": "8744:31:6",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "8770:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "8770:4:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8752:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "8752:17:6"
																},
																"nativeSrc": "8752:23:6",
																"nodeType": "YulFunctionCall",
																"src": "8752:23:6"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "8744:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "8744:4:6"
																}
															]
														},
														{
															"nativeSrc": "8784:37:6",
															"nodeType": "YulAssignment",
															"src": "8784:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "8812:8:6",
																		"nodeType": "YulIdentifier",
																		"src": "8812:8:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nativeSrc": "8796:15:6",
																	"nodeType": "YulIdentifier",
																	"src": "8796:15:6"
																},
																"nativeSrc": "8796:25:6",
																"nodeType": "YulFunctionCall",
																"src": "8796:25:6"
															},
															"variableNames": [
																{
																	"name": "exponent",
																	"nativeSrc": "8784:8:6",
																	"nodeType": "YulIdentifier",
																	"src": "8784:8:6"
																}
															]
														},
														{
															"nativeSrc": "8831:113:6",
															"nodeType": "YulAssignment",
															"src": "8831:113:6",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "8861:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "8861:4:6"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "8867:8:6",
																		"nodeType": "YulIdentifier",
																		"src": "8867:8:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8877:66:6",
																		"nodeType": "YulLiteral",
																		"src": "8877:66:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nativeSrc": "8840:20:6",
																	"nodeType": "YulIdentifier",
																	"src": "8840:20:6"
																},
																"nativeSrc": "8840:104:6",
																"nodeType": "YulFunctionCall",
																"src": "8840:104:6"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "8831:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "8831:5:6"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint8",
												"nativeSrc": "8670:281:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "8709:4:6",
														"nodeType": "YulTypedName",
														"src": "8709:4:6",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "8715:8:6",
														"nodeType": "YulTypedName",
														"src": "8715:8:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "8728:5:6",
														"nodeType": "YulTypedName",
														"src": "8728:5:6",
														"type": ""
													}
												],
												"src": "8670:281:6"
											},
											{
												"body": {
													"nativeSrc": "9005:362:6",
													"nodeType": "YulBlock",
													"src": "9005:362:6",
													"statements": [
														{
															"nativeSrc": "9015:25:6",
															"nodeType": "YulAssignment",
															"src": "9015:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9038:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "9038:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9020:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "9020:17:6"
																},
																"nativeSrc": "9020:20:6",
																"nodeType": "YulFunctionCall",
																"src": "9020:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "9015:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "9015:1:6"
																}
															]
														},
														{
															"nativeSrc": "9049:25:6",
															"nodeType": "YulAssignment",
															"src": "9049:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9072:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "9072:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9054:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "9054:17:6"
																},
																"nativeSrc": "9054:20:6",
																"nodeType": "YulFunctionCall",
																"src": "9054:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "9049:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "9049:1:6"
																}
															]
														},
														{
															"nativeSrc": "9083:28:6",
															"nodeType": "YulVariableDeclaration",
															"src": "9083:28:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9106:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "9106:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9109:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "9109:1:6"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "9102:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9102:3:6"
																},
																"nativeSrc": "9102:9:6",
																"nodeType": "YulFunctionCall",
																"src": "9102:9:6"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "9087:11:6",
																	"nodeType": "YulTypedName",
																	"src": "9087:11:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "9120:41:6",
															"nodeType": "YulAssignment",
															"src": "9120:41:6",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "9149:11:6",
																		"nodeType": "YulIdentifier",
																		"src": "9149:11:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9131:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "9131:17:6"
																},
																"nativeSrc": "9131:30:6",
																"nodeType": "YulFunctionCall",
																"src": "9131:30:6"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "9120:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "9120:7:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9338:22:6",
																"nodeType": "YulBlock",
																"src": "9338:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9340:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "9340:16:6"
																			},
																			"nativeSrc": "9340:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "9340:18:6"
																		},
																		"nativeSrc": "9340:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "9340:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "9271:1:6",
																						"nodeType": "YulIdentifier",
																						"src": "9271:1:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "9264:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "9264:6:6"
																				},
																				"nativeSrc": "9264:9:6",
																				"nodeType": "YulFunctionCall",
																				"src": "9264:9:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "9294:1:6",
																						"nodeType": "YulIdentifier",
																						"src": "9294:1:6"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "9301:7:6",
																								"nodeType": "YulIdentifier",
																								"src": "9301:7:6"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "9310:1:6",
																								"nodeType": "YulIdentifier",
																								"src": "9310:1:6"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "9297:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "9297:3:6"
																						},
																						"nativeSrc": "9297:15:6",
																						"nodeType": "YulFunctionCall",
																						"src": "9297:15:6"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "9291:2:6",
																					"nodeType": "YulIdentifier",
																					"src": "9291:2:6"
																				},
																				"nativeSrc": "9291:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "9291:22:6"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "9244:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "9244:2:6"
																		},
																		"nativeSrc": "9244:83:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9244:83:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9224:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9224:6:6"
																},
																"nativeSrc": "9224:113:6",
																"nodeType": "YulFunctionCall",
																"src": "9224:113:6"
															},
															"nativeSrc": "9221:139:6",
															"nodeType": "YulIf",
															"src": "9221:139:6"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "8957:410:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8988:1:6",
														"nodeType": "YulTypedName",
														"src": "8988:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8991:1:6",
														"nodeType": "YulTypedName",
														"src": "8991:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "8997:7:6",
														"nodeType": "YulTypedName",
														"src": "8997:7:6",
														"type": ""
													}
												],
												"src": "8957:410:6"
											},
											{
												"body": {
													"nativeSrc": "9417:147:6",
													"nodeType": "YulBlock",
													"src": "9417:147:6",
													"statements": [
														{
															"nativeSrc": "9427:25:6",
															"nodeType": "YulAssignment",
															"src": "9427:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9450:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "9450:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9432:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "9432:17:6"
																},
																"nativeSrc": "9432:20:6",
																"nodeType": "YulFunctionCall",
																"src": "9432:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "9427:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "9427:1:6"
																}
															]
														},
														{
															"nativeSrc": "9461:25:6",
															"nodeType": "YulAssignment",
															"src": "9461:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9484:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "9484:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9466:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "9466:17:6"
																},
																"nativeSrc": "9466:20:6",
																"nodeType": "YulFunctionCall",
																"src": "9466:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "9461:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "9461:1:6"
																}
															]
														},
														{
															"nativeSrc": "9495:16:6",
															"nodeType": "YulAssignment",
															"src": "9495:16:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9506:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "9506:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9509:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "9509:1:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9502:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9502:3:6"
																},
																"nativeSrc": "9502:9:6",
																"nodeType": "YulFunctionCall",
																"src": "9502:9:6"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "9495:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9495:3:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9535:22:6",
																"nodeType": "YulBlock",
																"src": "9535:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9537:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "9537:16:6"
																			},
																			"nativeSrc": "9537:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "9537:18:6"
																		},
																		"nativeSrc": "9537:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "9537:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9527:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "9527:1:6"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "9530:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "9530:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9524:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "9524:2:6"
																},
																"nativeSrc": "9524:10:6",
																"nodeType": "YulFunctionCall",
																"src": "9524:10:6"
															},
															"nativeSrc": "9521:36:6",
															"nodeType": "YulIf",
															"src": "9521:36:6"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "9373:191:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9404:1:6",
														"nodeType": "YulTypedName",
														"src": "9404:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9407:1:6",
														"nodeType": "YulTypedName",
														"src": "9407:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "9413:3:6",
														"nodeType": "YulTypedName",
														"src": "9413:3:6",
														"type": ""
													}
												],
												"src": "9373:191:6"
											},
											{
												"body": {
													"nativeSrc": "9615:81:6",
													"nodeType": "YulBlock",
													"src": "9615:81:6",
													"statements": [
														{
															"nativeSrc": "9625:65:6",
															"nodeType": "YulAssignment",
															"src": "9625:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9640:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "9640:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9647:42:6",
																		"nodeType": "YulLiteral",
																		"src": "9647:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "9636:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9636:3:6"
																},
																"nativeSrc": "9636:54:6",
																"nodeType": "YulFunctionCall",
																"src": "9636:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "9625:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "9625:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "9570:126:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9597:5:6",
														"nodeType": "YulTypedName",
														"src": "9597:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "9607:7:6",
														"nodeType": "YulTypedName",
														"src": "9607:7:6",
														"type": ""
													}
												],
												"src": "9570:126:6"
											},
											{
												"body": {
													"nativeSrc": "9747:51:6",
													"nodeType": "YulBlock",
													"src": "9747:51:6",
													"statements": [
														{
															"nativeSrc": "9757:35:6",
															"nodeType": "YulAssignment",
															"src": "9757:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9786:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "9786:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "9768:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "9768:17:6"
																},
																"nativeSrc": "9768:24:6",
																"nodeType": "YulFunctionCall",
																"src": "9768:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "9757:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "9757:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "9702:96:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9729:5:6",
														"nodeType": "YulTypedName",
														"src": "9729:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "9739:7:6",
														"nodeType": "YulTypedName",
														"src": "9739:7:6",
														"type": ""
													}
												],
												"src": "9702:96:6"
											},
											{
												"body": {
													"nativeSrc": "9869:53:6",
													"nodeType": "YulBlock",
													"src": "9869:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9886:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "9886:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9909:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "9909:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "9891:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "9891:17:6"
																		},
																		"nativeSrc": "9891:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9891:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9879:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9879:6:6"
																},
																"nativeSrc": "9879:37:6",
																"nodeType": "YulFunctionCall",
																"src": "9879:37:6"
															},
															"nativeSrc": "9879:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "9879:37:6"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "9804:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9857:5:6",
														"nodeType": "YulTypedName",
														"src": "9857:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9864:3:6",
														"nodeType": "YulTypedName",
														"src": "9864:3:6",
														"type": ""
													}
												],
												"src": "9804:118:6"
											},
											{
												"body": {
													"nativeSrc": "10026:124:6",
													"nodeType": "YulBlock",
													"src": "10026:124:6",
													"statements": [
														{
															"nativeSrc": "10036:26:6",
															"nodeType": "YulAssignment",
															"src": "10036:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10048:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "10048:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10059:2:6",
																		"nodeType": "YulLiteral",
																		"src": "10059:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10044:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "10044:3:6"
																},
																"nativeSrc": "10044:18:6",
																"nodeType": "YulFunctionCall",
																"src": "10044:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10036:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "10036:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10116:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "10116:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10129:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "10129:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10140:1:6",
																				"nodeType": "YulLiteral",
																				"src": "10140:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10125:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "10125:3:6"
																		},
																		"nativeSrc": "10125:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10125:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "10072:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "10072:43:6"
																},
																"nativeSrc": "10072:71:6",
																"nodeType": "YulFunctionCall",
																"src": "10072:71:6"
															},
															"nativeSrc": "10072:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "10072:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "9928:222:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9998:9:6",
														"nodeType": "YulTypedName",
														"src": "9998:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10010:6:6",
														"nodeType": "YulTypedName",
														"src": "10010:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10021:4:6",
														"nodeType": "YulTypedName",
														"src": "10021:4:6",
														"type": ""
													}
												],
												"src": "9928:222:6"
											},
											{
												"body": {
													"nativeSrc": "10221:53:6",
													"nodeType": "YulBlock",
													"src": "10221:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10238:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "10238:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10261:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "10261:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "10243:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "10243:17:6"
																		},
																		"nativeSrc": "10243:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10243:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10231:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "10231:6:6"
																},
																"nativeSrc": "10231:37:6",
																"nodeType": "YulFunctionCall",
																"src": "10231:37:6"
															},
															"nativeSrc": "10231:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "10231:37:6"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "10156:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10209:5:6",
														"nodeType": "YulTypedName",
														"src": "10209:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "10216:3:6",
														"nodeType": "YulTypedName",
														"src": "10216:3:6",
														"type": ""
													}
												],
												"src": "10156:118:6"
											},
											{
												"body": {
													"nativeSrc": "10434:288:6",
													"nodeType": "YulBlock",
													"src": "10434:288:6",
													"statements": [
														{
															"nativeSrc": "10444:26:6",
															"nodeType": "YulAssignment",
															"src": "10444:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10456:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "10456:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10467:2:6",
																		"nodeType": "YulLiteral",
																		"src": "10467:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10452:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "10452:3:6"
																},
																"nativeSrc": "10452:18:6",
																"nodeType": "YulFunctionCall",
																"src": "10452:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10444:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "10444:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10524:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "10524:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10537:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "10537:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10548:1:6",
																				"nodeType": "YulLiteral",
																				"src": "10548:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10533:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "10533:3:6"
																		},
																		"nativeSrc": "10533:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10533:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "10480:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "10480:43:6"
																},
																"nativeSrc": "10480:71:6",
																"nodeType": "YulFunctionCall",
																"src": "10480:71:6"
															},
															"nativeSrc": "10480:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "10480:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "10605:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "10605:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10618:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "10618:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10629:2:6",
																				"nodeType": "YulLiteral",
																				"src": "10629:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10614:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "10614:3:6"
																		},
																		"nativeSrc": "10614:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10614:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10561:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "10561:43:6"
																},
																"nativeSrc": "10561:72:6",
																"nodeType": "YulFunctionCall",
																"src": "10561:72:6"
															},
															"nativeSrc": "10561:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "10561:72:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "10687:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "10687:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10700:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "10700:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10711:2:6",
																				"nodeType": "YulLiteral",
																				"src": "10711:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10696:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "10696:3:6"
																		},
																		"nativeSrc": "10696:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10696:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10643:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "10643:43:6"
																},
																"nativeSrc": "10643:72:6",
																"nodeType": "YulFunctionCall",
																"src": "10643:72:6"
															},
															"nativeSrc": "10643:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "10643:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "10280:442:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10390:9:6",
														"nodeType": "YulTypedName",
														"src": "10390:9:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "10402:6:6",
														"nodeType": "YulTypedName",
														"src": "10402:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10410:6:6",
														"nodeType": "YulTypedName",
														"src": "10410:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10418:6:6",
														"nodeType": "YulTypedName",
														"src": "10418:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10429:4:6",
														"nodeType": "YulTypedName",
														"src": "10429:4:6",
														"type": ""
													}
												],
												"src": "10280:442:6"
											},
											{
												"body": {
													"nativeSrc": "10826:124:6",
													"nodeType": "YulBlock",
													"src": "10826:124:6",
													"statements": [
														{
															"nativeSrc": "10836:26:6",
															"nodeType": "YulAssignment",
															"src": "10836:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10848:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "10848:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10859:2:6",
																		"nodeType": "YulLiteral",
																		"src": "10859:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10844:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "10844:3:6"
																},
																"nativeSrc": "10844:18:6",
																"nodeType": "YulFunctionCall",
																"src": "10844:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10836:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "10836:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10916:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "10916:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10929:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "10929:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10940:1:6",
																				"nodeType": "YulLiteral",
																				"src": "10940:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10925:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "10925:3:6"
																		},
																		"nativeSrc": "10925:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10925:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10872:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "10872:43:6"
																},
																"nativeSrc": "10872:71:6",
																"nodeType": "YulFunctionCall",
																"src": "10872:71:6"
															},
															"nativeSrc": "10872:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "10872:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "10728:222:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10798:9:6",
														"nodeType": "YulTypedName",
														"src": "10798:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10810:6:6",
														"nodeType": "YulTypedName",
														"src": "10810:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10821:4:6",
														"nodeType": "YulTypedName",
														"src": "10821:4:6",
														"type": ""
													}
												],
												"src": "10728:222:6"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint8(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060405161195f38038061195f833981810160405281019061003191906103e9565b6040518060400160405280600f81526020017f54696d654c6f636b6564546f6b656e00000000000000000000000000000000008152506040518060400160405280600381526020017f544c54000000000000000000000000000000000000000000000000000000000081525081600390816100ac9190610658565b5080600490816100bc9190610658565b5050506100f3336100d161010c60201b60201c565b600a6100dd919061088f565b846100e891906108d9565b61011460201b60201c565b80426100ff919061091a565b6005819055505050610a02565b5f6012905090565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610184575f6040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161017b919061098c565b60405180910390fd5b6101955f838361019960201b60201c565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036101e9578060025f8282546101dd919061091a565b925050819055506102b7565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610272578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610269939291906109b4565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036102fe578060025f8282540392505081905550610348565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516103a591906109e9565b60405180910390a3505050565b5f80fd5b5f819050919050565b6103c8816103b6565b81146103d2575f80fd5b50565b5f815190506103e3816103bf565b92915050565b5f80604083850312156103ff576103fe6103b2565b5b5f61040c858286016103d5565b925050602061041d858286016103d5565b9150509250929050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806104a257607f821691505b6020821081036104b5576104b461045e565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026105177fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826104dc565b61052186836104dc565b95508019841693508086168417925050509392505050565b5f819050919050565b5f61055c610557610552846103b6565b610539565b6103b6565b9050919050565b5f819050919050565b61057583610542565b61058961058182610563565b8484546104e8565b825550505050565b5f90565b61059d610591565b6105a881848461056c565b505050565b5b818110156105cb576105c05f82610595565b6001810190506105ae565b5050565b601f821115610610576105e1816104bb565b6105ea846104cd565b810160208510156105f9578190505b61060d610605856104cd565b8301826105ad565b50505b505050565b5f82821c905092915050565b5f6106305f1984600802610615565b1980831691505092915050565b5f6106488383610621565b9150826002028217905092915050565b61066182610427565b67ffffffffffffffff81111561067a57610679610431565b5b610684825461048b565b61068f8282856105cf565b5f60209050601f8311600181146106c0575f84156106ae578287015190505b6106b8858261063d565b86555061071f565b601f1984166106ce866104bb565b5f5b828110156106f5578489015182556001820191506020850194506020810190506106d0565b86831015610712578489015161070e601f891682610621565b8355505b6001600288020188555050505b505050505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f8160011c9050919050565b5f808291508390505b60018511156107a95780860481111561078557610784610727565b5b60018516156107945780820291505b80810290506107a285610754565b9450610769565b94509492505050565b5f826107c1576001905061087c565b816107ce575f905061087c565b81600181146107e457600281146107ee5761081d565b600191505061087c565b60ff841115610800576107ff610727565b5b8360020a91508482111561081757610816610727565b5b5061087c565b5060208310610133831016604e8410600b84101617156108525782820a90508381111561084d5761084c610727565b5b61087c565b61085f8484846001610760565b9250905081840481111561087657610875610727565b5b81810290505b9392505050565b5f60ff82169050919050565b5f610899826103b6565b91506108a483610883565b92506108d17fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff84846107b2565b905092915050565b5f6108e3826103b6565b91506108ee836103b6565b92508282026108fc816103b6565b9150828204841483151761091357610912610727565b5b5092915050565b5f610924826103b6565b915061092f836103b6565b925082820190508082111561094757610946610727565b5b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6109768261094d565b9050919050565b6109868161096c565b82525050565b5f60208201905061099f5f83018461097d565b92915050565b6109ae816103b6565b82525050565b5f6060820190506109c75f83018661097d565b6109d460208301856109a5565b6109e160408301846109a5565b949350505050565b5f6020820190506109fc5f8301846109a5565b92915050565b610f5080610a0f5f395ff3fe608060405234801561000f575f80fd5b506004361061009c575f3560e01c8063313ce56711610064578063313ce5671461015a57806370a082311461017857806395d89b41146101a8578063a9059cbb146101c6578063dd62ed3e146101f65761009c565b806306fdde03146100a0578063095ea7b3146100be57806318160ddd146100ee57806323b872dd1461010c578063251c1aa31461013c575b5f80fd5b6100a8610226565b6040516100b59190610b3b565b60405180910390f35b6100d860048036038101906100d39190610bec565b6102b6565b6040516100e59190610c44565b60405180910390f35b6100f66102d8565b6040516101039190610c6c565b60405180910390f35b61012660048036038101906101219190610c85565b6102e1565b6040516101339190610c44565b60405180910390f35b61014461033b565b6040516101519190610c6c565b60405180910390f35b610162610341565b60405161016f9190610cf0565b60405180910390f35b610192600480360381019061018d9190610d09565b610349565b60405161019f9190610c6c565b60405180910390f35b6101b061038e565b6040516101bd9190610b3b565b60405180910390f35b6101e060048036038101906101db9190610bec565b61041e565b6040516101ed9190610c44565b60405180910390f35b610210600480360381019061020b9190610d34565b610476565b60405161021d9190610c6c565b60405180910390f35b60606003805461023590610d9f565b80601f016020809104026020016040519081016040528092919081815260200182805461026190610d9f565b80156102ac5780601f10610283576101008083540402835291602001916102ac565b820191905f5260205f20905b81548152906001019060200180831161028f57829003601f168201915b5050505050905090565b5f806102c06104f8565b90506102cd8185856104ff565b600191505092915050565b5f600254905090565b5f600554421015610327576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161031e90610e3f565b60405180910390fd5b610332848484610511565b90509392505050565b60055481565b5f6012905090565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b60606004805461039d90610d9f565b80601f01602080910402602001604051908101604052809291908181526020018280546103c990610d9f565b80156104145780601f106103eb57610100808354040283529160200191610414565b820191905f5260205f20905b8154815290600101906020018083116103f757829003601f168201915b5050505050905090565b5f600554421015610464576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161045b90610e3f565b60405180910390fd5b61046e838361053f565b905092915050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f33905090565b61050c8383836001610561565b505050565b5f8061051b6104f8565b9050610528858285610730565b6105338585856107c2565b60019150509392505050565b5f806105496104f8565b90506105568185856107c2565b600191505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036105d1575f6040517fe602df050000000000000000000000000000000000000000000000000000000081526004016105c89190610e6c565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610641575f6040517f94280d620000000000000000000000000000000000000000000000000000000081526004016106389190610e6c565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550801561072a578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516107219190610c6c565b60405180910390a35b50505050565b5f61073b8484610476565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146107bc57818110156107ad578281836040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526004016107a493929190610e85565b60405180910390fd5b6107bb84848484035f610561565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610832575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016108299190610e6c565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036108a2575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016108999190610e6c565b60405180910390fd5b6108ad8383836108b2565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610902578060025f8282546108f69190610ee7565b925050819055506109d0565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490508181101561098b578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161098293929190610e85565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a17578060025f8282540392505081905550610a61565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610abe9190610c6c565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f610b0d82610acb565b610b178185610ad5565b9350610b27818560208601610ae5565b610b3081610af3565b840191505092915050565b5f6020820190508181035f830152610b538184610b03565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610b8882610b5f565b9050919050565b610b9881610b7e565b8114610ba2575f80fd5b50565b5f81359050610bb381610b8f565b92915050565b5f819050919050565b610bcb81610bb9565b8114610bd5575f80fd5b50565b5f81359050610be681610bc2565b92915050565b5f8060408385031215610c0257610c01610b5b565b5b5f610c0f85828601610ba5565b9250506020610c2085828601610bd8565b9150509250929050565b5f8115159050919050565b610c3e81610c2a565b82525050565b5f602082019050610c575f830184610c35565b92915050565b610c6681610bb9565b82525050565b5f602082019050610c7f5f830184610c5d565b92915050565b5f805f60608486031215610c9c57610c9b610b5b565b5b5f610ca986828701610ba5565b9350506020610cba86828701610ba5565b9250506040610ccb86828701610bd8565b9150509250925092565b5f60ff82169050919050565b610cea81610cd5565b82525050565b5f602082019050610d035f830184610ce1565b92915050565b5f60208284031215610d1e57610d1d610b5b565b5b5f610d2b84828501610ba5565b91505092915050565b5f8060408385031215610d4a57610d49610b5b565b5b5f610d5785828601610ba5565b9250506020610d6885828601610ba5565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680610db657607f821691505b602082108103610dc957610dc8610d72565b5b50919050565b7f546f6b656e7320617265206c6f636b656420756e74696c2074686520756e6c6f5f8201527f636b2074696d6520686173207061737365640000000000000000000000000000602082015250565b5f610e29603283610ad5565b9150610e3482610dcf565b604082019050919050565b5f6020820190508181035f830152610e5681610e1d565b9050919050565b610e6681610b7e565b82525050565b5f602082019050610e7f5f830184610e5d565b92915050565b5f606082019050610e985f830186610e5d565b610ea56020830185610c5d565b610eb26040830184610c5d565b949350505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610ef182610bb9565b9150610efc83610bb9565b9250828201905080821115610f1457610f13610eba565b5b9291505056fea26469706673582212203933eee64e931878bddd6c48dcb998b12d0280746a0b35e39e0a03f80703c21064736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x195F CODESIZE SUB DUP1 PUSH2 0x195F DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x3E9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xF DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x54696D654C6F636B6564546F6B656E0000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x544C540000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0xAC SWAP2 SWAP1 PUSH2 0x658 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0xBC SWAP2 SWAP1 PUSH2 0x658 JUMP JUMPDEST POP POP POP PUSH2 0xF3 CALLER PUSH2 0xD1 PUSH2 0x10C PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0xA PUSH2 0xDD SWAP2 SWAP1 PUSH2 0x88F JUMP JUMPDEST DUP5 PUSH2 0xE8 SWAP2 SWAP1 PUSH2 0x8D9 JUMP JUMPDEST PUSH2 0x114 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP1 TIMESTAMP PUSH2 0xFF SWAP2 SWAP1 PUSH2 0x91A JUMP JUMPDEST PUSH1 0x5 DUP2 SWAP1 SSTORE POP POP POP PUSH2 0xA02 JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x184 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17B SWAP2 SWAP1 PUSH2 0x98C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x195 PUSH0 DUP4 DUP4 PUSH2 0x199 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1E9 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0x91A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x2B7 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x272 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x269 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x9B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2FE JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x348 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x3A5 SWAP2 SWAP1 PUSH2 0x9E9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3C8 DUP2 PUSH2 0x3B6 JUMP JUMPDEST DUP2 EQ PUSH2 0x3D2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x3E3 DUP2 PUSH2 0x3BF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3FF JUMPI PUSH2 0x3FE PUSH2 0x3B2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x40C DUP6 DUP3 DUP7 ADD PUSH2 0x3D5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x41D DUP6 DUP3 DUP7 ADD PUSH2 0x3D5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x4A2 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x4B5 JUMPI PUSH2 0x4B4 PUSH2 0x45E JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x517 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x4DC JUMP JUMPDEST PUSH2 0x521 DUP7 DUP4 PUSH2 0x4DC JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x55C PUSH2 0x557 PUSH2 0x552 DUP5 PUSH2 0x3B6 JUMP JUMPDEST PUSH2 0x539 JUMP JUMPDEST PUSH2 0x3B6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x575 DUP4 PUSH2 0x542 JUMP JUMPDEST PUSH2 0x589 PUSH2 0x581 DUP3 PUSH2 0x563 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x4E8 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x59D PUSH2 0x591 JUMP JUMPDEST PUSH2 0x5A8 DUP2 DUP5 DUP5 PUSH2 0x56C JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x5CB JUMPI PUSH2 0x5C0 PUSH0 DUP3 PUSH2 0x595 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x5AE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x610 JUMPI PUSH2 0x5E1 DUP2 PUSH2 0x4BB JUMP JUMPDEST PUSH2 0x5EA DUP5 PUSH2 0x4CD JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x5F9 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x60D PUSH2 0x605 DUP6 PUSH2 0x4CD JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x5AD JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x630 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x615 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x648 DUP4 DUP4 PUSH2 0x621 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x661 DUP3 PUSH2 0x427 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x67A JUMPI PUSH2 0x679 PUSH2 0x431 JUMP JUMPDEST JUMPDEST PUSH2 0x684 DUP3 SLOAD PUSH2 0x48B JUMP JUMPDEST PUSH2 0x68F DUP3 DUP3 DUP6 PUSH2 0x5CF JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x6C0 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x6AE JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x6B8 DUP6 DUP3 PUSH2 0x63D JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x71F JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x6CE DUP7 PUSH2 0x4BB JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x6F5 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x6D0 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x712 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x70E PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x621 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x7A9 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x785 JUMPI PUSH2 0x784 PUSH2 0x727 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x794 JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x7A2 DUP6 PUSH2 0x754 JUMP JUMPDEST SWAP5 POP PUSH2 0x769 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x7C1 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x87C JUMP JUMPDEST DUP2 PUSH2 0x7CE JUMPI PUSH0 SWAP1 POP PUSH2 0x87C JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x7E4 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x7EE JUMPI PUSH2 0x81D JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x87C JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x800 JUMPI PUSH2 0x7FF PUSH2 0x727 JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x817 JUMPI PUSH2 0x816 PUSH2 0x727 JUMP JUMPDEST JUMPDEST POP PUSH2 0x87C JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x852 JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x84D JUMPI PUSH2 0x84C PUSH2 0x727 JUMP JUMPDEST JUMPDEST PUSH2 0x87C JUMP JUMPDEST PUSH2 0x85F DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x760 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x876 JUMPI PUSH2 0x875 PUSH2 0x727 JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x899 DUP3 PUSH2 0x3B6 JUMP JUMPDEST SWAP2 POP PUSH2 0x8A4 DUP4 PUSH2 0x883 JUMP JUMPDEST SWAP3 POP PUSH2 0x8D1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x7B2 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x8E3 DUP3 PUSH2 0x3B6 JUMP JUMPDEST SWAP2 POP PUSH2 0x8EE DUP4 PUSH2 0x3B6 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x8FC DUP2 PUSH2 0x3B6 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x913 JUMPI PUSH2 0x912 PUSH2 0x727 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x924 DUP3 PUSH2 0x3B6 JUMP JUMPDEST SWAP2 POP PUSH2 0x92F DUP4 PUSH2 0x3B6 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x947 JUMPI PUSH2 0x946 PUSH2 0x727 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x976 DUP3 PUSH2 0x94D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x986 DUP2 PUSH2 0x96C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x99F PUSH0 DUP4 ADD DUP5 PUSH2 0x97D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x9AE DUP2 PUSH2 0x3B6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x9C7 PUSH0 DUP4 ADD DUP7 PUSH2 0x97D JUMP JUMPDEST PUSH2 0x9D4 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x9A5 JUMP JUMPDEST PUSH2 0x9E1 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x9A5 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x9FC PUSH0 DUP4 ADD DUP5 PUSH2 0x9A5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF50 DUP1 PUSH2 0xA0F PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9C JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x313CE567 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1A8 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1F6 JUMPI PUSH2 0x9C JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xA0 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xBE JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEE JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x10C JUMPI DUP1 PUSH4 0x251C1AA3 EQ PUSH2 0x13C JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xA8 PUSH2 0x226 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB5 SWAP2 SWAP1 PUSH2 0xB3B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD3 SWAP2 SWAP1 PUSH2 0xBEC JUMP JUMPDEST PUSH2 0x2B6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE5 SWAP2 SWAP1 PUSH2 0xC44 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF6 PUSH2 0x2D8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x103 SWAP2 SWAP1 PUSH2 0xC6C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x126 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x121 SWAP2 SWAP1 PUSH2 0xC85 JUMP JUMPDEST PUSH2 0x2E1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x133 SWAP2 SWAP1 PUSH2 0xC44 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x144 PUSH2 0x33B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x151 SWAP2 SWAP1 PUSH2 0xC6C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x162 PUSH2 0x341 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16F SWAP2 SWAP1 PUSH2 0xCF0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x192 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18D SWAP2 SWAP1 PUSH2 0xD09 JUMP JUMPDEST PUSH2 0x349 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19F SWAP2 SWAP1 PUSH2 0xC6C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B0 PUSH2 0x38E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BD SWAP2 SWAP1 PUSH2 0xB3B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DB SWAP2 SWAP1 PUSH2 0xBEC JUMP JUMPDEST PUSH2 0x41E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1ED SWAP2 SWAP1 PUSH2 0xC44 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x210 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20B SWAP2 SWAP1 PUSH2 0xD34 JUMP JUMPDEST PUSH2 0x476 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21D SWAP2 SWAP1 PUSH2 0xC6C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x235 SWAP1 PUSH2 0xD9F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x261 SWAP1 PUSH2 0xD9F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2AC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x283 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2AC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x28F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x2C0 PUSH2 0x4F8 JUMP JUMPDEST SWAP1 POP PUSH2 0x2CD DUP2 DUP6 DUP6 PUSH2 0x4FF JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x5 SLOAD TIMESTAMP LT ISZERO PUSH2 0x327 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x31E SWAP1 PUSH2 0xE3F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x332 DUP5 DUP5 DUP5 PUSH2 0x511 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x39D SWAP1 PUSH2 0xD9F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3C9 SWAP1 PUSH2 0xD9F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x414 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3EB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x414 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3F7 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x5 SLOAD TIMESTAMP LT ISZERO PUSH2 0x464 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x45B SWAP1 PUSH2 0xE3F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x46E DUP4 DUP4 PUSH2 0x53F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x50C DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x561 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x51B PUSH2 0x4F8 JUMP JUMPDEST SWAP1 POP PUSH2 0x528 DUP6 DUP3 DUP6 PUSH2 0x730 JUMP JUMPDEST PUSH2 0x533 DUP6 DUP6 DUP6 PUSH2 0x7C2 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x549 PUSH2 0x4F8 JUMP JUMPDEST SWAP1 POP PUSH2 0x556 DUP2 DUP6 DUP6 PUSH2 0x7C2 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x5D1 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C8 SWAP2 SWAP1 PUSH2 0xE6C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x641 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x638 SWAP2 SWAP1 PUSH2 0xE6C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x72A JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x721 SWAP2 SWAP1 PUSH2 0xC6C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x73B DUP5 DUP5 PUSH2 0x476 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x7BC JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x7AD JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7A4 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xE85 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7BB DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x561 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x832 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x829 SWAP2 SWAP1 PUSH2 0xE6C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8A2 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x899 SWAP2 SWAP1 PUSH2 0xE6C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8AD DUP4 DUP4 DUP4 PUSH2 0x8B2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x902 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x8F6 SWAP2 SWAP1 PUSH2 0xEE7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x9D0 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x98B JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x982 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xE85 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA17 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xA61 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xABE SWAP2 SWAP1 PUSH2 0xC6C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xB0D DUP3 PUSH2 0xACB JUMP JUMPDEST PUSH2 0xB17 DUP2 DUP6 PUSH2 0xAD5 JUMP JUMPDEST SWAP4 POP PUSH2 0xB27 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xAE5 JUMP JUMPDEST PUSH2 0xB30 DUP2 PUSH2 0xAF3 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xB53 DUP2 DUP5 PUSH2 0xB03 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xB88 DUP3 PUSH2 0xB5F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB98 DUP2 PUSH2 0xB7E JUMP JUMPDEST DUP2 EQ PUSH2 0xBA2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBB3 DUP2 PUSH2 0xB8F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBCB DUP2 PUSH2 0xBB9 JUMP JUMPDEST DUP2 EQ PUSH2 0xBD5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBE6 DUP2 PUSH2 0xBC2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC02 JUMPI PUSH2 0xC01 PUSH2 0xB5B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xC0F DUP6 DUP3 DUP7 ADD PUSH2 0xBA5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xC20 DUP6 DUP3 DUP7 ADD PUSH2 0xBD8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC3E DUP2 PUSH2 0xC2A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC57 PUSH0 DUP4 ADD DUP5 PUSH2 0xC35 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC66 DUP2 PUSH2 0xBB9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC7F PUSH0 DUP4 ADD DUP5 PUSH2 0xC5D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC9C JUMPI PUSH2 0xC9B PUSH2 0xB5B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xCA9 DUP7 DUP3 DUP8 ADD PUSH2 0xBA5 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xCBA DUP7 DUP3 DUP8 ADD PUSH2 0xBA5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xCCB DUP7 DUP3 DUP8 ADD PUSH2 0xBD8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCEA DUP2 PUSH2 0xCD5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD03 PUSH0 DUP4 ADD DUP5 PUSH2 0xCE1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD1E JUMPI PUSH2 0xD1D PUSH2 0xB5B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xD2B DUP5 DUP3 DUP6 ADD PUSH2 0xBA5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD4A JUMPI PUSH2 0xD49 PUSH2 0xB5B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xD57 DUP6 DUP3 DUP7 ADD PUSH2 0xBA5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xD68 DUP6 DUP3 DUP7 ADD PUSH2 0xBA5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xDB6 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xDC9 JUMPI PUSH2 0xDC8 PUSH2 0xD72 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x546F6B656E7320617265206C6F636B656420756E74696C2074686520756E6C6F PUSH0 DUP3 ADD MSTORE PUSH32 0x636B2074696D6520686173207061737365640000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xE29 PUSH1 0x32 DUP4 PUSH2 0xAD5 JUMP JUMPDEST SWAP2 POP PUSH2 0xE34 DUP3 PUSH2 0xDCF JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xE56 DUP2 PUSH2 0xE1D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE66 DUP2 PUSH2 0xB7E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE7F PUSH0 DUP4 ADD DUP5 PUSH2 0xE5D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xE98 PUSH0 DUP4 ADD DUP7 PUSH2 0xE5D JUMP JUMPDEST PUSH2 0xEA5 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xC5D JUMP JUMPDEST PUSH2 0xEB2 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xC5D JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xEF1 DUP3 PUSH2 0xBB9 JUMP JUMPDEST SWAP2 POP PUSH2 0xEFC DUP4 PUSH2 0xBB9 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xF14 JUMPI PUSH2 0xF13 PUSH2 0xEBA JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODECOPY CALLER 0xEE 0xE6 0x4E SWAP4 XOR PUSH25 0xBDDD6C48DCB998B12D0280746A0B35E39E0A03F80703C21064 PUSH20 0x6F6C634300081A00330000000000000000000000 ",
							"sourceMap": "119:1158:5:-:0;;;250:362;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1601:113:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1675:5;1667;:13;;;;;;:::i;:::-;;1700:7;1690;:17;;;;;;:::i;:::-;;1601:113;;417:51:5::1;423:10;457;:8;;;:10;;:::i;:::-;451:2;:16;;;;:::i;:::-;435:13;:32;;;;:::i;:::-;417:5;;;:51;;:::i;:::-;544:17;526:15;:35;;;;:::i;:::-;513:10;:48;;;;250:362:::0;;119:1158;;2707:82:1;2756:5;2780:2;2773:9;;2707:82;:::o;7458:208::-;7547:1;7528:21;;:7;:21;;;7524:91;;7601:1;7572:32;;;;;;;;;;;:::i;:::-;;;;;;;;7524:91;7624:35;7640:1;7644:7;7653:5;7624:7;;;:35;;:::i;:::-;7458:208;;:::o;6008:1107::-;6113:1;6097:18;;:4;:18;;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;;;;;6093:540;;;6285:19;6307:9;:15;6317:4;6307:15;;;;;;;;;;;;;;;;6285:37;;6354:5;6340:11;:19;6336:115;;;6411:4;6417:11;6430:5;6386:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6336:115;6603:5;6589:11;:19;6571:9;:15;6581:4;6571:15;;;;;;;;;;;;;;;:37;;;;6271:362;6093:540;6661:1;6647:16;;:2;:16;;;6643:425;;6826:5;6810:12;;:21;;;;;;;;;;;6643:425;;;7038:5;7021:9;:13;7031:2;7021:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6643:425;7098:2;7083:25;;7092:4;7083:25;;;7102:5;7083:25;;;;;;:::i;:::-;;;;;;;;6008:1107;;;:::o;88:117:6:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:143::-;602:5;633:6;627:13;618:22;;649:33;676:5;649:33;:::i;:::-;545:143;;;;:::o;694:507::-;773:6;781;830:2;818:9;809:7;805:23;801:32;798:119;;;836:79;;:::i;:::-;798:119;956:1;981:64;1037:7;1028:6;1017:9;1013:22;981:64;:::i;:::-;971:74;;927:128;1094:2;1120:64;1176:7;1167:6;1156:9;1152:22;1120:64;:::i;:::-;1110:74;;1065:129;694:507;;;;;:::o;1207:99::-;1259:6;1293:5;1287:12;1277:22;;1207:99;;;:::o;1312:180::-;1360:77;1357:1;1350:88;1457:4;1454:1;1447:15;1481:4;1478:1;1471:15;1498:180;1546:77;1543:1;1536:88;1643:4;1640:1;1633:15;1667:4;1664:1;1657:15;1684:320;1728:6;1765:1;1759:4;1755:12;1745:22;;1812:1;1806:4;1802:12;1833:18;1823:81;;1889:4;1881:6;1877:17;1867:27;;1823:81;1951:2;1943:6;1940:14;1920:18;1917:38;1914:84;;1970:18;;:::i;:::-;1914:84;1735:269;1684:320;;;:::o;2010:141::-;2059:4;2082:3;2074:11;;2105:3;2102:1;2095:14;2139:4;2136:1;2126:18;2118:26;;2010:141;;;:::o;2157:93::-;2194:6;2241:2;2236;2229:5;2225:14;2221:23;2211:33;;2157:93;;;:::o;2256:107::-;2300:8;2350:5;2344:4;2340:16;2319:37;;2256:107;;;;:::o;2369:393::-;2438:6;2488:1;2476:10;2472:18;2511:97;2541:66;2530:9;2511:97;:::i;:::-;2629:39;2659:8;2648:9;2629:39;:::i;:::-;2617:51;;2701:4;2697:9;2690:5;2686:21;2677:30;;2750:4;2740:8;2736:19;2729:5;2726:30;2716:40;;2445:317;;2369:393;;;;;:::o;2768:60::-;2796:3;2817:5;2810:12;;2768:60;;;:::o;2834:142::-;2884:9;2917:53;2935:34;2944:24;2962:5;2944:24;:::i;:::-;2935:34;:::i;:::-;2917:53;:::i;:::-;2904:66;;2834:142;;;:::o;2982:75::-;3025:3;3046:5;3039:12;;2982:75;;;:::o;3063:269::-;3173:39;3204:7;3173:39;:::i;:::-;3234:91;3283:41;3307:16;3283:41;:::i;:::-;3275:6;3268:4;3262:11;3234:91;:::i;:::-;3228:4;3221:105;3139:193;3063:269;;;:::o;3338:73::-;3383:3;3338:73;:::o;3417:189::-;3494:32;;:::i;:::-;3535:65;3593:6;3585;3579:4;3535:65;:::i;:::-;3470:136;3417:189;;:::o;3612:186::-;3672:120;3689:3;3682:5;3679:14;3672:120;;;3743:39;3780:1;3773:5;3743:39;:::i;:::-;3716:1;3709:5;3705:13;3696:22;;3672:120;;;3612:186;;:::o;3804:543::-;3905:2;3900:3;3897:11;3894:446;;;3939:38;3971:5;3939:38;:::i;:::-;4023:29;4041:10;4023:29;:::i;:::-;4013:8;4009:44;4206:2;4194:10;4191:18;4188:49;;;4227:8;4212:23;;4188:49;4250:80;4306:22;4324:3;4306:22;:::i;:::-;4296:8;4292:37;4279:11;4250:80;:::i;:::-;3909:431;;3894:446;3804:543;;;:::o;4353:117::-;4407:8;4457:5;4451:4;4447:16;4426:37;;4353:117;;;;:::o;4476:169::-;4520:6;4553:51;4601:1;4597:6;4589:5;4586:1;4582:13;4553:51;:::i;:::-;4549:56;4634:4;4628;4624:15;4614:25;;4527:118;4476:169;;;;:::o;4650:295::-;4726:4;4872:29;4897:3;4891:4;4872:29;:::i;:::-;4864:37;;4934:3;4931:1;4927:11;4921:4;4918:21;4910:29;;4650:295;;;;:::o;4950:1395::-;5067:37;5100:3;5067:37;:::i;:::-;5169:18;5161:6;5158:30;5155:56;;;5191:18;;:::i;:::-;5155:56;5235:38;5267:4;5261:11;5235:38;:::i;:::-;5320:67;5380:6;5372;5366:4;5320:67;:::i;:::-;5414:1;5438:4;5425:17;;5470:2;5462:6;5459:14;5487:1;5482:618;;;;6144:1;6161:6;6158:77;;;6210:9;6205:3;6201:19;6195:26;6186:35;;6158:77;6261:67;6321:6;6314:5;6261:67;:::i;:::-;6255:4;6248:81;6117:222;5452:887;;5482:618;5534:4;5530:9;5522:6;5518:22;5568:37;5600:4;5568:37;:::i;:::-;5627:1;5641:208;5655:7;5652:1;5649:14;5641:208;;;5734:9;5729:3;5725:19;5719:26;5711:6;5704:42;5785:1;5777:6;5773:14;5763:24;;5832:2;5821:9;5817:18;5804:31;;5678:4;5675:1;5671:12;5666:17;;5641:208;;;5877:6;5868:7;5865:19;5862:179;;;5935:9;5930:3;5926:19;5920:26;5978:48;6020:4;6012:6;6008:17;5997:9;5978:48;:::i;:::-;5970:6;5963:64;5885:156;5862:179;6087:1;6083;6075:6;6071:14;6067:22;6061:4;6054:36;5489:611;;;5452:887;;5042:1303;;;4950:1395;;:::o;6351:180::-;6399:77;6396:1;6389:88;6496:4;6493:1;6486:15;6520:4;6517:1;6510:15;6537:102;6579:8;6626:5;6623:1;6619:13;6598:34;;6537:102;;;:::o;6645:848::-;6706:5;6713:4;6737:6;6728:15;;6761:5;6752:14;;6775:712;6796:1;6786:8;6783:15;6775:712;;;6891:4;6886:3;6882:14;6876:4;6873:24;6870:50;;;6900:18;;:::i;:::-;6870:50;6950:1;6940:8;6936:16;6933:451;;;7365:4;7358:5;7354:16;7345:25;;6933:451;7415:4;7409;7405:15;7397:23;;7445:32;7468:8;7445:32;:::i;:::-;7433:44;;6775:712;;;6645:848;;;;;;;:::o;7499:1073::-;7553:5;7744:8;7734:40;;7765:1;7756:10;;7767:5;;7734:40;7793:4;7783:36;;7810:1;7801:10;;7812:5;;7783:36;7879:4;7927:1;7922:27;;;;7963:1;7958:191;;;;7872:277;;7922:27;7940:1;7931:10;;7942:5;;;7958:191;8003:3;7993:8;7990:17;7987:43;;;8010:18;;:::i;:::-;7987:43;8059:8;8056:1;8052:16;8043:25;;8094:3;8087:5;8084:14;8081:40;;;8101:18;;:::i;:::-;8081:40;8134:5;;;7872:277;;8258:2;8248:8;8245:16;8239:3;8233:4;8230:13;8226:36;8208:2;8198:8;8195:16;8190:2;8184:4;8181:12;8177:35;8161:111;8158:246;;;8314:8;8308:4;8304:19;8295:28;;8349:3;8342:5;8339:14;8336:40;;;8356:18;;:::i;:::-;8336:40;8389:5;;8158:246;8429:42;8467:3;8457:8;8451:4;8448:1;8429:42;:::i;:::-;8414:57;;;;8503:4;8498:3;8494:14;8487:5;8484:25;8481:51;;;8512:18;;:::i;:::-;8481:51;8561:4;8554:5;8550:16;8541:25;;7499:1073;;;;;;:::o;8578:86::-;8613:7;8653:4;8646:5;8642:16;8631:27;;8578:86;;;:::o;8670:281::-;8728:5;8752:23;8770:4;8752:23;:::i;:::-;8744:31;;8796:25;8812:8;8796:25;:::i;:::-;8784:37;;8840:104;8877:66;8867:8;8861:4;8840:104;:::i;:::-;8831:113;;8670:281;;;;:::o;8957:410::-;8997:7;9020:20;9038:1;9020:20;:::i;:::-;9015:25;;9054:20;9072:1;9054:20;:::i;:::-;9049:25;;9109:1;9106;9102:9;9131:30;9149:11;9131:30;:::i;:::-;9120:41;;9310:1;9301:7;9297:15;9294:1;9291:22;9271:1;9264:9;9244:83;9221:139;;9340:18;;:::i;:::-;9221:139;9005:362;8957:410;;;;:::o;9373:191::-;9413:3;9432:20;9450:1;9432:20;:::i;:::-;9427:25;;9466:20;9484:1;9466:20;:::i;:::-;9461:25;;9509:1;9506;9502:9;9495:16;;9530:3;9527:1;9524:10;9521:36;;;9537:18;;:::i;:::-;9521:36;9373:191;;;;:::o;9570:126::-;9607:7;9647:42;9640:5;9636:54;9625:65;;9570:126;;;:::o;9702:96::-;9739:7;9768:24;9786:5;9768:24;:::i;:::-;9757:35;;9702:96;;;:::o;9804:118::-;9891:24;9909:5;9891:24;:::i;:::-;9886:3;9879:37;9804:118;;:::o;9928:222::-;10021:4;10059:2;10048:9;10044:18;10036:26;;10072:71;10140:1;10129:9;10125:17;10116:6;10072:71;:::i;:::-;9928:222;;;;:::o;10156:118::-;10243:24;10261:5;10243:24;:::i;:::-;10238:3;10231:37;10156:118;;:::o;10280:442::-;10429:4;10467:2;10456:9;10452:18;10444:26;;10480:71;10548:1;10537:9;10533:17;10524:6;10480:71;:::i;:::-;10561:72;10629:2;10618:9;10614:18;10605:6;10561:72;:::i;:::-;10643;10711:2;10700:9;10696:18;10687:6;10643:72;:::i;:::-;10280:442;;;;;;:::o;10728:222::-;10821:4;10859:2;10848:9;10844:18;10836:26;;10872:71;10940:1;10929:9;10925:17;10916:6;10872:71;:::i;:::-;10728:222;;;;:::o;119:1158:5:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_542": {
									"entryPoint": 1279,
									"id": 542,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_602": {
									"entryPoint": 1377,
									"id": 602,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_msgSender_767": {
									"entryPoint": 1272,
									"id": 767,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_650": {
									"entryPoint": 1840,
									"id": 650,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_381": {
									"entryPoint": 1986,
									"id": 381,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_458": {
									"entryPoint": 2226,
									"id": 458,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_278": {
									"entryPoint": 1142,
									"id": 278,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_302": {
									"entryPoint": 694,
									"id": 302,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_237": {
									"entryPoint": 841,
									"id": 237,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_215": {
									"entryPoint": 833,
									"id": 215,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@name_197": {
									"entryPoint": 550,
									"id": 197,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@symbol_206": {
									"entryPoint": 910,
									"id": 206,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_224": {
									"entryPoint": 728,
									"id": 224,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_334": {
									"entryPoint": 1297,
									"id": 334,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferFrom_875": {
									"entryPoint": 737,
									"id": 875,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_261": {
									"entryPoint": 1343,
									"id": 261,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@transfer_847": {
									"entryPoint": 1054,
									"id": 847,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@unlockTime_792": {
									"entryPoint": 827,
									"id": 792,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 2981,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 3032,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3337,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 3380,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 3205,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3052,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 3677,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 3125,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2819,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_78cdf57e1a72959a57417d6301fad41b30a618b232e500e1f739b5979bac65fb_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3613,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3165,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 3297,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 3692,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 3717,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 3140,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2875,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_78cdf57e1a72959a57417d6301fad41b30a618b232e500e1f739b5979bac65fb__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3647,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3180,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 3312,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 2763,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2773,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3815,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2942,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 3114,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2911,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 3001,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 3285,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 2789,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 3487,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3770,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 3442,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2907,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 2803,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_78cdf57e1a72959a57417d6301fad41b30a618b232e500e1f739b5979bac65fb": {
									"entryPoint": 3535,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 2959,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 3010,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:8293:6",
										"nodeType": "YulBlock",
										"src": "0:8293:6",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:6",
													"nodeType": "YulBlock",
													"src": "66:40:6",
													"statements": [
														{
															"nativeSrc": "77:22:6",
															"nodeType": "YulAssignment",
															"src": "77:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:6"
																},
																"nativeSrc": "87:12:6",
																"nodeType": "YulFunctionCall",
																"src": "87:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:6"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:6",
														"nodeType": "YulTypedName",
														"src": "49:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:6",
														"nodeType": "YulTypedName",
														"src": "59:6:6",
														"type": ""
													}
												],
												"src": "7:99:6"
											},
											{
												"body": {
													"nativeSrc": "208:73:6",
													"nodeType": "YulBlock",
													"src": "208:73:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "225:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "230:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "218:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:6"
																},
																"nativeSrc": "218:19:6",
																"nodeType": "YulFunctionCall",
																"src": "218:19:6"
															},
															"nativeSrc": "218:19:6",
															"nodeType": "YulExpressionStatement",
															"src": "218:19:6"
														},
														{
															"nativeSrc": "246:29:6",
															"nodeType": "YulAssignment",
															"src": "246:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "265:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "270:4:6",
																		"nodeType": "YulLiteral",
																		"src": "270:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "261:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:6"
																},
																"nativeSrc": "261:14:6",
																"nodeType": "YulFunctionCall",
																"src": "261:14:6"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "246:11:6",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:6"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "112:169:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "180:3:6",
														"nodeType": "YulTypedName",
														"src": "180:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "185:6:6",
														"nodeType": "YulTypedName",
														"src": "185:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "196:11:6",
														"nodeType": "YulTypedName",
														"src": "196:11:6",
														"type": ""
													}
												],
												"src": "112:169:6"
											},
											{
												"body": {
													"nativeSrc": "349:77:6",
													"nodeType": "YulBlock",
													"src": "349:77:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "366:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "366:3:6"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "371:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "371:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "376:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "376:6:6"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "360:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "360:5:6"
																},
																"nativeSrc": "360:23:6",
																"nodeType": "YulFunctionCall",
																"src": "360:23:6"
															},
															"nativeSrc": "360:23:6",
															"nodeType": "YulExpressionStatement",
															"src": "360:23:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "403:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "403:3:6"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "408:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "408:6:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "399:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "399:3:6"
																		},
																		"nativeSrc": "399:16:6",
																		"nodeType": "YulFunctionCall",
																		"src": "399:16:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "417:1:6",
																		"nodeType": "YulLiteral",
																		"src": "417:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "392:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "392:6:6"
																},
																"nativeSrc": "392:27:6",
																"nodeType": "YulFunctionCall",
																"src": "392:27:6"
															},
															"nativeSrc": "392:27:6",
															"nodeType": "YulExpressionStatement",
															"src": "392:27:6"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "287:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "331:3:6",
														"nodeType": "YulTypedName",
														"src": "331:3:6",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "336:3:6",
														"nodeType": "YulTypedName",
														"src": "336:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "341:6:6",
														"nodeType": "YulTypedName",
														"src": "341:6:6",
														"type": ""
													}
												],
												"src": "287:139:6"
											},
											{
												"body": {
													"nativeSrc": "480:54:6",
													"nodeType": "YulBlock",
													"src": "480:54:6",
													"statements": [
														{
															"nativeSrc": "490:38:6",
															"nodeType": "YulAssignment",
															"src": "490:38:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "508:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "508:5:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "515:2:6",
																				"nodeType": "YulLiteral",
																				"src": "515:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "504:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "504:3:6"
																		},
																		"nativeSrc": "504:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "504:14:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "524:2:6",
																				"nodeType": "YulLiteral",
																				"src": "524:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "520:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "520:3:6"
																		},
																		"nativeSrc": "520:7:6",
																		"nodeType": "YulFunctionCall",
																		"src": "520:7:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "500:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "500:3:6"
																},
																"nativeSrc": "500:28:6",
																"nodeType": "YulFunctionCall",
																"src": "500:28:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "490:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "490:6:6"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "432:102:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "463:5:6",
														"nodeType": "YulTypedName",
														"src": "463:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "473:6:6",
														"nodeType": "YulTypedName",
														"src": "473:6:6",
														"type": ""
													}
												],
												"src": "432:102:6"
											},
											{
												"body": {
													"nativeSrc": "632:285:6",
													"nodeType": "YulBlock",
													"src": "632:285:6",
													"statements": [
														{
															"nativeSrc": "642:53:6",
															"nodeType": "YulVariableDeclaration",
															"src": "642:53:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "689:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "689:5:6"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "656:32:6",
																	"nodeType": "YulIdentifier",
																	"src": "656:32:6"
																},
																"nativeSrc": "656:39:6",
																"nodeType": "YulFunctionCall",
																"src": "656:39:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "646:6:6",
																	"nodeType": "YulTypedName",
																	"src": "646:6:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "704:78:6",
															"nodeType": "YulAssignment",
															"src": "704:78:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "770:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "770:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "775:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "775:6:6"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "711:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "711:58:6"
																},
																"nativeSrc": "711:71:6",
																"nodeType": "YulFunctionCall",
																"src": "711:71:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "704:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "704:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "830:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "830:5:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "837:4:6",
																				"nodeType": "YulLiteral",
																				"src": "837:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "826:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "826:3:6"
																		},
																		"nativeSrc": "826:16:6",
																		"nodeType": "YulFunctionCall",
																		"src": "826:16:6"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "844:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "844:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "849:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "849:6:6"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "791:34:6",
																	"nodeType": "YulIdentifier",
																	"src": "791:34:6"
																},
																"nativeSrc": "791:65:6",
																"nodeType": "YulFunctionCall",
																"src": "791:65:6"
															},
															"nativeSrc": "791:65:6",
															"nodeType": "YulExpressionStatement",
															"src": "791:65:6"
														},
														{
															"nativeSrc": "865:46:6",
															"nodeType": "YulAssignment",
															"src": "865:46:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "876:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "876:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "903:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "903:6:6"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "881:21:6",
																			"nodeType": "YulIdentifier",
																			"src": "881:21:6"
																		},
																		"nativeSrc": "881:29:6",
																		"nodeType": "YulFunctionCall",
																		"src": "881:29:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "872:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "872:3:6"
																},
																"nativeSrc": "872:39:6",
																"nodeType": "YulFunctionCall",
																"src": "872:39:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "865:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "865:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "540:377:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "613:5:6",
														"nodeType": "YulTypedName",
														"src": "613:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "620:3:6",
														"nodeType": "YulTypedName",
														"src": "620:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "628:3:6",
														"nodeType": "YulTypedName",
														"src": "628:3:6",
														"type": ""
													}
												],
												"src": "540:377:6"
											},
											{
												"body": {
													"nativeSrc": "1041:195:6",
													"nodeType": "YulBlock",
													"src": "1041:195:6",
													"statements": [
														{
															"nativeSrc": "1051:26:6",
															"nodeType": "YulAssignment",
															"src": "1051:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1063:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1063:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1074:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1074:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1059:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1059:3:6"
																},
																"nativeSrc": "1059:18:6",
																"nodeType": "YulFunctionCall",
																"src": "1059:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1051:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1051:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1098:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1098:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1109:1:6",
																				"nodeType": "YulLiteral",
																				"src": "1109:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1094:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1094:3:6"
																		},
																		"nativeSrc": "1094:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1094:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1117:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "1117:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1123:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1123:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1113:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1113:3:6"
																		},
																		"nativeSrc": "1113:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1113:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1087:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1087:6:6"
																},
																"nativeSrc": "1087:47:6",
																"nodeType": "YulFunctionCall",
																"src": "1087:47:6"
															},
															"nativeSrc": "1087:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "1087:47:6"
														},
														{
															"nativeSrc": "1143:86:6",
															"nodeType": "YulAssignment",
															"src": "1143:86:6",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1215:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1215:6:6"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1224:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "1224:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1151:63:6",
																	"nodeType": "YulIdentifier",
																	"src": "1151:63:6"
																},
																"nativeSrc": "1151:78:6",
																"nodeType": "YulFunctionCall",
																"src": "1151:78:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1143:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1143:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "923:313:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1013:9:6",
														"nodeType": "YulTypedName",
														"src": "1013:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1025:6:6",
														"nodeType": "YulTypedName",
														"src": "1025:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1036:4:6",
														"nodeType": "YulTypedName",
														"src": "1036:4:6",
														"type": ""
													}
												],
												"src": "923:313:6"
											},
											{
												"body": {
													"nativeSrc": "1282:35:6",
													"nodeType": "YulBlock",
													"src": "1282:35:6",
													"statements": [
														{
															"nativeSrc": "1292:19:6",
															"nodeType": "YulAssignment",
															"src": "1292:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1308:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1308:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1302:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1302:5:6"
																},
																"nativeSrc": "1302:9:6",
																"nodeType": "YulFunctionCall",
																"src": "1302:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1292:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1292:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1242:75:6",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1275:6:6",
														"nodeType": "YulTypedName",
														"src": "1275:6:6",
														"type": ""
													}
												],
												"src": "1242:75:6"
											},
											{
												"body": {
													"nativeSrc": "1412:28:6",
													"nodeType": "YulBlock",
													"src": "1412:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1429:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1429:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1432:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1432:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1422:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1422:6:6"
																},
																"nativeSrc": "1422:12:6",
																"nodeType": "YulFunctionCall",
																"src": "1422:12:6"
															},
															"nativeSrc": "1422:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "1422:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1323:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "1323:117:6"
											},
											{
												"body": {
													"nativeSrc": "1535:28:6",
													"nodeType": "YulBlock",
													"src": "1535:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1552:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1552:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1555:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1555:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1545:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1545:6:6"
																},
																"nativeSrc": "1545:12:6",
																"nodeType": "YulFunctionCall",
																"src": "1545:12:6"
															},
															"nativeSrc": "1545:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "1545:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1446:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "1446:117:6"
											},
											{
												"body": {
													"nativeSrc": "1614:81:6",
													"nodeType": "YulBlock",
													"src": "1614:81:6",
													"statements": [
														{
															"nativeSrc": "1624:65:6",
															"nodeType": "YulAssignment",
															"src": "1624:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1639:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1639:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1646:42:6",
																		"nodeType": "YulLiteral",
																		"src": "1646:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1635:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1635:3:6"
																},
																"nativeSrc": "1635:54:6",
																"nodeType": "YulFunctionCall",
																"src": "1635:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1624:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "1624:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1569:126:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1596:5:6",
														"nodeType": "YulTypedName",
														"src": "1596:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1606:7:6",
														"nodeType": "YulTypedName",
														"src": "1606:7:6",
														"type": ""
													}
												],
												"src": "1569:126:6"
											},
											{
												"body": {
													"nativeSrc": "1746:51:6",
													"nodeType": "YulBlock",
													"src": "1746:51:6",
													"statements": [
														{
															"nativeSrc": "1756:35:6",
															"nodeType": "YulAssignment",
															"src": "1756:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1785:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1785:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1767:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "1767:17:6"
																},
																"nativeSrc": "1767:24:6",
																"nodeType": "YulFunctionCall",
																"src": "1767:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1756:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "1756:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1701:96:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1728:5:6",
														"nodeType": "YulTypedName",
														"src": "1728:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1738:7:6",
														"nodeType": "YulTypedName",
														"src": "1738:7:6",
														"type": ""
													}
												],
												"src": "1701:96:6"
											},
											{
												"body": {
													"nativeSrc": "1846:79:6",
													"nodeType": "YulBlock",
													"src": "1846:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1903:16:6",
																"nodeType": "YulBlock",
																"src": "1903:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1912:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1912:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1915:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1915:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1905:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1905:6:6"
																			},
																			"nativeSrc": "1905:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1905:12:6"
																		},
																		"nativeSrc": "1905:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1905:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1869:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "1869:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1894:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "1894:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1876:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "1876:17:6"
																				},
																				"nativeSrc": "1876:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1876:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1866:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "1866:2:6"
																		},
																		"nativeSrc": "1866:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1866:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1859:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1859:6:6"
																},
																"nativeSrc": "1859:43:6",
																"nodeType": "YulFunctionCall",
																"src": "1859:43:6"
															},
															"nativeSrc": "1856:63:6",
															"nodeType": "YulIf",
															"src": "1856:63:6"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1803:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1839:5:6",
														"nodeType": "YulTypedName",
														"src": "1839:5:6",
														"type": ""
													}
												],
												"src": "1803:122:6"
											},
											{
												"body": {
													"nativeSrc": "1983:87:6",
													"nodeType": "YulBlock",
													"src": "1983:87:6",
													"statements": [
														{
															"nativeSrc": "1993:29:6",
															"nodeType": "YulAssignment",
															"src": "1993:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2015:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2015:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2002:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "2002:12:6"
																},
																"nativeSrc": "2002:20:6",
																"nodeType": "YulFunctionCall",
																"src": "2002:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1993:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1993:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2058:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "2058:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2031:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "2031:26:6"
																},
																"nativeSrc": "2031:33:6",
																"nodeType": "YulFunctionCall",
																"src": "2031:33:6"
															},
															"nativeSrc": "2031:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "2031:33:6"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1931:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1961:6:6",
														"nodeType": "YulTypedName",
														"src": "1961:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1969:3:6",
														"nodeType": "YulTypedName",
														"src": "1969:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1977:5:6",
														"nodeType": "YulTypedName",
														"src": "1977:5:6",
														"type": ""
													}
												],
												"src": "1931:139:6"
											},
											{
												"body": {
													"nativeSrc": "2121:32:6",
													"nodeType": "YulBlock",
													"src": "2121:32:6",
													"statements": [
														{
															"nativeSrc": "2131:16:6",
															"nodeType": "YulAssignment",
															"src": "2131:16:6",
															"value": {
																"name": "value",
																"nativeSrc": "2142:5:6",
																"nodeType": "YulIdentifier",
																"src": "2142:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2131:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "2131:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2076:77:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2103:5:6",
														"nodeType": "YulTypedName",
														"src": "2103:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2113:7:6",
														"nodeType": "YulTypedName",
														"src": "2113:7:6",
														"type": ""
													}
												],
												"src": "2076:77:6"
											},
											{
												"body": {
													"nativeSrc": "2202:79:6",
													"nodeType": "YulBlock",
													"src": "2202:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2259:16:6",
																"nodeType": "YulBlock",
																"src": "2259:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2268:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2268:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2271:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2271:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2261:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2261:6:6"
																			},
																			"nativeSrc": "2261:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2261:12:6"
																		},
																		"nativeSrc": "2261:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2261:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2225:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "2225:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2250:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "2250:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2232:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "2232:17:6"
																				},
																				"nativeSrc": "2232:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2232:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2222:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "2222:2:6"
																		},
																		"nativeSrc": "2222:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2222:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2215:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2215:6:6"
																},
																"nativeSrc": "2215:43:6",
																"nodeType": "YulFunctionCall",
																"src": "2215:43:6"
															},
															"nativeSrc": "2212:63:6",
															"nodeType": "YulIf",
															"src": "2212:63:6"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2159:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2195:5:6",
														"nodeType": "YulTypedName",
														"src": "2195:5:6",
														"type": ""
													}
												],
												"src": "2159:122:6"
											},
											{
												"body": {
													"nativeSrc": "2339:87:6",
													"nodeType": "YulBlock",
													"src": "2339:87:6",
													"statements": [
														{
															"nativeSrc": "2349:29:6",
															"nodeType": "YulAssignment",
															"src": "2349:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2371:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2371:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2358:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "2358:12:6"
																},
																"nativeSrc": "2358:20:6",
																"nodeType": "YulFunctionCall",
																"src": "2358:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2349:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "2349:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2414:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "2414:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2387:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "2387:26:6"
																},
																"nativeSrc": "2387:33:6",
																"nodeType": "YulFunctionCall",
																"src": "2387:33:6"
															},
															"nativeSrc": "2387:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "2387:33:6"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2287:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2317:6:6",
														"nodeType": "YulTypedName",
														"src": "2317:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2325:3:6",
														"nodeType": "YulTypedName",
														"src": "2325:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2333:5:6",
														"nodeType": "YulTypedName",
														"src": "2333:5:6",
														"type": ""
													}
												],
												"src": "2287:139:6"
											},
											{
												"body": {
													"nativeSrc": "2515:391:6",
													"nodeType": "YulBlock",
													"src": "2515:391:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2561:83:6",
																"nodeType": "YulBlock",
																"src": "2561:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2563:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "2563:77:6"
																			},
																			"nativeSrc": "2563:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2563:79:6"
																		},
																		"nativeSrc": "2563:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2563:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2536:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2536:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2545:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2545:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2532:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2532:3:6"
																		},
																		"nativeSrc": "2532:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2532:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2557:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2557:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2528:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2528:3:6"
																},
																"nativeSrc": "2528:32:6",
																"nodeType": "YulFunctionCall",
																"src": "2528:32:6"
															},
															"nativeSrc": "2525:119:6",
															"nodeType": "YulIf",
															"src": "2525:119:6"
														},
														{
															"nativeSrc": "2654:117:6",
															"nodeType": "YulBlock",
															"src": "2654:117:6",
															"statements": [
																{
																	"nativeSrc": "2669:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2669:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2683:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2683:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2673:6:6",
																			"nodeType": "YulTypedName",
																			"src": "2673:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2698:63:6",
																	"nodeType": "YulAssignment",
																	"src": "2698:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2733:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "2733:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2744:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "2744:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2729:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "2729:3:6"
																				},
																				"nativeSrc": "2729:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2729:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2753:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2753:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2708:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "2708:20:6"
																		},
																		"nativeSrc": "2708:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2708:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2698:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "2698:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2781:118:6",
															"nodeType": "YulBlock",
															"src": "2781:118:6",
															"statements": [
																{
																	"nativeSrc": "2796:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2796:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2810:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2810:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2800:6:6",
																			"nodeType": "YulTypedName",
																			"src": "2800:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2826:63:6",
																	"nodeType": "YulAssignment",
																	"src": "2826:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2861:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "2861:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2872:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "2872:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2857:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "2857:3:6"
																				},
																				"nativeSrc": "2857:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2857:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2881:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2881:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2836:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "2836:20:6"
																		},
																		"nativeSrc": "2836:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2836:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2826:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "2826:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2432:474:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2477:9:6",
														"nodeType": "YulTypedName",
														"src": "2477:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2488:7:6",
														"nodeType": "YulTypedName",
														"src": "2488:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2500:6:6",
														"nodeType": "YulTypedName",
														"src": "2500:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2508:6:6",
														"nodeType": "YulTypedName",
														"src": "2508:6:6",
														"type": ""
													}
												],
												"src": "2432:474:6"
											},
											{
												"body": {
													"nativeSrc": "2954:48:6",
													"nodeType": "YulBlock",
													"src": "2954:48:6",
													"statements": [
														{
															"nativeSrc": "2964:32:6",
															"nodeType": "YulAssignment",
															"src": "2964:32:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2989:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "2989:5:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2982:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "2982:6:6"
																		},
																		"nativeSrc": "2982:13:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2982:13:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2975:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2975:6:6"
																},
																"nativeSrc": "2975:21:6",
																"nodeType": "YulFunctionCall",
																"src": "2975:21:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2964:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "2964:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "2912:90:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2936:5:6",
														"nodeType": "YulTypedName",
														"src": "2936:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2946:7:6",
														"nodeType": "YulTypedName",
														"src": "2946:7:6",
														"type": ""
													}
												],
												"src": "2912:90:6"
											},
											{
												"body": {
													"nativeSrc": "3067:50:6",
													"nodeType": "YulBlock",
													"src": "3067:50:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3084:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "3084:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3104:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "3104:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3089:14:6",
																			"nodeType": "YulIdentifier",
																			"src": "3089:14:6"
																		},
																		"nativeSrc": "3089:21:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3089:21:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3077:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3077:6:6"
																},
																"nativeSrc": "3077:34:6",
																"nodeType": "YulFunctionCall",
																"src": "3077:34:6"
															},
															"nativeSrc": "3077:34:6",
															"nodeType": "YulExpressionStatement",
															"src": "3077:34:6"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3008:109:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3055:5:6",
														"nodeType": "YulTypedName",
														"src": "3055:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3062:3:6",
														"nodeType": "YulTypedName",
														"src": "3062:3:6",
														"type": ""
													}
												],
												"src": "3008:109:6"
											},
											{
												"body": {
													"nativeSrc": "3215:118:6",
													"nodeType": "YulBlock",
													"src": "3215:118:6",
													"statements": [
														{
															"nativeSrc": "3225:26:6",
															"nodeType": "YulAssignment",
															"src": "3225:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3237:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3237:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3248:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3248:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3233:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3233:3:6"
																},
																"nativeSrc": "3233:18:6",
																"nodeType": "YulFunctionCall",
																"src": "3233:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3225:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "3225:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3299:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3299:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3312:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3312:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3323:1:6",
																				"nodeType": "YulLiteral",
																				"src": "3323:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3308:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3308:3:6"
																		},
																		"nativeSrc": "3308:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3308:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3261:37:6",
																	"nodeType": "YulIdentifier",
																	"src": "3261:37:6"
																},
																"nativeSrc": "3261:65:6",
																"nodeType": "YulFunctionCall",
																"src": "3261:65:6"
															},
															"nativeSrc": "3261:65:6",
															"nodeType": "YulExpressionStatement",
															"src": "3261:65:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3123:210:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3187:9:6",
														"nodeType": "YulTypedName",
														"src": "3187:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3199:6:6",
														"nodeType": "YulTypedName",
														"src": "3199:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3210:4:6",
														"nodeType": "YulTypedName",
														"src": "3210:4:6",
														"type": ""
													}
												],
												"src": "3123:210:6"
											},
											{
												"body": {
													"nativeSrc": "3404:53:6",
													"nodeType": "YulBlock",
													"src": "3404:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3421:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "3421:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3444:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "3444:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3426:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "3426:17:6"
																		},
																		"nativeSrc": "3426:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3426:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3414:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3414:6:6"
																},
																"nativeSrc": "3414:37:6",
																"nodeType": "YulFunctionCall",
																"src": "3414:37:6"
															},
															"nativeSrc": "3414:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "3414:37:6"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3339:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3392:5:6",
														"nodeType": "YulTypedName",
														"src": "3392:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3399:3:6",
														"nodeType": "YulTypedName",
														"src": "3399:3:6",
														"type": ""
													}
												],
												"src": "3339:118:6"
											},
											{
												"body": {
													"nativeSrc": "3561:124:6",
													"nodeType": "YulBlock",
													"src": "3561:124:6",
													"statements": [
														{
															"nativeSrc": "3571:26:6",
															"nodeType": "YulAssignment",
															"src": "3571:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3583:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3583:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3594:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3594:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3579:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3579:3:6"
																},
																"nativeSrc": "3579:18:6",
																"nodeType": "YulFunctionCall",
																"src": "3579:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3571:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "3571:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3651:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3651:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3664:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3664:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3675:1:6",
																				"nodeType": "YulLiteral",
																				"src": "3675:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3660:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3660:3:6"
																		},
																		"nativeSrc": "3660:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3660:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3607:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "3607:43:6"
																},
																"nativeSrc": "3607:71:6",
																"nodeType": "YulFunctionCall",
																"src": "3607:71:6"
															},
															"nativeSrc": "3607:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "3607:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3463:222:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3533:9:6",
														"nodeType": "YulTypedName",
														"src": "3533:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3545:6:6",
														"nodeType": "YulTypedName",
														"src": "3545:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3556:4:6",
														"nodeType": "YulTypedName",
														"src": "3556:4:6",
														"type": ""
													}
												],
												"src": "3463:222:6"
											},
											{
												"body": {
													"nativeSrc": "3791:519:6",
													"nodeType": "YulBlock",
													"src": "3791:519:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "3837:83:6",
																"nodeType": "YulBlock",
																"src": "3837:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3839:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "3839:77:6"
																			},
																			"nativeSrc": "3839:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3839:79:6"
																		},
																		"nativeSrc": "3839:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3839:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3812:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "3812:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3821:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3821:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3808:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3808:3:6"
																		},
																		"nativeSrc": "3808:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3808:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3833:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3833:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3804:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3804:3:6"
																},
																"nativeSrc": "3804:32:6",
																"nodeType": "YulFunctionCall",
																"src": "3804:32:6"
															},
															"nativeSrc": "3801:119:6",
															"nodeType": "YulIf",
															"src": "3801:119:6"
														},
														{
															"nativeSrc": "3930:117:6",
															"nodeType": "YulBlock",
															"src": "3930:117:6",
															"statements": [
																{
																	"nativeSrc": "3945:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3945:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3959:1:6",
																		"nodeType": "YulLiteral",
																		"src": "3959:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3949:6:6",
																			"nodeType": "YulTypedName",
																			"src": "3949:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3974:63:6",
																	"nodeType": "YulAssignment",
																	"src": "3974:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4009:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "4009:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4020:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "4020:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4005:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4005:3:6"
																				},
																				"nativeSrc": "4005:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4005:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4029:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "4029:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3984:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "3984:20:6"
																		},
																		"nativeSrc": "3984:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3984:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3974:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "3974:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4057:118:6",
															"nodeType": "YulBlock",
															"src": "4057:118:6",
															"statements": [
																{
																	"nativeSrc": "4072:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4072:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4086:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4086:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4076:6:6",
																			"nodeType": "YulTypedName",
																			"src": "4076:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4102:63:6",
																	"nodeType": "YulAssignment",
																	"src": "4102:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4137:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "4137:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4148:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "4148:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4133:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4133:3:6"
																				},
																				"nativeSrc": "4133:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4133:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4157:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "4157:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4112:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "4112:20:6"
																		},
																		"nativeSrc": "4112:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4112:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4102:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "4102:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4185:118:6",
															"nodeType": "YulBlock",
															"src": "4185:118:6",
															"statements": [
																{
																	"nativeSrc": "4200:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4200:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4214:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4214:2:6",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4204:6:6",
																			"nodeType": "YulTypedName",
																			"src": "4204:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4230:63:6",
																	"nodeType": "YulAssignment",
																	"src": "4230:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4265:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "4265:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4276:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "4276:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4261:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4261:3:6"
																				},
																				"nativeSrc": "4261:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4261:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4285:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "4285:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4240:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "4240:20:6"
																		},
																		"nativeSrc": "4240:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4240:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4230:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "4230:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "3691:619:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3745:9:6",
														"nodeType": "YulTypedName",
														"src": "3745:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3756:7:6",
														"nodeType": "YulTypedName",
														"src": "3756:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3768:6:6",
														"nodeType": "YulTypedName",
														"src": "3768:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3776:6:6",
														"nodeType": "YulTypedName",
														"src": "3776:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3784:6:6",
														"nodeType": "YulTypedName",
														"src": "3784:6:6",
														"type": ""
													}
												],
												"src": "3691:619:6"
											},
											{
												"body": {
													"nativeSrc": "4359:43:6",
													"nodeType": "YulBlock",
													"src": "4359:43:6",
													"statements": [
														{
															"nativeSrc": "4369:27:6",
															"nodeType": "YulAssignment",
															"src": "4369:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4384:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "4384:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4391:4:6",
																		"nodeType": "YulLiteral",
																		"src": "4391:4:6",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4380:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4380:3:6"
																},
																"nativeSrc": "4380:16:6",
																"nodeType": "YulFunctionCall",
																"src": "4380:16:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4369:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "4369:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "4316:86:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4341:5:6",
														"nodeType": "YulTypedName",
														"src": "4341:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4351:7:6",
														"nodeType": "YulTypedName",
														"src": "4351:7:6",
														"type": ""
													}
												],
												"src": "4316:86:6"
											},
											{
												"body": {
													"nativeSrc": "4469:51:6",
													"nodeType": "YulBlock",
													"src": "4469:51:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4486:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "4486:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4507:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "4507:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "4491:15:6",
																			"nodeType": "YulIdentifier",
																			"src": "4491:15:6"
																		},
																		"nativeSrc": "4491:22:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4491:22:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4479:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4479:6:6"
																},
																"nativeSrc": "4479:35:6",
																"nodeType": "YulFunctionCall",
																"src": "4479:35:6"
															},
															"nativeSrc": "4479:35:6",
															"nodeType": "YulExpressionStatement",
															"src": "4479:35:6"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "4408:112:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4457:5:6",
														"nodeType": "YulTypedName",
														"src": "4457:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4464:3:6",
														"nodeType": "YulTypedName",
														"src": "4464:3:6",
														"type": ""
													}
												],
												"src": "4408:112:6"
											},
											{
												"body": {
													"nativeSrc": "4620:120:6",
													"nodeType": "YulBlock",
													"src": "4620:120:6",
													"statements": [
														{
															"nativeSrc": "4630:26:6",
															"nodeType": "YulAssignment",
															"src": "4630:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4642:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4642:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4653:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4653:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4638:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4638:3:6"
																},
																"nativeSrc": "4638:18:6",
																"nodeType": "YulFunctionCall",
																"src": "4638:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4630:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "4630:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4706:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "4706:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4719:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4719:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4730:1:6",
																				"nodeType": "YulLiteral",
																				"src": "4730:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4715:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4715:3:6"
																		},
																		"nativeSrc": "4715:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4715:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "4666:39:6",
																	"nodeType": "YulIdentifier",
																	"src": "4666:39:6"
																},
																"nativeSrc": "4666:67:6",
																"nodeType": "YulFunctionCall",
																"src": "4666:67:6"
															},
															"nativeSrc": "4666:67:6",
															"nodeType": "YulExpressionStatement",
															"src": "4666:67:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "4526:214:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4592:9:6",
														"nodeType": "YulTypedName",
														"src": "4592:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4604:6:6",
														"nodeType": "YulTypedName",
														"src": "4604:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4615:4:6",
														"nodeType": "YulTypedName",
														"src": "4615:4:6",
														"type": ""
													}
												],
												"src": "4526:214:6"
											},
											{
												"body": {
													"nativeSrc": "4812:263:6",
													"nodeType": "YulBlock",
													"src": "4812:263:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "4858:83:6",
																"nodeType": "YulBlock",
																"src": "4858:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4860:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "4860:77:6"
																			},
																			"nativeSrc": "4860:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4860:79:6"
																		},
																		"nativeSrc": "4860:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "4860:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4833:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "4833:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4842:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4842:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4829:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4829:3:6"
																		},
																		"nativeSrc": "4829:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4829:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4854:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4854:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4825:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4825:3:6"
																},
																"nativeSrc": "4825:32:6",
																"nodeType": "YulFunctionCall",
																"src": "4825:32:6"
															},
															"nativeSrc": "4822:119:6",
															"nodeType": "YulIf",
															"src": "4822:119:6"
														},
														{
															"nativeSrc": "4951:117:6",
															"nodeType": "YulBlock",
															"src": "4951:117:6",
															"statements": [
																{
																	"nativeSrc": "4966:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4966:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4980:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4980:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4970:6:6",
																			"nodeType": "YulTypedName",
																			"src": "4970:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4995:63:6",
																	"nodeType": "YulAssignment",
																	"src": "4995:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5030:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "5030:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5041:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "5041:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5026:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "5026:3:6"
																				},
																				"nativeSrc": "5026:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5026:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5050:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "5050:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5005:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "5005:20:6"
																		},
																		"nativeSrc": "5005:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5005:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4995:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "4995:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "4746:329:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4782:9:6",
														"nodeType": "YulTypedName",
														"src": "4782:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4793:7:6",
														"nodeType": "YulTypedName",
														"src": "4793:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4805:6:6",
														"nodeType": "YulTypedName",
														"src": "4805:6:6",
														"type": ""
													}
												],
												"src": "4746:329:6"
											},
											{
												"body": {
													"nativeSrc": "5164:391:6",
													"nodeType": "YulBlock",
													"src": "5164:391:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "5210:83:6",
																"nodeType": "YulBlock",
																"src": "5210:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5212:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "5212:77:6"
																			},
																			"nativeSrc": "5212:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "5212:79:6"
																		},
																		"nativeSrc": "5212:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "5212:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5185:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "5185:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5194:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5194:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5181:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5181:3:6"
																		},
																		"nativeSrc": "5181:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5181:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5206:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5206:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5177:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5177:3:6"
																},
																"nativeSrc": "5177:32:6",
																"nodeType": "YulFunctionCall",
																"src": "5177:32:6"
															},
															"nativeSrc": "5174:119:6",
															"nodeType": "YulIf",
															"src": "5174:119:6"
														},
														{
															"nativeSrc": "5303:117:6",
															"nodeType": "YulBlock",
															"src": "5303:117:6",
															"statements": [
																{
																	"nativeSrc": "5318:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5318:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5332:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5332:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5322:6:6",
																			"nodeType": "YulTypedName",
																			"src": "5322:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5347:63:6",
																	"nodeType": "YulAssignment",
																	"src": "5347:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5382:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "5382:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5393:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "5393:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5378:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "5378:3:6"
																				},
																				"nativeSrc": "5378:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5378:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5402:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "5402:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5357:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "5357:20:6"
																		},
																		"nativeSrc": "5357:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5357:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5347:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "5347:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5430:118:6",
															"nodeType": "YulBlock",
															"src": "5430:118:6",
															"statements": [
																{
																	"nativeSrc": "5445:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5445:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5459:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5459:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5449:6:6",
																			"nodeType": "YulTypedName",
																			"src": "5449:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5475:63:6",
																	"nodeType": "YulAssignment",
																	"src": "5475:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5510:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "5510:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5521:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "5521:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5506:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "5506:3:6"
																				},
																				"nativeSrc": "5506:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5506:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5530:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "5530:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5485:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "5485:20:6"
																		},
																		"nativeSrc": "5485:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5485:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5475:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "5475:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "5081:474:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5126:9:6",
														"nodeType": "YulTypedName",
														"src": "5126:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5137:7:6",
														"nodeType": "YulTypedName",
														"src": "5137:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5149:6:6",
														"nodeType": "YulTypedName",
														"src": "5149:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5157:6:6",
														"nodeType": "YulTypedName",
														"src": "5157:6:6",
														"type": ""
													}
												],
												"src": "5081:474:6"
											},
											{
												"body": {
													"nativeSrc": "5589:152:6",
													"nodeType": "YulBlock",
													"src": "5589:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5606:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5606:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5609:77:6",
																		"nodeType": "YulLiteral",
																		"src": "5609:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5599:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5599:6:6"
																},
																"nativeSrc": "5599:88:6",
																"nodeType": "YulFunctionCall",
																"src": "5599:88:6"
															},
															"nativeSrc": "5599:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "5599:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5703:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5703:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5706:4:6",
																		"nodeType": "YulLiteral",
																		"src": "5706:4:6",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5696:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5696:6:6"
																},
																"nativeSrc": "5696:15:6",
																"nodeType": "YulFunctionCall",
																"src": "5696:15:6"
															},
															"nativeSrc": "5696:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "5696:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5727:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5727:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5730:4:6",
																		"nodeType": "YulLiteral",
																		"src": "5730:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5720:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5720:6:6"
																},
																"nativeSrc": "5720:15:6",
																"nodeType": "YulFunctionCall",
																"src": "5720:15:6"
															},
															"nativeSrc": "5720:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "5720:15:6"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "5561:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "5561:180:6"
											},
											{
												"body": {
													"nativeSrc": "5798:269:6",
													"nodeType": "YulBlock",
													"src": "5798:269:6",
													"statements": [
														{
															"nativeSrc": "5808:22:6",
															"nodeType": "YulAssignment",
															"src": "5808:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5822:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "5822:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5828:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5828:1:6",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "5818:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5818:3:6"
																},
																"nativeSrc": "5818:12:6",
																"nodeType": "YulFunctionCall",
																"src": "5818:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "5808:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5808:6:6"
																}
															]
														},
														{
															"nativeSrc": "5839:38:6",
															"nodeType": "YulVariableDeclaration",
															"src": "5839:38:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5869:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "5869:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5875:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5875:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5865:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5865:3:6"
																},
																"nativeSrc": "5865:12:6",
																"nodeType": "YulFunctionCall",
																"src": "5865:12:6"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "5843:18:6",
																	"nodeType": "YulTypedName",
																	"src": "5843:18:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5916:51:6",
																"nodeType": "YulBlock",
																"src": "5916:51:6",
																"statements": [
																	{
																		"nativeSrc": "5930:27:6",
																		"nodeType": "YulAssignment",
																		"src": "5930:27:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "5944:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "5944:6:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5952:4:6",
																					"nodeType": "YulLiteral",
																					"src": "5952:4:6",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "5940:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "5940:3:6"
																			},
																			"nativeSrc": "5940:17:6",
																			"nodeType": "YulFunctionCall",
																			"src": "5940:17:6"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "5930:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "5930:6:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "5896:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "5896:18:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5889:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5889:6:6"
																},
																"nativeSrc": "5889:26:6",
																"nodeType": "YulFunctionCall",
																"src": "5889:26:6"
															},
															"nativeSrc": "5886:81:6",
															"nodeType": "YulIf",
															"src": "5886:81:6"
														},
														{
															"body": {
																"nativeSrc": "6019:42:6",
																"nodeType": "YulBlock",
																"src": "6019:42:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "6033:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "6033:16:6"
																			},
																			"nativeSrc": "6033:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6033:18:6"
																		},
																		"nativeSrc": "6033:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "6033:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "5983:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "5983:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "6006:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "6006:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6014:2:6",
																				"nodeType": "YulLiteral",
																				"src": "6014:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "6003:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "6003:2:6"
																		},
																		"nativeSrc": "6003:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6003:14:6"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "5980:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "5980:2:6"
																},
																"nativeSrc": "5980:38:6",
																"nodeType": "YulFunctionCall",
																"src": "5980:38:6"
															},
															"nativeSrc": "5977:84:6",
															"nodeType": "YulIf",
															"src": "5977:84:6"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "5747:320:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "5782:4:6",
														"nodeType": "YulTypedName",
														"src": "5782:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "5791:6:6",
														"nodeType": "YulTypedName",
														"src": "5791:6:6",
														"type": ""
													}
												],
												"src": "5747:320:6"
											},
											{
												"body": {
													"nativeSrc": "6179:131:6",
													"nodeType": "YulBlock",
													"src": "6179:131:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "6201:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "6201:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6209:1:6",
																				"nodeType": "YulLiteral",
																				"src": "6209:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6197:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6197:3:6"
																		},
																		"nativeSrc": "6197:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6197:14:6"
																	},
																	{
																		"hexValue": "546f6b656e7320617265206c6f636b656420756e74696c2074686520756e6c6f",
																		"kind": "string",
																		"nativeSrc": "6213:34:6",
																		"nodeType": "YulLiteral",
																		"src": "6213:34:6",
																		"type": "",
																		"value": "Tokens are locked until the unlo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6190:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6190:6:6"
																},
																"nativeSrc": "6190:58:6",
																"nodeType": "YulFunctionCall",
																"src": "6190:58:6"
															},
															"nativeSrc": "6190:58:6",
															"nodeType": "YulExpressionStatement",
															"src": "6190:58:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "6269:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "6269:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6277:2:6",
																				"nodeType": "YulLiteral",
																				"src": "6277:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6265:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6265:3:6"
																		},
																		"nativeSrc": "6265:15:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6265:15:6"
																	},
																	{
																		"hexValue": "636b2074696d652068617320706173736564",
																		"kind": "string",
																		"nativeSrc": "6282:20:6",
																		"nodeType": "YulLiteral",
																		"src": "6282:20:6",
																		"type": "",
																		"value": "ck time has passed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6258:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6258:6:6"
																},
																"nativeSrc": "6258:45:6",
																"nodeType": "YulFunctionCall",
																"src": "6258:45:6"
															},
															"nativeSrc": "6258:45:6",
															"nodeType": "YulExpressionStatement",
															"src": "6258:45:6"
														}
													]
												},
												"name": "store_literal_in_memory_78cdf57e1a72959a57417d6301fad41b30a618b232e500e1f739b5979bac65fb",
												"nativeSrc": "6073:237:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "6171:6:6",
														"nodeType": "YulTypedName",
														"src": "6171:6:6",
														"type": ""
													}
												],
												"src": "6073:237:6"
											},
											{
												"body": {
													"nativeSrc": "6462:220:6",
													"nodeType": "YulBlock",
													"src": "6462:220:6",
													"statements": [
														{
															"nativeSrc": "6472:74:6",
															"nodeType": "YulAssignment",
															"src": "6472:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6538:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "6538:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6543:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6543:2:6",
																		"type": "",
																		"value": "50"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6479:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "6479:58:6"
																},
																"nativeSrc": "6479:67:6",
																"nodeType": "YulFunctionCall",
																"src": "6479:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6472:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6472:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6644:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "6644:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_78cdf57e1a72959a57417d6301fad41b30a618b232e500e1f739b5979bac65fb",
																	"nativeSrc": "6555:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "6555:88:6"
																},
																"nativeSrc": "6555:93:6",
																"nodeType": "YulFunctionCall",
																"src": "6555:93:6"
															},
															"nativeSrc": "6555:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "6555:93:6"
														},
														{
															"nativeSrc": "6657:19:6",
															"nodeType": "YulAssignment",
															"src": "6657:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6668:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "6668:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6673:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6673:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6664:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6664:3:6"
																},
																"nativeSrc": "6664:12:6",
																"nodeType": "YulFunctionCall",
																"src": "6664:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6657:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6657:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_78cdf57e1a72959a57417d6301fad41b30a618b232e500e1f739b5979bac65fb_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "6316:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6450:3:6",
														"nodeType": "YulTypedName",
														"src": "6450:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6458:3:6",
														"nodeType": "YulTypedName",
														"src": "6458:3:6",
														"type": ""
													}
												],
												"src": "6316:366:6"
											},
											{
												"body": {
													"nativeSrc": "6859:248:6",
													"nodeType": "YulBlock",
													"src": "6859:248:6",
													"statements": [
														{
															"nativeSrc": "6869:26:6",
															"nodeType": "YulAssignment",
															"src": "6869:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6881:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "6881:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6892:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6892:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6877:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6877:3:6"
																},
																"nativeSrc": "6877:18:6",
																"nodeType": "YulFunctionCall",
																"src": "6877:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6869:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "6869:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6916:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6916:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6927:1:6",
																				"nodeType": "YulLiteral",
																				"src": "6927:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6912:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6912:3:6"
																		},
																		"nativeSrc": "6912:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6912:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "6935:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "6935:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6941:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6941:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6931:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6931:3:6"
																		},
																		"nativeSrc": "6931:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6931:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6905:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6905:6:6"
																},
																"nativeSrc": "6905:47:6",
																"nodeType": "YulFunctionCall",
																"src": "6905:47:6"
															},
															"nativeSrc": "6905:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "6905:47:6"
														},
														{
															"nativeSrc": "6961:139:6",
															"nodeType": "YulAssignment",
															"src": "6961:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "7095:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "7095:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_78cdf57e1a72959a57417d6301fad41b30a618b232e500e1f739b5979bac65fb_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6969:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "6969:124:6"
																},
																"nativeSrc": "6969:131:6",
																"nodeType": "YulFunctionCall",
																"src": "6969:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6961:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "6961:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_78cdf57e1a72959a57417d6301fad41b30a618b232e500e1f739b5979bac65fb__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6688:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6839:9:6",
														"nodeType": "YulTypedName",
														"src": "6839:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6854:4:6",
														"nodeType": "YulTypedName",
														"src": "6854:4:6",
														"type": ""
													}
												],
												"src": "6688:419:6"
											},
											{
												"body": {
													"nativeSrc": "7178:53:6",
													"nodeType": "YulBlock",
													"src": "7178:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7195:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "7195:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7218:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "7218:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "7200:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "7200:17:6"
																		},
																		"nativeSrc": "7200:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7200:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7188:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7188:6:6"
																},
																"nativeSrc": "7188:37:6",
																"nodeType": "YulFunctionCall",
																"src": "7188:37:6"
															},
															"nativeSrc": "7188:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "7188:37:6"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "7113:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7166:5:6",
														"nodeType": "YulTypedName",
														"src": "7166:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7173:3:6",
														"nodeType": "YulTypedName",
														"src": "7173:3:6",
														"type": ""
													}
												],
												"src": "7113:118:6"
											},
											{
												"body": {
													"nativeSrc": "7335:124:6",
													"nodeType": "YulBlock",
													"src": "7335:124:6",
													"statements": [
														{
															"nativeSrc": "7345:26:6",
															"nodeType": "YulAssignment",
															"src": "7345:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7357:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "7357:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7368:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7368:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7353:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7353:3:6"
																},
																"nativeSrc": "7353:18:6",
																"nodeType": "YulFunctionCall",
																"src": "7353:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7345:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "7345:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7425:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "7425:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7438:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7438:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7449:1:6",
																				"nodeType": "YulLiteral",
																				"src": "7449:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7434:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7434:3:6"
																		},
																		"nativeSrc": "7434:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7434:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "7381:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "7381:43:6"
																},
																"nativeSrc": "7381:71:6",
																"nodeType": "YulFunctionCall",
																"src": "7381:71:6"
															},
															"nativeSrc": "7381:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "7381:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "7237:222:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7307:9:6",
														"nodeType": "YulTypedName",
														"src": "7307:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7319:6:6",
														"nodeType": "YulTypedName",
														"src": "7319:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7330:4:6",
														"nodeType": "YulTypedName",
														"src": "7330:4:6",
														"type": ""
													}
												],
												"src": "7237:222:6"
											},
											{
												"body": {
													"nativeSrc": "7619:288:6",
													"nodeType": "YulBlock",
													"src": "7619:288:6",
													"statements": [
														{
															"nativeSrc": "7629:26:6",
															"nodeType": "YulAssignment",
															"src": "7629:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7641:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "7641:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7652:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7652:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7637:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7637:3:6"
																},
																"nativeSrc": "7637:18:6",
																"nodeType": "YulFunctionCall",
																"src": "7637:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7629:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "7629:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7709:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "7709:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7722:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7722:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7733:1:6",
																				"nodeType": "YulLiteral",
																				"src": "7733:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7718:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7718:3:6"
																		},
																		"nativeSrc": "7718:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7718:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "7665:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "7665:43:6"
																},
																"nativeSrc": "7665:71:6",
																"nodeType": "YulFunctionCall",
																"src": "7665:71:6"
															},
															"nativeSrc": "7665:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "7665:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "7790:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "7790:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7803:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7803:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7814:2:6",
																				"nodeType": "YulLiteral",
																				"src": "7814:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7799:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7799:3:6"
																		},
																		"nativeSrc": "7799:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7799:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7746:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "7746:43:6"
																},
																"nativeSrc": "7746:72:6",
																"nodeType": "YulFunctionCall",
																"src": "7746:72:6"
															},
															"nativeSrc": "7746:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "7746:72:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "7872:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "7872:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7885:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7885:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7896:2:6",
																				"nodeType": "YulLiteral",
																				"src": "7896:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7881:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7881:3:6"
																		},
																		"nativeSrc": "7881:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7881:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7828:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "7828:43:6"
																},
																"nativeSrc": "7828:72:6",
																"nodeType": "YulFunctionCall",
																"src": "7828:72:6"
															},
															"nativeSrc": "7828:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "7828:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "7465:442:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7575:9:6",
														"nodeType": "YulTypedName",
														"src": "7575:9:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "7587:6:6",
														"nodeType": "YulTypedName",
														"src": "7587:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7595:6:6",
														"nodeType": "YulTypedName",
														"src": "7595:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7603:6:6",
														"nodeType": "YulTypedName",
														"src": "7603:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7614:4:6",
														"nodeType": "YulTypedName",
														"src": "7614:4:6",
														"type": ""
													}
												],
												"src": "7465:442:6"
											},
											{
												"body": {
													"nativeSrc": "7941:152:6",
													"nodeType": "YulBlock",
													"src": "7941:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7958:1:6",
																		"nodeType": "YulLiteral",
																		"src": "7958:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7961:77:6",
																		"nodeType": "YulLiteral",
																		"src": "7961:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7951:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7951:6:6"
																},
																"nativeSrc": "7951:88:6",
																"nodeType": "YulFunctionCall",
																"src": "7951:88:6"
															},
															"nativeSrc": "7951:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "7951:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8055:1:6",
																		"nodeType": "YulLiteral",
																		"src": "8055:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8058:4:6",
																		"nodeType": "YulLiteral",
																		"src": "8058:4:6",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8048:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8048:6:6"
																},
																"nativeSrc": "8048:15:6",
																"nodeType": "YulFunctionCall",
																"src": "8048:15:6"
															},
															"nativeSrc": "8048:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "8048:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8079:1:6",
																		"nodeType": "YulLiteral",
																		"src": "8079:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8082:4:6",
																		"nodeType": "YulLiteral",
																		"src": "8082:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8072:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8072:6:6"
																},
																"nativeSrc": "8072:15:6",
																"nodeType": "YulFunctionCall",
																"src": "8072:15:6"
															},
															"nativeSrc": "8072:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "8072:15:6"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "7913:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "7913:180:6"
											},
											{
												"body": {
													"nativeSrc": "8143:147:6",
													"nodeType": "YulBlock",
													"src": "8143:147:6",
													"statements": [
														{
															"nativeSrc": "8153:25:6",
															"nodeType": "YulAssignment",
															"src": "8153:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8176:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "8176:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8158:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "8158:17:6"
																},
																"nativeSrc": "8158:20:6",
																"nodeType": "YulFunctionCall",
																"src": "8158:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "8153:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "8153:1:6"
																}
															]
														},
														{
															"nativeSrc": "8187:25:6",
															"nodeType": "YulAssignment",
															"src": "8187:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8210:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "8210:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8192:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "8192:17:6"
																},
																"nativeSrc": "8192:20:6",
																"nodeType": "YulFunctionCall",
																"src": "8192:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "8187:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "8187:1:6"
																}
															]
														},
														{
															"nativeSrc": "8221:16:6",
															"nodeType": "YulAssignment",
															"src": "8221:16:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8232:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "8232:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8235:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "8235:1:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8228:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8228:3:6"
																},
																"nativeSrc": "8228:9:6",
																"nodeType": "YulFunctionCall",
																"src": "8228:9:6"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "8221:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8221:3:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8261:22:6",
																"nodeType": "YulBlock",
																"src": "8261:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8263:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "8263:16:6"
																			},
																			"nativeSrc": "8263:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "8263:18:6"
																		},
																		"nativeSrc": "8263:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "8263:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8253:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "8253:1:6"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "8256:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "8256:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8250:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "8250:2:6"
																},
																"nativeSrc": "8250:10:6",
																"nodeType": "YulFunctionCall",
																"src": "8250:10:6"
															},
															"nativeSrc": "8247:36:6",
															"nodeType": "YulIf",
															"src": "8247:36:6"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "8099:191:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8130:1:6",
														"nodeType": "YulTypedName",
														"src": "8130:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8133:1:6",
														"nodeType": "YulTypedName",
														"src": "8133:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "8139:3:6",
														"nodeType": "YulTypedName",
														"src": "8139:3:6",
														"type": ""
													}
												],
												"src": "8099:191:6"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_78cdf57e1a72959a57417d6301fad41b30a618b232e500e1f739b5979bac65fb(memPtr) {\n\n        mstore(add(memPtr, 0), \"Tokens are locked until the unlo\")\n\n        mstore(add(memPtr, 32), \"ck time has passed\")\n\n    }\n\n    function abi_encode_t_stringliteral_78cdf57e1a72959a57417d6301fad41b30a618b232e500e1f739b5979bac65fb_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 50)\n        store_literal_in_memory_78cdf57e1a72959a57417d6301fad41b30a618b232e500e1f739b5979bac65fb(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_78cdf57e1a72959a57417d6301fad41b30a618b232e500e1f739b5979bac65fb__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_78cdf57e1a72959a57417d6301fad41b30a618b232e500e1f739b5979bac65fb_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506004361061009c575f3560e01c8063313ce56711610064578063313ce5671461015a57806370a082311461017857806395d89b41146101a8578063a9059cbb146101c6578063dd62ed3e146101f65761009c565b806306fdde03146100a0578063095ea7b3146100be57806318160ddd146100ee57806323b872dd1461010c578063251c1aa31461013c575b5f80fd5b6100a8610226565b6040516100b59190610b3b565b60405180910390f35b6100d860048036038101906100d39190610bec565b6102b6565b6040516100e59190610c44565b60405180910390f35b6100f66102d8565b6040516101039190610c6c565b60405180910390f35b61012660048036038101906101219190610c85565b6102e1565b6040516101339190610c44565b60405180910390f35b61014461033b565b6040516101519190610c6c565b60405180910390f35b610162610341565b60405161016f9190610cf0565b60405180910390f35b610192600480360381019061018d9190610d09565b610349565b60405161019f9190610c6c565b60405180910390f35b6101b061038e565b6040516101bd9190610b3b565b60405180910390f35b6101e060048036038101906101db9190610bec565b61041e565b6040516101ed9190610c44565b60405180910390f35b610210600480360381019061020b9190610d34565b610476565b60405161021d9190610c6c565b60405180910390f35b60606003805461023590610d9f565b80601f016020809104026020016040519081016040528092919081815260200182805461026190610d9f565b80156102ac5780601f10610283576101008083540402835291602001916102ac565b820191905f5260205f20905b81548152906001019060200180831161028f57829003601f168201915b5050505050905090565b5f806102c06104f8565b90506102cd8185856104ff565b600191505092915050565b5f600254905090565b5f600554421015610327576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161031e90610e3f565b60405180910390fd5b610332848484610511565b90509392505050565b60055481565b5f6012905090565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b60606004805461039d90610d9f565b80601f01602080910402602001604051908101604052809291908181526020018280546103c990610d9f565b80156104145780601f106103eb57610100808354040283529160200191610414565b820191905f5260205f20905b8154815290600101906020018083116103f757829003601f168201915b5050505050905090565b5f600554421015610464576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161045b90610e3f565b60405180910390fd5b61046e838361053f565b905092915050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f33905090565b61050c8383836001610561565b505050565b5f8061051b6104f8565b9050610528858285610730565b6105338585856107c2565b60019150509392505050565b5f806105496104f8565b90506105568185856107c2565b600191505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036105d1575f6040517fe602df050000000000000000000000000000000000000000000000000000000081526004016105c89190610e6c565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610641575f6040517f94280d620000000000000000000000000000000000000000000000000000000081526004016106389190610e6c565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550801561072a578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516107219190610c6c565b60405180910390a35b50505050565b5f61073b8484610476565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146107bc57818110156107ad578281836040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526004016107a493929190610e85565b60405180910390fd5b6107bb84848484035f610561565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610832575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016108299190610e6c565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036108a2575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016108999190610e6c565b60405180910390fd5b6108ad8383836108b2565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610902578060025f8282546108f69190610ee7565b925050819055506109d0565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490508181101561098b578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161098293929190610e85565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a17578060025f8282540392505081905550610a61565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610abe9190610c6c565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f610b0d82610acb565b610b178185610ad5565b9350610b27818560208601610ae5565b610b3081610af3565b840191505092915050565b5f6020820190508181035f830152610b538184610b03565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610b8882610b5f565b9050919050565b610b9881610b7e565b8114610ba2575f80fd5b50565b5f81359050610bb381610b8f565b92915050565b5f819050919050565b610bcb81610bb9565b8114610bd5575f80fd5b50565b5f81359050610be681610bc2565b92915050565b5f8060408385031215610c0257610c01610b5b565b5b5f610c0f85828601610ba5565b9250506020610c2085828601610bd8565b9150509250929050565b5f8115159050919050565b610c3e81610c2a565b82525050565b5f602082019050610c575f830184610c35565b92915050565b610c6681610bb9565b82525050565b5f602082019050610c7f5f830184610c5d565b92915050565b5f805f60608486031215610c9c57610c9b610b5b565b5b5f610ca986828701610ba5565b9350506020610cba86828701610ba5565b9250506040610ccb86828701610bd8565b9150509250925092565b5f60ff82169050919050565b610cea81610cd5565b82525050565b5f602082019050610d035f830184610ce1565b92915050565b5f60208284031215610d1e57610d1d610b5b565b5b5f610d2b84828501610ba5565b91505092915050565b5f8060408385031215610d4a57610d49610b5b565b5b5f610d5785828601610ba5565b9250506020610d6885828601610ba5565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680610db657607f821691505b602082108103610dc957610dc8610d72565b5b50919050565b7f546f6b656e7320617265206c6f636b656420756e74696c2074686520756e6c6f5f8201527f636b2074696d6520686173207061737365640000000000000000000000000000602082015250565b5f610e29603283610ad5565b9150610e3482610dcf565b604082019050919050565b5f6020820190508181035f830152610e5681610e1d565b9050919050565b610e6681610b7e565b82525050565b5f602082019050610e7f5f830184610e5d565b92915050565b5f606082019050610e985f830186610e5d565b610ea56020830185610c5d565b610eb26040830184610c5d565b949350505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610ef182610bb9565b9150610efc83610bb9565b9250828201905080821115610f1457610f13610eba565b5b9291505056fea26469706673582212203933eee64e931878bddd6c48dcb998b12d0280746a0b35e39e0a03f80703c21064736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9C JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x313CE567 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1A8 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1F6 JUMPI PUSH2 0x9C JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xA0 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xBE JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEE JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x10C JUMPI DUP1 PUSH4 0x251C1AA3 EQ PUSH2 0x13C JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xA8 PUSH2 0x226 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB5 SWAP2 SWAP1 PUSH2 0xB3B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD3 SWAP2 SWAP1 PUSH2 0xBEC JUMP JUMPDEST PUSH2 0x2B6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE5 SWAP2 SWAP1 PUSH2 0xC44 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF6 PUSH2 0x2D8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x103 SWAP2 SWAP1 PUSH2 0xC6C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x126 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x121 SWAP2 SWAP1 PUSH2 0xC85 JUMP JUMPDEST PUSH2 0x2E1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x133 SWAP2 SWAP1 PUSH2 0xC44 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x144 PUSH2 0x33B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x151 SWAP2 SWAP1 PUSH2 0xC6C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x162 PUSH2 0x341 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16F SWAP2 SWAP1 PUSH2 0xCF0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x192 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18D SWAP2 SWAP1 PUSH2 0xD09 JUMP JUMPDEST PUSH2 0x349 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19F SWAP2 SWAP1 PUSH2 0xC6C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B0 PUSH2 0x38E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BD SWAP2 SWAP1 PUSH2 0xB3B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DB SWAP2 SWAP1 PUSH2 0xBEC JUMP JUMPDEST PUSH2 0x41E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1ED SWAP2 SWAP1 PUSH2 0xC44 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x210 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20B SWAP2 SWAP1 PUSH2 0xD34 JUMP JUMPDEST PUSH2 0x476 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21D SWAP2 SWAP1 PUSH2 0xC6C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x235 SWAP1 PUSH2 0xD9F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x261 SWAP1 PUSH2 0xD9F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2AC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x283 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2AC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x28F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x2C0 PUSH2 0x4F8 JUMP JUMPDEST SWAP1 POP PUSH2 0x2CD DUP2 DUP6 DUP6 PUSH2 0x4FF JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x5 SLOAD TIMESTAMP LT ISZERO PUSH2 0x327 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x31E SWAP1 PUSH2 0xE3F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x332 DUP5 DUP5 DUP5 PUSH2 0x511 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x39D SWAP1 PUSH2 0xD9F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3C9 SWAP1 PUSH2 0xD9F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x414 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3EB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x414 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3F7 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x5 SLOAD TIMESTAMP LT ISZERO PUSH2 0x464 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x45B SWAP1 PUSH2 0xE3F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x46E DUP4 DUP4 PUSH2 0x53F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x50C DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x561 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x51B PUSH2 0x4F8 JUMP JUMPDEST SWAP1 POP PUSH2 0x528 DUP6 DUP3 DUP6 PUSH2 0x730 JUMP JUMPDEST PUSH2 0x533 DUP6 DUP6 DUP6 PUSH2 0x7C2 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x549 PUSH2 0x4F8 JUMP JUMPDEST SWAP1 POP PUSH2 0x556 DUP2 DUP6 DUP6 PUSH2 0x7C2 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x5D1 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C8 SWAP2 SWAP1 PUSH2 0xE6C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x641 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x638 SWAP2 SWAP1 PUSH2 0xE6C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x72A JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x721 SWAP2 SWAP1 PUSH2 0xC6C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x73B DUP5 DUP5 PUSH2 0x476 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x7BC JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x7AD JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7A4 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xE85 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7BB DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x561 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x832 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x829 SWAP2 SWAP1 PUSH2 0xE6C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8A2 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x899 SWAP2 SWAP1 PUSH2 0xE6C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8AD DUP4 DUP4 DUP4 PUSH2 0x8B2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x902 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x8F6 SWAP2 SWAP1 PUSH2 0xEE7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x9D0 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x98B JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x982 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xE85 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA17 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xA61 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xABE SWAP2 SWAP1 PUSH2 0xC6C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xB0D DUP3 PUSH2 0xACB JUMP JUMPDEST PUSH2 0xB17 DUP2 DUP6 PUSH2 0xAD5 JUMP JUMPDEST SWAP4 POP PUSH2 0xB27 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xAE5 JUMP JUMPDEST PUSH2 0xB30 DUP2 PUSH2 0xAF3 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xB53 DUP2 DUP5 PUSH2 0xB03 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xB88 DUP3 PUSH2 0xB5F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB98 DUP2 PUSH2 0xB7E JUMP JUMPDEST DUP2 EQ PUSH2 0xBA2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBB3 DUP2 PUSH2 0xB8F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBCB DUP2 PUSH2 0xBB9 JUMP JUMPDEST DUP2 EQ PUSH2 0xBD5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBE6 DUP2 PUSH2 0xBC2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC02 JUMPI PUSH2 0xC01 PUSH2 0xB5B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xC0F DUP6 DUP3 DUP7 ADD PUSH2 0xBA5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xC20 DUP6 DUP3 DUP7 ADD PUSH2 0xBD8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC3E DUP2 PUSH2 0xC2A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC57 PUSH0 DUP4 ADD DUP5 PUSH2 0xC35 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC66 DUP2 PUSH2 0xBB9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC7F PUSH0 DUP4 ADD DUP5 PUSH2 0xC5D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC9C JUMPI PUSH2 0xC9B PUSH2 0xB5B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xCA9 DUP7 DUP3 DUP8 ADD PUSH2 0xBA5 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xCBA DUP7 DUP3 DUP8 ADD PUSH2 0xBA5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xCCB DUP7 DUP3 DUP8 ADD PUSH2 0xBD8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCEA DUP2 PUSH2 0xCD5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD03 PUSH0 DUP4 ADD DUP5 PUSH2 0xCE1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD1E JUMPI PUSH2 0xD1D PUSH2 0xB5B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xD2B DUP5 DUP3 DUP6 ADD PUSH2 0xBA5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD4A JUMPI PUSH2 0xD49 PUSH2 0xB5B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xD57 DUP6 DUP3 DUP7 ADD PUSH2 0xBA5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xD68 DUP6 DUP3 DUP7 ADD PUSH2 0xBA5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xDB6 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xDC9 JUMPI PUSH2 0xDC8 PUSH2 0xD72 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x546F6B656E7320617265206C6F636B656420756E74696C2074686520756E6C6F PUSH0 DUP3 ADD MSTORE PUSH32 0x636B2074696D6520686173207061737365640000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xE29 PUSH1 0x32 DUP4 PUSH2 0xAD5 JUMP JUMPDEST SWAP2 POP PUSH2 0xE34 DUP3 PUSH2 0xDCF JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xE56 DUP2 PUSH2 0xE1D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE66 DUP2 PUSH2 0xB7E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE7F PUSH0 DUP4 ADD DUP5 PUSH2 0xE5D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xE98 PUSH0 DUP4 ADD DUP7 PUSH2 0xE5D JUMP JUMPDEST PUSH2 0xEA5 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xC5D JUMP JUMPDEST PUSH2 0xEB2 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xC5D JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xEF1 DUP3 PUSH2 0xBB9 JUMP JUMPDEST SWAP2 POP PUSH2 0xEFC DUP4 PUSH2 0xBB9 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xF14 JUMPI PUSH2 0xF13 PUSH2 0xEBA JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODECOPY CALLER 0xEE 0xE6 0x4E SWAP4 XOR PUSH25 0xBDDD6C48DCB998B12D0280746A0B35E39E0A03F80703C21064 PUSH20 0x6F6C634300081A00330000000000000000000000 ",
							"sourceMap": "119:1158:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3998:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2849:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;996:278:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;160:25;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2707:82:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3004:116;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1981:93;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;679:246:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3551:140:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1779:89;1824:13;1856:5;1849:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89;:::o;3998:186::-;4071:4;4087:13;4103:12;:10;:12::i;:::-;4087:28;;4125:31;4134:5;4141:7;4150:5;4125:8;:31::i;:::-;4173:4;4166:11;;;3998:186;;;;:::o;2849:97::-;2901:7;2927:12;;2920:19;;2849:97;:::o;996:278:5:-;1094:4;1138:10;;1119:15;:29;;1111:92;;;;;;;;;;;;:::i;:::-;;;;;;;;;1221:45;1240:6;1248:9;1259:6;1221:18;:45::i;:::-;1214:52;;996:278;;;;;:::o;160:25::-;;;;:::o;2707:82:1:-;2756:5;2780:2;2773:9;;2707:82;:::o;3004:116::-;3069:7;3095:9;:18;3105:7;3095:18;;;;;;;;;;;;;;;;3088:25;;3004:116;;;:::o;1981:93::-;2028:13;2060:7;2053:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1981:93;:::o;679:246:5:-;757:4;801:10;;782:15;:29;;774:92;;;;;;;;;;;;:::i;:::-;;;;;;;;;884:33;899:9;910:6;884:14;:33::i;:::-;877:40;;679:246;;;;:::o;3551:140:1:-;3631:7;3657:11;:18;3669:5;3657:18;;;;;;;;;;;;;;;:27;3676:7;3657:27;;;;;;;;;;;;;;;;3650:34;;3551:140;;;;:::o;656:96:4:-;709:7;735:10;728:17;;656:96;:::o;8726:128:1:-;8810:37;8819:5;8826:7;8835:5;8842:4;8810:8;:37::i;:::-;8726:128;;;:::o;4776:244::-;4863:4;4879:15;4897:12;:10;:12::i;:::-;4879:30;;4919:37;4935:4;4941:7;4950:5;4919:15;:37::i;:::-;4966:26;4976:4;4982:2;4986:5;4966:9;:26::i;:::-;5009:4;5002:11;;;4776:244;;;;;:::o;3315:178::-;3384:4;3400:13;3416:12;:10;:12::i;:::-;3400:28;;3438:27;3448:5;3455:2;3459:5;3438:9;:27::i;:::-;3482:4;3475:11;;;3315:178;;;;:::o;9701:432::-;9830:1;9813:19;;:5;:19;;;9809:89;;9884:1;9855:32;;;;;;;;;;;:::i;:::-;;;;;;;;9809:89;9930:1;9911:21;;:7;:21;;;9907:90;;9983:1;9955:31;;;;;;;;;;;:::i;:::-;;;;;;;;9907:90;10036:5;10006:11;:18;10018:5;10006:18;;;;;;;;;;;;;;;:27;10025:7;10006:27;;;;;;;;;;;;;;;:35;;;;10055:9;10051:76;;;10101:7;10085:31;;10094:5;10085:31;;;10110:5;10085:31;;;;;;:::i;:::-;;;;;;;;10051:76;9701:432;;;;:::o;10415:477::-;10514:24;10541:25;10551:5;10558:7;10541:9;:25::i;:::-;10514:52;;10600:17;10580:16;:37;10576:310;;10656:5;10637:16;:24;10633:130;;;10715:7;10724:16;10742:5;10688:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10633:130;10804:57;10813:5;10820:7;10848:5;10829:16;:24;10855:5;10804:8;:57::i;:::-;10576:310;10504:388;10415:477;;;:::o;5393:300::-;5492:1;5476:18;;:4;:18;;;5472:86;;5544:1;5517:30;;;;;;;;;;;:::i;:::-;;;;;;;;5472:86;5585:1;5571:16;;:2;:16;;;5567:86;;5639:1;5610:32;;;;;;;;;;;:::i;:::-;;;;;;;;5567:86;5662:24;5670:4;5676:2;5680:5;5662:7;:24::i;:::-;5393:300;;;:::o;6008:1107::-;6113:1;6097:18;;:4;:18;;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;;;;;6093:540;;;6285:19;6307:9;:15;6317:4;6307:15;;;;;;;;;;;;;;;;6285:37;;6354:5;6340:11;:19;6336:115;;;6411:4;6417:11;6430:5;6386:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6336:115;6603:5;6589:11;:19;6571:9;:15;6581:4;6571:15;;;;;;;;;;;;;;;:37;;;;6271:362;6093:540;6661:1;6647:16;;:2;:16;;;6643:425;;6826:5;6810:12;;:21;;;;;;;;;;;6643:425;;;7038:5;7021:9;:13;7031:2;7021:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6643:425;7098:2;7083:25;;7092:4;7083:25;;;7102:5;7083:25;;;;;;:::i;:::-;;;;;;;;6008:1107;;;:::o;7:99:6:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:139::-;376:6;371:3;366;360:23;417:1;408:6;403:3;399:16;392:27;287:139;;;:::o;432:102::-;473:6;524:2;520:7;515:2;508:5;504:14;500:28;490:38;;432:102;;;:::o;540:377::-;628:3;656:39;689:5;656:39;:::i;:::-;711:71;775:6;770:3;711:71;:::i;:::-;704:78;;791:65;849:6;844:3;837:4;830:5;826:16;791:65;:::i;:::-;881:29;903:6;881:29;:::i;:::-;876:3;872:39;865:46;;632:285;540:377;;;;:::o;923:313::-;1036:4;1074:2;1063:9;1059:18;1051:26;;1123:9;1117:4;1113:20;1109:1;1098:9;1094:17;1087:47;1151:78;1224:4;1215:6;1151:78;:::i;:::-;1143:86;;923:313;;;;:::o;1323:117::-;1432:1;1429;1422:12;1569:126;1606:7;1646:42;1639:5;1635:54;1624:65;;1569:126;;;:::o;1701:96::-;1738:7;1767:24;1785:5;1767:24;:::i;:::-;1756:35;;1701:96;;;:::o;1803:122::-;1876:24;1894:5;1876:24;:::i;:::-;1869:5;1866:35;1856:63;;1915:1;1912;1905:12;1856:63;1803:122;:::o;1931:139::-;1977:5;2015:6;2002:20;1993:29;;2031:33;2058:5;2031:33;:::i;:::-;1931:139;;;;:::o;2076:77::-;2113:7;2142:5;2131:16;;2076:77;;;:::o;2159:122::-;2232:24;2250:5;2232:24;:::i;:::-;2225:5;2222:35;2212:63;;2271:1;2268;2261:12;2212:63;2159:122;:::o;2287:139::-;2333:5;2371:6;2358:20;2349:29;;2387:33;2414:5;2387:33;:::i;:::-;2287:139;;;;:::o;2432:474::-;2500:6;2508;2557:2;2545:9;2536:7;2532:23;2528:32;2525:119;;;2563:79;;:::i;:::-;2525:119;2683:1;2708:53;2753:7;2744:6;2733:9;2729:22;2708:53;:::i;:::-;2698:63;;2654:117;2810:2;2836:53;2881:7;2872:6;2861:9;2857:22;2836:53;:::i;:::-;2826:63;;2781:118;2432:474;;;;;:::o;2912:90::-;2946:7;2989:5;2982:13;2975:21;2964:32;;2912:90;;;:::o;3008:109::-;3089:21;3104:5;3089:21;:::i;:::-;3084:3;3077:34;3008:109;;:::o;3123:210::-;3210:4;3248:2;3237:9;3233:18;3225:26;;3261:65;3323:1;3312:9;3308:17;3299:6;3261:65;:::i;:::-;3123:210;;;;:::o;3339:118::-;3426:24;3444:5;3426:24;:::i;:::-;3421:3;3414:37;3339:118;;:::o;3463:222::-;3556:4;3594:2;3583:9;3579:18;3571:26;;3607:71;3675:1;3664:9;3660:17;3651:6;3607:71;:::i;:::-;3463:222;;;;:::o;3691:619::-;3768:6;3776;3784;3833:2;3821:9;3812:7;3808:23;3804:32;3801:119;;;3839:79;;:::i;:::-;3801:119;3959:1;3984:53;4029:7;4020:6;4009:9;4005:22;3984:53;:::i;:::-;3974:63;;3930:117;4086:2;4112:53;4157:7;4148:6;4137:9;4133:22;4112:53;:::i;:::-;4102:63;;4057:118;4214:2;4240:53;4285:7;4276:6;4265:9;4261:22;4240:53;:::i;:::-;4230:63;;4185:118;3691:619;;;;;:::o;4316:86::-;4351:7;4391:4;4384:5;4380:16;4369:27;;4316:86;;;:::o;4408:112::-;4491:22;4507:5;4491:22;:::i;:::-;4486:3;4479:35;4408:112;;:::o;4526:214::-;4615:4;4653:2;4642:9;4638:18;4630:26;;4666:67;4730:1;4719:9;4715:17;4706:6;4666:67;:::i;:::-;4526:214;;;;:::o;4746:329::-;4805:6;4854:2;4842:9;4833:7;4829:23;4825:32;4822:119;;;4860:79;;:::i;:::-;4822:119;4980:1;5005:53;5050:7;5041:6;5030:9;5026:22;5005:53;:::i;:::-;4995:63;;4951:117;4746:329;;;;:::o;5081:474::-;5149:6;5157;5206:2;5194:9;5185:7;5181:23;5177:32;5174:119;;;5212:79;;:::i;:::-;5174:119;5332:1;5357:53;5402:7;5393:6;5382:9;5378:22;5357:53;:::i;:::-;5347:63;;5303:117;5459:2;5485:53;5530:7;5521:6;5510:9;5506:22;5485:53;:::i;:::-;5475:63;;5430:118;5081:474;;;;;:::o;5561:180::-;5609:77;5606:1;5599:88;5706:4;5703:1;5696:15;5730:4;5727:1;5720:15;5747:320;5791:6;5828:1;5822:4;5818:12;5808:22;;5875:1;5869:4;5865:12;5896:18;5886:81;;5952:4;5944:6;5940:17;5930:27;;5886:81;6014:2;6006:6;6003:14;5983:18;5980:38;5977:84;;6033:18;;:::i;:::-;5977:84;5798:269;5747:320;;;:::o;6073:237::-;6213:34;6209:1;6201:6;6197:14;6190:58;6282:20;6277:2;6269:6;6265:15;6258:45;6073:237;:::o;6316:366::-;6458:3;6479:67;6543:2;6538:3;6479:67;:::i;:::-;6472:74;;6555:93;6644:3;6555:93;:::i;:::-;6673:2;6668:3;6664:12;6657:19;;6316:366;;;:::o;6688:419::-;6854:4;6892:2;6881:9;6877:18;6869:26;;6941:9;6935:4;6931:20;6927:1;6916:9;6912:17;6905:47;6969:131;7095:4;6969:131;:::i;:::-;6961:139;;6688:419;;;:::o;7113:118::-;7200:24;7218:5;7200:24;:::i;:::-;7195:3;7188:37;7113:118;;:::o;7237:222::-;7330:4;7368:2;7357:9;7353:18;7345:26;;7381:71;7449:1;7438:9;7434:17;7425:6;7381:71;:::i;:::-;7237:222;;;;:::o;7465:442::-;7614:4;7652:2;7641:9;7637:18;7629:26;;7665:71;7733:1;7722:9;7718:17;7709:6;7665:71;:::i;:::-;7746:72;7814:2;7803:9;7799:18;7790:6;7746:72;:::i;:::-;7828;7896:2;7885:9;7881:18;7872:6;7828:72;:::i;:::-;7465:442;;;;;;:::o;7913:180::-;7961:77;7958:1;7951:88;8058:4;8055:1;8048:15;8082:4;8079:1;8072:15;8099:191;8139:3;8158:20;8176:1;8158:20;:::i;:::-;8153:25;;8192:20;8210:1;8192:20;:::i;:::-;8187:25;;8235:1;8232;8228:9;8221:16;;8256:3;8253:1;8250:10;8247:36;;;8263:18;;:::i;:::-;8247:36;8099:191;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "784000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2851",
								"decimals()": "338",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2477",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"unlockTime()": "2514"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 119,
									"end": 1277,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 119,
									"end": 1277,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 119,
									"end": 1277,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 250,
									"end": 612,
									"name": "CALLVALUE",
									"source": 5
								},
								{
									"begin": 250,
									"end": 612,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 250,
									"end": 612,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 250,
									"end": 612,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 250,
									"end": 612,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 250,
									"end": 612,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 250,
									"end": 612,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 250,
									"end": 612,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 250,
									"end": 612,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 250,
									"end": 612,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 250,
									"end": 612,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 250,
									"end": 612,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 250,
									"end": 612,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 250,
									"end": 612,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 250,
									"end": 612,
									"name": "CODESIZE",
									"source": 5
								},
								{
									"begin": 250,
									"end": 612,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 250,
									"end": 612,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 250,
									"end": 612,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 250,
									"end": 612,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 250,
									"end": 612,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 250,
									"end": 612,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 250,
									"end": 612,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 250,
									"end": 612,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 250,
									"end": 612,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 250,
									"end": 612,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 250,
									"end": 612,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 250,
									"end": 612,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 250,
									"end": 612,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 250,
									"end": 612,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 250,
									"end": 612,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 250,
									"end": 612,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 250,
									"end": 612,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 250,
									"end": 612,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 250,
									"end": 612,
									"name": "tag",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 250,
									"end": 612,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 1,
									"value": "F"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 1,
									"value": "54696D654C6F636B6564546F6B656E0000000000000000000000000000000000"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 1,
									"value": "544C540000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1675,
									"end": 1680,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1667,
									"end": 1672,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1667,
									"end": 1680,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1700,
									"end": 1707,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1690,
									"end": 1697,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1690,
									"end": 1707,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "tag",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 417,
									"end": 468,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 423,
									"end": 433,
									"modifierDepth": 1,
									"name": "CALLER",
									"source": 5
								},
								{
									"begin": 457,
									"end": 467,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "12"
								},
								{
									"begin": 457,
									"end": 465,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "13"
								},
								{
									"begin": 457,
									"end": 465,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 457,
									"end": 465,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 457,
									"end": 467,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 457,
									"end": 467,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 457,
									"end": 467,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 457,
									"end": 467,
									"modifierDepth": 1,
									"name": "tag",
									"source": 5,
									"value": "12"
								},
								{
									"begin": 457,
									"end": 467,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 451,
									"end": 453,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "A"
								},
								{
									"begin": 451,
									"end": 467,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "14"
								},
								{
									"begin": 451,
									"end": 467,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 451,
									"end": 467,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 451,
									"end": 467,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "15"
								},
								{
									"begin": 451,
									"end": 467,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 451,
									"end": 467,
									"modifierDepth": 1,
									"name": "tag",
									"source": 5,
									"value": "14"
								},
								{
									"begin": 451,
									"end": 467,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 435,
									"end": 448,
									"modifierDepth": 1,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 435,
									"end": 467,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "16"
								},
								{
									"begin": 435,
									"end": 467,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 435,
									"end": 467,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 435,
									"end": 467,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "17"
								},
								{
									"begin": 435,
									"end": 467,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 435,
									"end": 467,
									"modifierDepth": 1,
									"name": "tag",
									"source": 5,
									"value": "16"
								},
								{
									"begin": 435,
									"end": 467,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 417,
									"end": 422,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "18"
								},
								{
									"begin": 417,
									"end": 422,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 417,
									"end": 422,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 417,
									"end": 468,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 417,
									"end": 468,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 417,
									"end": 468,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 417,
									"end": 468,
									"modifierDepth": 1,
									"name": "tag",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 417,
									"end": 468,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 544,
									"end": 561,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 526,
									"end": 541,
									"modifierDepth": 1,
									"name": "TIMESTAMP",
									"source": 5
								},
								{
									"begin": 526,
									"end": 561,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "19"
								},
								{
									"begin": 526,
									"end": 561,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 526,
									"end": 561,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 526,
									"end": 561,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 526,
									"end": 561,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 526,
									"end": 561,
									"modifierDepth": 1,
									"name": "tag",
									"source": 5,
									"value": "19"
								},
								{
									"begin": 526,
									"end": 561,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 513,
									"end": 523,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "5"
								},
								{
									"begin": 513,
									"end": 561,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 513,
									"end": 561,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 513,
									"end": 561,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 513,
									"end": 561,
									"modifierDepth": 1,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 250,
									"end": 612,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 250,
									"end": 612,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 119,
									"end": 1277,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "21"
								},
								{
									"begin": 119,
									"end": 1277,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2707,
									"end": 2789,
									"name": "tag",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 2707,
									"end": 2789,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2756,
									"end": 2761,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2780,
									"end": 2782,
									"name": "PUSH",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 2773,
									"end": 2782,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2773,
									"end": 2782,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2707,
									"end": 2789,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2707,
									"end": 2789,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "tag",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7547,
									"end": 7548,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7528,
									"end": 7535,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 7601,
									"end": 7602,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 1,
									"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 7572,
									"end": 7604,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "tag",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "tag",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 7640,
									"end": 7641,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7644,
									"end": 7651,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7653,
									"end": 7658,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7624,
									"end": 7631,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 7624,
									"end": 7631,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7624,
									"end": 7631,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 7624,
									"end": 7659,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "tag",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7458,
									"end": 7666,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "tag",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6113,
									"end": 6114,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6097,
									"end": 6101,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 6249,
									"end": 6254,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 6233,
									"end": 6245,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 6233,
									"end": 6245,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6233,
									"end": 6254,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "tag",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "tag",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6285,
									"end": 6304,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6307,
									"end": 6316,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6317,
									"end": 6321,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 6285,
									"end": 6322,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6285,
									"end": 6322,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6354,
									"end": 6359,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6340,
									"end": 6351,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6340,
									"end": 6359,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 6411,
									"end": 6415,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 6417,
									"end": 6428,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6430,
									"end": 6435,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 1,
									"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 6386,
									"end": 6436,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "tag",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "tag",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6603,
									"end": 6608,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6589,
									"end": 6600,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6589,
									"end": 6608,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 6571,
									"end": 6580,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 6581,
									"end": 6585,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6271,
									"end": 6633,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "tag",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6661,
									"end": 6662,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6647,
									"end": 6649,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 6826,
									"end": 6831,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 6810,
									"end": 6822,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 6810,
									"end": 6822,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "tag",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7038,
									"end": 7043,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7021,
									"end": 7030,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7031,
									"end": 7033,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "tag",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7098,
									"end": 7100,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7092,
									"end": 7096,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 1,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 7102,
									"end": 7107,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 7083,
									"end": 7108,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "tag",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "LOG3",
									"source": 1
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6008,
									"end": 7115,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 334,
									"end": 411,
									"name": "tag",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 334,
									"end": 411,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 400,
									"end": 405,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 389,
									"end": 405,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 389,
									"end": 405,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 334,
									"end": 411,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 334,
									"end": 411,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 334,
									"end": 411,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 334,
									"end": 411,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 417,
									"end": 539,
									"name": "tag",
									"source": 6,
									"value": "44"
								},
								{
									"begin": 417,
									"end": 539,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 490,
									"end": 514,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 508,
									"end": 513,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 490,
									"end": 514,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 490,
									"end": 514,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 490,
									"end": 514,
									"name": "tag",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 490,
									"end": 514,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 483,
									"end": 488,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 480,
									"end": 515,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 470,
									"end": 533,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "81"
								},
								{
									"begin": 470,
									"end": 533,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 529,
									"end": 530,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 526,
									"end": 527,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 519,
									"end": 531,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 470,
									"end": 533,
									"name": "tag",
									"source": 6,
									"value": "81"
								},
								{
									"begin": 470,
									"end": 533,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 417,
									"end": 539,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 417,
									"end": 539,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 545,
									"end": 688,
									"name": "tag",
									"source": 6,
									"value": "45"
								},
								{
									"begin": 545,
									"end": 688,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 602,
									"end": 607,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 633,
									"end": 639,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 627,
									"end": 640,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 618,
									"end": 640,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 618,
									"end": 640,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 649,
									"end": 682,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "83"
								},
								{
									"begin": 676,
									"end": 681,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 649,
									"end": 682,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "44"
								},
								{
									"begin": 649,
									"end": 682,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 649,
									"end": 682,
									"name": "tag",
									"source": 6,
									"value": "83"
								},
								{
									"begin": 649,
									"end": 682,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 545,
									"end": 688,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 545,
									"end": 688,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 545,
									"end": 688,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 545,
									"end": 688,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 545,
									"end": 688,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 694,
									"end": 1201,
									"name": "tag",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 694,
									"end": 1201,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 773,
									"end": 779,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 781,
									"end": 787,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 830,
									"end": 832,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 818,
									"end": 827,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 809,
									"end": 816,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 805,
									"end": 828,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 801,
									"end": 833,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 798,
									"end": 917,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 798,
									"end": 917,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "85"
								},
								{
									"begin": 798,
									"end": 917,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 836,
									"end": 915,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "86"
								},
								{
									"begin": 836,
									"end": 915,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 836,
									"end": 915,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 836,
									"end": 915,
									"name": "tag",
									"source": 6,
									"value": "86"
								},
								{
									"begin": 836,
									"end": 915,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 798,
									"end": 917,
									"name": "tag",
									"source": 6,
									"value": "85"
								},
								{
									"begin": 798,
									"end": 917,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 956,
									"end": 957,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 981,
									"end": 1045,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "87"
								},
								{
									"begin": 1037,
									"end": 1044,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1028,
									"end": 1034,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1017,
									"end": 1026,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 1013,
									"end": 1035,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 981,
									"end": 1045,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "45"
								},
								{
									"begin": 981,
									"end": 1045,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 981,
									"end": 1045,
									"name": "tag",
									"source": 6,
									"value": "87"
								},
								{
									"begin": 981,
									"end": 1045,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 971,
									"end": 1045,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 971,
									"end": 1045,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 927,
									"end": 1055,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1094,
									"end": 1096,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1120,
									"end": 1184,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "88"
								},
								{
									"begin": 1176,
									"end": 1183,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1167,
									"end": 1173,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1156,
									"end": 1165,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 1152,
									"end": 1174,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1120,
									"end": 1184,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "45"
								},
								{
									"begin": 1120,
									"end": 1184,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1120,
									"end": 1184,
									"name": "tag",
									"source": 6,
									"value": "88"
								},
								{
									"begin": 1120,
									"end": 1184,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1110,
									"end": 1184,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1110,
									"end": 1184,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1065,
									"end": 1194,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 694,
									"end": 1201,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 694,
									"end": 1201,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 694,
									"end": 1201,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 694,
									"end": 1201,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 694,
									"end": 1201,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 694,
									"end": 1201,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1207,
									"end": 1306,
									"name": "tag",
									"source": 6,
									"value": "46"
								},
								{
									"begin": 1207,
									"end": 1306,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1259,
									"end": 1265,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1293,
									"end": 1298,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1287,
									"end": 1299,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1277,
									"end": 1299,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1277,
									"end": 1299,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1207,
									"end": 1306,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1207,
									"end": 1306,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1207,
									"end": 1306,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1207,
									"end": 1306,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1312,
									"end": 1492,
									"name": "tag",
									"source": 6,
									"value": "47"
								},
								{
									"begin": 1312,
									"end": 1492,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1360,
									"end": 1437,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1357,
									"end": 1358,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1350,
									"end": 1438,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1457,
									"end": 1461,
									"name": "PUSH",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 1454,
									"end": 1455,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 1447,
									"end": 1462,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1481,
									"end": 1485,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 1478,
									"end": 1479,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1471,
									"end": 1486,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1498,
									"end": 1678,
									"name": "tag",
									"source": 6,
									"value": "48"
								},
								{
									"begin": 1498,
									"end": 1678,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1546,
									"end": 1623,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1543,
									"end": 1544,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1536,
									"end": 1624,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1643,
									"end": 1647,
									"name": "PUSH",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 1640,
									"end": 1641,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 1633,
									"end": 1648,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1667,
									"end": 1671,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 1664,
									"end": 1665,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1657,
									"end": 1672,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1684,
									"end": 2004,
									"name": "tag",
									"source": 6,
									"value": "49"
								},
								{
									"begin": 1684,
									"end": 2004,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1728,
									"end": 1734,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1765,
									"end": 1766,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 1759,
									"end": 1763,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1755,
									"end": 1767,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 1745,
									"end": 1767,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1745,
									"end": 1767,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1812,
									"end": 1813,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1806,
									"end": 1810,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1802,
									"end": 1814,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1833,
									"end": 1851,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1823,
									"end": 1904,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "93"
								},
								{
									"begin": 1823,
									"end": 1904,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1889,
									"end": 1893,
									"name": "PUSH",
									"source": 6,
									"value": "7F"
								},
								{
									"begin": 1881,
									"end": 1887,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1877,
									"end": 1894,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1867,
									"end": 1894,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1867,
									"end": 1894,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1823,
									"end": 1904,
									"name": "tag",
									"source": 6,
									"value": "93"
								},
								{
									"begin": 1823,
									"end": 1904,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1951,
									"end": 1953,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1943,
									"end": 1949,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1940,
									"end": 1954,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 1920,
									"end": 1938,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1917,
									"end": 1955,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1914,
									"end": 1998,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "94"
								},
								{
									"begin": 1914,
									"end": 1998,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1970,
									"end": 1988,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "95"
								},
								{
									"begin": 1970,
									"end": 1988,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "48"
								},
								{
									"begin": 1970,
									"end": 1988,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1970,
									"end": 1988,
									"name": "tag",
									"source": 6,
									"value": "95"
								},
								{
									"begin": 1970,
									"end": 1988,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1914,
									"end": 1998,
									"name": "tag",
									"source": 6,
									"value": "94"
								},
								{
									"begin": 1914,
									"end": 1998,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1735,
									"end": 2004,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1684,
									"end": 2004,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1684,
									"end": 2004,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1684,
									"end": 2004,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1684,
									"end": 2004,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2010,
									"end": 2151,
									"name": "tag",
									"source": 6,
									"value": "50"
								},
								{
									"begin": 2010,
									"end": 2151,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2059,
									"end": 2063,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2082,
									"end": 2085,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2074,
									"end": 2085,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2074,
									"end": 2085,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2105,
									"end": 2108,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2102,
									"end": 2103,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2095,
									"end": 2109,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2139,
									"end": 2143,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2136,
									"end": 2137,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2126,
									"end": 2144,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 2118,
									"end": 2144,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2118,
									"end": 2144,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2010,
									"end": 2151,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2010,
									"end": 2151,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2010,
									"end": 2151,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2010,
									"end": 2151,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2157,
									"end": 2250,
									"name": "tag",
									"source": 6,
									"value": "51"
								},
								{
									"begin": 2157,
									"end": 2250,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2194,
									"end": 2200,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2241,
									"end": 2243,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2236,
									"end": 2238,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 2229,
									"end": 2234,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 2225,
									"end": 2239,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2221,
									"end": 2244,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 2211,
									"end": 2244,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2211,
									"end": 2244,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2157,
									"end": 2250,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2157,
									"end": 2250,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2157,
									"end": 2250,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2157,
									"end": 2250,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2256,
									"end": 2363,
									"name": "tag",
									"source": 6,
									"value": "52"
								},
								{
									"begin": 2256,
									"end": 2363,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2300,
									"end": 2308,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2350,
									"end": 2355,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2344,
									"end": 2348,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2340,
									"end": 2356,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 2319,
									"end": 2356,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2319,
									"end": 2356,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2256,
									"end": 2363,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 2256,
									"end": 2363,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2256,
									"end": 2363,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2256,
									"end": 2363,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2256,
									"end": 2363,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2369,
									"end": 2762,
									"name": "tag",
									"source": 6,
									"value": "53"
								},
								{
									"begin": 2369,
									"end": 2762,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2438,
									"end": 2444,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2488,
									"end": 2489,
									"name": "PUSH",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 2476,
									"end": 2486,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 2472,
									"end": 2490,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 2511,
									"end": 2608,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 2541,
									"end": 2607,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2530,
									"end": 2539,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2511,
									"end": 2608,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "52"
								},
								{
									"begin": 2511,
									"end": 2608,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2511,
									"end": 2608,
									"name": "tag",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 2511,
									"end": 2608,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2629,
									"end": 2668,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "101"
								},
								{
									"begin": 2659,
									"end": 2667,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 2648,
									"end": 2657,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 2629,
									"end": 2668,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "52"
								},
								{
									"begin": 2629,
									"end": 2668,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2629,
									"end": 2668,
									"name": "tag",
									"source": 6,
									"value": "101"
								},
								{
									"begin": 2629,
									"end": 2668,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2617,
									"end": 2668,
									"name": "SWAP6",
									"source": 6
								},
								{
									"begin": 2617,
									"end": 2668,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2701,
									"end": 2705,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2697,
									"end": 2706,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 2690,
									"end": 2695,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2686,
									"end": 2707,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 2677,
									"end": 2707,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 2677,
									"end": 2707,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2750,
									"end": 2754,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2740,
									"end": 2748,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 2736,
									"end": 2755,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 2729,
									"end": 2734,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2726,
									"end": 2756,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 2716,
									"end": 2756,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 2716,
									"end": 2756,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2445,
									"end": 2762,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2445,
									"end": 2762,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2369,
									"end": 2762,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 2369,
									"end": 2762,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 2369,
									"end": 2762,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2369,
									"end": 2762,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2369,
									"end": 2762,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2369,
									"end": 2762,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2768,
									"end": 2828,
									"name": "tag",
									"source": 6,
									"value": "54"
								},
								{
									"begin": 2768,
									"end": 2828,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2796,
									"end": 2799,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2817,
									"end": 2822,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2810,
									"end": 2822,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2810,
									"end": 2822,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2768,
									"end": 2828,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2768,
									"end": 2828,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2768,
									"end": 2828,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2768,
									"end": 2828,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2834,
									"end": 2976,
									"name": "tag",
									"source": 6,
									"value": "55"
								},
								{
									"begin": 2834,
									"end": 2976,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2884,
									"end": 2893,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2917,
									"end": 2970,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "104"
								},
								{
									"begin": 2935,
									"end": 2969,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "105"
								},
								{
									"begin": 2944,
									"end": 2968,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "106"
								},
								{
									"begin": 2962,
									"end": 2967,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2944,
									"end": 2968,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 2944,
									"end": 2968,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2944,
									"end": 2968,
									"name": "tag",
									"source": 6,
									"value": "106"
								},
								{
									"begin": 2944,
									"end": 2968,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2935,
									"end": 2969,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "54"
								},
								{
									"begin": 2935,
									"end": 2969,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2935,
									"end": 2969,
									"name": "tag",
									"source": 6,
									"value": "105"
								},
								{
									"begin": 2935,
									"end": 2969,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2917,
									"end": 2970,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 2917,
									"end": 2970,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2917,
									"end": 2970,
									"name": "tag",
									"source": 6,
									"value": "104"
								},
								{
									"begin": 2917,
									"end": 2970,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2904,
									"end": 2970,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2904,
									"end": 2970,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2834,
									"end": 2976,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2834,
									"end": 2976,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2834,
									"end": 2976,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2834,
									"end": 2976,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2982,
									"end": 3057,
									"name": "tag",
									"source": 6,
									"value": "56"
								},
								{
									"begin": 2982,
									"end": 3057,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3025,
									"end": 3028,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3046,
									"end": 3051,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3039,
									"end": 3051,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3039,
									"end": 3051,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2982,
									"end": 3057,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2982,
									"end": 3057,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2982,
									"end": 3057,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2982,
									"end": 3057,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3063,
									"end": 3332,
									"name": "tag",
									"source": 6,
									"value": "57"
								},
								{
									"begin": 3063,
									"end": 3332,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3173,
									"end": 3212,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "109"
								},
								{
									"begin": 3204,
									"end": 3211,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 3173,
									"end": 3212,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "55"
								},
								{
									"begin": 3173,
									"end": 3212,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3173,
									"end": 3212,
									"name": "tag",
									"source": 6,
									"value": "109"
								},
								{
									"begin": 3173,
									"end": 3212,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3234,
									"end": 3325,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "110"
								},
								{
									"begin": 3283,
									"end": 3324,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "111"
								},
								{
									"begin": 3307,
									"end": 3323,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3283,
									"end": 3324,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "56"
								},
								{
									"begin": 3283,
									"end": 3324,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3283,
									"end": 3324,
									"name": "tag",
									"source": 6,
									"value": "111"
								},
								{
									"begin": 3283,
									"end": 3324,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3275,
									"end": 3281,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 3268,
									"end": 3272,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 3262,
									"end": 3273,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 3234,
									"end": 3325,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "53"
								},
								{
									"begin": 3234,
									"end": 3325,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3234,
									"end": 3325,
									"name": "tag",
									"source": 6,
									"value": "110"
								},
								{
									"begin": 3234,
									"end": 3325,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3228,
									"end": 3232,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3221,
									"end": 3326,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 3139,
									"end": 3332,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3063,
									"end": 3332,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3063,
									"end": 3332,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3063,
									"end": 3332,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3063,
									"end": 3332,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3338,
									"end": 3411,
									"name": "tag",
									"source": 6,
									"value": "58"
								},
								{
									"begin": 3338,
									"end": 3411,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3383,
									"end": 3386,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3338,
									"end": 3411,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3338,
									"end": 3411,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3417,
									"end": 3606,
									"name": "tag",
									"source": 6,
									"value": "59"
								},
								{
									"begin": 3417,
									"end": 3606,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3494,
									"end": 3526,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "114"
								},
								{
									"begin": 3494,
									"end": 3526,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "58"
								},
								{
									"begin": 3494,
									"end": 3526,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3494,
									"end": 3526,
									"name": "tag",
									"source": 6,
									"value": "114"
								},
								{
									"begin": 3494,
									"end": 3526,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3535,
									"end": 3600,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "115"
								},
								{
									"begin": 3593,
									"end": 3599,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3585,
									"end": 3591,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 3579,
									"end": 3583,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 3535,
									"end": 3600,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "57"
								},
								{
									"begin": 3535,
									"end": 3600,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3535,
									"end": 3600,
									"name": "tag",
									"source": 6,
									"value": "115"
								},
								{
									"begin": 3535,
									"end": 3600,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3470,
									"end": 3606,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3417,
									"end": 3606,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3417,
									"end": 3606,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3417,
									"end": 3606,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3612,
									"end": 3798,
									"name": "tag",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 3612,
									"end": 3798,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3672,
									"end": 3792,
									"name": "tag",
									"source": 6,
									"value": "117"
								},
								{
									"begin": 3672,
									"end": 3792,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3689,
									"end": 3692,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3682,
									"end": 3687,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3679,
									"end": 3693,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 3672,
									"end": 3792,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 3672,
									"end": 3792,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "119"
								},
								{
									"begin": 3672,
									"end": 3792,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3743,
									"end": 3782,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "120"
								},
								{
									"begin": 3780,
									"end": 3781,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3773,
									"end": 3778,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3743,
									"end": 3782,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "59"
								},
								{
									"begin": 3743,
									"end": 3782,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3743,
									"end": 3782,
									"name": "tag",
									"source": 6,
									"value": "120"
								},
								{
									"begin": 3743,
									"end": 3782,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3716,
									"end": 3717,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 3709,
									"end": 3714,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3705,
									"end": 3718,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3696,
									"end": 3718,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3696,
									"end": 3718,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3672,
									"end": 3792,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "117"
								},
								{
									"begin": 3672,
									"end": 3792,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3672,
									"end": 3792,
									"name": "tag",
									"source": 6,
									"value": "119"
								},
								{
									"begin": 3672,
									"end": 3792,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3612,
									"end": 3798,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3612,
									"end": 3798,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3612,
									"end": 3798,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3804,
									"end": 4347,
									"name": "tag",
									"source": 6,
									"value": "61"
								},
								{
									"begin": 3804,
									"end": 4347,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3905,
									"end": 3907,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 3900,
									"end": 3903,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3897,
									"end": 3908,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 3894,
									"end": 4340,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 3894,
									"end": 4340,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "122"
								},
								{
									"begin": 3894,
									"end": 4340,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3939,
									"end": 3977,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "123"
								},
								{
									"begin": 3971,
									"end": 3976,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3939,
									"end": 3977,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "50"
								},
								{
									"begin": 3939,
									"end": 3977,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3939,
									"end": 3977,
									"name": "tag",
									"source": 6,
									"value": "123"
								},
								{
									"begin": 3939,
									"end": 3977,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4023,
									"end": 4052,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "124"
								},
								{
									"begin": 4041,
									"end": 4051,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 4023,
									"end": 4052,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "51"
								},
								{
									"begin": 4023,
									"end": 4052,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4023,
									"end": 4052,
									"name": "tag",
									"source": 6,
									"value": "124"
								},
								{
									"begin": 4023,
									"end": 4052,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4013,
									"end": 4021,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4009,
									"end": 4053,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 4206,
									"end": 4208,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 4194,
									"end": 4204,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 4191,
									"end": 4209,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 4188,
									"end": 4237,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 4188,
									"end": 4237,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "125"
								},
								{
									"begin": 4188,
									"end": 4237,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 4227,
									"end": 4235,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4212,
									"end": 4235,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4212,
									"end": 4235,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4188,
									"end": 4237,
									"name": "tag",
									"source": 6,
									"value": "125"
								},
								{
									"begin": 4188,
									"end": 4237,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4250,
									"end": 4330,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "126"
								},
								{
									"begin": 4306,
									"end": 4328,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "127"
								},
								{
									"begin": 4324,
									"end": 4327,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 4306,
									"end": 4328,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "51"
								},
								{
									"begin": 4306,
									"end": 4328,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4306,
									"end": 4328,
									"name": "tag",
									"source": 6,
									"value": "127"
								},
								{
									"begin": 4306,
									"end": 4328,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4296,
									"end": 4304,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 4292,
									"end": 4329,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 4279,
									"end": 4290,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4250,
									"end": 4330,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 4250,
									"end": 4330,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4250,
									"end": 4330,
									"name": "tag",
									"source": 6,
									"value": "126"
								},
								{
									"begin": 4250,
									"end": 4330,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3909,
									"end": 4340,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3909,
									"end": 4340,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3894,
									"end": 4340,
									"name": "tag",
									"source": 6,
									"value": "122"
								},
								{
									"begin": 3894,
									"end": 4340,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3804,
									"end": 4347,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3804,
									"end": 4347,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3804,
									"end": 4347,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3804,
									"end": 4347,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4353,
									"end": 4470,
									"name": "tag",
									"source": 6,
									"value": "62"
								},
								{
									"begin": 4353,
									"end": 4470,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4407,
									"end": 4415,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4457,
									"end": 4462,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4451,
									"end": 4455,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4447,
									"end": 4463,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 4426,
									"end": 4463,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4426,
									"end": 4463,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4353,
									"end": 4470,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 4353,
									"end": 4470,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4353,
									"end": 4470,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4353,
									"end": 4470,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4353,
									"end": 4470,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4476,
									"end": 4645,
									"name": "tag",
									"source": 6,
									"value": "63"
								},
								{
									"begin": 4476,
									"end": 4645,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4520,
									"end": 4526,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4553,
									"end": 4604,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "130"
								},
								{
									"begin": 4601,
									"end": 4602,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4597,
									"end": 4603,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 4589,
									"end": 4594,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 4586,
									"end": 4587,
									"name": "PUSH",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 4582,
									"end": 4595,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 4553,
									"end": 4604,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "62"
								},
								{
									"begin": 4553,
									"end": 4604,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4553,
									"end": 4604,
									"name": "tag",
									"source": 6,
									"value": "130"
								},
								{
									"begin": 4553,
									"end": 4604,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4549,
									"end": 4605,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 4634,
									"end": 4638,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 4628,
									"end": 4632,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 4624,
									"end": 4639,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 4614,
									"end": 4639,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4614,
									"end": 4639,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4527,
									"end": 4645,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4476,
									"end": 4645,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 4476,
									"end": 4645,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4476,
									"end": 4645,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4476,
									"end": 4645,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4476,
									"end": 4645,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4650,
									"end": 4945,
									"name": "tag",
									"source": 6,
									"value": "64"
								},
								{
									"begin": 4650,
									"end": 4945,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4726,
									"end": 4730,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4872,
									"end": 4901,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "132"
								},
								{
									"begin": 4897,
									"end": 4900,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 4891,
									"end": 4895,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 4872,
									"end": 4901,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "63"
								},
								{
									"begin": 4872,
									"end": 4901,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4872,
									"end": 4901,
									"name": "tag",
									"source": 6,
									"value": "132"
								},
								{
									"begin": 4872,
									"end": 4901,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4864,
									"end": 4901,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4864,
									"end": 4901,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4934,
									"end": 4937,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4931,
									"end": 4932,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 4927,
									"end": 4938,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 4921,
									"end": 4925,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4918,
									"end": 4939,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 4910,
									"end": 4939,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4910,
									"end": 4939,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4650,
									"end": 4945,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 4650,
									"end": 4945,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4650,
									"end": 4945,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4650,
									"end": 4945,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4650,
									"end": 4945,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4950,
									"end": 6345,
									"name": "tag",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 4950,
									"end": 6345,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5067,
									"end": 5104,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "134"
								},
								{
									"begin": 5100,
									"end": 5103,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5067,
									"end": 5104,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "46"
								},
								{
									"begin": 5067,
									"end": 5104,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5067,
									"end": 5104,
									"name": "tag",
									"source": 6,
									"value": "134"
								},
								{
									"begin": 5067,
									"end": 5104,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5169,
									"end": 5187,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5161,
									"end": 5167,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5158,
									"end": 5188,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 5155,
									"end": 5211,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 5155,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "135"
								},
								{
									"begin": 5155,
									"end": 5211,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 5191,
									"end": 5209,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "136"
								},
								{
									"begin": 5191,
									"end": 5209,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "47"
								},
								{
									"begin": 5191,
									"end": 5209,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5191,
									"end": 5209,
									"name": "tag",
									"source": 6,
									"value": "136"
								},
								{
									"begin": 5191,
									"end": 5209,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5155,
									"end": 5211,
									"name": "tag",
									"source": 6,
									"value": "135"
								},
								{
									"begin": 5155,
									"end": 5211,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5235,
									"end": 5273,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "137"
								},
								{
									"begin": 5267,
									"end": 5271,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5261,
									"end": 5272,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 5235,
									"end": 5273,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "49"
								},
								{
									"begin": 5235,
									"end": 5273,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5235,
									"end": 5273,
									"name": "tag",
									"source": 6,
									"value": "137"
								},
								{
									"begin": 5235,
									"end": 5273,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5320,
									"end": 5387,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "138"
								},
								{
									"begin": 5380,
									"end": 5386,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5372,
									"end": 5378,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5366,
									"end": 5370,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 5320,
									"end": 5387,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "61"
								},
								{
									"begin": 5320,
									"end": 5387,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5320,
									"end": 5387,
									"name": "tag",
									"source": 6,
									"value": "138"
								},
								{
									"begin": 5320,
									"end": 5387,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5414,
									"end": 5415,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5438,
									"end": 5442,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 5425,
									"end": 5442,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5425,
									"end": 5442,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5470,
									"end": 5472,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 5462,
									"end": 5468,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 5459,
									"end": 5473,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 5487,
									"end": 5488,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 5482,
									"end": 6100,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5482,
									"end": 6100,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 5482,
									"end": 6100,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "140"
								},
								{
									"begin": 5482,
									"end": 6100,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 6144,
									"end": 6145,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 6161,
									"end": 6167,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 6158,
									"end": 6235,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 6158,
									"end": 6235,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "141"
								},
								{
									"begin": 6158,
									"end": 6235,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 6210,
									"end": 6219,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 6205,
									"end": 6208,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 6201,
									"end": 6220,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 6195,
									"end": 6221,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 6186,
									"end": 6221,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6186,
									"end": 6221,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6158,
									"end": 6235,
									"name": "tag",
									"source": 6,
									"value": "141"
								},
								{
									"begin": 6158,
									"end": 6235,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6261,
									"end": 6328,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "142"
								},
								{
									"begin": 6321,
									"end": 6327,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 6314,
									"end": 6319,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 6261,
									"end": 6328,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "64"
								},
								{
									"begin": 6261,
									"end": 6328,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6261,
									"end": 6328,
									"name": "tag",
									"source": 6,
									"value": "142"
								},
								{
									"begin": 6261,
									"end": 6328,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6255,
									"end": 6259,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 6248,
									"end": 6329,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 6117,
									"end": 6339,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5452,
									"end": 6339,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "139"
								},
								{
									"begin": 5452,
									"end": 6339,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5482,
									"end": 6100,
									"name": "tag",
									"source": 6,
									"value": "140"
								},
								{
									"begin": 5482,
									"end": 6100,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5534,
									"end": 5538,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 5530,
									"end": 5539,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 5522,
									"end": 5528,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 5518,
									"end": 5540,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 5568,
									"end": 5605,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "143"
								},
								{
									"begin": 5600,
									"end": 5604,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 5568,
									"end": 5605,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "50"
								},
								{
									"begin": 5568,
									"end": 5605,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5568,
									"end": 5605,
									"name": "tag",
									"source": 6,
									"value": "143"
								},
								{
									"begin": 5568,
									"end": 5605,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5627,
									"end": 5628,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5641,
									"end": 5849,
									"name": "tag",
									"source": 6,
									"value": "144"
								},
								{
									"begin": 5641,
									"end": 5849,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5655,
									"end": 5662,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5652,
									"end": 5653,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5649,
									"end": 5663,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 5641,
									"end": 5849,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 5641,
									"end": 5849,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "146"
								},
								{
									"begin": 5641,
									"end": 5849,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 5734,
									"end": 5743,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 5729,
									"end": 5732,
									"name": "DUP10",
									"source": 6
								},
								{
									"begin": 5725,
									"end": 5744,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 5719,
									"end": 5745,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 5711,
									"end": 5717,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5704,
									"end": 5746,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 5785,
									"end": 5786,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 5777,
									"end": 5783,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5773,
									"end": 5787,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 5763,
									"end": 5787,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 5763,
									"end": 5787,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5832,
									"end": 5834,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 5821,
									"end": 5830,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 5817,
									"end": 5835,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 5804,
									"end": 5835,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 5804,
									"end": 5835,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5678,
									"end": 5682,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 5675,
									"end": 5676,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5671,
									"end": 5683,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 5666,
									"end": 5683,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5666,
									"end": 5683,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5641,
									"end": 5849,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "144"
								},
								{
									"begin": 5641,
									"end": 5849,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5641,
									"end": 5849,
									"name": "tag",
									"source": 6,
									"value": "146"
								},
								{
									"begin": 5641,
									"end": 5849,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5877,
									"end": 5883,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 5868,
									"end": 5875,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 5865,
									"end": 5884,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 5862,
									"end": 6041,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 5862,
									"end": 6041,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "147"
								},
								{
									"begin": 5862,
									"end": 6041,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 5935,
									"end": 5944,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 5930,
									"end": 5933,
									"name": "DUP10",
									"source": 6
								},
								{
									"begin": 5926,
									"end": 5945,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 5920,
									"end": 5946,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 5978,
									"end": 6026,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "148"
								},
								{
									"begin": 6020,
									"end": 6024,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 6012,
									"end": 6018,
									"name": "DUP10",
									"source": 6
								},
								{
									"begin": 6008,
									"end": 6025,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 5997,
									"end": 6006,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5978,
									"end": 6026,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "63"
								},
								{
									"begin": 5978,
									"end": 6026,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5978,
									"end": 6026,
									"name": "tag",
									"source": 6,
									"value": "148"
								},
								{
									"begin": 5978,
									"end": 6026,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5970,
									"end": 5976,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 5963,
									"end": 6027,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 5885,
									"end": 6041,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5862,
									"end": 6041,
									"name": "tag",
									"source": 6,
									"value": "147"
								},
								{
									"begin": 5862,
									"end": 6041,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6087,
									"end": 6088,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 6083,
									"end": 6084,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 6075,
									"end": 6081,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 6071,
									"end": 6085,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 6067,
									"end": 6089,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 6061,
									"end": 6065,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 6054,
									"end": 6090,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 5489,
									"end": 6100,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5489,
									"end": 6100,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5489,
									"end": 6100,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5452,
									"end": 6339,
									"name": "tag",
									"source": 6,
									"value": "139"
								},
								{
									"begin": 5452,
									"end": 6339,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5452,
									"end": 6339,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5042,
									"end": 6345,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5042,
									"end": 6345,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5042,
									"end": 6345,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4950,
									"end": 6345,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4950,
									"end": 6345,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4950,
									"end": 6345,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6351,
									"end": 6531,
									"name": "tag",
									"source": 6,
									"value": "65"
								},
								{
									"begin": 6351,
									"end": 6531,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6399,
									"end": 6476,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6396,
									"end": 6397,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 6389,
									"end": 6477,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 6496,
									"end": 6500,
									"name": "PUSH",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 6493,
									"end": 6494,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 6486,
									"end": 6501,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 6520,
									"end": 6524,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 6517,
									"end": 6518,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 6510,
									"end": 6525,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 6537,
									"end": 6639,
									"name": "tag",
									"source": 6,
									"value": "66"
								},
								{
									"begin": 6537,
									"end": 6639,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6579,
									"end": 6587,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 6626,
									"end": 6631,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6623,
									"end": 6624,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 6619,
									"end": 6632,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 6598,
									"end": 6632,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6598,
									"end": 6632,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6537,
									"end": 6639,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 6537,
									"end": 6639,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6537,
									"end": 6639,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6537,
									"end": 6639,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6645,
									"end": 7493,
									"name": "tag",
									"source": 6,
									"value": "67"
								},
								{
									"begin": 6645,
									"end": 7493,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6706,
									"end": 6711,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 6713,
									"end": 6717,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 6737,
									"end": 6743,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 6728,
									"end": 6743,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 6728,
									"end": 6743,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6761,
									"end": 6766,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 6752,
									"end": 6766,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6752,
									"end": 6766,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6775,
									"end": 7487,
									"name": "tag",
									"source": 6,
									"value": "152"
								},
								{
									"begin": 6775,
									"end": 7487,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6796,
									"end": 6797,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 6786,
									"end": 6794,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 6783,
									"end": 6798,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 6775,
									"end": 7487,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 6775,
									"end": 7487,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "154"
								},
								{
									"begin": 6775,
									"end": 7487,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 6891,
									"end": 6895,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 6886,
									"end": 6889,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 6882,
									"end": 6896,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 6876,
									"end": 6880,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6873,
									"end": 6897,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 6870,
									"end": 6920,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 6870,
									"end": 6920,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "155"
								},
								{
									"begin": 6870,
									"end": 6920,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 6900,
									"end": 6918,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "156"
								},
								{
									"begin": 6900,
									"end": 6918,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "65"
								},
								{
									"begin": 6900,
									"end": 6918,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6900,
									"end": 6918,
									"name": "tag",
									"source": 6,
									"value": "156"
								},
								{
									"begin": 6900,
									"end": 6918,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6870,
									"end": 6920,
									"name": "tag",
									"source": 6,
									"value": "155"
								},
								{
									"begin": 6870,
									"end": 6920,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6950,
									"end": 6951,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 6940,
									"end": 6948,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 6936,
									"end": 6952,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 6933,
									"end": 7384,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 6933,
									"end": 7384,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "157"
								},
								{
									"begin": 6933,
									"end": 7384,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 7365,
									"end": 7369,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 7358,
									"end": 7363,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 7354,
									"end": 7370,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 7345,
									"end": 7370,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 7345,
									"end": 7370,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6933,
									"end": 7384,
									"name": "tag",
									"source": 6,
									"value": "157"
								},
								{
									"begin": 6933,
									"end": 7384,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7415,
									"end": 7419,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 7409,
									"end": 7413,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 7405,
									"end": 7420,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 7397,
									"end": 7420,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 7397,
									"end": 7420,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7445,
									"end": 7477,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "158"
								},
								{
									"begin": 7468,
									"end": 7476,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 7445,
									"end": 7477,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "66"
								},
								{
									"begin": 7445,
									"end": 7477,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7445,
									"end": 7477,
									"name": "tag",
									"source": 6,
									"value": "158"
								},
								{
									"begin": 7445,
									"end": 7477,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7433,
									"end": 7477,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 7433,
									"end": 7477,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6775,
									"end": 7487,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "152"
								},
								{
									"begin": 6775,
									"end": 7487,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6775,
									"end": 7487,
									"name": "tag",
									"source": 6,
									"value": "154"
								},
								{
									"begin": 6775,
									"end": 7487,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6645,
									"end": 7493,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 6645,
									"end": 7493,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6645,
									"end": 7493,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 6645,
									"end": 7493,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 6645,
									"end": 7493,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6645,
									"end": 7493,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6645,
									"end": 7493,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6645,
									"end": 7493,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7499,
									"end": 8572,
									"name": "tag",
									"source": 6,
									"value": "68"
								},
								{
									"begin": 7499,
									"end": 8572,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7553,
									"end": 7558,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 7744,
									"end": 7752,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 7734,
									"end": 7774,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "160"
								},
								{
									"begin": 7734,
									"end": 7774,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 7765,
									"end": 7766,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 7756,
									"end": 7766,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 7756,
									"end": 7766,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7767,
									"end": 7772,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "159"
								},
								{
									"begin": 7767,
									"end": 7772,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7734,
									"end": 7774,
									"name": "tag",
									"source": 6,
									"value": "160"
								},
								{
									"begin": 7734,
									"end": 7774,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7793,
									"end": 7797,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 7783,
									"end": 7819,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "161"
								},
								{
									"begin": 7783,
									"end": 7819,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 7810,
									"end": 7811,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 7801,
									"end": 7811,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 7801,
									"end": 7811,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7812,
									"end": 7817,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "159"
								},
								{
									"begin": 7812,
									"end": 7817,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7783,
									"end": 7819,
									"name": "tag",
									"source": 6,
									"value": "161"
								},
								{
									"begin": 7783,
									"end": 7819,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7879,
									"end": 7883,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 7927,
									"end": 7928,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 7922,
									"end": 7949,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 7922,
									"end": 7949,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 7922,
									"end": 7949,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "163"
								},
								{
									"begin": 7922,
									"end": 7949,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 7963,
									"end": 7964,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 7958,
									"end": 8149,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 7958,
									"end": 8149,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 7958,
									"end": 8149,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "164"
								},
								{
									"begin": 7958,
									"end": 8149,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 7872,
									"end": 8149,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "162"
								},
								{
									"begin": 7872,
									"end": 8149,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7922,
									"end": 7949,
									"name": "tag",
									"source": 6,
									"value": "163"
								},
								{
									"begin": 7922,
									"end": 7949,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7940,
									"end": 7941,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 7931,
									"end": 7941,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 7931,
									"end": 7941,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7942,
									"end": 7947,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7942,
									"end": 7947,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "159"
								},
								{
									"begin": 7942,
									"end": 7947,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7958,
									"end": 8149,
									"name": "tag",
									"source": 6,
									"value": "164"
								},
								{
									"begin": 7958,
									"end": 8149,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8003,
									"end": 8006,
									"name": "PUSH",
									"source": 6,
									"value": "FF"
								},
								{
									"begin": 7993,
									"end": 8001,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 7990,
									"end": 8007,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 7987,
									"end": 8030,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 7987,
									"end": 8030,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "165"
								},
								{
									"begin": 7987,
									"end": 8030,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 8010,
									"end": 8028,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "166"
								},
								{
									"begin": 8010,
									"end": 8028,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "65"
								},
								{
									"begin": 8010,
									"end": 8028,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 8010,
									"end": 8028,
									"name": "tag",
									"source": 6,
									"value": "166"
								},
								{
									"begin": 8010,
									"end": 8028,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7987,
									"end": 8030,
									"name": "tag",
									"source": 6,
									"value": "165"
								},
								{
									"begin": 7987,
									"end": 8030,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8059,
									"end": 8067,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 8056,
									"end": 8057,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 8052,
									"end": 8068,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 8043,
									"end": 8068,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 8043,
									"end": 8068,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8094,
									"end": 8097,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 8087,
									"end": 8092,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 8084,
									"end": 8098,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 8081,
									"end": 8121,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 8081,
									"end": 8121,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "167"
								},
								{
									"begin": 8081,
									"end": 8121,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 8101,
									"end": 8119,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "168"
								},
								{
									"begin": 8101,
									"end": 8119,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "65"
								},
								{
									"begin": 8101,
									"end": 8119,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 8101,
									"end": 8119,
									"name": "tag",
									"source": 6,
									"value": "168"
								},
								{
									"begin": 8101,
									"end": 8119,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8081,
									"end": 8121,
									"name": "tag",
									"source": 6,
									"value": "167"
								},
								{
									"begin": 8081,
									"end": 8121,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8134,
									"end": 8139,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8134,
									"end": 8139,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "159"
								},
								{
									"begin": 8134,
									"end": 8139,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7872,
									"end": 8149,
									"name": "tag",
									"source": 6,
									"value": "162"
								},
								{
									"begin": 7872,
									"end": 8149,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7872,
									"end": 8149,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8258,
									"end": 8260,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 8248,
									"end": 8256,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 8245,
									"end": 8261,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 8239,
									"end": 8242,
									"name": "PUSH",
									"source": 6,
									"value": "133"
								},
								{
									"begin": 8233,
									"end": 8237,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 8230,
									"end": 8243,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 8226,
									"end": 8262,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 8208,
									"end": 8210,
									"name": "PUSH",
									"source": 6,
									"value": "4E"
								},
								{
									"begin": 8198,
									"end": 8206,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 8195,
									"end": 8211,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 8190,
									"end": 8192,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 8184,
									"end": 8188,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 8181,
									"end": 8193,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 8177,
									"end": 8212,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 8161,
									"end": 8272,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 8158,
									"end": 8404,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 8158,
									"end": 8404,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "169"
								},
								{
									"begin": 8158,
									"end": 8404,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 8314,
									"end": 8322,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 8308,
									"end": 8312,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 8304,
									"end": 8323,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 8295,
									"end": 8323,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 8295,
									"end": 8323,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8349,
									"end": 8352,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 8342,
									"end": 8347,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 8339,
									"end": 8353,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 8336,
									"end": 8376,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 8336,
									"end": 8376,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "170"
								},
								{
									"begin": 8336,
									"end": 8376,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 8356,
									"end": 8374,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "171"
								},
								{
									"begin": 8356,
									"end": 8374,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "65"
								},
								{
									"begin": 8356,
									"end": 8374,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 8356,
									"end": 8374,
									"name": "tag",
									"source": 6,
									"value": "171"
								},
								{
									"begin": 8356,
									"end": 8374,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8336,
									"end": 8376,
									"name": "tag",
									"source": 6,
									"value": "170"
								},
								{
									"begin": 8336,
									"end": 8376,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8389,
									"end": 8394,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "159"
								},
								{
									"begin": 8389,
									"end": 8394,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 8158,
									"end": 8404,
									"name": "tag",
									"source": 6,
									"value": "169"
								},
								{
									"begin": 8158,
									"end": 8404,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8429,
									"end": 8471,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "172"
								},
								{
									"begin": 8467,
									"end": 8470,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 8457,
									"end": 8465,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 8451,
									"end": 8455,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 8448,
									"end": 8449,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 8429,
									"end": 8471,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "67"
								},
								{
									"begin": 8429,
									"end": 8471,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 8429,
									"end": 8471,
									"name": "tag",
									"source": 6,
									"value": "172"
								},
								{
									"begin": 8429,
									"end": 8471,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8414,
									"end": 8471,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 8414,
									"end": 8471,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8414,
									"end": 8471,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 8414,
									"end": 8471,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8503,
									"end": 8507,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 8498,
									"end": 8501,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 8494,
									"end": 8508,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 8487,
									"end": 8492,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 8484,
									"end": 8509,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 8481,
									"end": 8532,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 8481,
									"end": 8532,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "173"
								},
								{
									"begin": 8481,
									"end": 8532,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 8512,
									"end": 8530,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "174"
								},
								{
									"begin": 8512,
									"end": 8530,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "65"
								},
								{
									"begin": 8512,
									"end": 8530,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 8512,
									"end": 8530,
									"name": "tag",
									"source": 6,
									"value": "174"
								},
								{
									"begin": 8512,
									"end": 8530,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8481,
									"end": 8532,
									"name": "tag",
									"source": 6,
									"value": "173"
								},
								{
									"begin": 8481,
									"end": 8532,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8561,
									"end": 8565,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 8554,
									"end": 8559,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 8550,
									"end": 8566,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 8541,
									"end": 8566,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 8541,
									"end": 8566,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7499,
									"end": 8572,
									"name": "tag",
									"source": 6,
									"value": "159"
								},
								{
									"begin": 7499,
									"end": 8572,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7499,
									"end": 8572,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 7499,
									"end": 8572,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 7499,
									"end": 8572,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7499,
									"end": 8572,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7499,
									"end": 8572,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7499,
									"end": 8572,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 8578,
									"end": 8664,
									"name": "tag",
									"source": 6,
									"value": "69"
								},
								{
									"begin": 8578,
									"end": 8664,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8613,
									"end": 8620,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 8653,
									"end": 8657,
									"name": "PUSH",
									"source": 6,
									"value": "FF"
								},
								{
									"begin": 8646,
									"end": 8651,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 8642,
									"end": 8658,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 8631,
									"end": 8658,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 8631,
									"end": 8658,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8578,
									"end": 8664,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 8578,
									"end": 8664,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 8578,
									"end": 8664,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8578,
									"end": 8664,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 8670,
									"end": 8951,
									"name": "tag",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 8670,
									"end": 8951,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8728,
									"end": 8733,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 8752,
									"end": 8775,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "177"
								},
								{
									"begin": 8770,
									"end": 8774,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 8752,
									"end": 8775,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 8752,
									"end": 8775,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 8752,
									"end": 8775,
									"name": "tag",
									"source": 6,
									"value": "177"
								},
								{
									"begin": 8752,
									"end": 8775,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8744,
									"end": 8775,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 8744,
									"end": 8775,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8796,
									"end": 8821,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "178"
								},
								{
									"begin": 8812,
									"end": 8820,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 8796,
									"end": 8821,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "69"
								},
								{
									"begin": 8796,
									"end": 8821,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 8796,
									"end": 8821,
									"name": "tag",
									"source": 6,
									"value": "178"
								},
								{
									"begin": 8796,
									"end": 8821,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8784,
									"end": 8821,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 8784,
									"end": 8821,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8840,
									"end": 8944,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "179"
								},
								{
									"begin": 8877,
									"end": 8943,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8867,
									"end": 8875,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 8861,
									"end": 8865,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 8840,
									"end": 8944,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "68"
								},
								{
									"begin": 8840,
									"end": 8944,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 8840,
									"end": 8944,
									"name": "tag",
									"source": 6,
									"value": "179"
								},
								{
									"begin": 8840,
									"end": 8944,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8831,
									"end": 8944,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 8831,
									"end": 8944,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8670,
									"end": 8951,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 8670,
									"end": 8951,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 8670,
									"end": 8951,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8670,
									"end": 8951,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8670,
									"end": 8951,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 8957,
									"end": 9367,
									"name": "tag",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 8957,
									"end": 9367,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8997,
									"end": 9004,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 9020,
									"end": 9040,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "181"
								},
								{
									"begin": 9038,
									"end": 9039,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 9020,
									"end": 9040,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 9020,
									"end": 9040,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 9020,
									"end": 9040,
									"name": "tag",
									"source": 6,
									"value": "181"
								},
								{
									"begin": 9020,
									"end": 9040,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9015,
									"end": 9040,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 9015,
									"end": 9040,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9054,
									"end": 9074,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "182"
								},
								{
									"begin": 9072,
									"end": 9073,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 9054,
									"end": 9074,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 9054,
									"end": 9074,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 9054,
									"end": 9074,
									"name": "tag",
									"source": 6,
									"value": "182"
								},
								{
									"begin": 9054,
									"end": 9074,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9049,
									"end": 9074,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 9049,
									"end": 9074,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9109,
									"end": 9110,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 9106,
									"end": 9107,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 9102,
									"end": 9111,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 9131,
									"end": 9161,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "183"
								},
								{
									"begin": 9149,
									"end": 9160,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 9131,
									"end": 9161,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 9131,
									"end": 9161,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 9131,
									"end": 9161,
									"name": "tag",
									"source": 6,
									"value": "183"
								},
								{
									"begin": 9131,
									"end": 9161,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9120,
									"end": 9161,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 9120,
									"end": 9161,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9310,
									"end": 9311,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 9301,
									"end": 9308,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 9297,
									"end": 9312,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 9294,
									"end": 9295,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 9291,
									"end": 9313,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 9271,
									"end": 9272,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 9264,
									"end": 9273,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 9244,
									"end": 9327,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 9221,
									"end": 9360,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "184"
								},
								{
									"begin": 9221,
									"end": 9360,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 9340,
									"end": 9358,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "185"
								},
								{
									"begin": 9340,
									"end": 9358,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "65"
								},
								{
									"begin": 9340,
									"end": 9358,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 9340,
									"end": 9358,
									"name": "tag",
									"source": 6,
									"value": "185"
								},
								{
									"begin": 9340,
									"end": 9358,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9221,
									"end": 9360,
									"name": "tag",
									"source": 6,
									"value": "184"
								},
								{
									"begin": 9221,
									"end": 9360,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9005,
									"end": 9367,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8957,
									"end": 9367,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 8957,
									"end": 9367,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 8957,
									"end": 9367,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8957,
									"end": 9367,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8957,
									"end": 9367,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 9373,
									"end": 9564,
									"name": "tag",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 9373,
									"end": 9564,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9413,
									"end": 9416,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 9432,
									"end": 9452,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "187"
								},
								{
									"begin": 9450,
									"end": 9451,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 9432,
									"end": 9452,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 9432,
									"end": 9452,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 9432,
									"end": 9452,
									"name": "tag",
									"source": 6,
									"value": "187"
								},
								{
									"begin": 9432,
									"end": 9452,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9427,
									"end": 9452,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 9427,
									"end": 9452,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9466,
									"end": 9486,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "188"
								},
								{
									"begin": 9484,
									"end": 9485,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 9466,
									"end": 9486,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 9466,
									"end": 9486,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 9466,
									"end": 9486,
									"name": "tag",
									"source": 6,
									"value": "188"
								},
								{
									"begin": 9466,
									"end": 9486,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9461,
									"end": 9486,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 9461,
									"end": 9486,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9509,
									"end": 9510,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 9506,
									"end": 9507,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 9502,
									"end": 9511,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 9495,
									"end": 9511,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 9495,
									"end": 9511,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9530,
									"end": 9533,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 9527,
									"end": 9528,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 9524,
									"end": 9534,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 9521,
									"end": 9557,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 9521,
									"end": 9557,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "189"
								},
								{
									"begin": 9521,
									"end": 9557,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 9537,
									"end": 9555,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "190"
								},
								{
									"begin": 9537,
									"end": 9555,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "65"
								},
								{
									"begin": 9537,
									"end": 9555,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 9537,
									"end": 9555,
									"name": "tag",
									"source": 6,
									"value": "190"
								},
								{
									"begin": 9537,
									"end": 9555,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9521,
									"end": 9557,
									"name": "tag",
									"source": 6,
									"value": "189"
								},
								{
									"begin": 9521,
									"end": 9557,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9373,
									"end": 9564,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 9373,
									"end": 9564,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 9373,
									"end": 9564,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9373,
									"end": 9564,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9373,
									"end": 9564,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 9570,
									"end": 9696,
									"name": "tag",
									"source": 6,
									"value": "70"
								},
								{
									"begin": 9570,
									"end": 9696,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9607,
									"end": 9614,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 9647,
									"end": 9689,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 9640,
									"end": 9645,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 9636,
									"end": 9690,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 9625,
									"end": 9690,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 9625,
									"end": 9690,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9570,
									"end": 9696,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 9570,
									"end": 9696,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 9570,
									"end": 9696,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9570,
									"end": 9696,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 9702,
									"end": 9798,
									"name": "tag",
									"source": 6,
									"value": "71"
								},
								{
									"begin": 9702,
									"end": 9798,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9739,
									"end": 9746,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 9768,
									"end": 9792,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "193"
								},
								{
									"begin": 9786,
									"end": 9791,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 9768,
									"end": 9792,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "70"
								},
								{
									"begin": 9768,
									"end": 9792,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 9768,
									"end": 9792,
									"name": "tag",
									"source": 6,
									"value": "193"
								},
								{
									"begin": 9768,
									"end": 9792,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9757,
									"end": 9792,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 9757,
									"end": 9792,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9702,
									"end": 9798,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 9702,
									"end": 9798,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 9702,
									"end": 9798,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9702,
									"end": 9798,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 9804,
									"end": 9922,
									"name": "tag",
									"source": 6,
									"value": "72"
								},
								{
									"begin": 9804,
									"end": 9922,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9891,
									"end": 9915,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "195"
								},
								{
									"begin": 9909,
									"end": 9914,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 9891,
									"end": 9915,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "71"
								},
								{
									"begin": 9891,
									"end": 9915,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 9891,
									"end": 9915,
									"name": "tag",
									"source": 6,
									"value": "195"
								},
								{
									"begin": 9891,
									"end": 9915,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9886,
									"end": 9889,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 9879,
									"end": 9916,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 9804,
									"end": 9922,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9804,
									"end": 9922,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9804,
									"end": 9922,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 9928,
									"end": 10150,
									"name": "tag",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 9928,
									"end": 10150,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 10021,
									"end": 10025,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 10059,
									"end": 10061,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 10048,
									"end": 10057,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 10044,
									"end": 10062,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 10036,
									"end": 10062,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 10036,
									"end": 10062,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 10072,
									"end": 10143,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "197"
								},
								{
									"begin": 10140,
									"end": 10141,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 10129,
									"end": 10138,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 10125,
									"end": 10142,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 10116,
									"end": 10122,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 10072,
									"end": 10143,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "72"
								},
								{
									"begin": 10072,
									"end": 10143,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 10072,
									"end": 10143,
									"name": "tag",
									"source": 6,
									"value": "197"
								},
								{
									"begin": 10072,
									"end": 10143,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9928,
									"end": 10150,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 9928,
									"end": 10150,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 9928,
									"end": 10150,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9928,
									"end": 10150,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9928,
									"end": 10150,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 10156,
									"end": 10274,
									"name": "tag",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 10156,
									"end": 10274,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 10243,
									"end": 10267,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "199"
								},
								{
									"begin": 10261,
									"end": 10266,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 10243,
									"end": 10267,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 10243,
									"end": 10267,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 10243,
									"end": 10267,
									"name": "tag",
									"source": 6,
									"value": "199"
								},
								{
									"begin": 10243,
									"end": 10267,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 10238,
									"end": 10241,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 10231,
									"end": 10268,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 10156,
									"end": 10274,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 10156,
									"end": 10274,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 10156,
									"end": 10274,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 10280,
									"end": 10722,
									"name": "tag",
									"source": 6,
									"value": "35"
								},
								{
									"begin": 10280,
									"end": 10722,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 10429,
									"end": 10433,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 10467,
									"end": 10469,
									"name": "PUSH",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 10456,
									"end": 10465,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 10452,
									"end": 10470,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 10444,
									"end": 10470,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 10444,
									"end": 10470,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 10480,
									"end": 10551,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "201"
								},
								{
									"begin": 10548,
									"end": 10549,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 10537,
									"end": 10546,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 10533,
									"end": 10550,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 10524,
									"end": 10530,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 10480,
									"end": 10551,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "72"
								},
								{
									"begin": 10480,
									"end": 10551,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 10480,
									"end": 10551,
									"name": "tag",
									"source": 6,
									"value": "201"
								},
								{
									"begin": 10480,
									"end": 10551,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 10561,
									"end": 10633,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "202"
								},
								{
									"begin": 10629,
									"end": 10631,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 10618,
									"end": 10627,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 10614,
									"end": 10632,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 10605,
									"end": 10611,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 10561,
									"end": 10633,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 10561,
									"end": 10633,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 10561,
									"end": 10633,
									"name": "tag",
									"source": 6,
									"value": "202"
								},
								{
									"begin": 10561,
									"end": 10633,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 10643,
									"end": 10715,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "203"
								},
								{
									"begin": 10711,
									"end": 10713,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 10700,
									"end": 10709,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 10696,
									"end": 10714,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 10687,
									"end": 10693,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 10643,
									"end": 10715,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 10643,
									"end": 10715,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 10643,
									"end": 10715,
									"name": "tag",
									"source": 6,
									"value": "203"
								},
								{
									"begin": 10643,
									"end": 10715,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 10280,
									"end": 10722,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 10280,
									"end": 10722,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 10280,
									"end": 10722,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 10280,
									"end": 10722,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 10280,
									"end": 10722,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 10280,
									"end": 10722,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 10280,
									"end": 10722,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 10728,
									"end": 10950,
									"name": "tag",
									"source": 6,
									"value": "39"
								},
								{
									"begin": 10728,
									"end": 10950,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 10821,
									"end": 10825,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 10859,
									"end": 10861,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 10848,
									"end": 10857,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 10844,
									"end": 10862,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 10836,
									"end": 10862,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 10836,
									"end": 10862,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 10872,
									"end": 10943,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "205"
								},
								{
									"begin": 10940,
									"end": 10941,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 10929,
									"end": 10938,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 10925,
									"end": 10942,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 10916,
									"end": 10922,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 10872,
									"end": 10943,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 10872,
									"end": 10943,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 10872,
									"end": 10943,
									"name": "tag",
									"source": 6,
									"value": "205"
								},
								{
									"begin": 10872,
									"end": 10943,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 10728,
									"end": 10950,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 10728,
									"end": 10950,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 10728,
									"end": 10950,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 10728,
									"end": 10950,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 10728,
									"end": 10950,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 119,
									"end": 1277,
									"name": "tag",
									"source": 5,
									"value": "21"
								},
								{
									"begin": 119,
									"end": 1277,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 119,
									"end": 1277,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 119,
									"end": 1277,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 119,
									"end": 1277,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 119,
									"end": 1277,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 119,
									"end": 1277,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 119,
									"end": 1277,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 119,
									"end": 1277,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203933eee64e931878bddd6c48dcb998b12d0280746a0b35e39e0a03f80703c21064736f6c634300081a0033",
									".code": [
										{
											"begin": 119,
											"end": 1277,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 119,
											"end": 1277,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 119,
											"end": 1277,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 119,
											"end": 1277,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 119,
											"end": 1277,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 119,
											"end": 1277,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 119,
											"end": 1277,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 119,
											"end": 1277,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 119,
											"end": 1277,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 119,
											"end": 1277,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 119,
											"end": 1277,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 119,
											"end": 1277,
											"name": "tag",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 119,
											"end": 1277,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 119,
											"end": 1277,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 119,
											"end": 1277,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 119,
											"end": 1277,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 119,
											"end": 1277,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 119,
											"end": 1277,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 119,
											"end": 1277,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 119,
											"end": 1277,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 119,
											"end": 1277,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 119,
											"end": 1277,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 119,
											"end": 1277,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 119,
											"end": 1277,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 119,
											"end": 1277,
											"name": "PUSH",
											"source": 5,
											"value": "313CE567"
										},
										{
											"begin": 119,
											"end": 1277,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 119,
											"end": 1277,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 119,
											"end": 1277,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 119,
											"end": 1277,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 119,
											"end": 1277,
											"name": "PUSH",
											"source": 5,
											"value": "313CE567"
										},
										{
											"begin": 119,
											"end": 1277,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 119,
											"end": 1277,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 119,
											"end": 1277,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 119,
											"end": 1277,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 119,
											"end": 1277,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 119,
											"end": 1277,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 119,
											"end": 1277,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 119,
											"end": 1277,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 119,
											"end": 1277,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 119,
											"end": 1277,
											"name": "PUSH",
											"source": 5,
											"value": "95D89B41"
										},
										{
											"begin": 119,
											"end": 1277,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 119,
											"end": 1277,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 119,
											"end": 1277,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 119,
											"end": 1277,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 119,
											"end": 1277,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 119,
											"end": 1277,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 119,
											"end": 1277,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 119,
											"end": 1277,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 119,
											"end": 1277,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 119,
											"end": 1277,
											"name": "PUSH",
											"source": 5,
											"value": "DD62ED3E"
										},
										{
											"begin": 119,
											"end": 1277,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 119,
											"end": 1277,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 119,
											"end": 1277,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 119,
											"end": 1277,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 119,
											"end": 1277,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 119,
											"end": 1277,
											"name": "tag",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 119,
											"end": 1277,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 119,
											"end": 1277,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 119,
											"end": 1277,
											"name": "PUSH",
											"source": 5,
											"value": "6FDDE03"
										},
										{
											"begin": 119,
											"end": 1277,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 119,
											"end": 1277,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 119,
											"end": 1277,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 119,
											"end": 1277,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 119,
											"end": 1277,
											"name": "PUSH",
											"source": 5,
											"value": "95EA7B3"
										},
										{
											"begin": 119,
											"end": 1277,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 119,
											"end": 1277,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 119,
											"end": 1277,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 119,
											"end": 1277,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 119,
											"end": 1277,
											"name": "PUSH",
											"source": 5,
											"value": "18160DDD"
										},
										{
											"begin": 119,
											"end": 1277,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 119,
											"end": 1277,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 119,
											"end": 1277,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 119,
											"end": 1277,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 119,
											"end": 1277,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD"
										},
										{
											"begin": 119,
											"end": 1277,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 119,
											"end": 1277,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 119,
											"end": 1277,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 119,
											"end": 1277,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 119,
											"end": 1277,
											"name": "PUSH",
											"source": 5,
											"value": "251C1AA3"
										},
										{
											"begin": 119,
											"end": 1277,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 119,
											"end": 1277,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 119,
											"end": 1277,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 119,
											"end": 1277,
											"name": "tag",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 119,
											"end": 1277,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 119,
											"end": 1277,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 119,
											"end": 1277,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 119,
											"end": 1277,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 996,
											"end": 1274,
											"name": "tag",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 996,
											"end": 1274,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 996,
											"end": 1274,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 996,
											"end": 1274,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 996,
											"end": 1274,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 996,
											"end": 1274,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 996,
											"end": 1274,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 996,
											"end": 1274,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 996,
											"end": 1274,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 996,
											"end": 1274,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 996,
											"end": 1274,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 996,
											"end": 1274,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 996,
											"end": 1274,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 996,
											"end": 1274,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 996,
											"end": 1274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 996,
											"end": 1274,
											"name": "tag",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 996,
											"end": 1274,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 996,
											"end": 1274,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 996,
											"end": 1274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 996,
											"end": 1274,
											"name": "tag",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 996,
											"end": 1274,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 996,
											"end": 1274,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 996,
											"end": 1274,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 996,
											"end": 1274,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 996,
											"end": 1274,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 996,
											"end": 1274,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 996,
											"end": 1274,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 996,
											"end": 1274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 996,
											"end": 1274,
											"name": "tag",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 996,
											"end": 1274,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 996,
											"end": 1274,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 996,
											"end": 1274,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 996,
											"end": 1274,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 996,
											"end": 1274,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 996,
											"end": 1274,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 996,
											"end": 1274,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 996,
											"end": 1274,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 160,
											"end": 185,
											"name": "tag",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 160,
											"end": 185,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 160,
											"end": 185,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 160,
											"end": 185,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 160,
											"end": 185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 160,
											"end": 185,
											"name": "tag",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 160,
											"end": 185,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 160,
											"end": 185,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 160,
											"end": 185,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 160,
											"end": 185,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 160,
											"end": 185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 160,
											"end": 185,
											"name": "tag",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 160,
											"end": 185,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 160,
											"end": 185,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 160,
											"end": 185,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 679,
											"end": 925,
											"name": "tag",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 679,
											"end": 925,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 679,
											"end": 925,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 679,
											"end": 925,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 679,
											"end": 925,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 679,
											"end": 925,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 679,
											"end": 925,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 679,
											"end": 925,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 679,
											"end": 925,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 679,
											"end": 925,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 679,
											"end": 925,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 679,
											"end": 925,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 679,
											"end": 925,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 679,
											"end": 925,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 679,
											"end": 925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 679,
											"end": 925,
											"name": "tag",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 679,
											"end": 925,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 679,
											"end": 925,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 679,
											"end": 925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 679,
											"end": 925,
											"name": "tag",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 679,
											"end": 925,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 679,
											"end": 925,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 679,
											"end": 925,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 679,
											"end": 925,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 679,
											"end": 925,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 679,
											"end": 925,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 679,
											"end": 925,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 679,
											"end": 925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 679,
											"end": 925,
											"name": "tag",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 679,
											"end": 925,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 679,
											"end": 925,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 679,
											"end": 925,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 679,
											"end": 925,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 679,
											"end": 925,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 679,
											"end": 925,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 679,
											"end": 925,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 679,
											"end": 925,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1824,
											"end": 1837,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1856,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 1849,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 1849,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4071,
											"end": 4075,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4087,
											"end": 4100,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 4103,
											"end": 4113,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 4103,
											"end": 4115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4087,
											"end": 4115,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4087,
											"end": 4115,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 4134,
											"end": 4139,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4141,
											"end": 4148,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4150,
											"end": 4155,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4125,
											"end": 4133,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 4125,
											"end": 4156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4173,
											"end": 4177,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2901,
											"end": 2908,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2920,
											"end": 2939,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2920,
											"end": 2939,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 996,
											"end": 1274,
											"name": "tag",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 996,
											"end": 1274,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1094,
											"end": 1098,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1138,
											"end": 1148,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 1138,
											"end": 1148,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1119,
											"end": 1134,
											"name": "TIMESTAMP",
											"source": 5
										},
										{
											"begin": 1119,
											"end": 1148,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1119,
											"end": 1148,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1111,
											"end": 1203,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 1111,
											"end": 1203,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1111,
											"end": 1203,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1111,
											"end": 1203,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1111,
											"end": 1203,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1111,
											"end": 1203,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1111,
											"end": 1203,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1111,
											"end": 1203,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1111,
											"end": 1203,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1111,
											"end": 1203,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 1111,
											"end": 1203,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1111,
											"end": 1203,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 1111,
											"end": 1203,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1111,
											"end": 1203,
											"name": "tag",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 1111,
											"end": 1203,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1111,
											"end": 1203,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1111,
											"end": 1203,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1111,
											"end": 1203,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1111,
											"end": 1203,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1111,
											"end": 1203,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1111,
											"end": 1203,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1111,
											"end": 1203,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1111,
											"end": 1203,
											"name": "tag",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 1111,
											"end": 1203,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1221,
											"end": 1266,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 1240,
											"end": 1246,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1248,
											"end": 1257,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1259,
											"end": 1265,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1221,
											"end": 1239,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 1221,
											"end": 1266,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1221,
											"end": 1266,
											"name": "tag",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 1221,
											"end": 1266,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1214,
											"end": 1266,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1214,
											"end": 1266,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 996,
											"end": 1274,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 996,
											"end": 1274,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 996,
											"end": 1274,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 996,
											"end": 1274,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 996,
											"end": 1274,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 996,
											"end": 1274,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 160,
											"end": 185,
											"name": "tag",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 160,
											"end": 185,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 160,
											"end": 185,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 160,
											"end": 185,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2756,
											"end": 2761,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2780,
											"end": 2782,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 2773,
											"end": 2782,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2773,
											"end": 2782,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3069,
											"end": 3076,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3104,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3105,
											"end": 3112,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3088,
											"end": 3113,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3088,
											"end": 3113,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2028,
											"end": 2041,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2060,
											"end": 2067,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 2053,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 2053,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 679,
											"end": 925,
											"name": "tag",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 679,
											"end": 925,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 757,
											"end": 761,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 801,
											"end": 811,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 801,
											"end": 811,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 782,
											"end": 797,
											"name": "TIMESTAMP",
											"source": 5
										},
										{
											"begin": 782,
											"end": 811,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 782,
											"end": 811,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 774,
											"end": 866,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 774,
											"end": 866,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 774,
											"end": 866,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 774,
											"end": 866,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 774,
											"end": 866,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 774,
											"end": 866,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 774,
											"end": 866,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 774,
											"end": 866,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 774,
											"end": 866,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 774,
											"end": 866,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 774,
											"end": 866,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 774,
											"end": 866,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 774,
											"end": 866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 774,
											"end": 866,
											"name": "tag",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 774,
											"end": 866,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 774,
											"end": 866,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 774,
											"end": 866,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 774,
											"end": 866,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 774,
											"end": 866,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 774,
											"end": 866,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 774,
											"end": 866,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 774,
											"end": 866,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 774,
											"end": 866,
											"name": "tag",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 774,
											"end": 866,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 884,
											"end": 917,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 899,
											"end": 908,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 910,
											"end": 916,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 884,
											"end": 898,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 884,
											"end": 917,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 884,
											"end": 917,
											"name": "tag",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 884,
											"end": 917,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 877,
											"end": 917,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 877,
											"end": 917,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 679,
											"end": 925,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 679,
											"end": 925,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 679,
											"end": 925,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 679,
											"end": 925,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 679,
											"end": 925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3631,
											"end": 3638,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3668,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3669,
											"end": 3674,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3676,
											"end": 3683,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3650,
											"end": 3684,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3650,
											"end": 3684,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 8819,
											"end": 8824,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8826,
											"end": 8833,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8835,
											"end": 8840,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8842,
											"end": 8846,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 8810,
											"end": 8818,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 8810,
											"end": 8847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8726,
											"end": 8854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4863,
											"end": 4867,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4879,
											"end": 4894,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 4897,
											"end": 4907,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 4897,
											"end": 4909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "tag",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 4935,
											"end": 4939,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4941,
											"end": 4948,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4950,
											"end": 4955,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4919,
											"end": 4934,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 4919,
											"end": 4956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 4976,
											"end": 4980,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4982,
											"end": 4984,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4986,
											"end": 4991,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4966,
											"end": 4975,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 4966,
											"end": 4992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5009,
											"end": 5013,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3384,
											"end": 3388,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3400,
											"end": 3413,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 3416,
											"end": 3426,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 3416,
											"end": 3428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3400,
											"end": 3428,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3400,
											"end": 3428,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 3448,
											"end": 3453,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3455,
											"end": 3457,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3459,
											"end": 3464,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3438,
											"end": 3447,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 3438,
											"end": 3465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "tag",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3482,
											"end": 3486,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9830,
											"end": 9831,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9813,
											"end": 9818,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9884,
											"end": 9885,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 1,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 9855,
											"end": 9887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "tag",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9930,
											"end": 9931,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9911,
											"end": 9918,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9983,
											"end": 9984,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 1,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 9955,
											"end": 9986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "tag",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "tag",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10036,
											"end": 10041,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10017,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10018,
											"end": 10023,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10025,
											"end": 10032,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10055,
											"end": 10064,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10101,
											"end": 10108,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10094,
											"end": 10099,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 1,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10110,
											"end": 10115,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 10085,
											"end": 10116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "tag",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "tag",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9701,
											"end": 10133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10514,
											"end": 10538,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 10551,
											"end": 10556,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10558,
											"end": 10565,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10541,
											"end": 10550,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 10541,
											"end": 10566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "tag",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10514,
											"end": 10566,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10514,
											"end": 10566,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10600,
											"end": 10617,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10580,
											"end": 10596,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10580,
											"end": 10617,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 10576,
											"end": 10886,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 10576,
											"end": 10886,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10656,
											"end": 10661,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10637,
											"end": 10653,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10637,
											"end": 10661,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10715,
											"end": 10722,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10724,
											"end": 10740,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10742,
											"end": 10747,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH",
											"source": 1,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 10688,
											"end": 10748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "tag",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10804,
											"end": 10861,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 10813,
											"end": 10818,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10820,
											"end": 10827,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10848,
											"end": 10853,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10829,
											"end": 10845,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10829,
											"end": 10853,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10855,
											"end": 10860,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10804,
											"end": 10812,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 10804,
											"end": 10861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10804,
											"end": 10861,
											"name": "tag",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 10804,
											"end": 10861,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10576,
											"end": 10886,
											"name": "tag",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 10576,
											"end": 10886,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10504,
											"end": 10892,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10415,
											"end": 10892,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5492,
											"end": 5493,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5476,
											"end": 5480,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5544,
											"end": 5545,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 1,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 5517,
											"end": 5547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "tag",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "tag",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5585,
											"end": 5586,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5571,
											"end": 5573,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5639,
											"end": 5640,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 1,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 5610,
											"end": 5642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "tag",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "tag",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 5670,
											"end": 5674,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5676,
											"end": 5678,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5680,
											"end": 5685,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5662,
											"end": 5669,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 5662,
											"end": 5686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "tag",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5393,
											"end": 5693,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "tag",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6113,
											"end": 6114,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6097,
											"end": 6101,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6249,
											"end": 6254,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6233,
											"end": 6245,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 6233,
											"end": 6245,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 6233,
											"end": 6254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "tag",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "tag",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6285,
											"end": 6304,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6316,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6317,
											"end": 6321,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6285,
											"end": 6322,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6285,
											"end": 6322,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6354,
											"end": 6359,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6340,
											"end": 6351,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6340,
											"end": 6359,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6411,
											"end": 6415,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6417,
											"end": 6428,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6430,
											"end": 6435,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 1,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 6386,
											"end": 6436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "tag",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "tag",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6603,
											"end": 6608,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6589,
											"end": 6600,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6589,
											"end": 6608,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6571,
											"end": 6580,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6581,
											"end": 6585,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6271,
											"end": 6633,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "tag",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6661,
											"end": 6662,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6647,
											"end": 6649,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6826,
											"end": 6831,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6810,
											"end": 6822,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 6810,
											"end": 6822,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "tag",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7038,
											"end": 7043,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7030,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7031,
											"end": 7033,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "tag",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7098,
											"end": 7100,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7092,
											"end": 7096,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7102,
											"end": 7107,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 7083,
											"end": 7108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "tag",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6008,
											"end": 7115,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 287,
											"end": 426,
											"name": "tag",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 287,
											"end": 426,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 376,
											"end": 382,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 371,
											"end": 374,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 366,
											"end": 369,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 360,
											"end": 383,
											"name": "MCOPY",
											"source": 6
										},
										{
											"begin": 417,
											"end": 418,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 408,
											"end": 414,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 403,
											"end": 406,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 399,
											"end": 415,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 392,
											"end": 419,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 287,
											"end": 426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 432,
											"end": 534,
											"name": "tag",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 432,
											"end": 534,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 473,
											"end": 479,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 524,
											"end": 526,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 520,
											"end": 527,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 515,
											"end": 517,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 504,
											"end": 518,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 500,
											"end": 528,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 490,
											"end": 528,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 490,
											"end": 528,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 432,
											"end": 534,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 432,
											"end": 534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 540,
											"end": 917,
											"name": "tag",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 540,
											"end": 917,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 628,
											"end": 631,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 689,
											"end": 694,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 656,
											"end": 695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 656,
											"end": 695,
											"name": "tag",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 775,
											"end": 781,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 770,
											"end": 773,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 711,
											"end": 782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 711,
											"end": 782,
											"name": "tag",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 711,
											"end": 782,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 704,
											"end": 782,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 704,
											"end": 782,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 849,
											"end": 855,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 844,
											"end": 847,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 837,
											"end": 841,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 830,
											"end": 835,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 826,
											"end": 842,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 791,
											"end": 856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 791,
											"end": 856,
											"name": "tag",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 791,
											"end": 856,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 903,
											"end": 909,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 881,
											"end": 910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 881,
											"end": 910,
											"name": "tag",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 881,
											"end": 910,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 876,
											"end": 879,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 872,
											"end": 911,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 865,
											"end": 911,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 865,
											"end": 911,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 632,
											"end": 917,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 540,
											"end": 917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "tag",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1036,
											"end": 1040,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1074,
											"end": 1076,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1063,
											"end": 1072,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1059,
											"end": 1077,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1123,
											"end": 1132,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1117,
											"end": 1121,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1113,
											"end": 1133,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1109,
											"end": 1110,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1098,
											"end": 1107,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1094,
											"end": 1111,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1087,
											"end": 1134,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1215,
											"end": 1221,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 1151,
											"end": 1229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "tag",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 923,
											"end": 1236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "tag",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1432,
											"end": 1433,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1429,
											"end": 1430,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1422,
											"end": 1434,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "tag",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1606,
											"end": 1613,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1646,
											"end": 1688,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1639,
											"end": 1644,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1635,
											"end": 1689,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1569,
											"end": 1695,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "tag",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1738,
											"end": 1745,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 1767,
											"end": 1791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "tag",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1701,
											"end": 1797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "tag",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 1894,
											"end": 1899,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 1876,
											"end": 1900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "tag",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1869,
											"end": 1874,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1866,
											"end": 1901,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1915,
											"end": 1916,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1912,
											"end": 1913,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1905,
											"end": 1917,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "tag",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1803,
											"end": 1925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "tag",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1977,
											"end": 1982,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2015,
											"end": 2021,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2002,
											"end": 2022,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 2058,
											"end": 2063,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 2031,
											"end": 2064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "tag",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1931,
											"end": 2070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "tag",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2113,
											"end": 2120,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2147,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2076,
											"end": 2153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "tag",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 2250,
											"end": 2255,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 2232,
											"end": 2256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "tag",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2225,
											"end": 2230,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2222,
											"end": 2257,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2271,
											"end": 2272,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2268,
											"end": 2269,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2261,
											"end": 2273,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "tag",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2159,
											"end": 2281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "tag",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2333,
											"end": 2338,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2371,
											"end": 2377,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2358,
											"end": 2378,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 2414,
											"end": 2419,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 2387,
											"end": 2420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "tag",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2287,
											"end": 2426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "tag",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2500,
											"end": 2506,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2508,
											"end": 2514,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2557,
											"end": 2559,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2545,
											"end": 2554,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2536,
											"end": 2543,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2532,
											"end": 2555,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2528,
											"end": 2560,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 2563,
											"end": 2642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "tag",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "tag",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2683,
											"end": 2684,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 2753,
											"end": 2760,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2744,
											"end": 2750,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2733,
											"end": 2742,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2729,
											"end": 2751,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 2708,
											"end": 2761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "tag",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2654,
											"end": 2771,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2810,
											"end": 2812,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 2881,
											"end": 2888,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2872,
											"end": 2878,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2861,
											"end": 2870,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2857,
											"end": 2879,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 2836,
											"end": 2889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "tag",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2781,
											"end": 2899,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2432,
											"end": 2906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "tag",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2946,
											"end": 2953,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2989,
											"end": 2994,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2982,
											"end": 2995,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2975,
											"end": 2996,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2912,
											"end": 3002,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "tag",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 3104,
											"end": 3109,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 3089,
											"end": 3110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "tag",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3084,
											"end": 3087,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3077,
											"end": 3111,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3008,
											"end": 3117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "tag",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3210,
											"end": 3214,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3248,
											"end": 3250,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3237,
											"end": 3246,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3233,
											"end": 3251,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 3323,
											"end": 3324,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3308,
											"end": 3325,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3299,
											"end": 3305,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 3261,
											"end": 3326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "tag",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3123,
											"end": 3333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "tag",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 3444,
											"end": 3449,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 3426,
											"end": 3450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "tag",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3421,
											"end": 3424,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3414,
											"end": 3451,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3339,
											"end": 3457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "tag",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3556,
											"end": 3560,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3594,
											"end": 3596,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3583,
											"end": 3592,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3579,
											"end": 3597,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 3675,
											"end": 3676,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3664,
											"end": 3673,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3660,
											"end": 3677,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3651,
											"end": 3657,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 3607,
											"end": 3678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "tag",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3463,
											"end": 3685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "tag",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3768,
											"end": 3774,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3776,
											"end": 3782,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3784,
											"end": 3790,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3833,
											"end": 3835,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 3821,
											"end": 3830,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3812,
											"end": 3819,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3808,
											"end": 3831,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3804,
											"end": 3836,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 3839,
											"end": 3918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "tag",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "tag",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3959,
											"end": 3960,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 4029,
											"end": 4036,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4020,
											"end": 4026,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4009,
											"end": 4018,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 4005,
											"end": 4027,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 3984,
											"end": 4037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "tag",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3974,
											"end": 4037,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 3974,
											"end": 4037,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3930,
											"end": 4047,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4086,
											"end": 4088,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 4157,
											"end": 4164,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4148,
											"end": 4154,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4137,
											"end": 4146,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 4133,
											"end": 4155,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 4112,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "tag",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4102,
											"end": 4165,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4102,
											"end": 4165,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4057,
											"end": 4175,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4214,
											"end": 4216,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 4285,
											"end": 4292,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4276,
											"end": 4282,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4265,
											"end": 4274,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 4261,
											"end": 4283,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 4240,
											"end": 4293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "tag",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4185,
											"end": 4303,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3691,
											"end": 4310,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "tag",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4351,
											"end": 4358,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4391,
											"end": 4395,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 4384,
											"end": 4389,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4380,
											"end": 4396,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4369,
											"end": 4396,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4369,
											"end": 4396,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4316,
											"end": 4402,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "tag",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 4507,
											"end": 4512,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 4491,
											"end": 4513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "tag",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4486,
											"end": 4489,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4479,
											"end": 4514,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4408,
											"end": 4520,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "tag",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4615,
											"end": 4619,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4653,
											"end": 4655,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4642,
											"end": 4651,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4638,
											"end": 4656,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4630,
											"end": 4656,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4630,
											"end": 4656,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 4730,
											"end": 4731,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4719,
											"end": 4728,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4715,
											"end": 4732,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4706,
											"end": 4712,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 4666,
											"end": 4733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "tag",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4526,
											"end": 4740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "tag",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4805,
											"end": 4811,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4854,
											"end": 4856,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4842,
											"end": 4851,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4833,
											"end": 4840,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4829,
											"end": 4852,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4825,
											"end": 4857,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 4860,
											"end": 4939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "tag",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "tag",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4980,
											"end": 4981,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 5050,
											"end": 5057,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5041,
											"end": 5047,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5030,
											"end": 5039,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5026,
											"end": 5048,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 5005,
											"end": 5058,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "tag",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4995,
											"end": 5058,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4995,
											"end": 5058,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4951,
											"end": 5068,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4746,
											"end": 5075,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5081,
											"end": 5555,
											"name": "tag",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 5081,
											"end": 5555,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5149,
											"end": 5155,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5157,
											"end": 5163,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5206,
											"end": 5208,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5194,
											"end": 5203,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5185,
											"end": 5192,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5181,
											"end": 5204,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5177,
											"end": 5209,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 5174,
											"end": 5293,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5174,
											"end": 5293,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 5174,
											"end": 5293,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5212,
											"end": 5291,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 5212,
											"end": 5291,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 5212,
											"end": 5291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5212,
											"end": 5291,
											"name": "tag",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 5212,
											"end": 5291,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5174,
											"end": 5293,
											"name": "tag",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 5174,
											"end": 5293,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5332,
											"end": 5333,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5357,
											"end": 5410,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "221"
										},
										{
											"begin": 5402,
											"end": 5409,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5393,
											"end": 5399,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5382,
											"end": 5391,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5378,
											"end": 5400,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5357,
											"end": 5410,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 5357,
											"end": 5410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5357,
											"end": 5410,
											"name": "tag",
											"source": 6,
											"value": "221"
										},
										{
											"begin": 5357,
											"end": 5410,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5347,
											"end": 5410,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5347,
											"end": 5410,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5303,
											"end": 5420,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5459,
											"end": 5461,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5485,
											"end": 5538,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "222"
										},
										{
											"begin": 5530,
											"end": 5537,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5521,
											"end": 5527,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5510,
											"end": 5519,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5506,
											"end": 5528,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5485,
											"end": 5538,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 5485,
											"end": 5538,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5485,
											"end": 5538,
											"name": "tag",
											"source": 6,
											"value": "222"
										},
										{
											"begin": 5485,
											"end": 5538,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5475,
											"end": 5538,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5475,
											"end": 5538,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5430,
											"end": 5548,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5081,
											"end": 5555,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5081,
											"end": 5555,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5081,
											"end": 5555,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5081,
											"end": 5555,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5081,
											"end": 5555,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5081,
											"end": 5555,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5561,
											"end": 5741,
											"name": "tag",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 5561,
											"end": 5741,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5609,
											"end": 5686,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5606,
											"end": 5607,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5599,
											"end": 5687,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5706,
											"end": 5710,
											"name": "PUSH",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 5703,
											"end": 5704,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5696,
											"end": 5711,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5730,
											"end": 5734,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 5727,
											"end": 5728,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5720,
											"end": 5735,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5747,
											"end": 6067,
											"name": "tag",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 5747,
											"end": 6067,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5791,
											"end": 5797,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5828,
											"end": 5829,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 5822,
											"end": 5826,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5818,
											"end": 5830,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 5808,
											"end": 5830,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5808,
											"end": 5830,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5875,
											"end": 5876,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 5869,
											"end": 5873,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5865,
											"end": 5877,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5896,
											"end": 5914,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5886,
											"end": 5967,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 5886,
											"end": 5967,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5952,
											"end": 5956,
											"name": "PUSH",
											"source": 6,
											"value": "7F"
										},
										{
											"begin": 5944,
											"end": 5950,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5940,
											"end": 5957,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5930,
											"end": 5957,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5930,
											"end": 5957,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5886,
											"end": 5967,
											"name": "tag",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 5886,
											"end": 5967,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6014,
											"end": 6016,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6006,
											"end": 6012,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6003,
											"end": 6017,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 5983,
											"end": 6001,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5980,
											"end": 6018,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5977,
											"end": 6061,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 5977,
											"end": 6061,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6033,
											"end": 6051,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 6033,
											"end": 6051,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 6033,
											"end": 6051,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6033,
											"end": 6051,
											"name": "tag",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 6033,
											"end": 6051,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5977,
											"end": 6061,
											"name": "tag",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 5977,
											"end": 6061,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5798,
											"end": 6067,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5747,
											"end": 6067,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5747,
											"end": 6067,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5747,
											"end": 6067,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5747,
											"end": 6067,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6073,
											"end": 6310,
											"name": "tag",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 6073,
											"end": 6310,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6213,
											"end": 6247,
											"name": "PUSH",
											"source": 6,
											"value": "546F6B656E7320617265206C6F636B656420756E74696C2074686520756E6C6F"
										},
										{
											"begin": 6209,
											"end": 6210,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6201,
											"end": 6207,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6197,
											"end": 6211,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6190,
											"end": 6248,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6282,
											"end": 6302,
											"name": "PUSH",
											"source": 6,
											"value": "636B2074696D6520686173207061737365640000000000000000000000000000"
										},
										{
											"begin": 6277,
											"end": 6279,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6269,
											"end": 6275,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6265,
											"end": 6280,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6258,
											"end": 6303,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6073,
											"end": 6310,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6073,
											"end": 6310,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6316,
											"end": 6682,
											"name": "tag",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 6316,
											"end": 6682,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6458,
											"end": 6461,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6479,
											"end": 6546,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "230"
										},
										{
											"begin": 6543,
											"end": 6545,
											"name": "PUSH",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 6538,
											"end": 6541,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6479,
											"end": 6546,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 6479,
											"end": 6546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6479,
											"end": 6546,
											"name": "tag",
											"source": 6,
											"value": "230"
										},
										{
											"begin": 6479,
											"end": 6546,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6472,
											"end": 6546,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6472,
											"end": 6546,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6555,
											"end": 6648,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 6644,
											"end": 6647,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6555,
											"end": 6648,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 6555,
											"end": 6648,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6555,
											"end": 6648,
											"name": "tag",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 6555,
											"end": 6648,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6673,
											"end": 6675,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6668,
											"end": 6671,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6664,
											"end": 6676,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6657,
											"end": 6676,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6657,
											"end": 6676,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6316,
											"end": 6682,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6316,
											"end": 6682,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6316,
											"end": 6682,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6316,
											"end": 6682,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6688,
											"end": 7107,
											"name": "tag",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 6688,
											"end": 7107,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6854,
											"end": 6858,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6892,
											"end": 6894,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6881,
											"end": 6890,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6877,
											"end": 6895,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6869,
											"end": 6895,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6869,
											"end": 6895,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6941,
											"end": 6950,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6935,
											"end": 6939,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6927,
											"end": 6928,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6916,
											"end": 6925,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6912,
											"end": 6929,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6905,
											"end": 6952,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6969,
											"end": 7100,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 7095,
											"end": 7099,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6969,
											"end": 7100,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 6969,
											"end": 7100,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6969,
											"end": 7100,
											"name": "tag",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 6969,
											"end": 7100,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6961,
											"end": 7100,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6961,
											"end": 7100,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6688,
											"end": 7107,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6688,
											"end": 7107,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6688,
											"end": 7107,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6688,
											"end": 7107,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7113,
											"end": 7231,
											"name": "tag",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 7113,
											"end": 7231,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7200,
											"end": 7224,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "235"
										},
										{
											"begin": 7218,
											"end": 7223,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7200,
											"end": 7224,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 7200,
											"end": 7224,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7200,
											"end": 7224,
											"name": "tag",
											"source": 6,
											"value": "235"
										},
										{
											"begin": 7200,
											"end": 7224,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7195,
											"end": 7198,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7188,
											"end": 7225,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7113,
											"end": 7231,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7113,
											"end": 7231,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7113,
											"end": 7231,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7237,
											"end": 7459,
											"name": "tag",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 7237,
											"end": 7459,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7330,
											"end": 7334,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7368,
											"end": 7370,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7357,
											"end": 7366,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7353,
											"end": 7371,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7345,
											"end": 7371,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7345,
											"end": 7371,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7381,
											"end": 7452,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 7449,
											"end": 7450,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7438,
											"end": 7447,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7434,
											"end": 7451,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7425,
											"end": 7431,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7381,
											"end": 7452,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 7381,
											"end": 7452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7381,
											"end": 7452,
											"name": "tag",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 7381,
											"end": 7452,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7237,
											"end": 7459,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7237,
											"end": 7459,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7237,
											"end": 7459,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7237,
											"end": 7459,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7237,
											"end": 7459,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7465,
											"end": 7907,
											"name": "tag",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 7465,
											"end": 7907,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7614,
											"end": 7618,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7652,
											"end": 7654,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 7641,
											"end": 7650,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7637,
											"end": 7655,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7629,
											"end": 7655,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7629,
											"end": 7655,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7665,
											"end": 7736,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 7733,
											"end": 7734,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7722,
											"end": 7731,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7718,
											"end": 7735,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7709,
											"end": 7715,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 7665,
											"end": 7736,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 7665,
											"end": 7736,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7665,
											"end": 7736,
											"name": "tag",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 7665,
											"end": 7736,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7746,
											"end": 7818,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 7814,
											"end": 7816,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7803,
											"end": 7812,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7799,
											"end": 7817,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7790,
											"end": 7796,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 7746,
											"end": 7818,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 7746,
											"end": 7818,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7746,
											"end": 7818,
											"name": "tag",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 7746,
											"end": 7818,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7828,
											"end": 7900,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 7896,
											"end": 7898,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7885,
											"end": 7894,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7881,
											"end": 7899,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7872,
											"end": 7878,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7828,
											"end": 7900,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 7828,
											"end": 7900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7828,
											"end": 7900,
											"name": "tag",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 7828,
											"end": 7900,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7465,
											"end": 7907,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 7465,
											"end": 7907,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 7465,
											"end": 7907,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7465,
											"end": 7907,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7465,
											"end": 7907,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7465,
											"end": 7907,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7465,
											"end": 7907,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7913,
											"end": 8093,
											"name": "tag",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 7913,
											"end": 8093,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7961,
											"end": 8038,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7958,
											"end": 7959,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7951,
											"end": 8039,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8058,
											"end": 8062,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 8055,
											"end": 8056,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 8048,
											"end": 8063,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8082,
											"end": 8086,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 8079,
											"end": 8080,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8072,
											"end": 8087,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 8099,
											"end": 8290,
											"name": "tag",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 8099,
											"end": 8290,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8139,
											"end": 8142,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8158,
											"end": 8178,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 8176,
											"end": 8177,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8158,
											"end": 8178,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 8158,
											"end": 8178,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8158,
											"end": 8178,
											"name": "tag",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 8158,
											"end": 8178,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8153,
											"end": 8178,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8153,
											"end": 8178,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8192,
											"end": 8212,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "245"
										},
										{
											"begin": 8210,
											"end": 8211,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8192,
											"end": 8212,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 8192,
											"end": 8212,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8192,
											"end": 8212,
											"name": "tag",
											"source": 6,
											"value": "245"
										},
										{
											"begin": 8192,
											"end": 8212,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8187,
											"end": 8212,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8187,
											"end": 8212,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8235,
											"end": 8236,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8232,
											"end": 8233,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8228,
											"end": 8237,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8221,
											"end": 8237,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8221,
											"end": 8237,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8256,
											"end": 8259,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8253,
											"end": 8254,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8250,
											"end": 8260,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 8247,
											"end": 8283,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8247,
											"end": 8283,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 8247,
											"end": 8283,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8263,
											"end": 8281,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "247"
										},
										{
											"begin": 8263,
											"end": 8281,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 8263,
											"end": 8281,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8263,
											"end": 8281,
											"name": "tag",
											"source": 6,
											"value": "247"
										},
										{
											"begin": 8263,
											"end": 8281,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8247,
											"end": 8283,
											"name": "tag",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 8247,
											"end": 8283,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8099,
											"end": 8290,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8099,
											"end": 8290,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8099,
											"end": 8290,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8099,
											"end": 8290,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8099,
											"end": 8290,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/ERC20/TimeLock.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"unlockTime()": "251c1aa3"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"initialSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lockTimeInSeconds\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unlockTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC20/TimeLock.sol\":\"TimeLockedToken\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xbf61ab2ae1d575a17ea58fbb99ca232baddcc4e0eeea180e84cbc74b0c348b31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e0968705bad99747a8e5288aa008678c2be2f471f919dce3925a3cc4f1dee09\",\"dweb:/ipfs/QmbAFnCQfo4tw6ssfQSjhA5LzwHWNNryXN8bX7ty8jiqqn\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/ERC20/TimeLock.sol\":{\"keccak256\":\"0x50e11e7765f5273d5f77caf3627cb1f0d268feeeda0f9da487c5f7af2a6fd094\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85db0e1be2fff43b5bef54ce79f3e0a68fea5a5c4e3d8e9ac3344caea0a8c729\",\"dweb:/ipfs/Qmf9G4oRHaichDZjn7Av1YMBvPU24byM88rb8rvBPTUMdK\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 159,
								"contract": "contracts/ERC20/TimeLock.sol:TimeLockedToken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 165,
								"contract": "contracts/ERC20/TimeLock.sol:TimeLockedToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 167,
								"contract": "contracts/ERC20/TimeLock.sol:TimeLockedToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 169,
								"contract": "contracts/ERC20/TimeLock.sol:TimeLockedToken",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 171,
								"contract": "contracts/ERC20/TimeLock.sol:TimeLockedToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 792,
								"contract": "contracts/ERC20/TimeLock.sol:TimeLockedToken",
								"label": "unlockTime",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							136
						],
						"IERC20Errors": [
							41
						],
						"IERC721Errors": [
							89
						]
					},
					"id": 137,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:0",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 41,
							"linearizedBaseContracts": [
								41
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 11,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "654:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "670:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "687:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:0"
									},
									"src": "623:80:0"
								},
								{
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 16,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "891:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:0"
									},
									"src": "866:41:0"
								},
								{
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 21,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "1104:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:0"
									},
									"src": "1077:45:0"
								},
								{
									"documentation": {
										"id": 22,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:0",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 30,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1511:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1528:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 25,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1547:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 27,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:0"
									},
									"src": "1478:85:0"
								},
								{
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 35,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1775:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:0"
									},
									"src": "1748:45:0"
								},
								{
									"documentation": {
										"id": 36,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:0",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 40,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "2025:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 37,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:0"
									},
									"src": "1999:43:0"
								}
							],
							"scope": 137,
							"src": "280:1764:0",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 42,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:0",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 89,
							"linearizedBaseContracts": [
								89
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:0",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 47,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "2469:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 44,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:0"
									},
									"src": "2444:40:0"
								},
								{
									"documentation": {
										"id": 48,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:0",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 52,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "2656:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 49,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:0"
									},
									"src": "2627:46:0"
								},
								{
									"documentation": {
										"id": 53,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:0",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 61,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3000:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 54,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3016:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3033:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 58,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:0"
									},
									"src": "2973:75:0"
								},
								{
									"documentation": {
										"id": 62,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 66,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "3237:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:0"
									},
									"src": "3211:42:0"
								},
								{
									"documentation": {
										"id": 67,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 71,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "3451:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:0"
									},
									"src": "3423:46:0"
								},
								{
									"documentation": {
										"id": 72,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 78,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3760:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3778:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:0"
									},
									"src": "3727:68:0"
								},
								{
									"documentation": {
										"id": 79,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 83,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "4008:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:0"
									},
									"src": "3980:46:0"
								},
								{
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 88,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "4262:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:0"
									},
									"src": "4234:46:0"
								}
							],
							"scope": 137,
							"src": "2190:2092:0",
							"usedErrors": [
								47,
								52,
								61,
								66,
								71,
								78,
								83,
								88
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 90,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:0",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 136,
							"linearizedBaseContracts": [
								136
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 101,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4860:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4876:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4893:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4909:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:0"
									},
									"src": "4827:99:0"
								},
								{
									"documentation": {
										"id": 102,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 106,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "5116:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:0"
									},
									"src": "5089:43:0"
								},
								{
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 111,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "5331:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:0"
									},
									"src": "5302:47:0"
								},
								{
									"documentation": {
										"id": 112,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 118,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5651:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5669:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:0"
									},
									"src": "5616:68:0"
								},
								{
									"documentation": {
										"id": 119,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 123,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "5898:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:0"
									},
									"src": "5869:47:0"
								},
								{
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 128,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "6153:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:0"
									},
									"src": "6124:47:0"
								},
								{
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:0",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 135,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6494:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6513:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:0"
									},
									"src": "6462:73:0"
								}
							],
							"scope": 137,
							"src": "4430:2107:0",
							"usedErrors": [
								101,
								106,
								111,
								118,
								123,
								128,
								135
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							785
						],
						"ERC20": [
							651
						],
						"IERC20": [
							729
						],
						"IERC20Errors": [
							41
						],
						"IERC20Metadata": [
							755
						]
					},
					"id": 652,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 138,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 140,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 730,
							"src": "131:36:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 139,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 729,
										"src": "139:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 142,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 756,
							"src": "168:63:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 141,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 755,
										"src": "176:14:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 144,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 786,
							"src": "232:48:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 143,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 785,
										"src": "240:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 146,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 137,
							"src": "281:65:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 145,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 41,
										"src": "289:12:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 148,
										"name": "Context",
										"nameLocations": [
											"1133:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 785,
										"src": "1133:7:1"
									},
									"id": 149,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:1"
								},
								{
									"baseName": {
										"id": 150,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 729,
										"src": "1142:6:1"
									},
									"id": 151,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:1"
								},
								{
									"baseName": {
										"id": 152,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 755,
										"src": "1150:14:1"
									},
									"id": 153,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:1"
								},
								{
									"baseName": {
										"id": 154,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 41,
										"src": "1166:12:1"
									},
									"id": 155,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:1"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 147,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:1",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 651,
							"linearizedBaseContracts": [
								651,
								41,
								755,
								729,
								785
							],
							"name": "ERC20",
							"nameLocation": "1124:5:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 159,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1185:53:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 158,
										"keyName": "account",
										"keyNameLocation": "1201:7:1",
										"keyType": {
											"id": 156,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 157,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 165,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1245:83:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 164,
										"keyName": "account",
										"keyNameLocation": "1261:7:1",
										"keyType": {
											"id": 160,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 163,
											"keyName": "spender",
											"keyNameLocation": "1288:7:1",
											"keyType": {
												"id": 161,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 162,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 167,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1335:28:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 166,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 169,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1370:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 168,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 171,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1396:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 170,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 187,
										"nodeType": "Block",
										"src": "1657:57:1",
										"statements": [
											{
												"expression": {
													"id": 181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 179,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 169,
														"src": "1667:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 180,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 174,
														"src": "1675:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1667:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 182,
												"nodeType": "ExpressionStatement",
												"src": "1667:13:1"
											},
											{
												"expression": {
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 183,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "1690:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 184,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 176,
														"src": "1700:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1690:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "1690:17:1"
											}
										]
									},
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "1425:171:1",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 188,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1627:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1613:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 173,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1613:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1648:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1634:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 175,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1634:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1612:44:1"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1657:0:1"
									},
									"scope": 651,
									"src": "1601:113:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										742
									],
									"body": {
										"id": 196,
										"nodeType": "Block",
										"src": "1839:29:1",
										"statements": [
											{
												"expression": {
													"id": 194,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 169,
													"src": "1856:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 193,
												"id": 195,
												"nodeType": "Return",
												"src": "1849:12:1"
											}
										]
									},
									"documentation": {
										"id": 189,
										"nodeType": "StructuredDocumentation",
										"src": "1720:54:1",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 197,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1788:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1792:2:1"
									},
									"returnParameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "1824:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 191,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1824:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1823:15:1"
									},
									"scope": 651,
									"src": "1779:89:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										748
									],
									"body": {
										"id": 205,
										"nodeType": "Block",
										"src": "2043:31:1",
										"statements": [
											{
												"expression": {
													"id": 203,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 171,
													"src": "2060:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 202,
												"id": 204,
												"nodeType": "Return",
												"src": "2053:14:1"
											}
										]
									},
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "1874:102:1",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 206,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1990:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1996:2:1"
									},
									"returnParameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "2028:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 200,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2028:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2027:15:1"
									},
									"scope": 651,
									"src": "1981:93:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										754
									],
									"body": {
										"id": 214,
										"nodeType": "Block",
										"src": "2763:26:1",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2780:2:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 211,
												"id": 213,
												"nodeType": "Return",
												"src": "2773:9:1"
											}
										]
									},
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "2080:622:1",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 215,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2716:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2724:2:1"
									},
									"returnParameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "2756:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 209,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2756:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2755:7:1"
									},
									"scope": 651,
									"src": "2707:82:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										678
									],
									"body": {
										"id": 223,
										"nodeType": "Block",
										"src": "2910:36:1",
										"statements": [
											{
												"expression": {
													"id": 221,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 167,
													"src": "2927:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 220,
												"id": 222,
												"nodeType": "Return",
												"src": "2920:19:1"
											}
										]
									},
									"documentation": {
										"id": 216,
										"nodeType": "StructuredDocumentation",
										"src": "2795:49:1",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 224,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2858:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2869:2:1"
									},
									"returnParameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2901:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2901:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2900:9:1"
									},
									"scope": 651,
									"src": "2849:97:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										686
									],
									"body": {
										"id": 236,
										"nodeType": "Block",
										"src": "3078:42:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 232,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 159,
														"src": "3095:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 234,
													"indexExpression": {
														"id": 233,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 227,
														"src": "3105:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3095:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 231,
												"id": 235,
												"nodeType": "Return",
												"src": "3088:25:1"
											}
										]
									},
									"documentation": {
										"id": 225,
										"nodeType": "StructuredDocumentation",
										"src": "2952:47:1",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 237,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3013:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3031:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "3023:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3023:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3022:17:1"
									},
									"returnParameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "3069:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3069:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3068:9:1"
									},
									"scope": 651,
									"src": "3004:116:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										696
									],
									"body": {
										"id": 260,
										"nodeType": "Block",
										"src": "3390:103:1",
										"statements": [
											{
												"assignments": [
													248
												],
												"declarations": [
													{
														"constant": false,
														"id": 248,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3408:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 260,
														"src": "3400:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 247,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3400:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 251,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 249,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "3416:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3416:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3400:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 253,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 248,
															"src": "3448:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 254,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "3455:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 255,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 242,
															"src": "3459:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 252,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "3438:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3438:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 257,
												"nodeType": "ExpressionStatement",
												"src": "3438:27:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 258,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3482:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 246,
												"id": 259,
												"nodeType": "Return",
												"src": "3475:11:1"
											}
										]
									},
									"documentation": {
										"id": 238,
										"nodeType": "StructuredDocumentation",
										"src": "3126:184:1",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 261,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3324:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3341:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3333:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3333:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3353:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3345:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3345:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3332:27:1"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3384:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 244,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3384:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3383:6:1"
									},
									"scope": 651,
									"src": "3315:178:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										706
									],
									"body": {
										"id": 277,
										"nodeType": "Block",
										"src": "3640:51:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 271,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "3657:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 273,
														"indexExpression": {
															"id": 272,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 264,
															"src": "3669:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3657:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 275,
													"indexExpression": {
														"id": 274,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 266,
														"src": "3676:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3657:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 270,
												"id": 276,
												"nodeType": "Return",
												"src": "3650:34:1"
											}
										]
									},
									"documentation": {
										"id": 262,
										"nodeType": "StructuredDocumentation",
										"src": "3499:47:1",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 278,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3560:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3578:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3570:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3570:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3593:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3585:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 265,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3585:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3569:32:1"
									},
									"returnParameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3631:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3631:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3630:9:1"
									},
									"scope": 651,
									"src": "3551:140:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										716
									],
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "4077:107:1",
										"statements": [
											{
												"assignments": [
													289
												],
												"declarations": [
													{
														"constant": false,
														"id": 289,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4095:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4087:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 288,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4087:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 292,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 290,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "4103:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4103:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4087:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 294,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 289,
															"src": "4134:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 295,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 281,
															"src": "4141:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 296,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 283,
															"src": "4150:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 293,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															542,
															602
														],
														"referencedDeclaration": 542,
														"src": "4125:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4125:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 298,
												"nodeType": "ExpressionStatement",
												"src": "4125:31:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 299,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4173:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 287,
												"id": 300,
												"nodeType": "Return",
												"src": "4166:11:1"
											}
										]
									},
									"documentation": {
										"id": 279,
										"nodeType": "StructuredDocumentation",
										"src": "3697:296:1",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 302,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4007:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4023:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4015:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4015:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4040:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4032:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4032:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4014:32:1"
									},
									"returnParameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4071:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 285,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4071:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4070:6:1"
									},
									"scope": 651,
									"src": "3998:186:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										728
									],
									"body": {
										"id": 333,
										"nodeType": "Block",
										"src": "4869:151:1",
										"statements": [
											{
												"assignments": [
													315
												],
												"declarations": [
													{
														"constant": false,
														"id": 315,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4887:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 333,
														"src": "4879:15:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 314,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4879:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 318,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 316,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "4897:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4897:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4879:30:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 320,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "4935:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 321,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "4941:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 322,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "4950:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 319,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 650,
														"src": "4919:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4919:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 324,
												"nodeType": "ExpressionStatement",
												"src": "4919:37:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 326,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "4976:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 327,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 307,
															"src": "4982:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 328,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "4986:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 325,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "4966:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4966:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "4966:26:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5009:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 313,
												"id": 332,
												"nodeType": "Return",
												"src": "5002:11:1"
											}
										]
									},
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "4190:581:1",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 334,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4785:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4806:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4798:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4798:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4820:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4812:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4812:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4832:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4824:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4824:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4797:41:1"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4863:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 311,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4863:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4862:6:1"
									},
									"scope": 651,
									"src": "4776:244:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 380,
										"nodeType": "Block",
										"src": "5462:231:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 344,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 337,
														"src": "5476:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 347,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5492:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 346,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5484:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 345,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5484:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 348,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5484:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5476:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 358,
												"nodeType": "IfStatement",
												"src": "5472:86:1",
												"trueBody": {
													"id": 357,
													"nodeType": "Block",
													"src": "5496:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 353,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5544:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 352,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5536:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 351,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5536:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 354,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5536:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 350,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "5517:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 355,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5517:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 356,
															"nodeType": "RevertStatement",
															"src": "5510:37:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 359,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 339,
														"src": "5571:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 362,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5585:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5577:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 360,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5577:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 363,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5577:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5571:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 373,
												"nodeType": "IfStatement",
												"src": "5567:86:1",
												"trueBody": {
													"id": 372,
													"nodeType": "Block",
													"src": "5589:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 368,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5639:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 367,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5631:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 366,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5631:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 369,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5631:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 365,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "5610:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 370,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5610:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 371,
															"nodeType": "RevertStatement",
															"src": "5603:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 375,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 337,
															"src": "5670:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 376,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 339,
															"src": "5676:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 377,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 341,
															"src": "5680:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 374,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "5662:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5662:24:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 379,
												"nodeType": "ExpressionStatement",
												"src": "5662:24:1"
											}
										]
									},
									"documentation": {
										"id": 335,
										"nodeType": "StructuredDocumentation",
										"src": "5026:362:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 381,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5402:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5420:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5412:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 336,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5412:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5434:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5426:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 338,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5426:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5446:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5438:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5438:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5411:41:1"
									},
									"returnParameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5462:0:1"
									},
									"scope": 651,
									"src": "5393:300:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 457,
										"nodeType": "Block",
										"src": "6083:1032:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 391,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 384,
														"src": "6097:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 394,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6113:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 393,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6105:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 392,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6105:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 395,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6105:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6097:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 428,
													"nodeType": "Block",
													"src": "6271:362:1",
													"statements": [
														{
															"assignments": [
																403
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 403,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6293:11:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 428,
																	"src": "6285:19:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 402,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6285:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 407,
															"initialValue": {
																"baseExpression": {
																	"id": 404,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 159,
																	"src": "6307:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 406,
																"indexExpression": {
																	"id": 405,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 384,
																	"src": "6317:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6307:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6285:37:1"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 410,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 408,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 403,
																	"src": "6340:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 409,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "6354:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6340:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 418,
															"nodeType": "IfStatement",
															"src": "6336:115:1",
															"trueBody": {
																"id": 417,
																"nodeType": "Block",
																"src": "6361:90:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 412,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 384,
																					"src": "6411:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 413,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 403,
																					"src": "6417:11:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 414,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 388,
																					"src": "6430:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 411,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 11,
																				"src": "6386:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 415,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6386:50:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 416,
																		"nodeType": "RevertStatement",
																		"src": "6379:57:1"
																	}
																]
															}
														},
														{
															"id": 427,
															"nodeType": "UncheckedBlock",
															"src": "6464:159:1",
															"statements": [
																{
																	"expression": {
																		"id": 425,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 419,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6571:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 421,
																			"indexExpression": {
																				"id": 420,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 384,
																				"src": "6581:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6571:15:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 424,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 422,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 403,
																				"src": "6589:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 423,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 388,
																				"src": "6603:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6589:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6571:37:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 426,
																	"nodeType": "ExpressionStatement",
																	"src": "6571:37:1"
																}
															]
														}
													]
												},
												"id": 429,
												"nodeType": "IfStatement",
												"src": "6093:540:1",
												"trueBody": {
													"id": 401,
													"nodeType": "Block",
													"src": "6117:148:1",
													"statements": [
														{
															"expression": {
																"id": 399,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 397,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 167,
																	"src": "6233:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 398,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "6249:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6233:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 400,
															"nodeType": "ExpressionStatement",
															"src": "6233:21:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 430,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 386,
														"src": "6647:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 433,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6661:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 432,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6653:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 431,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6653:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 434,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6653:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6647:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 449,
													"nodeType": "Block",
													"src": "6862:206:1",
													"statements": [
														{
															"id": 448,
															"nodeType": "UncheckedBlock",
															"src": "6876:182:1",
															"statements": [
																{
																	"expression": {
																		"id": 446,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 442,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "7021:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 444,
																			"indexExpression": {
																				"id": 443,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 386,
																				"src": "7031:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7021:13:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 445,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 388,
																			"src": "7038:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7021:22:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 447,
																	"nodeType": "ExpressionStatement",
																	"src": "7021:22:1"
																}
															]
														}
													]
												},
												"id": 450,
												"nodeType": "IfStatement",
												"src": "6643:425:1",
												"trueBody": {
													"id": 441,
													"nodeType": "Block",
													"src": "6665:191:1",
													"statements": [
														{
															"id": 440,
															"nodeType": "UncheckedBlock",
															"src": "6679:167:1",
															"statements": [
																{
																	"expression": {
																		"id": 438,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 436,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 167,
																			"src": "6810:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 437,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 388,
																			"src": "6826:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6810:21:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 439,
																	"nodeType": "ExpressionStatement",
																	"src": "6810:21:1"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 452,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "7092:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 453,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 386,
															"src": "7098:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 454,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "7102:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 451,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 663,
														"src": "7083:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7083:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 456,
												"nodeType": "EmitStatement",
												"src": "7078:30:1"
											}
										]
									},
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "5699:304:1",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 458,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6017:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6033:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6025:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6025:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6047:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6039:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6039:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6059:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6051:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6051:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6024:41:1"
									},
									"returnParameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6083:0:1"
									},
									"scope": 651,
									"src": "6008:1107:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 490,
										"nodeType": "Block",
										"src": "7514:152:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 466,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 461,
														"src": "7528:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 469,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7547:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 468,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7539:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 467,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7539:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 470,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7539:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7528:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 480,
												"nodeType": "IfStatement",
												"src": "7524:91:1",
												"trueBody": {
													"id": 479,
													"nodeType": "Block",
													"src": "7551:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 475,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7601:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 474,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7593:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 473,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7593:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 476,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7593:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 472,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "7572:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 477,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7572:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 478,
															"nodeType": "RevertStatement",
															"src": "7565:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 484,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7640:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 483,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7632:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 482,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7632:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 485,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7632:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 486,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "7644:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 487,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "7653:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 481,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "7624:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7624:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 489,
												"nodeType": "ExpressionStatement",
												"src": "7624:35:1"
											}
										]
									},
									"documentation": {
										"id": 459,
										"nodeType": "StructuredDocumentation",
										"src": "7121:332:1",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 491,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7467:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7481:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "7473:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7473:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7498:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "7490:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 462,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7490:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7472:32:1"
									},
									"returnParameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7514:0:1"
									},
									"scope": 651,
									"src": "7458:208:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 523,
										"nodeType": "Block",
										"src": "8040:150:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 499,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 494,
														"src": "8054:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 502,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8073:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 501,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8065:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 500,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8065:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 503,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8065:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8054:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 513,
												"nodeType": "IfStatement",
												"src": "8050:89:1",
												"trueBody": {
													"id": 512,
													"nodeType": "Block",
													"src": "8077:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 508,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8125:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 507,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8117:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 506,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8117:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 509,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8117:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 505,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "8098:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8098:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 511,
															"nodeType": "RevertStatement",
															"src": "8091:37:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 515,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 494,
															"src": "8156:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 518,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8173:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 517,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8165:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 516,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8165:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 519,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8165:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 520,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 496,
															"src": "8177:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 514,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "8148:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8148:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 522,
												"nodeType": "ExpressionStatement",
												"src": "8148:35:1"
											}
										]
									},
									"documentation": {
										"id": 492,
										"nodeType": "StructuredDocumentation",
										"src": "7672:307:1",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 524,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7993:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8007:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "7999:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 493,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7999:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8024:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "8016:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8016:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7998:32:1"
									},
									"returnParameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8040:0:1"
									},
									"scope": 651,
									"src": "7984:206:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 541,
										"nodeType": "Block",
										"src": "8800:54:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 535,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 527,
															"src": "8819:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 536,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 529,
															"src": "8826:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 537,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "8835:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 538,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8842:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 534,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															542,
															602
														],
														"referencedDeclaration": 602,
														"src": "8810:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8810:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 540,
												"nodeType": "ExpressionStatement",
												"src": "8810:37:1"
											}
										]
									},
									"documentation": {
										"id": 525,
										"nodeType": "StructuredDocumentation",
										"src": "8196:525:1",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 542,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8735:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8752:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "8744:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 526,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8744:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8767:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "8759:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 528,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8759:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8784:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "8776:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 530,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8776:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8743:47:1"
									},
									"returnParameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8800:0:1"
									},
									"scope": 651,
									"src": "8726:128:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 601,
										"nodeType": "Block",
										"src": "9799:334:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 554,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 545,
														"src": "9813:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 557,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9830:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 556,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9822:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 555,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9822:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 558,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9822:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9813:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 568,
												"nodeType": "IfStatement",
												"src": "9809:89:1",
												"trueBody": {
													"id": 567,
													"nodeType": "Block",
													"src": "9834:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 563,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9884:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 562,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9876:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 561,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9876:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 564,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9876:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 560,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "9855:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 565,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9855:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 566,
															"nodeType": "RevertStatement",
															"src": "9848:39:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 569,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 547,
														"src": "9911:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 572,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9930:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 571,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9922:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 570,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9922:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 573,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9922:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9911:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 583,
												"nodeType": "IfStatement",
												"src": "9907:90:1",
												"trueBody": {
													"id": 582,
													"nodeType": "Block",
													"src": "9934:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 578,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9983:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 577,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9975:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 576,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9975:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 579,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9975:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 575,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "9955:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 580,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9955:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 581,
															"nodeType": "RevertStatement",
															"src": "9948:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 584,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 165,
																"src": "10006:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 587,
															"indexExpression": {
																"id": 585,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 545,
																"src": "10018:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10006:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 588,
														"indexExpression": {
															"id": 586,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 547,
															"src": "10025:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10006:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 589,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 549,
														"src": "10036:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10006:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 591,
												"nodeType": "ExpressionStatement",
												"src": "10006:35:1"
											},
											{
												"condition": {
													"id": 592,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 551,
													"src": "10055:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 600,
												"nodeType": "IfStatement",
												"src": "10051:76:1",
												"trueBody": {
													"id": 599,
													"nodeType": "Block",
													"src": "10066:61:1",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 594,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 545,
																		"src": "10094:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 595,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 547,
																		"src": "10101:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 596,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 549,
																		"src": "10110:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 593,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 672,
																	"src": "10085:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10085:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 598,
															"nodeType": "EmitStatement",
															"src": "10080:36:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 543,
										"nodeType": "StructuredDocumentation",
										"src": "8860:836:1",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 602,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9710:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9727:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9719:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 544,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9719:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 547,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9742:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9734:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 546,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9734:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9759:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9751:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 548,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9751:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9771:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9766:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 550,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9766:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9718:63:1"
									},
									"returnParameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9799:0:1"
									},
									"scope": 651,
									"src": "9701:432:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 649,
										"nodeType": "Block",
										"src": "10504:388:1",
										"statements": [
											{
												"assignments": [
													613
												],
												"declarations": [
													{
														"constant": false,
														"id": 613,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10522:16:1",
														"nodeType": "VariableDeclaration",
														"scope": 649,
														"src": "10514:24:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 612,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10514:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 618,
												"initialValue": {
													"arguments": [
														{
															"id": 615,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 605,
															"src": "10551:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 616,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 607,
															"src": "10558:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 614,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 278,
														"src": "10541:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10541:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10514:52:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 619,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 613,
														"src": "10580:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 622,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10605:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 621,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10605:7:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 620,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10600:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 623,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10600:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 624,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10614:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10600:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10580:37:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 648,
												"nodeType": "IfStatement",
												"src": "10576:310:1",
												"trueBody": {
													"id": 647,
													"nodeType": "Block",
													"src": "10619:267:1",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 628,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 626,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 613,
																	"src": "10637:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 627,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 609,
																	"src": "10656:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10637:24:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 636,
															"nodeType": "IfStatement",
															"src": "10633:130:1",
															"trueBody": {
																"id": 635,
																"nodeType": "Block",
																"src": "10663:100:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 630,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 607,
																					"src": "10715:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 631,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "10724:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 632,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 609,
																					"src": "10742:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 629,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 30,
																				"src": "10688:26:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 633,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10688:60:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 634,
																		"nodeType": "RevertStatement",
																		"src": "10681:67:1"
																	}
																]
															}
														},
														{
															"id": 646,
															"nodeType": "UncheckedBlock",
															"src": "10776:100:1",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 638,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 605,
																				"src": "10813:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 639,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 607,
																				"src": "10820:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 642,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 640,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "10829:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 641,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 609,
																					"src": "10848:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10829:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 643,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10855:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 637,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				542,
																				602
																			],
																			"referencedDeclaration": 602,
																			"src": "10804:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 644,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10804:57:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 645,
																	"nodeType": "ExpressionStatement",
																	"src": "10804:57:1"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 603,
										"nodeType": "StructuredDocumentation",
										"src": "10139:271:1",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 650,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10424:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10448:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10440:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 604,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10440:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10463:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10455:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 606,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10455:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10480:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10472:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10472:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10439:47:1"
									},
									"returnParameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10504:0:1"
									},
									"scope": 651,
									"src": "10415:477:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 652,
							"src": "1106:9788:1",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "105:10790:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							729
						]
					},
					"id": 730,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 653,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 654,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:2",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 729,
							"linearizedBaseContracts": [
								729
							],
							"name": "IERC20",
							"nameLocation": "214:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 655,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 663,
									"name": "Transfer",
									"nameLocation": "396:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 657,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "405:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 656,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 659,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "427:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 658,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 661,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "447:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 660,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:2"
									},
									"src": "390:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 664,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 672,
									"name": "Approval",
									"nameLocation": "627:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 666,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "636:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 665,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 668,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "659:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 667,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 670,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "684:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 669,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:2"
									},
									"src": "621:78:2"
								},
								{
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:2",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 678,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:2"
									},
									"returnParameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "821:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 675,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:2"
									},
									"scope": 729,
									"src": "775:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 679,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:2",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 686,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "931:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 680,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:2"
									},
									"returnParameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "971:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 683,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:2"
									},
									"scope": 729,
									"src": "912:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 687,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:2",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 696,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1222:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 688,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1234:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 690,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:2"
									},
									"returnParameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1267:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 693,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:2"
									},
									"scope": 729,
									"src": "1204:69:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 697,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 706,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1567:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 698,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1582:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 700,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:2"
									},
									"returnParameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1622:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 703,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:2"
									},
									"scope": 729,
									"src": "1548:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 707,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:2",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 716,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2326:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 708,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2343:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 710,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:2"
									},
									"returnParameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2376:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 713,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:2"
									},
									"scope": 729,
									"src": "2309:73:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 717,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 728,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2712:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 718,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2726:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 720,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2738:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:2"
									},
									"returnParameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2771:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 725,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:2"
									},
									"scope": 729,
									"src": "2690:87:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 730,
							"src": "204:2575:2",
							"usedErrors": [],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "106:2674:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							729
						],
						"IERC20Metadata": [
							755
						]
					},
					"id": 756,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 731,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 733,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 756,
							"sourceUnit": 730,
							"src": "151:37:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 732,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 729,
										"src": "159:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 735,
										"name": "IERC20",
										"nameLocations": [
											"306:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 729,
										"src": "306:6:3"
									},
									"id": 736,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:3"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 734,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:3",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 755,
							"linearizedBaseContracts": [
								755,
								729
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 737,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 742,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 738,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:3"
									},
									"returnParameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "417:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 739,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:3"
									},
									"scope": 755,
									"src": "378:54:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 743,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:3",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 748,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:3"
									},
									"returnParameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "540:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 745,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:3"
									},
									"scope": 755,
									"src": "499:56:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 749,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:3",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 754,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:3"
									},
									"returnParameters": {
										"id": 753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "674:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 751,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:3"
									},
									"scope": 755,
									"src": "631:50:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 756,
							"src": "278:405:3",
							"usedErrors": [],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "125:559:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							785
						]
					},
					"id": 786,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 757,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 758,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:4",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 785,
							"linearizedBaseContracts": [
								785
							],
							"name": "Context",
							"nameLocation": "642:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 766,
										"nodeType": "Block",
										"src": "718:34:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 763,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:4",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 762,
												"id": 765,
												"nodeType": "Return",
												"src": "728:17:4"
											}
										]
									},
									"id": 767,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:4"
									},
									"returnParameters": {
										"id": 762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "709:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 760,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:4"
									},
									"scope": 785,
									"src": "656:96:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 775,
										"nodeType": "Block",
										"src": "825:32:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 772,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:4",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 771,
												"id": 774,
												"nodeType": "Return",
												"src": "835:15:4"
											}
										]
									},
									"id": 776,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:4"
									},
									"returnParameters": {
										"id": 771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "809:14:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 769,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:4"
									},
									"scope": 785,
									"src": "758:99:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 783,
										"nodeType": "Block",
										"src": "935:25:4",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 781,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 780,
												"id": 782,
												"nodeType": "Return",
												"src": "945:8:4"
											}
										]
									},
									"id": 784,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 777,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:4"
									},
									"returnParameters": {
										"id": 780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 779,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "926:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 778,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:4"
									},
									"scope": 785,
									"src": "863:97:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 786,
							"src": "624:338:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:4"
				},
				"id": 4
			},
			"contracts/ERC20/TimeLock.sol": {
				"ast": {
					"absolutePath": "contracts/ERC20/TimeLock.sol",
					"exportedSymbols": {
						"Context": [
							785
						],
						"ERC20": [
							651
						],
						"IERC20": [
							729
						],
						"IERC20Errors": [
							41
						],
						"IERC20Metadata": [
							755
						],
						"TimeLockedToken": [
							876
						]
					},
					"id": 877,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 787,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 788,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 877,
							"sourceUnit": 652,
							"src": "60:55:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 789,
										"name": "ERC20",
										"nameLocations": [
											"147:5:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 651,
										"src": "147:5:5"
									},
									"id": 790,
									"nodeType": "InheritanceSpecifier",
									"src": "147:5:5"
								}
							],
							"canonicalName": "TimeLockedToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 876,
							"linearizedBaseContracts": [
								876,
								651,
								41,
								755,
								729,
								785
							],
							"name": "TimeLockedToken",
							"nameLocation": "128:15:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "251c1aa3",
									"id": 792,
									"mutability": "mutable",
									"name": "unlockTime",
									"nameLocation": "175:10:5",
									"nodeType": "VariableDeclaration",
									"scope": 876,
									"src": "160:25:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 791,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "160:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 821,
										"nodeType": "Block",
										"src": "344:268:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 804,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "423:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 805,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "427:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "423:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 811,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 806,
																"name": "initialSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 794,
																"src": "435:13:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 810,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 807,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "451:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 808,
																		"name": "decimals",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 215,
																		"src": "457:8:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
																			"typeString": "function () view returns (uint8)"
																		}
																	},
																	"id": 809,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "457:10:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "451:16:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "435:32:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 803,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 491,
														"src": "417:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 812,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "417:51:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 813,
												"nodeType": "ExpressionStatement",
												"src": "417:51:5"
											},
											{
												"expression": {
													"id": 819,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 814,
														"name": "unlockTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 792,
														"src": "513:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 818,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 815,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "526:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 816,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "532:9:5",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "526:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 817,
															"name": "lockTimeInSeconds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 796,
															"src": "544:17:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "526:35:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "513:48:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 820,
												"nodeType": "ExpressionStatement",
												"src": "513:48:5"
											}
										]
									},
									"id": 822,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "54696d654c6f636b6564546f6b656e",
													"id": 799,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "318:17:5",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_7a0583e591998765794233a03df9232697bc4da9c14746285e8018174df3e5d5",
														"typeString": "literal_string \"TimeLockedToken\""
													},
													"value": "TimeLockedToken"
												},
												{
													"hexValue": "544c54",
													"id": 800,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "337:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_4abd434857e07567d49487ccf888348e55d5cfc15498c09a9dbcba2820e40ee4",
														"typeString": "literal_string \"TLT\""
													},
													"value": "TLT"
												}
											],
											"id": 801,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 798,
												"name": "ERC20",
												"nameLocations": [
													"312:5:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 651,
												"src": "312:5:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "312:31:5"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 797,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 794,
												"mutability": "mutable",
												"name": "initialSupply",
												"nameLocation": "270:13:5",
												"nodeType": "VariableDeclaration",
												"scope": 822,
												"src": "262:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 793,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "262:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 796,
												"mutability": "mutable",
												"name": "lockTimeInSeconds",
												"nameLocation": "293:17:5",
												"nodeType": "VariableDeclaration",
												"scope": 822,
												"src": "285:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 795,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "285:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "261:50:5"
									},
									"returnParameters": {
										"id": 802,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "344:0:5"
									},
									"scope": 876,
									"src": "250:362:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										261
									],
									"body": {
										"id": 846,
										"nodeType": "Block",
										"src": "763:162:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 836,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 833,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "782:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 834,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "788:9:5",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "782:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 835,
																"name": "unlockTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 792,
																"src": "801:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "782:29:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f6b656e7320617265206c6f636b656420756e74696c2074686520756e6c6f636b2074696d652068617320706173736564",
															"id": 837,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "813:52:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_78cdf57e1a72959a57417d6301fad41b30a618b232e500e1f739b5979bac65fb",
																"typeString": "literal_string \"Tokens are locked until the unlock time has passed\""
															},
															"value": "Tokens are locked until the unlock time has passed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_78cdf57e1a72959a57417d6301fad41b30a618b232e500e1f739b5979bac65fb",
																"typeString": "literal_string \"Tokens are locked until the unlock time has passed\""
															}
														],
														"id": 832,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "774:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 838,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "774:92:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 839,
												"nodeType": "ExpressionStatement",
												"src": "774:92:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 842,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 824,
															"src": "899:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 843,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 826,
															"src": "910:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 840,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "884:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_TimeLockedToken_$876_$",
																"typeString": "type(contract super TimeLockedToken)"
															}
														},
														"id": 841,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "890:8:5",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 261,
														"src": "884:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) returns (bool)"
														}
													},
													"id": 844,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "884:33:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 831,
												"id": 845,
												"nodeType": "Return",
												"src": "877:40:5"
											}
										]
									},
									"functionSelector": "a9059cbb",
									"id": 847,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "688:8:5",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 828,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "739:8:5"
									},
									"parameters": {
										"id": 827,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "705:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 847,
												"src": "697:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 823,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "697:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 826,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "724:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 847,
												"src": "716:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 825,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "716:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "696:35:5"
									},
									"returnParameters": {
										"id": 831,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 830,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 847,
												"src": "757:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 829,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "757:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "756:6:5"
									},
									"scope": 876,
									"src": "679:246:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										334
									],
									"body": {
										"id": 874,
										"nodeType": "Block",
										"src": "1100:174:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 863,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 860,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "1119:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 861,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1125:9:5",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "1119:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 862,
																"name": "unlockTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 792,
																"src": "1138:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1119:29:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f6b656e7320617265206c6f636b656420756e74696c2074686520756e6c6f636b2074696d652068617320706173736564",
															"id": 864,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1150:52:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_78cdf57e1a72959a57417d6301fad41b30a618b232e500e1f739b5979bac65fb",
																"typeString": "literal_string \"Tokens are locked until the unlock time has passed\""
															},
															"value": "Tokens are locked until the unlock time has passed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_78cdf57e1a72959a57417d6301fad41b30a618b232e500e1f739b5979bac65fb",
																"typeString": "literal_string \"Tokens are locked until the unlock time has passed\""
															}
														],
														"id": 859,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1111:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 865,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1111:92:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 866,
												"nodeType": "ExpressionStatement",
												"src": "1111:92:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 869,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 849,
															"src": "1240:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 870,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 851,
															"src": "1248:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 871,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 853,
															"src": "1259:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 867,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "1221:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_TimeLockedToken_$876_$",
																"typeString": "type(contract super TimeLockedToken)"
															}
														},
														"id": 868,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1227:12:5",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 334,
														"src": "1221:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) returns (bool)"
														}
													},
													"id": 872,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1221:45:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 858,
												"id": 873,
												"nodeType": "Return",
												"src": "1214:52:5"
											}
										]
									},
									"functionSelector": "23b872dd",
									"id": 875,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "1005:12:5",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 855,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1076:8:5"
									},
									"parameters": {
										"id": 854,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1026:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 875,
												"src": "1018:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 848,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 851,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1042:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 875,
												"src": "1034:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 850,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1034:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 853,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1061:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 875,
												"src": "1053:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 852,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1053:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:51:5"
									},
									"returnParameters": {
										"id": 858,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 875,
												"src": "1094:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 856,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1094:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1093:6:5"
									},
									"scope": 876,
									"src": "996:278:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 877,
							"src": "119:1158:5",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "33:1246:5"
				},
				"id": 5
			}
		}
	}
}