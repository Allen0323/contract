{
	"id": "43cef42a72d482efeb99741f347bd903",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.28",
	"solcLongVersion": "0.8.28+commit.7893614a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/study2/Import.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.21;\n\n// 通过`全局符号`导入特定的合约\nimport {Yeye, Baba} from \"contracts/study/InheritanceTest.sol\";\n// 通过网址引用\nimport \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\";\n// 引用OpenZeppelin合约\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\ncontract Import {\n    // 成功导入Address库\n    using Address for address;\n    // 声明yeye变量\n    Yeye yeye = new Yeye();\n\n    // 测试是否能调用yeye的函数\n    function test() external {\n        yeye.hip();\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\nimport {Errors} from \"./Errors.sol\";\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert Errors.InsufficientBalance(address(this).balance, amount);\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert Errors.FailedCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {Errors.FailedCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert Errors.InsufficientBalance(address(this).balance, value);\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n     * of an unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {Errors.FailedCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            assembly (\"memory-safe\") {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert Errors.FailedCall();\n        }\n    }\n}\n"
			},
			"contracts/study/InheritanceTest.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.21;\n\ncontract Yeye {\n    event Log(string msg);\n\n    // 定义3个function: hip(), pop(), man()，Log值为Yeye。\n    function hip() public virtual {\n        emit Log(\"Yeye\");\n    }\n\n    function pop() public virtual {\n        emit Log(\"Yeye\");\n    }\n\n    function yeye() public virtual {\n        emit Log(\"Yeye\");\n    }\n}\n\ncontract Baba is Yeye {\n    // 继承两个function: hip()和pop()，输出改为Baba。\n    function hip() public virtual override {\n        emit Log(\"Baba\");\n    }\n\n    function pop() public virtual override {\n        emit Log(\"Baba\");\n    }\n\n    function baba() public virtual {\n        emit Log(\"Baba\");\n    }\n}\n\ncontract Erzi is Yeye, Baba {\n    // 继承两个function: hip()和pop()，输出值为Erzi。\n    function hip() public virtual override(Yeye, Baba) {\n        emit Log(\"Erzi\");\n    }\n\n    function pop() public virtual override(Yeye, Baba) {\n        emit Log(\"Erzi\");\n    }\n\n    function callParent() public {\n        Yeye.pop();\n    }\n\n    function callParentSuper() public {\n        // 将调用最近的父合约函数，Baba.pop()\n        super.pop();\n    }\n}\n\ncontract Base1 {\n    modifier exactDividedBy2And3(uint256 _a) virtual {\n        require(_a % 2 == 0 && _a % 3 == 0);\n        _;\n    }\n}\n\ncontract Identifier is Base1 {\n    //计算一个数分别被2除和被3除的值，但是传入的参数必须是2和3的倍数\n    function getExactDividedBy2And3(uint256 _dividend)\n        public\n        pure\n        exactDividedBy2And3(_dividend)\n        returns (uint256, uint256)\n    {\n        return getExactDividedBy2And3WithoutModifier(_dividend);\n    }\n\n    //计算一个数分别被2除和被3除的值\n    function getExactDividedBy2And3WithoutModifier(uint256 _dividend)\n        public\n        pure\n        returns (uint256, uint256)\n    {\n        uint256 div2 = _dividend / 2;\n        uint256 div3 = _dividend / 3;\n        return (div2, div3);\n    }\n\n    modifier exactDividedBy2And3(uint256 _a) override {\n        _;\n        require(_a % 2 == 0);\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Errors.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Errors.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of common custom errors used in multiple contracts\n *\n * IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n * It is recommended to avoid relying on the error API for critical functionality.\n *\n * _Available since v5.1._\n */\nlibrary Errors {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error InsufficientBalance(uint256 balance, uint256 needed);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedCall();\n\n    /**\n     * @dev The deployment failed.\n     */\n    error FailedDeployment();\n\n    /**\n     * @dev A necessary precompile is missing.\n     */\n    error MissingPrecompile(address);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/study/InheritanceTest.sol": {
				"Baba": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "msg",
									"type": "string"
								}
							],
							"name": "Log",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "baba",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "hip",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pop",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "yeye",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/study/InheritanceTest.sol\":378:693  contract Baba is Yeye {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/study/InheritanceTest.sol\":378:693  contract Baba is Yeye {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x0ca21e9c\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x370ea142\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xa4ece52c\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xfa030ef1\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"contracts/study/InheritanceTest.sol\":310:374  function yeye() public virtual {... */\n    tag_3:\n      tag_7\n      tag_8\n      jump\t// in\n    tag_7:\n      stop\n        /* \"contracts/study/InheritanceTest.sol\":471:543  function hip() public virtual override {... */\n    tag_4:\n      tag_9\n      tag_10\n      jump\t// in\n    tag_9:\n      stop\n        /* \"contracts/study/InheritanceTest.sol\":549:621  function pop() public virtual override {... */\n    tag_5:\n      tag_11\n      tag_12\n      jump\t// in\n    tag_11:\n      stop\n        /* \"contracts/study/InheritanceTest.sol\":627:691  function baba() public virtual {... */\n    tag_6:\n      tag_13\n      tag_14\n      jump\t// in\n    tag_13:\n      stop\n        /* \"contracts/study/InheritanceTest.sol\":310:374  function yeye() public virtual {... */\n    tag_8:\n        /* \"contracts/study/InheritanceTest.sol\":356:367  Log(\"Yeye\") */\n      0xcf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab\n      mload(0x40)\n      tag_16\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/study/InheritanceTest.sol\":310:374  function yeye() public virtual {... */\n      jump\t// out\n        /* \"contracts/study/InheritanceTest.sol\":471:543  function hip() public virtual override {... */\n    tag_10:\n        /* \"contracts/study/InheritanceTest.sol\":525:536  Log(\"Baba\") */\n      0xcf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab\n      mload(0x40)\n      tag_19\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/study/InheritanceTest.sol\":471:543  function hip() public virtual override {... */\n      jump\t// out\n        /* \"contracts/study/InheritanceTest.sol\":549:621  function pop() public virtual override {... */\n    tag_12:\n        /* \"contracts/study/InheritanceTest.sol\":603:614  Log(\"Baba\") */\n      0xcf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab\n      mload(0x40)\n      tag_22\n      swap1\n      tag_20\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/study/InheritanceTest.sol\":549:621  function pop() public virtual override {... */\n      jump\t// out\n        /* \"contracts/study/InheritanceTest.sol\":627:691  function baba() public virtual {... */\n    tag_14:\n        /* \"contracts/study/InheritanceTest.sol\":673:684  Log(\"Baba\") */\n      0xcf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab\n      mload(0x40)\n      tag_24\n      swap1\n      tag_20\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/study/InheritanceTest.sol\":627:691  function baba() public virtual {... */\n      jump\t// out\n        /* \"#utility.yul\":7:176   */\n    tag_25:\n        /* \"#utility.yul\":91:102   */\n      0x00\n        /* \"#utility.yul\":125:131   */\n      dup3\n        /* \"#utility.yul\":120:123   */\n      dup3\n        /* \"#utility.yul\":113:132   */\n      mstore\n        /* \"#utility.yul\":165:169   */\n      0x20\n        /* \"#utility.yul\":160:163   */\n      dup3\n        /* \"#utility.yul\":156:170   */\n      add\n        /* \"#utility.yul\":141:170   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:176   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":182:336   */\n    tag_26:\n        /* \"#utility.yul\":322:328   */\n      0x5965796500000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":318:319   */\n      0x00\n        /* \"#utility.yul\":310:316   */\n      dup3\n        /* \"#utility.yul\":306:320   */\n      add\n        /* \"#utility.yul\":299:329   */\n      mstore\n        /* \"#utility.yul\":182:336   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":342:707   */\n    tag_27:\n        /* \"#utility.yul\":484:487   */\n      0x00\n        /* \"#utility.yul\":505:571   */\n      tag_34\n        /* \"#utility.yul\":569:570   */\n      0x04\n        /* \"#utility.yul\":564:567   */\n      dup4\n        /* \"#utility.yul\":505:571   */\n      tag_25\n      jump\t// in\n    tag_34:\n        /* \"#utility.yul\":498:571   */\n      swap2\n      pop\n        /* \"#utility.yul\":580:673   */\n      tag_35\n        /* \"#utility.yul\":669:672   */\n      dup3\n        /* \"#utility.yul\":580:673   */\n      tag_26\n      jump\t// in\n    tag_35:\n        /* \"#utility.yul\":698:700   */\n      0x20\n        /* \"#utility.yul\":693:696   */\n      dup3\n        /* \"#utility.yul\":689:701   */\n      add\n        /* \"#utility.yul\":682:701   */\n      swap1\n      pop\n        /* \"#utility.yul\":342:707   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":713:1132   */\n    tag_17:\n        /* \"#utility.yul\":879:883   */\n      0x00\n        /* \"#utility.yul\":917:919   */\n      0x20\n        /* \"#utility.yul\":906:915   */\n      dup3\n        /* \"#utility.yul\":902:920   */\n      add\n        /* \"#utility.yul\":894:920   */\n      swap1\n      pop\n        /* \"#utility.yul\":966:975   */\n      dup2\n        /* \"#utility.yul\":960:964   */\n      dup2\n        /* \"#utility.yul\":956:976   */\n      sub\n        /* \"#utility.yul\":952:953   */\n      0x00\n        /* \"#utility.yul\":941:950   */\n      dup4\n        /* \"#utility.yul\":937:954   */\n      add\n        /* \"#utility.yul\":930:977   */\n      mstore\n        /* \"#utility.yul\":994:1125   */\n      tag_37\n        /* \"#utility.yul\":1120:1124   */\n      dup2\n        /* \"#utility.yul\":994:1125   */\n      tag_27\n      jump\t// in\n    tag_37:\n        /* \"#utility.yul\":986:1125   */\n      swap1\n      pop\n        /* \"#utility.yul\":713:1132   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1138:1292   */\n    tag_28:\n        /* \"#utility.yul\":1278:1284   */\n      0x4261626100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":1274:1275   */\n      0x00\n        /* \"#utility.yul\":1266:1272   */\n      dup3\n        /* \"#utility.yul\":1262:1276   */\n      add\n        /* \"#utility.yul\":1255:1285   */\n      mstore\n        /* \"#utility.yul\":1138:1292   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1298:1663   */\n    tag_29:\n        /* \"#utility.yul\":1440:1443   */\n      0x00\n        /* \"#utility.yul\":1461:1527   */\n      tag_40\n        /* \"#utility.yul\":1525:1526   */\n      0x04\n        /* \"#utility.yul\":1520:1523   */\n      dup4\n        /* \"#utility.yul\":1461:1527   */\n      tag_25\n      jump\t// in\n    tag_40:\n        /* \"#utility.yul\":1454:1527   */\n      swap2\n      pop\n        /* \"#utility.yul\":1536:1629   */\n      tag_41\n        /* \"#utility.yul\":1625:1628   */\n      dup3\n        /* \"#utility.yul\":1536:1629   */\n      tag_28\n      jump\t// in\n    tag_41:\n        /* \"#utility.yul\":1654:1656   */\n      0x20\n        /* \"#utility.yul\":1649:1652   */\n      dup3\n        /* \"#utility.yul\":1645:1657   */\n      add\n        /* \"#utility.yul\":1638:1657   */\n      swap1\n      pop\n        /* \"#utility.yul\":1298:1663   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1669:2088   */\n    tag_20:\n        /* \"#utility.yul\":1835:1839   */\n      0x00\n        /* \"#utility.yul\":1873:1875   */\n      0x20\n        /* \"#utility.yul\":1862:1871   */\n      dup3\n        /* \"#utility.yul\":1858:1876   */\n      add\n        /* \"#utility.yul\":1850:1876   */\n      swap1\n      pop\n        /* \"#utility.yul\":1922:1931   */\n      dup2\n        /* \"#utility.yul\":1916:1920   */\n      dup2\n        /* \"#utility.yul\":1912:1932   */\n      sub\n        /* \"#utility.yul\":1908:1909   */\n      0x00\n        /* \"#utility.yul\":1897:1906   */\n      dup4\n        /* \"#utility.yul\":1893:1910   */\n      add\n        /* \"#utility.yul\":1886:1933   */\n      mstore\n        /* \"#utility.yul\":1950:2081   */\n      tag_43\n        /* \"#utility.yul\":2076:2080   */\n      dup2\n        /* \"#utility.yul\":1950:2081   */\n      tag_29\n      jump\t// in\n    tag_43:\n        /* \"#utility.yul\":1942:2081   */\n      swap1\n      pop\n        /* \"#utility.yul\":1669:2088   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220eecb67bf81dd690455b96cf4de0d5f153b6b8fae00f688aef5462380dc889a1e64736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f5ffd5b506102688061001c5f395ff3fe608060405234801561000f575f5ffd5b506004361061004a575f3560e01c80630ca21e9c1461004e578063370ea14214610058578063a4ece52c14610062578063fa030ef11461006c575b5f5ffd5b610056610076565b005b6100606100ad565b005b61006a6100e4565b005b61007461011b565b005b7fcf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab6040516100a3906101ac565b60405180910390a1565b7fcf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab6040516100da90610214565b60405180910390a1565b7fcf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab60405161011190610214565b60405180910390a1565b7fcf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab60405161014890610214565b60405180910390a1565b5f82825260208201905092915050565b7f59657965000000000000000000000000000000000000000000000000000000005f82015250565b5f610196600483610152565b91506101a182610162565b602082019050919050565b5f6020820190508181035f8301526101c38161018a565b9050919050565b7f42616261000000000000000000000000000000000000000000000000000000005f82015250565b5f6101fe600483610152565b9150610209826101ca565b602082019050919050565b5f6020820190508181035f83015261022b816101f2565b905091905056fea2646970667358221220eecb67bf81dd690455b96cf4de0d5f153b6b8fae00f688aef5462380dc889a1e64736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x268 DUP1 PUSH2 0x1C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4A JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xCA21E9C EQ PUSH2 0x4E JUMPI DUP1 PUSH4 0x370EA142 EQ PUSH2 0x58 JUMPI DUP1 PUSH4 0xA4ECE52C EQ PUSH2 0x62 JUMPI DUP1 PUSH4 0xFA030EF1 EQ PUSH2 0x6C JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x56 PUSH2 0x76 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x60 PUSH2 0xAD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6A PUSH2 0xE4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x74 PUSH2 0x11B JUMP JUMPDEST STOP JUMPDEST PUSH32 0xCF34EF537AC33EE1AC626CA1587A0A7E8E51561E5514F8CB36AFA1C5102B3BAB PUSH1 0x40 MLOAD PUSH2 0xA3 SWAP1 PUSH2 0x1AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH32 0xCF34EF537AC33EE1AC626CA1587A0A7E8E51561E5514F8CB36AFA1C5102B3BAB PUSH1 0x40 MLOAD PUSH2 0xDA SWAP1 PUSH2 0x214 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH32 0xCF34EF537AC33EE1AC626CA1587A0A7E8E51561E5514F8CB36AFA1C5102B3BAB PUSH1 0x40 MLOAD PUSH2 0x111 SWAP1 PUSH2 0x214 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH32 0xCF34EF537AC33EE1AC626CA1587A0A7E8E51561E5514F8CB36AFA1C5102B3BAB PUSH1 0x40 MLOAD PUSH2 0x148 SWAP1 PUSH2 0x214 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5965796500000000000000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x196 PUSH1 0x4 DUP4 PUSH2 0x152 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A1 DUP3 PUSH2 0x162 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1C3 DUP2 PUSH2 0x18A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4261626100000000000000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1FE PUSH1 0x4 DUP4 PUSH2 0x152 JUMP JUMPDEST SWAP2 POP PUSH2 0x209 DUP3 PUSH2 0x1CA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x22B DUP2 PUSH2 0x1F2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEE 0xCB PUSH8 0xBF81DD690455B96C DELEGATECALL 0xDE 0xD PUSH0 ISZERO EXTCODESIZE PUSH12 0x8FAE00F688AEF5462380DC88 SWAP11 0x1E PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
							"sourceMap": "378:315:2:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@baba_236": {
									"entryPoint": 283,
									"id": 236,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@hip_219": {
									"entryPoint": 173,
									"id": 219,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@pop_228": {
									"entryPoint": 228,
									"id": 228,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@yeye_207": {
									"entryPoint": 118,
									"id": 207,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_552f12338174ce6152a5d9af9e1035e4f5e814d72e8245416f12a96744f11caa_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 394,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_860eea7158d3e1f75d549e2d9b523582079ba1f73523ab92bd1d9cc4a280f619_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 498,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_552f12338174ce6152a5d9af9e1035e4f5e814d72e8245416f12a96744f11caa__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 428,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_860eea7158d3e1f75d549e2d9b523582079ba1f73523ab92bd1d9cc4a280f619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 532,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 338,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"store_literal_in_memory_552f12338174ce6152a5d9af9e1035e4f5e814d72e8245416f12a96744f11caa": {
									"entryPoint": 354,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_860eea7158d3e1f75d549e2d9b523582079ba1f73523ab92bd1d9cc4a280f619": {
									"entryPoint": 458,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:2091:6",
										"nodeType": "YulBlock",
										"src": "0:2091:6",
										"statements": [
											{
												"body": {
													"nativeSrc": "103:73:6",
													"nodeType": "YulBlock",
													"src": "103:73:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "120:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "120:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "125:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "125:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "113:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "113:6:6"
																},
																"nativeSrc": "113:19:6",
																"nodeType": "YulFunctionCall",
																"src": "113:19:6"
															},
															"nativeSrc": "113:19:6",
															"nodeType": "YulExpressionStatement",
															"src": "113:19:6"
														},
														{
															"nativeSrc": "141:29:6",
															"nodeType": "YulAssignment",
															"src": "141:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "160:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "160:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "165:4:6",
																		"nodeType": "YulLiteral",
																		"src": "165:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "156:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "156:3:6"
																},
																"nativeSrc": "156:14:6",
																"nodeType": "YulFunctionCall",
																"src": "156:14:6"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "141:11:6",
																	"nodeType": "YulIdentifier",
																	"src": "141:11:6"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "7:169:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "75:3:6",
														"nodeType": "YulTypedName",
														"src": "75:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "80:6:6",
														"nodeType": "YulTypedName",
														"src": "80:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "91:11:6",
														"nodeType": "YulTypedName",
														"src": "91:11:6",
														"type": ""
													}
												],
												"src": "7:169:6"
											},
											{
												"body": {
													"nativeSrc": "288:48:6",
													"nodeType": "YulBlock",
													"src": "288:48:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "310:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "310:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "318:1:6",
																				"nodeType": "YulLiteral",
																				"src": "318:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "306:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "306:3:6"
																		},
																		"nativeSrc": "306:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "306:14:6"
																	},
																	{
																		"hexValue": "59657965",
																		"kind": "string",
																		"nativeSrc": "322:6:6",
																		"nodeType": "YulLiteral",
																		"src": "322:6:6",
																		"type": "",
																		"value": "Yeye"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "299:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "299:6:6"
																},
																"nativeSrc": "299:30:6",
																"nodeType": "YulFunctionCall",
																"src": "299:30:6"
															},
															"nativeSrc": "299:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "299:30:6"
														}
													]
												},
												"name": "store_literal_in_memory_552f12338174ce6152a5d9af9e1035e4f5e814d72e8245416f12a96744f11caa",
												"nativeSrc": "182:154:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "280:6:6",
														"nodeType": "YulTypedName",
														"src": "280:6:6",
														"type": ""
													}
												],
												"src": "182:154:6"
											},
											{
												"body": {
													"nativeSrc": "488:219:6",
													"nodeType": "YulBlock",
													"src": "488:219:6",
													"statements": [
														{
															"nativeSrc": "498:73:6",
															"nodeType": "YulAssignment",
															"src": "498:73:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "564:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "564:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "569:1:6",
																		"nodeType": "YulLiteral",
																		"src": "569:1:6",
																		"type": "",
																		"value": "4"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "505:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "505:58:6"
																},
																"nativeSrc": "505:66:6",
																"nodeType": "YulFunctionCall",
																"src": "505:66:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "498:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "498:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "669:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "669:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_552f12338174ce6152a5d9af9e1035e4f5e814d72e8245416f12a96744f11caa",
																	"nativeSrc": "580:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "580:88:6"
																},
																"nativeSrc": "580:93:6",
																"nodeType": "YulFunctionCall",
																"src": "580:93:6"
															},
															"nativeSrc": "580:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "580:93:6"
														},
														{
															"nativeSrc": "682:19:6",
															"nodeType": "YulAssignment",
															"src": "682:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "693:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "693:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "698:2:6",
																		"nodeType": "YulLiteral",
																		"src": "698:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "689:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "689:3:6"
																},
																"nativeSrc": "689:12:6",
																"nodeType": "YulFunctionCall",
																"src": "689:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "682:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "682:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_552f12338174ce6152a5d9af9e1035e4f5e814d72e8245416f12a96744f11caa_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "342:365:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "476:3:6",
														"nodeType": "YulTypedName",
														"src": "476:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "484:3:6",
														"nodeType": "YulTypedName",
														"src": "484:3:6",
														"type": ""
													}
												],
												"src": "342:365:6"
											},
											{
												"body": {
													"nativeSrc": "884:248:6",
													"nodeType": "YulBlock",
													"src": "884:248:6",
													"statements": [
														{
															"nativeSrc": "894:26:6",
															"nodeType": "YulAssignment",
															"src": "894:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "906:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "906:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "917:2:6",
																		"nodeType": "YulLiteral",
																		"src": "917:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "902:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "902:3:6"
																},
																"nativeSrc": "902:18:6",
																"nodeType": "YulFunctionCall",
																"src": "902:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "894:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "894:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "941:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "941:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "952:1:6",
																				"nodeType": "YulLiteral",
																				"src": "952:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "937:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "937:3:6"
																		},
																		"nativeSrc": "937:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "937:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "960:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "960:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "966:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "966:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "956:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "956:3:6"
																		},
																		"nativeSrc": "956:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "956:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "930:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "930:6:6"
																},
																"nativeSrc": "930:47:6",
																"nodeType": "YulFunctionCall",
																"src": "930:47:6"
															},
															"nativeSrc": "930:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "930:47:6"
														},
														{
															"nativeSrc": "986:139:6",
															"nodeType": "YulAssignment",
															"src": "986:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "1120:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "1120:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_552f12338174ce6152a5d9af9e1035e4f5e814d72e8245416f12a96744f11caa_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "994:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "994:124:6"
																},
																"nativeSrc": "994:131:6",
																"nodeType": "YulFunctionCall",
																"src": "994:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "986:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "986:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_552f12338174ce6152a5d9af9e1035e4f5e814d72e8245416f12a96744f11caa__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "713:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "864:9:6",
														"nodeType": "YulTypedName",
														"src": "864:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "879:4:6",
														"nodeType": "YulTypedName",
														"src": "879:4:6",
														"type": ""
													}
												],
												"src": "713:419:6"
											},
											{
												"body": {
													"nativeSrc": "1244:48:6",
													"nodeType": "YulBlock",
													"src": "1244:48:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "1266:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1266:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1274:1:6",
																				"nodeType": "YulLiteral",
																				"src": "1274:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1262:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1262:3:6"
																		},
																		"nativeSrc": "1262:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1262:14:6"
																	},
																	{
																		"hexValue": "42616261",
																		"kind": "string",
																		"nativeSrc": "1278:6:6",
																		"nodeType": "YulLiteral",
																		"src": "1278:6:6",
																		"type": "",
																		"value": "Baba"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1255:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1255:6:6"
																},
																"nativeSrc": "1255:30:6",
																"nodeType": "YulFunctionCall",
																"src": "1255:30:6"
															},
															"nativeSrc": "1255:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "1255:30:6"
														}
													]
												},
												"name": "store_literal_in_memory_860eea7158d3e1f75d549e2d9b523582079ba1f73523ab92bd1d9cc4a280f619",
												"nativeSrc": "1138:154:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "1236:6:6",
														"nodeType": "YulTypedName",
														"src": "1236:6:6",
														"type": ""
													}
												],
												"src": "1138:154:6"
											},
											{
												"body": {
													"nativeSrc": "1444:219:6",
													"nodeType": "YulBlock",
													"src": "1444:219:6",
													"statements": [
														{
															"nativeSrc": "1454:73:6",
															"nodeType": "YulAssignment",
															"src": "1454:73:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1520:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "1520:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1525:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1525:1:6",
																		"type": "",
																		"value": "4"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1461:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "1461:58:6"
																},
																"nativeSrc": "1461:66:6",
																"nodeType": "YulFunctionCall",
																"src": "1461:66:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "1454:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1454:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1625:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "1625:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_860eea7158d3e1f75d549e2d9b523582079ba1f73523ab92bd1d9cc4a280f619",
																	"nativeSrc": "1536:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "1536:88:6"
																},
																"nativeSrc": "1536:93:6",
																"nodeType": "YulFunctionCall",
																"src": "1536:93:6"
															},
															"nativeSrc": "1536:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "1536:93:6"
														},
														{
															"nativeSrc": "1638:19:6",
															"nodeType": "YulAssignment",
															"src": "1638:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1649:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "1649:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1654:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1654:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1645:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1645:3:6"
																},
																"nativeSrc": "1645:12:6",
																"nodeType": "YulFunctionCall",
																"src": "1645:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "1638:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1638:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_860eea7158d3e1f75d549e2d9b523582079ba1f73523ab92bd1d9cc4a280f619_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "1298:365:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1432:3:6",
														"nodeType": "YulTypedName",
														"src": "1432:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "1440:3:6",
														"nodeType": "YulTypedName",
														"src": "1440:3:6",
														"type": ""
													}
												],
												"src": "1298:365:6"
											},
											{
												"body": {
													"nativeSrc": "1840:248:6",
													"nodeType": "YulBlock",
													"src": "1840:248:6",
													"statements": [
														{
															"nativeSrc": "1850:26:6",
															"nodeType": "YulAssignment",
															"src": "1850:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1862:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1862:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1873:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1873:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1858:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1858:3:6"
																},
																"nativeSrc": "1858:18:6",
																"nodeType": "YulFunctionCall",
																"src": "1858:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1850:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1850:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1897:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1897:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1908:1:6",
																				"nodeType": "YulLiteral",
																				"src": "1908:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1893:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1893:3:6"
																		},
																		"nativeSrc": "1893:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1893:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1916:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "1916:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1922:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1922:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1912:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1912:3:6"
																		},
																		"nativeSrc": "1912:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1912:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1886:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1886:6:6"
																},
																"nativeSrc": "1886:47:6",
																"nodeType": "YulFunctionCall",
																"src": "1886:47:6"
															},
															"nativeSrc": "1886:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "1886:47:6"
														},
														{
															"nativeSrc": "1942:139:6",
															"nodeType": "YulAssignment",
															"src": "1942:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "2076:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "2076:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_860eea7158d3e1f75d549e2d9b523582079ba1f73523ab92bd1d9cc4a280f619_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1950:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "1950:124:6"
																},
																"nativeSrc": "1950:131:6",
																"nodeType": "YulFunctionCall",
																"src": "1950:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1942:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1942:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_860eea7158d3e1f75d549e2d9b523582079ba1f73523ab92bd1d9cc4a280f619__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1669:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1820:9:6",
														"nodeType": "YulTypedName",
														"src": "1820:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1835:4:6",
														"nodeType": "YulTypedName",
														"src": "1835:4:6",
														"type": ""
													}
												],
												"src": "1669:419:6"
											}
										]
									},
									"contents": "{\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_552f12338174ce6152a5d9af9e1035e4f5e814d72e8245416f12a96744f11caa(memPtr) {\n\n        mstore(add(memPtr, 0), \"Yeye\")\n\n    }\n\n    function abi_encode_t_stringliteral_552f12338174ce6152a5d9af9e1035e4f5e814d72e8245416f12a96744f11caa_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 4)\n        store_literal_in_memory_552f12338174ce6152a5d9af9e1035e4f5e814d72e8245416f12a96744f11caa(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_552f12338174ce6152a5d9af9e1035e4f5e814d72e8245416f12a96744f11caa__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_552f12338174ce6152a5d9af9e1035e4f5e814d72e8245416f12a96744f11caa_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_860eea7158d3e1f75d549e2d9b523582079ba1f73523ab92bd1d9cc4a280f619(memPtr) {\n\n        mstore(add(memPtr, 0), \"Baba\")\n\n    }\n\n    function abi_encode_t_stringliteral_860eea7158d3e1f75d549e2d9b523582079ba1f73523ab92bd1d9cc4a280f619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 4)\n        store_literal_in_memory_860eea7158d3e1f75d549e2d9b523582079ba1f73523ab92bd1d9cc4a280f619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_860eea7158d3e1f75d549e2d9b523582079ba1f73523ab92bd1d9cc4a280f619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_860eea7158d3e1f75d549e2d9b523582079ba1f73523ab92bd1d9cc4a280f619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b506004361061004a575f3560e01c80630ca21e9c1461004e578063370ea14214610058578063a4ece52c14610062578063fa030ef11461006c575b5f5ffd5b610056610076565b005b6100606100ad565b005b61006a6100e4565b005b61007461011b565b005b7fcf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab6040516100a3906101ac565b60405180910390a1565b7fcf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab6040516100da90610214565b60405180910390a1565b7fcf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab60405161011190610214565b60405180910390a1565b7fcf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab60405161014890610214565b60405180910390a1565b5f82825260208201905092915050565b7f59657965000000000000000000000000000000000000000000000000000000005f82015250565b5f610196600483610152565b91506101a182610162565b602082019050919050565b5f6020820190508181035f8301526101c38161018a565b9050919050565b7f42616261000000000000000000000000000000000000000000000000000000005f82015250565b5f6101fe600483610152565b9150610209826101ca565b602082019050919050565b5f6020820190508181035f83015261022b816101f2565b905091905056fea2646970667358221220eecb67bf81dd690455b96cf4de0d5f153b6b8fae00f688aef5462380dc889a1e64736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4A JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xCA21E9C EQ PUSH2 0x4E JUMPI DUP1 PUSH4 0x370EA142 EQ PUSH2 0x58 JUMPI DUP1 PUSH4 0xA4ECE52C EQ PUSH2 0x62 JUMPI DUP1 PUSH4 0xFA030EF1 EQ PUSH2 0x6C JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x56 PUSH2 0x76 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x60 PUSH2 0xAD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6A PUSH2 0xE4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x74 PUSH2 0x11B JUMP JUMPDEST STOP JUMPDEST PUSH32 0xCF34EF537AC33EE1AC626CA1587A0A7E8E51561E5514F8CB36AFA1C5102B3BAB PUSH1 0x40 MLOAD PUSH2 0xA3 SWAP1 PUSH2 0x1AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH32 0xCF34EF537AC33EE1AC626CA1587A0A7E8E51561E5514F8CB36AFA1C5102B3BAB PUSH1 0x40 MLOAD PUSH2 0xDA SWAP1 PUSH2 0x214 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH32 0xCF34EF537AC33EE1AC626CA1587A0A7E8E51561E5514F8CB36AFA1C5102B3BAB PUSH1 0x40 MLOAD PUSH2 0x111 SWAP1 PUSH2 0x214 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH32 0xCF34EF537AC33EE1AC626CA1587A0A7E8E51561E5514F8CB36AFA1C5102B3BAB PUSH1 0x40 MLOAD PUSH2 0x148 SWAP1 PUSH2 0x214 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5965796500000000000000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x196 PUSH1 0x4 DUP4 PUSH2 0x152 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A1 DUP3 PUSH2 0x162 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1C3 DUP2 PUSH2 0x18A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4261626100000000000000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1FE PUSH1 0x4 DUP4 PUSH2 0x152 JUMP JUMPDEST SWAP2 POP PUSH2 0x209 DUP3 PUSH2 0x1CA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x22B DUP2 PUSH2 0x1F2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEE 0xCB PUSH8 0xBF81DD690455B96C DELEGATECALL 0xDE 0xD PUSH0 ISZERO EXTCODESIZE PUSH12 0x8FAE00F688AEF5462380DC88 SWAP11 0x1E PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
							"sourceMap": "378:315:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;310:64;;;:::i;:::-;;471:72;;;:::i;:::-;;549;;;:::i;:::-;;627:64;;;:::i;:::-;;310;356:11;;;;;;:::i;:::-;;;;;;;;310:64::o;471:72::-;525:11;;;;;;:::i;:::-;;;;;;;;471:72::o;549:::-;603:11;;;;;;:::i;:::-;;;;;;;;549:72::o;627:64::-;673:11;;;;;;:::i;:::-;;;;;;;;627:64::o;7:169:6:-;91:11;125:6;120:3;113:19;165:4;160:3;156:14;141:29;;7:169;;;;:::o;182:154::-;322:6;318:1;310:6;306:14;299:30;182:154;:::o;342:365::-;484:3;505:66;569:1;564:3;505:66;:::i;:::-;498:73;;580:93;669:3;580:93;:::i;:::-;698:2;693:3;689:12;682:19;;342:365;;;:::o;713:419::-;879:4;917:2;906:9;902:18;894:26;;966:9;960:4;956:20;952:1;941:9;937:17;930:47;994:131;1120:4;994:131;:::i;:::-;986:139;;713:419;;;:::o;1138:154::-;1278:6;1274:1;1266:6;1262:14;1255:30;1138:154;:::o;1298:365::-;1440:3;1461:66;1525:1;1520:3;1461:66;:::i;:::-;1454:73;;1536:93;1625:3;1536:93;:::i;:::-;1654:2;1649:3;1645:12;1638:19;;1298:365;;;:::o;1669:419::-;1835:4;1873:2;1862:9;1858:18;1850:26;;1922:9;1916:4;1912:20;1908:1;1897:9;1893:17;1886:47;1950:131;2076:4;1950:131;:::i;:::-;1942:139;;1669:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "123200",
								"executionCost": "169",
								"totalCost": "123369"
							},
							"external": {
								"baba()": "1984",
								"hip()": "1940",
								"pop()": "1962",
								"yeye()": "1918"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 378,
									"end": 693,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 378,
									"end": 693,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 378,
									"end": 693,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 378,
									"end": 693,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 378,
									"end": 693,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 378,
									"end": 693,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 378,
									"end": 693,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 378,
									"end": 693,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 378,
									"end": 693,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 378,
									"end": 693,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 378,
									"end": 693,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 378,
									"end": 693,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 378,
									"end": 693,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 378,
									"end": 693,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 378,
									"end": 693,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 378,
									"end": 693,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 378,
									"end": 693,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 378,
									"end": 693,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 378,
									"end": 693,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 378,
									"end": 693,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 378,
									"end": 693,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220eecb67bf81dd690455b96cf4de0d5f153b6b8fae00f688aef5462380dc889a1e64736f6c634300081c0033",
									".code": [
										{
											"begin": 378,
											"end": 693,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 378,
											"end": 693,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 378,
											"end": 693,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 378,
											"end": 693,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 378,
											"end": 693,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 378,
											"end": 693,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 378,
											"end": 693,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 378,
											"end": 693,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 378,
											"end": 693,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 378,
											"end": 693,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 378,
											"end": 693,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 378,
											"end": 693,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 378,
											"end": 693,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 378,
											"end": 693,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 378,
											"end": 693,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 378,
											"end": 693,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 378,
											"end": 693,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 378,
											"end": 693,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 378,
											"end": 693,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 378,
											"end": 693,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 378,
											"end": 693,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 378,
											"end": 693,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 378,
											"end": 693,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 378,
											"end": 693,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 378,
											"end": 693,
											"name": "PUSH",
											"source": 2,
											"value": "CA21E9C"
										},
										{
											"begin": 378,
											"end": 693,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 378,
											"end": 693,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 378,
											"end": 693,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 378,
											"end": 693,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 378,
											"end": 693,
											"name": "PUSH",
											"source": 2,
											"value": "370EA142"
										},
										{
											"begin": 378,
											"end": 693,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 378,
											"end": 693,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 378,
											"end": 693,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 378,
											"end": 693,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 378,
											"end": 693,
											"name": "PUSH",
											"source": 2,
											"value": "A4ECE52C"
										},
										{
											"begin": 378,
											"end": 693,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 378,
											"end": 693,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 378,
											"end": 693,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 378,
											"end": 693,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 378,
											"end": 693,
											"name": "PUSH",
											"source": 2,
											"value": "FA030EF1"
										},
										{
											"begin": 378,
											"end": 693,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 378,
											"end": 693,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 378,
											"end": 693,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 378,
											"end": 693,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 378,
											"end": 693,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 378,
											"end": 693,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 378,
											"end": 693,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 378,
											"end": 693,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 310,
											"end": 374,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 310,
											"end": 374,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 310,
											"end": 374,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 310,
											"end": 374,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 310,
											"end": 374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 310,
											"end": 374,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 310,
											"end": 374,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 310,
											"end": 374,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 471,
											"end": 543,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 471,
											"end": 543,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 471,
											"end": 543,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 471,
											"end": 543,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 471,
											"end": 543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 471,
											"end": 543,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 471,
											"end": 543,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 471,
											"end": 543,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 549,
											"end": 621,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 549,
											"end": 621,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 549,
											"end": 621,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 549,
											"end": 621,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 549,
											"end": 621,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 549,
											"end": 621,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 549,
											"end": 621,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 549,
											"end": 621,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 627,
											"end": 691,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 627,
											"end": 691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 627,
											"end": 691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 627,
											"end": 691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 627,
											"end": 691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 627,
											"end": 691,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 627,
											"end": 691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 627,
											"end": 691,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 310,
											"end": 374,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 310,
											"end": 374,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 356,
											"end": 367,
											"name": "PUSH",
											"source": 2,
											"value": "CF34EF537AC33EE1AC626CA1587A0A7E8E51561E5514F8CB36AFA1C5102B3BAB"
										},
										{
											"begin": 356,
											"end": 367,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 356,
											"end": 367,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 356,
											"end": 367,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 356,
											"end": 367,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 356,
											"end": 367,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 356,
											"end": 367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 356,
											"end": 367,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 356,
											"end": 367,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 356,
											"end": 367,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 356,
											"end": 367,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 356,
											"end": 367,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 356,
											"end": 367,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 356,
											"end": 367,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 356,
											"end": 367,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 356,
											"end": 367,
											"name": "LOG1",
											"source": 2
										},
										{
											"begin": 310,
											"end": 374,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 471,
											"end": 543,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 471,
											"end": 543,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 525,
											"end": 536,
											"name": "PUSH",
											"source": 2,
											"value": "CF34EF537AC33EE1AC626CA1587A0A7E8E51561E5514F8CB36AFA1C5102B3BAB"
										},
										{
											"begin": 525,
											"end": 536,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 525,
											"end": 536,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 525,
											"end": 536,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 525,
											"end": 536,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 525,
											"end": 536,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 525,
											"end": 536,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 525,
											"end": 536,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 525,
											"end": 536,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 525,
											"end": 536,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 525,
											"end": 536,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 525,
											"end": 536,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 525,
											"end": 536,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 525,
											"end": 536,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 525,
											"end": 536,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 525,
											"end": 536,
											"name": "LOG1",
											"source": 2
										},
										{
											"begin": 471,
											"end": 543,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 549,
											"end": 621,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 549,
											"end": 621,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 603,
											"end": 614,
											"name": "PUSH",
											"source": 2,
											"value": "CF34EF537AC33EE1AC626CA1587A0A7E8E51561E5514F8CB36AFA1C5102B3BAB"
										},
										{
											"begin": 603,
											"end": 614,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 603,
											"end": 614,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 603,
											"end": 614,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 603,
											"end": 614,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 603,
											"end": 614,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 603,
											"end": 614,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 603,
											"end": 614,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 603,
											"end": 614,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 603,
											"end": 614,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 603,
											"end": 614,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 603,
											"end": 614,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 603,
											"end": 614,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 603,
											"end": 614,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 603,
											"end": 614,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 603,
											"end": 614,
											"name": "LOG1",
											"source": 2
										},
										{
											"begin": 549,
											"end": 621,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 627,
											"end": 691,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 627,
											"end": 691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 673,
											"end": 684,
											"name": "PUSH",
											"source": 2,
											"value": "CF34EF537AC33EE1AC626CA1587A0A7E8E51561E5514F8CB36AFA1C5102B3BAB"
										},
										{
											"begin": 673,
											"end": 684,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 673,
											"end": 684,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 673,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 673,
											"end": 684,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 673,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 673,
											"end": 684,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 673,
											"end": 684,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 673,
											"end": 684,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 673,
											"end": 684,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 673,
											"end": 684,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 673,
											"end": 684,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 673,
											"end": 684,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 673,
											"end": 684,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 673,
											"end": 684,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 673,
											"end": 684,
											"name": "LOG1",
											"source": 2
										},
										{
											"begin": 627,
											"end": 691,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 176,
											"name": "tag",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 7,
											"end": 176,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 91,
											"end": 102,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 125,
											"end": 131,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 120,
											"end": 123,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 113,
											"end": 132,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 165,
											"end": 169,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 160,
											"end": 163,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 156,
											"end": 170,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 141,
											"end": 170,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 141,
											"end": 170,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7,
											"end": 176,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7,
											"end": 176,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7,
											"end": 176,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7,
											"end": 176,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7,
											"end": 176,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 182,
											"end": 336,
											"name": "tag",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 182,
											"end": 336,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 322,
											"end": 328,
											"name": "PUSH",
											"source": 6,
											"value": "5965796500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 318,
											"end": 319,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 310,
											"end": 316,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 306,
											"end": 320,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 299,
											"end": 329,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 182,
											"end": 336,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 182,
											"end": 336,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 342,
											"end": 707,
											"name": "tag",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 342,
											"end": 707,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 484,
											"end": 487,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 505,
											"end": 571,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 569,
											"end": 570,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 564,
											"end": 567,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 505,
											"end": 571,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 505,
											"end": 571,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 505,
											"end": 571,
											"name": "tag",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 505,
											"end": 571,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 498,
											"end": 571,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 498,
											"end": 571,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 580,
											"end": 673,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 669,
											"end": 672,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 580,
											"end": 673,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 580,
											"end": 673,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 580,
											"end": 673,
											"name": "tag",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 580,
											"end": 673,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 698,
											"end": 700,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 693,
											"end": 696,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 689,
											"end": 701,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 682,
											"end": 701,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 682,
											"end": 701,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 342,
											"end": 707,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 342,
											"end": 707,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 342,
											"end": 707,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 342,
											"end": 707,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 713,
											"end": 1132,
											"name": "tag",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 713,
											"end": 1132,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 879,
											"end": 883,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 917,
											"end": 919,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 906,
											"end": 915,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 902,
											"end": 920,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 894,
											"end": 920,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 894,
											"end": 920,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 966,
											"end": 975,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 960,
											"end": 964,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 956,
											"end": 976,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 952,
											"end": 953,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 941,
											"end": 950,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 937,
											"end": 954,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 930,
											"end": 977,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 994,
											"end": 1125,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 1120,
											"end": 1124,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 994,
											"end": 1125,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 994,
											"end": 1125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 994,
											"end": 1125,
											"name": "tag",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 994,
											"end": 1125,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 986,
											"end": 1125,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 986,
											"end": 1125,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 713,
											"end": 1132,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 713,
											"end": 1132,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 713,
											"end": 1132,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 713,
											"end": 1132,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1138,
											"end": 1292,
											"name": "tag",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 1138,
											"end": 1292,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1278,
											"end": 1284,
											"name": "PUSH",
											"source": 6,
											"value": "4261626100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1274,
											"end": 1275,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1266,
											"end": 1272,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1262,
											"end": 1276,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1255,
											"end": 1285,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1138,
											"end": 1292,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1138,
											"end": 1292,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1298,
											"end": 1663,
											"name": "tag",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 1298,
											"end": 1663,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1440,
											"end": 1443,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1461,
											"end": 1527,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1525,
											"end": 1526,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1520,
											"end": 1523,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1461,
											"end": 1527,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 1461,
											"end": 1527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1461,
											"end": 1527,
											"name": "tag",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1461,
											"end": 1527,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1454,
											"end": 1527,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1454,
											"end": 1527,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1536,
											"end": 1629,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 1625,
											"end": 1628,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1536,
											"end": 1629,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 1536,
											"end": 1629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1536,
											"end": 1629,
											"name": "tag",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 1536,
											"end": 1629,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1654,
											"end": 1656,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1649,
											"end": 1652,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1645,
											"end": 1657,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1638,
											"end": 1657,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1638,
											"end": 1657,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1298,
											"end": 1663,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1298,
											"end": 1663,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1298,
											"end": 1663,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1298,
											"end": 1663,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1669,
											"end": 2088,
											"name": "tag",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1669,
											"end": 2088,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1835,
											"end": 1839,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1873,
											"end": 1875,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1862,
											"end": 1871,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1858,
											"end": 1876,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1850,
											"end": 1876,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1850,
											"end": 1876,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1922,
											"end": 1931,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1916,
											"end": 1920,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1912,
											"end": 1932,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1908,
											"end": 1909,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1897,
											"end": 1906,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1893,
											"end": 1910,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1886,
											"end": 1933,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1950,
											"end": 2081,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 2076,
											"end": 2080,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1950,
											"end": 2081,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 1950,
											"end": 2081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1950,
											"end": 2081,
											"name": "tag",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 1950,
											"end": 2081,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1942,
											"end": 2081,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1942,
											"end": 2081,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1669,
											"end": 2088,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1669,
											"end": 2088,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1669,
											"end": 2088,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1669,
											"end": 2088,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/study/InheritanceTest.sol",
								"contracts/study2/Import.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Errors.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"baba()": "fa030ef1",
							"hip()": "370ea142",
							"pop()": "a4ece52c",
							"yeye()": "0ca21e9c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"msg\",\"type\":\"string\"}],\"name\":\"Log\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"baba\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"hip\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pop\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"yeye\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/study/InheritanceTest.sol\":\"Baba\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/study/InheritanceTest.sol\":{\"keccak256\":\"0x3a8c032eb89da05730a7afdfb70e36c31d24da7d52416ee3e1a0ecb1d15562bf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d50e5eb8408b348d690ecaf1ee1eaaa58d7880e056febe9ccc36991865dbbcb9\",\"dweb:/ipfs/QmbbnnhFkSqTtCBfyoNqk2RhWQE9FhwSecbv5WxXa3nioF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Base1": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/study/InheritanceTest.sol\":1160:1295  contract Base1 {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/study/InheritanceTest.sol\":1160:1295  contract Base1 {... */\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa264697066735822122060213f9f530e13f44490ca8d33afaadf5ed744768eb9dfa5367471c83aaf5e0064736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f5ffd5b50603e80601a5f395ff3fe60806040525f5ffdfea264697066735822122060213f9f530e13f44490ca8d33afaadf5ed744768eb9dfa5367471c83aaf5e0064736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x3E DUP1 PUSH1 0x1A PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH1 0x21 EXTCODEHASH SWAP16 MSTORE8 0xE SGT DELEGATECALL PREVRANDAO SWAP1 0xCA DUP14 CALLER 0xAF 0xAA 0xDF MCOPY 0xD7 PREVRANDAO PUSH23 0x8EB9DFA5367471C83AAF5E0064736F6C634300081C0033 ",
							"sourceMap": "1160:135:2:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040525f5ffdfea264697066735822122060213f9f530e13f44490ca8d33afaadf5ed744768eb9dfa5367471c83aaf5e0064736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH1 0x21 EXTCODEHASH SWAP16 MSTORE8 0xE SGT DELEGATECALL PREVRANDAO SWAP1 0xCA DUP14 CALLER 0xAF 0xAA 0xDF MCOPY 0xD7 PREVRANDAO PUSH23 0x8EB9DFA5367471C83AAF5E0064736F6C634300081C0033 ",
							"sourceMap": "1160:135:2:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12400",
								"executionCost": "64",
								"totalCost": "12464"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1160,
									"end": 1295,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 1160,
									"end": 1295,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1160,
									"end": 1295,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1160,
									"end": 1295,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 1160,
									"end": 1295,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1160,
									"end": 1295,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1160,
									"end": 1295,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1160,
									"end": 1295,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1160,
									"end": 1295,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1160,
									"end": 1295,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1160,
									"end": 1295,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1160,
									"end": 1295,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1160,
									"end": 1295,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1160,
									"end": 1295,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1160,
									"end": 1295,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1160,
									"end": 1295,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1160,
									"end": 1295,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1160,
									"end": 1295,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1160,
									"end": 1295,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 1160,
									"end": 1295,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1160,
									"end": 1295,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122060213f9f530e13f44490ca8d33afaadf5ed744768eb9dfa5367471c83aaf5e0064736f6c634300081c0033",
									".code": [
										{
											"begin": 1160,
											"end": 1295,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1160,
											"end": 1295,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1160,
											"end": 1295,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1160,
											"end": 1295,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1160,
											"end": 1295,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1160,
											"end": 1295,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/study/InheritanceTest.sol",
								"contracts/study2/Import.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Errors.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/study/InheritanceTest.sol\":\"Base1\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/study/InheritanceTest.sol\":{\"keccak256\":\"0x3a8c032eb89da05730a7afdfb70e36c31d24da7d52416ee3e1a0ecb1d15562bf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d50e5eb8408b348d690ecaf1ee1eaaa58d7880e056febe9ccc36991865dbbcb9\",\"dweb:/ipfs/QmbbnnhFkSqTtCBfyoNqk2RhWQE9FhwSecbv5WxXa3nioF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Erzi": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "msg",
									"type": "string"
								}
							],
							"name": "Log",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "baba",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "callParent",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "callParentSuper",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "hip",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pop",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "yeye",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/study/InheritanceTest.sol\":695:1158  contract Erzi is Yeye, Baba {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/study/InheritanceTest.sol\":695:1158  contract Erzi is Yeye, Baba {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x0ca21e9c\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x370ea142\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x572e47ae\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xa4ece52c\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xb92a50e0\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xfa030ef1\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"contracts/study/InheritanceTest.sol\":310:374  function yeye() public virtual {... */\n    tag_3:\n      tag_9\n      tag_10\n      jump\t// in\n    tag_9:\n      stop\n        /* \"contracts/study/InheritanceTest.sol\":794:878  function hip() public virtual override(Yeye, Baba) {... */\n    tag_4:\n      tag_11\n      tag_12\n      jump\t// in\n    tag_11:\n      stop\n        /* \"contracts/study/InheritanceTest.sol\":974:1030  function callParent() public {... */\n    tag_5:\n      tag_13\n      tag_14\n      jump\t// in\n    tag_13:\n      stop\n        /* \"contracts/study/InheritanceTest.sol\":884:968  function pop() public virtual override(Yeye, Baba) {... */\n    tag_6:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      stop\n        /* \"contracts/study/InheritanceTest.sol\":1036:1156  function callParentSuper() public {... */\n    tag_7:\n      tag_17\n      tag_18\n      jump\t// in\n    tag_17:\n      stop\n        /* \"contracts/study/InheritanceTest.sol\":627:691  function baba() public virtual {... */\n    tag_8:\n      tag_19\n      tag_20\n      jump\t// in\n    tag_19:\n      stop\n        /* \"contracts/study/InheritanceTest.sol\":310:374  function yeye() public virtual {... */\n    tag_10:\n        /* \"contracts/study/InheritanceTest.sol\":356:367  Log(\"Yeye\") */\n      0xcf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab\n      mload(0x40)\n      tag_22\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/study/InheritanceTest.sol\":310:374  function yeye() public virtual {... */\n      jump\t// out\n        /* \"contracts/study/InheritanceTest.sol\":794:878  function hip() public virtual override(Yeye, Baba) {... */\n    tag_12:\n        /* \"contracts/study/InheritanceTest.sol\":860:871  Log(\"Erzi\") */\n      0xcf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab\n      mload(0x40)\n      tag_25\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/study/InheritanceTest.sol\":794:878  function hip() public virtual override(Yeye, Baba) {... */\n      jump\t// out\n        /* \"contracts/study/InheritanceTest.sol\":974:1030  function callParent() public {... */\n    tag_14:\n        /* \"contracts/study/InheritanceTest.sol\":1013:1023  Yeye.pop() */\n      tag_28\n        /* \"contracts/study/InheritanceTest.sol\":1013:1021  Yeye.pop */\n      tag_29\n        /* \"contracts/study/InheritanceTest.sol\":1013:1023  Yeye.pop() */\n      jump\t// in\n    tag_28:\n        /* \"contracts/study/InheritanceTest.sol\":974:1030  function callParent() public {... */\n      jump\t// out\n        /* \"contracts/study/InheritanceTest.sol\":884:968  function pop() public virtual override(Yeye, Baba) {... */\n    tag_16:\n        /* \"contracts/study/InheritanceTest.sol\":950:961  Log(\"Erzi\") */\n      0xcf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab\n      mload(0x40)\n      tag_31\n      swap1\n      tag_26\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/study/InheritanceTest.sol\":884:968  function pop() public virtual override(Yeye, Baba) {... */\n      jump\t// out\n        /* \"contracts/study/InheritanceTest.sol\":1036:1156  function callParentSuper() public {... */\n    tag_18:\n        /* \"contracts/study/InheritanceTest.sol\":1138:1149  super.pop() */\n      tag_33\n        /* \"contracts/study/InheritanceTest.sol\":1138:1147  super.pop */\n      tag_34\n        /* \"contracts/study/InheritanceTest.sol\":1138:1149  super.pop() */\n      jump\t// in\n    tag_33:\n        /* \"contracts/study/InheritanceTest.sol\":1036:1156  function callParentSuper() public {... */\n      jump\t// out\n        /* \"contracts/study/InheritanceTest.sol\":627:691  function baba() public virtual {... */\n    tag_20:\n        /* \"contracts/study/InheritanceTest.sol\":673:684  Log(\"Baba\") */\n      0xcf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab\n      mload(0x40)\n      tag_36\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/study/InheritanceTest.sol\":627:691  function baba() public virtual {... */\n      jump\t// out\n        /* \"contracts/study/InheritanceTest.sol\":241:304  function pop() public virtual {... */\n    tag_29:\n        /* \"contracts/study/InheritanceTest.sol\":286:297  Log(\"Yeye\") */\n      0xcf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab\n      mload(0x40)\n      tag_39\n      swap1\n      tag_23\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/study/InheritanceTest.sol\":241:304  function pop() public virtual {... */\n      jump\t// out\n        /* \"contracts/study/InheritanceTest.sol\":549:621  function pop() public virtual override {... */\n    tag_34:\n        /* \"contracts/study/InheritanceTest.sol\":603:614  Log(\"Baba\") */\n      0xcf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab\n      mload(0x40)\n      tag_41\n      swap1\n      tag_37\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/study/InheritanceTest.sol\":549:621  function pop() public virtual override {... */\n      jump\t// out\n        /* \"#utility.yul\":7:176   */\n    tag_42:\n        /* \"#utility.yul\":91:102   */\n      0x00\n        /* \"#utility.yul\":125:131   */\n      dup3\n        /* \"#utility.yul\":120:123   */\n      dup3\n        /* \"#utility.yul\":113:132   */\n      mstore\n        /* \"#utility.yul\":165:169   */\n      0x20\n        /* \"#utility.yul\":160:163   */\n      dup3\n        /* \"#utility.yul\":156:170   */\n      add\n        /* \"#utility.yul\":141:170   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:176   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":182:336   */\n    tag_43:\n        /* \"#utility.yul\":322:328   */\n      0x5965796500000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":318:319   */\n      0x00\n        /* \"#utility.yul\":310:316   */\n      dup3\n        /* \"#utility.yul\":306:320   */\n      add\n        /* \"#utility.yul\":299:329   */\n      mstore\n        /* \"#utility.yul\":182:336   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":342:707   */\n    tag_44:\n        /* \"#utility.yul\":484:487   */\n      0x00\n        /* \"#utility.yul\":505:571   */\n      tag_53\n        /* \"#utility.yul\":569:570   */\n      0x04\n        /* \"#utility.yul\":564:567   */\n      dup4\n        /* \"#utility.yul\":505:571   */\n      tag_42\n      jump\t// in\n    tag_53:\n        /* \"#utility.yul\":498:571   */\n      swap2\n      pop\n        /* \"#utility.yul\":580:673   */\n      tag_54\n        /* \"#utility.yul\":669:672   */\n      dup3\n        /* \"#utility.yul\":580:673   */\n      tag_43\n      jump\t// in\n    tag_54:\n        /* \"#utility.yul\":698:700   */\n      0x20\n        /* \"#utility.yul\":693:696   */\n      dup3\n        /* \"#utility.yul\":689:701   */\n      add\n        /* \"#utility.yul\":682:701   */\n      swap1\n      pop\n        /* \"#utility.yul\":342:707   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":713:1132   */\n    tag_23:\n        /* \"#utility.yul\":879:883   */\n      0x00\n        /* \"#utility.yul\":917:919   */\n      0x20\n        /* \"#utility.yul\":906:915   */\n      dup3\n        /* \"#utility.yul\":902:920   */\n      add\n        /* \"#utility.yul\":894:920   */\n      swap1\n      pop\n        /* \"#utility.yul\":966:975   */\n      dup2\n        /* \"#utility.yul\":960:964   */\n      dup2\n        /* \"#utility.yul\":956:976   */\n      sub\n        /* \"#utility.yul\":952:953   */\n      0x00\n        /* \"#utility.yul\":941:950   */\n      dup4\n        /* \"#utility.yul\":937:954   */\n      add\n        /* \"#utility.yul\":930:977   */\n      mstore\n        /* \"#utility.yul\":994:1125   */\n      tag_56\n        /* \"#utility.yul\":1120:1124   */\n      dup2\n        /* \"#utility.yul\":994:1125   */\n      tag_44\n      jump\t// in\n    tag_56:\n        /* \"#utility.yul\":986:1125   */\n      swap1\n      pop\n        /* \"#utility.yul\":713:1132   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1138:1292   */\n    tag_45:\n        /* \"#utility.yul\":1278:1284   */\n      0x45727a6900000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":1274:1275   */\n      0x00\n        /* \"#utility.yul\":1266:1272   */\n      dup3\n        /* \"#utility.yul\":1262:1276   */\n      add\n        /* \"#utility.yul\":1255:1285   */\n      mstore\n        /* \"#utility.yul\":1138:1292   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1298:1663   */\n    tag_46:\n        /* \"#utility.yul\":1440:1443   */\n      0x00\n        /* \"#utility.yul\":1461:1527   */\n      tag_59\n        /* \"#utility.yul\":1525:1526   */\n      0x04\n        /* \"#utility.yul\":1520:1523   */\n      dup4\n        /* \"#utility.yul\":1461:1527   */\n      tag_42\n      jump\t// in\n    tag_59:\n        /* \"#utility.yul\":1454:1527   */\n      swap2\n      pop\n        /* \"#utility.yul\":1536:1629   */\n      tag_60\n        /* \"#utility.yul\":1625:1628   */\n      dup3\n        /* \"#utility.yul\":1536:1629   */\n      tag_45\n      jump\t// in\n    tag_60:\n        /* \"#utility.yul\":1654:1656   */\n      0x20\n        /* \"#utility.yul\":1649:1652   */\n      dup3\n        /* \"#utility.yul\":1645:1657   */\n      add\n        /* \"#utility.yul\":1638:1657   */\n      swap1\n      pop\n        /* \"#utility.yul\":1298:1663   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1669:2088   */\n    tag_26:\n        /* \"#utility.yul\":1835:1839   */\n      0x00\n        /* \"#utility.yul\":1873:1875   */\n      0x20\n        /* \"#utility.yul\":1862:1871   */\n      dup3\n        /* \"#utility.yul\":1858:1876   */\n      add\n        /* \"#utility.yul\":1850:1876   */\n      swap1\n      pop\n        /* \"#utility.yul\":1922:1931   */\n      dup2\n        /* \"#utility.yul\":1916:1920   */\n      dup2\n        /* \"#utility.yul\":1912:1932   */\n      sub\n        /* \"#utility.yul\":1908:1909   */\n      0x00\n        /* \"#utility.yul\":1897:1906   */\n      dup4\n        /* \"#utility.yul\":1893:1910   */\n      add\n        /* \"#utility.yul\":1886:1933   */\n      mstore\n        /* \"#utility.yul\":1950:2081   */\n      tag_62\n        /* \"#utility.yul\":2076:2080   */\n      dup2\n        /* \"#utility.yul\":1950:2081   */\n      tag_46\n      jump\t// in\n    tag_62:\n        /* \"#utility.yul\":1942:2081   */\n      swap1\n      pop\n        /* \"#utility.yul\":1669:2088   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2094:2248   */\n    tag_47:\n        /* \"#utility.yul\":2234:2240   */\n      0x4261626100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2230:2231   */\n      0x00\n        /* \"#utility.yul\":2222:2228   */\n      dup3\n        /* \"#utility.yul\":2218:2232   */\n      add\n        /* \"#utility.yul\":2211:2241   */\n      mstore\n        /* \"#utility.yul\":2094:2248   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2254:2619   */\n    tag_48:\n        /* \"#utility.yul\":2396:2399   */\n      0x00\n        /* \"#utility.yul\":2417:2483   */\n      tag_65\n        /* \"#utility.yul\":2481:2482   */\n      0x04\n        /* \"#utility.yul\":2476:2479   */\n      dup4\n        /* \"#utility.yul\":2417:2483   */\n      tag_42\n      jump\t// in\n    tag_65:\n        /* \"#utility.yul\":2410:2483   */\n      swap2\n      pop\n        /* \"#utility.yul\":2492:2585   */\n      tag_66\n        /* \"#utility.yul\":2581:2584   */\n      dup3\n        /* \"#utility.yul\":2492:2585   */\n      tag_47\n      jump\t// in\n    tag_66:\n        /* \"#utility.yul\":2610:2612   */\n      0x20\n        /* \"#utility.yul\":2605:2608   */\n      dup3\n        /* \"#utility.yul\":2601:2613   */\n      add\n        /* \"#utility.yul\":2594:2613   */\n      swap1\n      pop\n        /* \"#utility.yul\":2254:2619   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2625:3044   */\n    tag_37:\n        /* \"#utility.yul\":2791:2795   */\n      0x00\n        /* \"#utility.yul\":2829:2831   */\n      0x20\n        /* \"#utility.yul\":2818:2827   */\n      dup3\n        /* \"#utility.yul\":2814:2832   */\n      add\n        /* \"#utility.yul\":2806:2832   */\n      swap1\n      pop\n        /* \"#utility.yul\":2878:2887   */\n      dup2\n        /* \"#utility.yul\":2872:2876   */\n      dup2\n        /* \"#utility.yul\":2868:2888   */\n      sub\n        /* \"#utility.yul\":2864:2865   */\n      0x00\n        /* \"#utility.yul\":2853:2862   */\n      dup4\n        /* \"#utility.yul\":2849:2866   */\n      add\n        /* \"#utility.yul\":2842:2889   */\n      mstore\n        /* \"#utility.yul\":2906:3037   */\n      tag_68\n        /* \"#utility.yul\":3032:3036   */\n      dup2\n        /* \"#utility.yul\":2906:3037   */\n      tag_48\n      jump\t// in\n    tag_68:\n        /* \"#utility.yul\":2898:3037   */\n      swap1\n      pop\n        /* \"#utility.yul\":2625:3044   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220e6e9ee98ded1c21a06881d130bee161186ba0c819029edd208e5bf8ec3d8d9ad64736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f5ffd5b5061037c8061001c5f395ff3fe608060405234801561000f575f5ffd5b5060043610610060575f3560e01c80630ca21e9c14610064578063370ea1421461006e578063572e47ae14610078578063a4ece52c14610082578063b92a50e01461008c578063fa030ef114610096575b5f5ffd5b61006c6100a0565b005b6100766100d7565b005b61008061010e565b005b61008a610118565b005b61009461014f565b005b61009e610159565b005b7fcf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab6040516100cd90610258565b60405180910390a1565b7fcf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab604051610104906102c0565b60405180910390a1565b610116610190565b565b7fcf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab604051610145906102c0565b60405180910390a1565b6101576101c7565b565b7fcf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab60405161018690610328565b60405180910390a1565b7fcf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab6040516101bd90610258565b60405180910390a1565b7fcf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab6040516101f490610328565b60405180910390a1565b5f82825260208201905092915050565b7f59657965000000000000000000000000000000000000000000000000000000005f82015250565b5f6102426004836101fe565b915061024d8261020e565b602082019050919050565b5f6020820190508181035f83015261026f81610236565b9050919050565b7f45727a69000000000000000000000000000000000000000000000000000000005f82015250565b5f6102aa6004836101fe565b91506102b582610276565b602082019050919050565b5f6020820190508181035f8301526102d78161029e565b9050919050565b7f42616261000000000000000000000000000000000000000000000000000000005f82015250565b5f6103126004836101fe565b915061031d826102de565b602082019050919050565b5f6020820190508181035f83015261033f81610306565b905091905056fea2646970667358221220e6e9ee98ded1c21a06881d130bee161186ba0c819029edd208e5bf8ec3d8d9ad64736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x37C DUP1 PUSH2 0x1C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x60 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xCA21E9C EQ PUSH2 0x64 JUMPI DUP1 PUSH4 0x370EA142 EQ PUSH2 0x6E JUMPI DUP1 PUSH4 0x572E47AE EQ PUSH2 0x78 JUMPI DUP1 PUSH4 0xA4ECE52C EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0xB92A50E0 EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0xFA030EF1 EQ PUSH2 0x96 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x6C PUSH2 0xA0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x76 PUSH2 0xD7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x80 PUSH2 0x10E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x8A PUSH2 0x118 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x94 PUSH2 0x14F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x9E PUSH2 0x159 JUMP JUMPDEST STOP JUMPDEST PUSH32 0xCF34EF537AC33EE1AC626CA1587A0A7E8E51561E5514F8CB36AFA1C5102B3BAB PUSH1 0x40 MLOAD PUSH2 0xCD SWAP1 PUSH2 0x258 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH32 0xCF34EF537AC33EE1AC626CA1587A0A7E8E51561E5514F8CB36AFA1C5102B3BAB PUSH1 0x40 MLOAD PUSH2 0x104 SWAP1 PUSH2 0x2C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x116 PUSH2 0x190 JUMP JUMPDEST JUMP JUMPDEST PUSH32 0xCF34EF537AC33EE1AC626CA1587A0A7E8E51561E5514F8CB36AFA1C5102B3BAB PUSH1 0x40 MLOAD PUSH2 0x145 SWAP1 PUSH2 0x2C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x157 PUSH2 0x1C7 JUMP JUMPDEST JUMP JUMPDEST PUSH32 0xCF34EF537AC33EE1AC626CA1587A0A7E8E51561E5514F8CB36AFA1C5102B3BAB PUSH1 0x40 MLOAD PUSH2 0x186 SWAP1 PUSH2 0x328 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH32 0xCF34EF537AC33EE1AC626CA1587A0A7E8E51561E5514F8CB36AFA1C5102B3BAB PUSH1 0x40 MLOAD PUSH2 0x1BD SWAP1 PUSH2 0x258 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH32 0xCF34EF537AC33EE1AC626CA1587A0A7E8E51561E5514F8CB36AFA1C5102B3BAB PUSH1 0x40 MLOAD PUSH2 0x1F4 SWAP1 PUSH2 0x328 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5965796500000000000000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x242 PUSH1 0x4 DUP4 PUSH2 0x1FE JUMP JUMPDEST SWAP2 POP PUSH2 0x24D DUP3 PUSH2 0x20E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x26F DUP2 PUSH2 0x236 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45727A6900000000000000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2AA PUSH1 0x4 DUP4 PUSH2 0x1FE JUMP JUMPDEST SWAP2 POP PUSH2 0x2B5 DUP3 PUSH2 0x276 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2D7 DUP2 PUSH2 0x29E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4261626100000000000000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x312 PUSH1 0x4 DUP4 PUSH2 0x1FE JUMP JUMPDEST SWAP2 POP PUSH2 0x31D DUP3 PUSH2 0x2DE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x33F DUP2 PUSH2 0x306 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE6 0xE9 0xEE SWAP9 0xDE 0xD1 0xC2 BYTE MOD DUP9 SAR SGT SIGNEXTEND 0xEE AND GT DUP7 0xBA 0xC DUP2 SWAP1 0x29 0xED 0xD2 ADDMOD 0xE5 0xBF DUP15 0xC3 0xD8 0xD9 0xAD PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
							"sourceMap": "695:463:2:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@baba_236": {
									"entryPoint": 345,
									"id": 236,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@callParentSuper_281": {
									"entryPoint": 335,
									"id": 281,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@callParent_272": {
									"entryPoint": 270,
									"id": 272,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@hip_252": {
									"entryPoint": 215,
									"id": 252,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@pop_199": {
									"entryPoint": 400,
									"id": 199,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@pop_228": {
									"entryPoint": 455,
									"id": 228,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@pop_263": {
									"entryPoint": 280,
									"id": 263,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@yeye_207": {
									"entryPoint": 160,
									"id": 207,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_552f12338174ce6152a5d9af9e1035e4f5e814d72e8245416f12a96744f11caa_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 566,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_860eea7158d3e1f75d549e2d9b523582079ba1f73523ab92bd1d9cc4a280f619_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 774,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_abcea0b146a5d767912de24970d2ab9faa1ae8de2e77c56f53d919e46e4be3f4_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 670,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_552f12338174ce6152a5d9af9e1035e4f5e814d72e8245416f12a96744f11caa__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 600,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_860eea7158d3e1f75d549e2d9b523582079ba1f73523ab92bd1d9cc4a280f619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 808,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_abcea0b146a5d767912de24970d2ab9faa1ae8de2e77c56f53d919e46e4be3f4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 704,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 510,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"store_literal_in_memory_552f12338174ce6152a5d9af9e1035e4f5e814d72e8245416f12a96744f11caa": {
									"entryPoint": 526,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_860eea7158d3e1f75d549e2d9b523582079ba1f73523ab92bd1d9cc4a280f619": {
									"entryPoint": 734,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_abcea0b146a5d767912de24970d2ab9faa1ae8de2e77c56f53d919e46e4be3f4": {
									"entryPoint": 630,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:3047:6",
										"nodeType": "YulBlock",
										"src": "0:3047:6",
										"statements": [
											{
												"body": {
													"nativeSrc": "103:73:6",
													"nodeType": "YulBlock",
													"src": "103:73:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "120:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "120:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "125:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "125:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "113:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "113:6:6"
																},
																"nativeSrc": "113:19:6",
																"nodeType": "YulFunctionCall",
																"src": "113:19:6"
															},
															"nativeSrc": "113:19:6",
															"nodeType": "YulExpressionStatement",
															"src": "113:19:6"
														},
														{
															"nativeSrc": "141:29:6",
															"nodeType": "YulAssignment",
															"src": "141:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "160:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "160:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "165:4:6",
																		"nodeType": "YulLiteral",
																		"src": "165:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "156:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "156:3:6"
																},
																"nativeSrc": "156:14:6",
																"nodeType": "YulFunctionCall",
																"src": "156:14:6"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "141:11:6",
																	"nodeType": "YulIdentifier",
																	"src": "141:11:6"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "7:169:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "75:3:6",
														"nodeType": "YulTypedName",
														"src": "75:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "80:6:6",
														"nodeType": "YulTypedName",
														"src": "80:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "91:11:6",
														"nodeType": "YulTypedName",
														"src": "91:11:6",
														"type": ""
													}
												],
												"src": "7:169:6"
											},
											{
												"body": {
													"nativeSrc": "288:48:6",
													"nodeType": "YulBlock",
													"src": "288:48:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "310:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "310:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "318:1:6",
																				"nodeType": "YulLiteral",
																				"src": "318:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "306:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "306:3:6"
																		},
																		"nativeSrc": "306:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "306:14:6"
																	},
																	{
																		"hexValue": "59657965",
																		"kind": "string",
																		"nativeSrc": "322:6:6",
																		"nodeType": "YulLiteral",
																		"src": "322:6:6",
																		"type": "",
																		"value": "Yeye"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "299:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "299:6:6"
																},
																"nativeSrc": "299:30:6",
																"nodeType": "YulFunctionCall",
																"src": "299:30:6"
															},
															"nativeSrc": "299:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "299:30:6"
														}
													]
												},
												"name": "store_literal_in_memory_552f12338174ce6152a5d9af9e1035e4f5e814d72e8245416f12a96744f11caa",
												"nativeSrc": "182:154:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "280:6:6",
														"nodeType": "YulTypedName",
														"src": "280:6:6",
														"type": ""
													}
												],
												"src": "182:154:6"
											},
											{
												"body": {
													"nativeSrc": "488:219:6",
													"nodeType": "YulBlock",
													"src": "488:219:6",
													"statements": [
														{
															"nativeSrc": "498:73:6",
															"nodeType": "YulAssignment",
															"src": "498:73:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "564:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "564:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "569:1:6",
																		"nodeType": "YulLiteral",
																		"src": "569:1:6",
																		"type": "",
																		"value": "4"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "505:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "505:58:6"
																},
																"nativeSrc": "505:66:6",
																"nodeType": "YulFunctionCall",
																"src": "505:66:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "498:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "498:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "669:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "669:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_552f12338174ce6152a5d9af9e1035e4f5e814d72e8245416f12a96744f11caa",
																	"nativeSrc": "580:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "580:88:6"
																},
																"nativeSrc": "580:93:6",
																"nodeType": "YulFunctionCall",
																"src": "580:93:6"
															},
															"nativeSrc": "580:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "580:93:6"
														},
														{
															"nativeSrc": "682:19:6",
															"nodeType": "YulAssignment",
															"src": "682:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "693:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "693:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "698:2:6",
																		"nodeType": "YulLiteral",
																		"src": "698:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "689:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "689:3:6"
																},
																"nativeSrc": "689:12:6",
																"nodeType": "YulFunctionCall",
																"src": "689:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "682:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "682:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_552f12338174ce6152a5d9af9e1035e4f5e814d72e8245416f12a96744f11caa_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "342:365:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "476:3:6",
														"nodeType": "YulTypedName",
														"src": "476:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "484:3:6",
														"nodeType": "YulTypedName",
														"src": "484:3:6",
														"type": ""
													}
												],
												"src": "342:365:6"
											},
											{
												"body": {
													"nativeSrc": "884:248:6",
													"nodeType": "YulBlock",
													"src": "884:248:6",
													"statements": [
														{
															"nativeSrc": "894:26:6",
															"nodeType": "YulAssignment",
															"src": "894:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "906:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "906:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "917:2:6",
																		"nodeType": "YulLiteral",
																		"src": "917:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "902:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "902:3:6"
																},
																"nativeSrc": "902:18:6",
																"nodeType": "YulFunctionCall",
																"src": "902:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "894:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "894:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "941:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "941:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "952:1:6",
																				"nodeType": "YulLiteral",
																				"src": "952:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "937:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "937:3:6"
																		},
																		"nativeSrc": "937:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "937:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "960:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "960:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "966:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "966:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "956:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "956:3:6"
																		},
																		"nativeSrc": "956:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "956:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "930:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "930:6:6"
																},
																"nativeSrc": "930:47:6",
																"nodeType": "YulFunctionCall",
																"src": "930:47:6"
															},
															"nativeSrc": "930:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "930:47:6"
														},
														{
															"nativeSrc": "986:139:6",
															"nodeType": "YulAssignment",
															"src": "986:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "1120:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "1120:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_552f12338174ce6152a5d9af9e1035e4f5e814d72e8245416f12a96744f11caa_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "994:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "994:124:6"
																},
																"nativeSrc": "994:131:6",
																"nodeType": "YulFunctionCall",
																"src": "994:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "986:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "986:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_552f12338174ce6152a5d9af9e1035e4f5e814d72e8245416f12a96744f11caa__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "713:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "864:9:6",
														"nodeType": "YulTypedName",
														"src": "864:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "879:4:6",
														"nodeType": "YulTypedName",
														"src": "879:4:6",
														"type": ""
													}
												],
												"src": "713:419:6"
											},
											{
												"body": {
													"nativeSrc": "1244:48:6",
													"nodeType": "YulBlock",
													"src": "1244:48:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "1266:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1266:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1274:1:6",
																				"nodeType": "YulLiteral",
																				"src": "1274:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1262:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1262:3:6"
																		},
																		"nativeSrc": "1262:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1262:14:6"
																	},
																	{
																		"hexValue": "45727a69",
																		"kind": "string",
																		"nativeSrc": "1278:6:6",
																		"nodeType": "YulLiteral",
																		"src": "1278:6:6",
																		"type": "",
																		"value": "Erzi"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1255:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1255:6:6"
																},
																"nativeSrc": "1255:30:6",
																"nodeType": "YulFunctionCall",
																"src": "1255:30:6"
															},
															"nativeSrc": "1255:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "1255:30:6"
														}
													]
												},
												"name": "store_literal_in_memory_abcea0b146a5d767912de24970d2ab9faa1ae8de2e77c56f53d919e46e4be3f4",
												"nativeSrc": "1138:154:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "1236:6:6",
														"nodeType": "YulTypedName",
														"src": "1236:6:6",
														"type": ""
													}
												],
												"src": "1138:154:6"
											},
											{
												"body": {
													"nativeSrc": "1444:219:6",
													"nodeType": "YulBlock",
													"src": "1444:219:6",
													"statements": [
														{
															"nativeSrc": "1454:73:6",
															"nodeType": "YulAssignment",
															"src": "1454:73:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1520:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "1520:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1525:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1525:1:6",
																		"type": "",
																		"value": "4"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1461:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "1461:58:6"
																},
																"nativeSrc": "1461:66:6",
																"nodeType": "YulFunctionCall",
																"src": "1461:66:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "1454:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1454:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1625:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "1625:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_abcea0b146a5d767912de24970d2ab9faa1ae8de2e77c56f53d919e46e4be3f4",
																	"nativeSrc": "1536:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "1536:88:6"
																},
																"nativeSrc": "1536:93:6",
																"nodeType": "YulFunctionCall",
																"src": "1536:93:6"
															},
															"nativeSrc": "1536:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "1536:93:6"
														},
														{
															"nativeSrc": "1638:19:6",
															"nodeType": "YulAssignment",
															"src": "1638:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1649:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "1649:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1654:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1654:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1645:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1645:3:6"
																},
																"nativeSrc": "1645:12:6",
																"nodeType": "YulFunctionCall",
																"src": "1645:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "1638:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1638:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_abcea0b146a5d767912de24970d2ab9faa1ae8de2e77c56f53d919e46e4be3f4_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "1298:365:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1432:3:6",
														"nodeType": "YulTypedName",
														"src": "1432:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "1440:3:6",
														"nodeType": "YulTypedName",
														"src": "1440:3:6",
														"type": ""
													}
												],
												"src": "1298:365:6"
											},
											{
												"body": {
													"nativeSrc": "1840:248:6",
													"nodeType": "YulBlock",
													"src": "1840:248:6",
													"statements": [
														{
															"nativeSrc": "1850:26:6",
															"nodeType": "YulAssignment",
															"src": "1850:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1862:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1862:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1873:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1873:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1858:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1858:3:6"
																},
																"nativeSrc": "1858:18:6",
																"nodeType": "YulFunctionCall",
																"src": "1858:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1850:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1850:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1897:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1897:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1908:1:6",
																				"nodeType": "YulLiteral",
																				"src": "1908:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1893:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1893:3:6"
																		},
																		"nativeSrc": "1893:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1893:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1916:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "1916:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1922:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1922:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1912:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1912:3:6"
																		},
																		"nativeSrc": "1912:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1912:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1886:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1886:6:6"
																},
																"nativeSrc": "1886:47:6",
																"nodeType": "YulFunctionCall",
																"src": "1886:47:6"
															},
															"nativeSrc": "1886:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "1886:47:6"
														},
														{
															"nativeSrc": "1942:139:6",
															"nodeType": "YulAssignment",
															"src": "1942:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "2076:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "2076:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_abcea0b146a5d767912de24970d2ab9faa1ae8de2e77c56f53d919e46e4be3f4_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1950:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "1950:124:6"
																},
																"nativeSrc": "1950:131:6",
																"nodeType": "YulFunctionCall",
																"src": "1950:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1942:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1942:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_abcea0b146a5d767912de24970d2ab9faa1ae8de2e77c56f53d919e46e4be3f4__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1669:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1820:9:6",
														"nodeType": "YulTypedName",
														"src": "1820:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1835:4:6",
														"nodeType": "YulTypedName",
														"src": "1835:4:6",
														"type": ""
													}
												],
												"src": "1669:419:6"
											},
											{
												"body": {
													"nativeSrc": "2200:48:6",
													"nodeType": "YulBlock",
													"src": "2200:48:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "2222:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2222:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2230:1:6",
																				"nodeType": "YulLiteral",
																				"src": "2230:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2218:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2218:3:6"
																		},
																		"nativeSrc": "2218:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2218:14:6"
																	},
																	{
																		"hexValue": "42616261",
																		"kind": "string",
																		"nativeSrc": "2234:6:6",
																		"nodeType": "YulLiteral",
																		"src": "2234:6:6",
																		"type": "",
																		"value": "Baba"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2211:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2211:6:6"
																},
																"nativeSrc": "2211:30:6",
																"nodeType": "YulFunctionCall",
																"src": "2211:30:6"
															},
															"nativeSrc": "2211:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "2211:30:6"
														}
													]
												},
												"name": "store_literal_in_memory_860eea7158d3e1f75d549e2d9b523582079ba1f73523ab92bd1d9cc4a280f619",
												"nativeSrc": "2094:154:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "2192:6:6",
														"nodeType": "YulTypedName",
														"src": "2192:6:6",
														"type": ""
													}
												],
												"src": "2094:154:6"
											},
											{
												"body": {
													"nativeSrc": "2400:219:6",
													"nodeType": "YulBlock",
													"src": "2400:219:6",
													"statements": [
														{
															"nativeSrc": "2410:73:6",
															"nodeType": "YulAssignment",
															"src": "2410:73:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2476:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2476:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2481:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2481:1:6",
																		"type": "",
																		"value": "4"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2417:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "2417:58:6"
																},
																"nativeSrc": "2417:66:6",
																"nodeType": "YulFunctionCall",
																"src": "2417:66:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2410:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2410:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2581:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2581:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_860eea7158d3e1f75d549e2d9b523582079ba1f73523ab92bd1d9cc4a280f619",
																	"nativeSrc": "2492:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "2492:88:6"
																},
																"nativeSrc": "2492:93:6",
																"nodeType": "YulFunctionCall",
																"src": "2492:93:6"
															},
															"nativeSrc": "2492:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "2492:93:6"
														},
														{
															"nativeSrc": "2594:19:6",
															"nodeType": "YulAssignment",
															"src": "2594:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2605:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2605:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2610:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2610:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2601:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2601:3:6"
																},
																"nativeSrc": "2601:12:6",
																"nodeType": "YulFunctionCall",
																"src": "2601:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2594:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2594:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_860eea7158d3e1f75d549e2d9b523582079ba1f73523ab92bd1d9cc4a280f619_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "2254:365:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2388:3:6",
														"nodeType": "YulTypedName",
														"src": "2388:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2396:3:6",
														"nodeType": "YulTypedName",
														"src": "2396:3:6",
														"type": ""
													}
												],
												"src": "2254:365:6"
											},
											{
												"body": {
													"nativeSrc": "2796:248:6",
													"nodeType": "YulBlock",
													"src": "2796:248:6",
													"statements": [
														{
															"nativeSrc": "2806:26:6",
															"nodeType": "YulAssignment",
															"src": "2806:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2818:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2818:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2829:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2829:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2814:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2814:3:6"
																},
																"nativeSrc": "2814:18:6",
																"nodeType": "YulFunctionCall",
																"src": "2814:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2806:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "2806:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2853:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2853:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2864:1:6",
																				"nodeType": "YulLiteral",
																				"src": "2864:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2849:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2849:3:6"
																		},
																		"nativeSrc": "2849:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2849:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "2872:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "2872:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2878:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2878:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2868:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2868:3:6"
																		},
																		"nativeSrc": "2868:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2868:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2842:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2842:6:6"
																},
																"nativeSrc": "2842:47:6",
																"nodeType": "YulFunctionCall",
																"src": "2842:47:6"
															},
															"nativeSrc": "2842:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "2842:47:6"
														},
														{
															"nativeSrc": "2898:139:6",
															"nodeType": "YulAssignment",
															"src": "2898:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "3032:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "3032:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_860eea7158d3e1f75d549e2d9b523582079ba1f73523ab92bd1d9cc4a280f619_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2906:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "2906:124:6"
																},
																"nativeSrc": "2906:131:6",
																"nodeType": "YulFunctionCall",
																"src": "2906:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2898:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "2898:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_860eea7158d3e1f75d549e2d9b523582079ba1f73523ab92bd1d9cc4a280f619__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2625:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2776:9:6",
														"nodeType": "YulTypedName",
														"src": "2776:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2791:4:6",
														"nodeType": "YulTypedName",
														"src": "2791:4:6",
														"type": ""
													}
												],
												"src": "2625:419:6"
											}
										]
									},
									"contents": "{\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_552f12338174ce6152a5d9af9e1035e4f5e814d72e8245416f12a96744f11caa(memPtr) {\n\n        mstore(add(memPtr, 0), \"Yeye\")\n\n    }\n\n    function abi_encode_t_stringliteral_552f12338174ce6152a5d9af9e1035e4f5e814d72e8245416f12a96744f11caa_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 4)\n        store_literal_in_memory_552f12338174ce6152a5d9af9e1035e4f5e814d72e8245416f12a96744f11caa(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_552f12338174ce6152a5d9af9e1035e4f5e814d72e8245416f12a96744f11caa__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_552f12338174ce6152a5d9af9e1035e4f5e814d72e8245416f12a96744f11caa_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_abcea0b146a5d767912de24970d2ab9faa1ae8de2e77c56f53d919e46e4be3f4(memPtr) {\n\n        mstore(add(memPtr, 0), \"Erzi\")\n\n    }\n\n    function abi_encode_t_stringliteral_abcea0b146a5d767912de24970d2ab9faa1ae8de2e77c56f53d919e46e4be3f4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 4)\n        store_literal_in_memory_abcea0b146a5d767912de24970d2ab9faa1ae8de2e77c56f53d919e46e4be3f4(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_abcea0b146a5d767912de24970d2ab9faa1ae8de2e77c56f53d919e46e4be3f4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_abcea0b146a5d767912de24970d2ab9faa1ae8de2e77c56f53d919e46e4be3f4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_860eea7158d3e1f75d549e2d9b523582079ba1f73523ab92bd1d9cc4a280f619(memPtr) {\n\n        mstore(add(memPtr, 0), \"Baba\")\n\n    }\n\n    function abi_encode_t_stringliteral_860eea7158d3e1f75d549e2d9b523582079ba1f73523ab92bd1d9cc4a280f619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 4)\n        store_literal_in_memory_860eea7158d3e1f75d549e2d9b523582079ba1f73523ab92bd1d9cc4a280f619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_860eea7158d3e1f75d549e2d9b523582079ba1f73523ab92bd1d9cc4a280f619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_860eea7158d3e1f75d549e2d9b523582079ba1f73523ab92bd1d9cc4a280f619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b5060043610610060575f3560e01c80630ca21e9c14610064578063370ea1421461006e578063572e47ae14610078578063a4ece52c14610082578063b92a50e01461008c578063fa030ef114610096575b5f5ffd5b61006c6100a0565b005b6100766100d7565b005b61008061010e565b005b61008a610118565b005b61009461014f565b005b61009e610159565b005b7fcf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab6040516100cd90610258565b60405180910390a1565b7fcf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab604051610104906102c0565b60405180910390a1565b610116610190565b565b7fcf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab604051610145906102c0565b60405180910390a1565b6101576101c7565b565b7fcf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab60405161018690610328565b60405180910390a1565b7fcf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab6040516101bd90610258565b60405180910390a1565b7fcf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab6040516101f490610328565b60405180910390a1565b5f82825260208201905092915050565b7f59657965000000000000000000000000000000000000000000000000000000005f82015250565b5f6102426004836101fe565b915061024d8261020e565b602082019050919050565b5f6020820190508181035f83015261026f81610236565b9050919050565b7f45727a69000000000000000000000000000000000000000000000000000000005f82015250565b5f6102aa6004836101fe565b91506102b582610276565b602082019050919050565b5f6020820190508181035f8301526102d78161029e565b9050919050565b7f42616261000000000000000000000000000000000000000000000000000000005f82015250565b5f6103126004836101fe565b915061031d826102de565b602082019050919050565b5f6020820190508181035f83015261033f81610306565b905091905056fea2646970667358221220e6e9ee98ded1c21a06881d130bee161186ba0c819029edd208e5bf8ec3d8d9ad64736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x60 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xCA21E9C EQ PUSH2 0x64 JUMPI DUP1 PUSH4 0x370EA142 EQ PUSH2 0x6E JUMPI DUP1 PUSH4 0x572E47AE EQ PUSH2 0x78 JUMPI DUP1 PUSH4 0xA4ECE52C EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0xB92A50E0 EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0xFA030EF1 EQ PUSH2 0x96 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x6C PUSH2 0xA0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x76 PUSH2 0xD7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x80 PUSH2 0x10E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x8A PUSH2 0x118 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x94 PUSH2 0x14F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x9E PUSH2 0x159 JUMP JUMPDEST STOP JUMPDEST PUSH32 0xCF34EF537AC33EE1AC626CA1587A0A7E8E51561E5514F8CB36AFA1C5102B3BAB PUSH1 0x40 MLOAD PUSH2 0xCD SWAP1 PUSH2 0x258 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH32 0xCF34EF537AC33EE1AC626CA1587A0A7E8E51561E5514F8CB36AFA1C5102B3BAB PUSH1 0x40 MLOAD PUSH2 0x104 SWAP1 PUSH2 0x2C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x116 PUSH2 0x190 JUMP JUMPDEST JUMP JUMPDEST PUSH32 0xCF34EF537AC33EE1AC626CA1587A0A7E8E51561E5514F8CB36AFA1C5102B3BAB PUSH1 0x40 MLOAD PUSH2 0x145 SWAP1 PUSH2 0x2C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x157 PUSH2 0x1C7 JUMP JUMPDEST JUMP JUMPDEST PUSH32 0xCF34EF537AC33EE1AC626CA1587A0A7E8E51561E5514F8CB36AFA1C5102B3BAB PUSH1 0x40 MLOAD PUSH2 0x186 SWAP1 PUSH2 0x328 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH32 0xCF34EF537AC33EE1AC626CA1587A0A7E8E51561E5514F8CB36AFA1C5102B3BAB PUSH1 0x40 MLOAD PUSH2 0x1BD SWAP1 PUSH2 0x258 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH32 0xCF34EF537AC33EE1AC626CA1587A0A7E8E51561E5514F8CB36AFA1C5102B3BAB PUSH1 0x40 MLOAD PUSH2 0x1F4 SWAP1 PUSH2 0x328 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5965796500000000000000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x242 PUSH1 0x4 DUP4 PUSH2 0x1FE JUMP JUMPDEST SWAP2 POP PUSH2 0x24D DUP3 PUSH2 0x20E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x26F DUP2 PUSH2 0x236 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45727A6900000000000000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2AA PUSH1 0x4 DUP4 PUSH2 0x1FE JUMP JUMPDEST SWAP2 POP PUSH2 0x2B5 DUP3 PUSH2 0x276 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2D7 DUP2 PUSH2 0x29E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4261626100000000000000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x312 PUSH1 0x4 DUP4 PUSH2 0x1FE JUMP JUMPDEST SWAP2 POP PUSH2 0x31D DUP3 PUSH2 0x2DE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x33F DUP2 PUSH2 0x306 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE6 0xE9 0xEE SWAP9 0xDE 0xD1 0xC2 BYTE MOD DUP9 SAR SGT SIGNEXTEND 0xEE AND GT DUP7 0xBA 0xC DUP2 SWAP1 0x29 0xED 0xD2 ADDMOD 0xE5 0xBF DUP15 0xC3 0xD8 0xD9 0xAD PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
							"sourceMap": "695:463:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;310:64;;;:::i;:::-;;794:84;;;:::i;:::-;;974:56;;;:::i;:::-;;884:84;;;:::i;:::-;;1036:120;;;:::i;:::-;;627:64;;;:::i;:::-;;310;356:11;;;;;;:::i;:::-;;;;;;;;310:64::o;794:84::-;860:11;;;;;;:::i;:::-;;;;;;;;794:84::o;974:56::-;1013:10;:8;:10::i;:::-;974:56::o;884:84::-;950:11;;;;;;:::i;:::-;;;;;;;;884:84::o;1036:120::-;1138:11;:9;:11::i;:::-;1036:120::o;627:64::-;673:11;;;;;;:::i;:::-;;;;;;;;627:64::o;241:63::-;286:11;;;;;;:::i;:::-;;;;;;;;241:63::o;549:72::-;603:11;;;;;;:::i;:::-;;;;;;;;549:72::o;7:169:6:-;91:11;125:6;120:3;113:19;165:4;160:3;156:14;141:29;;7:169;;;;:::o;182:154::-;322:6;318:1;310:6;306:14;299:30;182:154;:::o;342:365::-;484:3;505:66;569:1;564:3;505:66;:::i;:::-;498:73;;580:93;669:3;580:93;:::i;:::-;698:2;693:3;689:12;682:19;;342:365;;;:::o;713:419::-;879:4;917:2;906:9;902:18;894:26;;966:9;960:4;956:20;952:1;941:9;937:17;930:47;994:131;1120:4;994:131;:::i;:::-;986:139;;713:419;;;:::o;1138:154::-;1278:6;1274:1;1266:6;1262:14;1255:30;1138:154;:::o;1298:365::-;1440:3;1461:66;1525:1;1520:3;1461:66;:::i;:::-;1454:73;;1536:93;1625:3;1536:93;:::i;:::-;1654:2;1649:3;1645:12;1638:19;;1298:365;;;:::o;1669:419::-;1835:4;1873:2;1862:9;1858:18;1850:26;;1922:9;1916:4;1912:20;1908:1;1897:9;1893:17;1886:47;1950:131;2076:4;1950:131;:::i;:::-;1942:139;;1669:419;;;:::o;2094:154::-;2234:6;2230:1;2222:6;2218:14;2211:30;2094:154;:::o;2254:365::-;2396:3;2417:66;2481:1;2476:3;2417:66;:::i;:::-;2410:73;;2492:93;2581:3;2492:93;:::i;:::-;2610:2;2605:3;2601:12;2594:19;;2254:365;;;:::o;2625:419::-;2791:4;2829:2;2818:9;2814:18;2806:26;;2878:9;2872:4;2868:20;2864:1;2853:9;2849:17;2842:47;2906:131;3032:4;2906:131;:::i;:::-;2898:139;;2625:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "178400",
								"executionCost": "218",
								"totalCost": "178618"
							},
							"external": {
								"baba()": "2028",
								"callParent()": "1986",
								"callParentSuper()": "2030",
								"hip()": "1940",
								"pop()": "1984",
								"yeye()": "1918"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 695,
									"end": 1158,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 695,
									"end": 1158,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 695,
									"end": 1158,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 695,
									"end": 1158,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 695,
									"end": 1158,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 695,
									"end": 1158,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 695,
									"end": 1158,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 695,
									"end": 1158,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 695,
									"end": 1158,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 695,
									"end": 1158,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 695,
									"end": 1158,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 695,
									"end": 1158,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 695,
									"end": 1158,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 695,
									"end": 1158,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 695,
									"end": 1158,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 695,
									"end": 1158,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 695,
									"end": 1158,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 695,
									"end": 1158,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 695,
									"end": 1158,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 695,
									"end": 1158,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 695,
									"end": 1158,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e6e9ee98ded1c21a06881d130bee161186ba0c819029edd208e5bf8ec3d8d9ad64736f6c634300081c0033",
									".code": [
										{
											"begin": 695,
											"end": 1158,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 695,
											"end": 1158,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 695,
											"end": 1158,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 695,
											"end": 1158,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 695,
											"end": 1158,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 695,
											"end": 1158,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 695,
											"end": 1158,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 695,
											"end": 1158,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 695,
											"end": 1158,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 695,
											"end": 1158,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 695,
											"end": 1158,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 695,
											"end": 1158,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 695,
											"end": 1158,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 695,
											"end": 1158,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 695,
											"end": 1158,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 695,
											"end": 1158,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 695,
											"end": 1158,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 695,
											"end": 1158,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 695,
											"end": 1158,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 695,
											"end": 1158,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 695,
											"end": 1158,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 695,
											"end": 1158,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 695,
											"end": 1158,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 695,
											"end": 1158,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 695,
											"end": 1158,
											"name": "PUSH",
											"source": 2,
											"value": "CA21E9C"
										},
										{
											"begin": 695,
											"end": 1158,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 695,
											"end": 1158,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 695,
											"end": 1158,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 695,
											"end": 1158,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 695,
											"end": 1158,
											"name": "PUSH",
											"source": 2,
											"value": "370EA142"
										},
										{
											"begin": 695,
											"end": 1158,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 695,
											"end": 1158,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 695,
											"end": 1158,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 695,
											"end": 1158,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 695,
											"end": 1158,
											"name": "PUSH",
											"source": 2,
											"value": "572E47AE"
										},
										{
											"begin": 695,
											"end": 1158,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 695,
											"end": 1158,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 695,
											"end": 1158,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 695,
											"end": 1158,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 695,
											"end": 1158,
											"name": "PUSH",
											"source": 2,
											"value": "A4ECE52C"
										},
										{
											"begin": 695,
											"end": 1158,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 695,
											"end": 1158,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 695,
											"end": 1158,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 695,
											"end": 1158,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 695,
											"end": 1158,
											"name": "PUSH",
											"source": 2,
											"value": "B92A50E0"
										},
										{
											"begin": 695,
											"end": 1158,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 695,
											"end": 1158,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 695,
											"end": 1158,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 695,
											"end": 1158,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 695,
											"end": 1158,
											"name": "PUSH",
											"source": 2,
											"value": "FA030EF1"
										},
										{
											"begin": 695,
											"end": 1158,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 695,
											"end": 1158,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 695,
											"end": 1158,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 695,
											"end": 1158,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 695,
											"end": 1158,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 695,
											"end": 1158,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 695,
											"end": 1158,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 695,
											"end": 1158,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 310,
											"end": 374,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 310,
											"end": 374,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 310,
											"end": 374,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 310,
											"end": 374,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 310,
											"end": 374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 310,
											"end": 374,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 310,
											"end": 374,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 310,
											"end": 374,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 794,
											"end": 878,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 794,
											"end": 878,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 794,
											"end": 878,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 794,
											"end": 878,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 794,
											"end": 878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 794,
											"end": 878,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 794,
											"end": 878,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 794,
											"end": 878,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 974,
											"end": 1030,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 974,
											"end": 1030,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 974,
											"end": 1030,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 974,
											"end": 1030,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 974,
											"end": 1030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 974,
											"end": 1030,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 974,
											"end": 1030,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 974,
											"end": 1030,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 884,
											"end": 968,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 884,
											"end": 968,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 884,
											"end": 968,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 884,
											"end": 968,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 884,
											"end": 968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 884,
											"end": 968,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 884,
											"end": 968,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 884,
											"end": 968,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 1036,
											"end": 1156,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 1036,
											"end": 1156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1036,
											"end": 1156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 1036,
											"end": 1156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 1036,
											"end": 1156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1036,
											"end": 1156,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 1036,
											"end": 1156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1036,
											"end": 1156,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 627,
											"end": 691,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 627,
											"end": 691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 627,
											"end": 691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 627,
											"end": 691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 627,
											"end": 691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 627,
											"end": 691,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 627,
											"end": 691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 627,
											"end": 691,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 310,
											"end": 374,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 310,
											"end": 374,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 356,
											"end": 367,
											"name": "PUSH",
											"source": 2,
											"value": "CF34EF537AC33EE1AC626CA1587A0A7E8E51561E5514F8CB36AFA1C5102B3BAB"
										},
										{
											"begin": 356,
											"end": 367,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 356,
											"end": 367,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 356,
											"end": 367,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 356,
											"end": 367,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 356,
											"end": 367,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 356,
											"end": 367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 356,
											"end": 367,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 356,
											"end": 367,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 356,
											"end": 367,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 356,
											"end": 367,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 356,
											"end": 367,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 356,
											"end": 367,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 356,
											"end": 367,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 356,
											"end": 367,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 356,
											"end": 367,
											"name": "LOG1",
											"source": 2
										},
										{
											"begin": 310,
											"end": 374,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 794,
											"end": 878,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 794,
											"end": 878,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 860,
											"end": 871,
											"name": "PUSH",
											"source": 2,
											"value": "CF34EF537AC33EE1AC626CA1587A0A7E8E51561E5514F8CB36AFA1C5102B3BAB"
										},
										{
											"begin": 860,
											"end": 871,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 860,
											"end": 871,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 860,
											"end": 871,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 860,
											"end": 871,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 860,
											"end": 871,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 860,
											"end": 871,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 860,
											"end": 871,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 860,
											"end": 871,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 860,
											"end": 871,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 860,
											"end": 871,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 860,
											"end": 871,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 860,
											"end": 871,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 860,
											"end": 871,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 860,
											"end": 871,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 860,
											"end": 871,
											"name": "LOG1",
											"source": 2
										},
										{
											"begin": 794,
											"end": 878,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 974,
											"end": 1030,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 974,
											"end": 1030,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1013,
											"end": 1023,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1013,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 1013,
											"end": 1023,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1013,
											"end": 1023,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1013,
											"end": 1023,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 974,
											"end": 1030,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 884,
											"end": 968,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 884,
											"end": 968,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 950,
											"end": 961,
											"name": "PUSH",
											"source": 2,
											"value": "CF34EF537AC33EE1AC626CA1587A0A7E8E51561E5514F8CB36AFA1C5102B3BAB"
										},
										{
											"begin": 950,
											"end": 961,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 950,
											"end": 961,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 950,
											"end": 961,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 950,
											"end": 961,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 950,
											"end": 961,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 950,
											"end": 961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 950,
											"end": 961,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 950,
											"end": 961,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 950,
											"end": 961,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 950,
											"end": 961,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 950,
											"end": 961,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 950,
											"end": 961,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 950,
											"end": 961,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 950,
											"end": 961,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 950,
											"end": 961,
											"name": "LOG1",
											"source": 2
										},
										{
											"begin": 884,
											"end": 968,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1036,
											"end": 1156,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 1036,
											"end": 1156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1138,
											"end": 1149,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 1138,
											"end": 1147,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 1138,
											"end": 1149,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1138,
											"end": 1149,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 1138,
											"end": 1149,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1036,
											"end": 1156,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 627,
											"end": 691,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 627,
											"end": 691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 673,
											"end": 684,
											"name": "PUSH",
											"source": 2,
											"value": "CF34EF537AC33EE1AC626CA1587A0A7E8E51561E5514F8CB36AFA1C5102B3BAB"
										},
										{
											"begin": 673,
											"end": 684,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 673,
											"end": 684,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 673,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 673,
											"end": 684,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 673,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 673,
											"end": 684,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 673,
											"end": 684,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 673,
											"end": 684,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 673,
											"end": 684,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 673,
											"end": 684,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 673,
											"end": 684,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 673,
											"end": 684,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 673,
											"end": 684,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 673,
											"end": 684,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 673,
											"end": 684,
											"name": "LOG1",
											"source": 2
										},
										{
											"begin": 627,
											"end": 691,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 241,
											"end": 304,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 241,
											"end": 304,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 286,
											"end": 297,
											"name": "PUSH",
											"source": 2,
											"value": "CF34EF537AC33EE1AC626CA1587A0A7E8E51561E5514F8CB36AFA1C5102B3BAB"
										},
										{
											"begin": 286,
											"end": 297,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 286,
											"end": 297,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 286,
											"end": 297,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 286,
											"end": 297,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 286,
											"end": 297,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 286,
											"end": 297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 286,
											"end": 297,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 286,
											"end": 297,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 286,
											"end": 297,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 286,
											"end": 297,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 286,
											"end": 297,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 286,
											"end": 297,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 286,
											"end": 297,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 286,
											"end": 297,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 286,
											"end": 297,
											"name": "LOG1",
											"source": 2
										},
										{
											"begin": 241,
											"end": 304,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 549,
											"end": 621,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 549,
											"end": 621,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 603,
											"end": 614,
											"name": "PUSH",
											"source": 2,
											"value": "CF34EF537AC33EE1AC626CA1587A0A7E8E51561E5514F8CB36AFA1C5102B3BAB"
										},
										{
											"begin": 603,
											"end": 614,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 603,
											"end": 614,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 603,
											"end": 614,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 603,
											"end": 614,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 603,
											"end": 614,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 603,
											"end": 614,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 603,
											"end": 614,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 603,
											"end": 614,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 603,
											"end": 614,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 603,
											"end": 614,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 603,
											"end": 614,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 603,
											"end": 614,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 603,
											"end": 614,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 603,
											"end": 614,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 603,
											"end": 614,
											"name": "LOG1",
											"source": 2
										},
										{
											"begin": 549,
											"end": 621,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 176,
											"name": "tag",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 7,
											"end": 176,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 91,
											"end": 102,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 125,
											"end": 131,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 120,
											"end": 123,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 113,
											"end": 132,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 165,
											"end": 169,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 160,
											"end": 163,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 156,
											"end": 170,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 141,
											"end": 170,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 141,
											"end": 170,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7,
											"end": 176,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7,
											"end": 176,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7,
											"end": 176,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7,
											"end": 176,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7,
											"end": 176,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 182,
											"end": 336,
											"name": "tag",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 182,
											"end": 336,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 322,
											"end": 328,
											"name": "PUSH",
											"source": 6,
											"value": "5965796500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 318,
											"end": 319,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 310,
											"end": 316,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 306,
											"end": 320,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 299,
											"end": 329,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 182,
											"end": 336,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 182,
											"end": 336,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 342,
											"end": 707,
											"name": "tag",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 342,
											"end": 707,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 484,
											"end": 487,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 505,
											"end": 571,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 569,
											"end": 570,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 564,
											"end": 567,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 505,
											"end": 571,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 505,
											"end": 571,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 505,
											"end": 571,
											"name": "tag",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 505,
											"end": 571,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 498,
											"end": 571,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 498,
											"end": 571,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 580,
											"end": 673,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 669,
											"end": 672,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 580,
											"end": 673,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 580,
											"end": 673,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 580,
											"end": 673,
											"name": "tag",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 580,
											"end": 673,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 698,
											"end": 700,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 693,
											"end": 696,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 689,
											"end": 701,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 682,
											"end": 701,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 682,
											"end": 701,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 342,
											"end": 707,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 342,
											"end": 707,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 342,
											"end": 707,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 342,
											"end": 707,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 713,
											"end": 1132,
											"name": "tag",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 713,
											"end": 1132,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 879,
											"end": 883,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 917,
											"end": 919,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 906,
											"end": 915,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 902,
											"end": 920,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 894,
											"end": 920,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 894,
											"end": 920,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 966,
											"end": 975,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 960,
											"end": 964,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 956,
											"end": 976,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 952,
											"end": 953,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 941,
											"end": 950,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 937,
											"end": 954,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 930,
											"end": 977,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 994,
											"end": 1125,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 1120,
											"end": 1124,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 994,
											"end": 1125,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 994,
											"end": 1125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 994,
											"end": 1125,
											"name": "tag",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 994,
											"end": 1125,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 986,
											"end": 1125,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 986,
											"end": 1125,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 713,
											"end": 1132,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 713,
											"end": 1132,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 713,
											"end": 1132,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 713,
											"end": 1132,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1138,
											"end": 1292,
											"name": "tag",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 1138,
											"end": 1292,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1278,
											"end": 1284,
											"name": "PUSH",
											"source": 6,
											"value": "45727A6900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1274,
											"end": 1275,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1266,
											"end": 1272,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1262,
											"end": 1276,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1255,
											"end": 1285,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1138,
											"end": 1292,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1138,
											"end": 1292,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1298,
											"end": 1663,
											"name": "tag",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 1298,
											"end": 1663,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1440,
											"end": 1443,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1461,
											"end": 1527,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 1525,
											"end": 1526,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1520,
											"end": 1523,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1461,
											"end": 1527,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 1461,
											"end": 1527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1461,
											"end": 1527,
											"name": "tag",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 1461,
											"end": 1527,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1454,
											"end": 1527,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1454,
											"end": 1527,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1536,
											"end": 1629,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 1625,
											"end": 1628,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1536,
											"end": 1629,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 1536,
											"end": 1629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1536,
											"end": 1629,
											"name": "tag",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 1536,
											"end": 1629,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1654,
											"end": 1656,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1649,
											"end": 1652,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1645,
											"end": 1657,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1638,
											"end": 1657,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1638,
											"end": 1657,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1298,
											"end": 1663,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1298,
											"end": 1663,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1298,
											"end": 1663,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1298,
											"end": 1663,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1669,
											"end": 2088,
											"name": "tag",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 1669,
											"end": 2088,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1835,
											"end": 1839,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1873,
											"end": 1875,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1862,
											"end": 1871,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1858,
											"end": 1876,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1850,
											"end": 1876,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1850,
											"end": 1876,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1922,
											"end": 1931,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1916,
											"end": 1920,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1912,
											"end": 1932,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1908,
											"end": 1909,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1897,
											"end": 1906,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1893,
											"end": 1910,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1886,
											"end": 1933,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1950,
											"end": 2081,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 2076,
											"end": 2080,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1950,
											"end": 2081,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 1950,
											"end": 2081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1950,
											"end": 2081,
											"name": "tag",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 1950,
											"end": 2081,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1942,
											"end": 2081,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1942,
											"end": 2081,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1669,
											"end": 2088,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1669,
											"end": 2088,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1669,
											"end": 2088,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1669,
											"end": 2088,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2094,
											"end": 2248,
											"name": "tag",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 2094,
											"end": 2248,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2234,
											"end": 2240,
											"name": "PUSH",
											"source": 6,
											"value": "4261626100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2230,
											"end": 2231,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2222,
											"end": 2228,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2218,
											"end": 2232,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2211,
											"end": 2241,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2094,
											"end": 2248,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2094,
											"end": 2248,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2254,
											"end": 2619,
											"name": "tag",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 2254,
											"end": 2619,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2396,
											"end": 2399,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2417,
											"end": 2483,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 2481,
											"end": 2482,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2476,
											"end": 2479,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2417,
											"end": 2483,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 2417,
											"end": 2483,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2417,
											"end": 2483,
											"name": "tag",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 2417,
											"end": 2483,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2410,
											"end": 2483,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2410,
											"end": 2483,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2492,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 2581,
											"end": 2584,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2492,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 2492,
											"end": 2585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2492,
											"end": 2585,
											"name": "tag",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 2492,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2610,
											"end": 2612,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2605,
											"end": 2608,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2601,
											"end": 2613,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2594,
											"end": 2613,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2594,
											"end": 2613,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2254,
											"end": 2619,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2254,
											"end": 2619,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2254,
											"end": 2619,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2254,
											"end": 2619,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2625,
											"end": 3044,
											"name": "tag",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 2625,
											"end": 3044,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2791,
											"end": 2795,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2829,
											"end": 2831,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2818,
											"end": 2827,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2814,
											"end": 2832,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2806,
											"end": 2832,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2806,
											"end": 2832,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2878,
											"end": 2887,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2872,
											"end": 2876,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2868,
											"end": 2888,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2864,
											"end": 2865,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2853,
											"end": 2862,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2849,
											"end": 2866,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2842,
											"end": 2889,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2906,
											"end": 3037,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 3032,
											"end": 3036,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2906,
											"end": 3037,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 2906,
											"end": 3037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2906,
											"end": 3037,
											"name": "tag",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 2906,
											"end": 3037,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2898,
											"end": 3037,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2898,
											"end": 3037,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2625,
											"end": 3044,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2625,
											"end": 3044,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2625,
											"end": 3044,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2625,
											"end": 3044,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/study/InheritanceTest.sol",
								"contracts/study2/Import.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Errors.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"baba()": "fa030ef1",
							"callParent()": "572e47ae",
							"callParentSuper()": "b92a50e0",
							"hip()": "370ea142",
							"pop()": "a4ece52c",
							"yeye()": "0ca21e9c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"msg\",\"type\":\"string\"}],\"name\":\"Log\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"baba\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"callParent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"callParentSuper\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"hip\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pop\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"yeye\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/study/InheritanceTest.sol\":\"Erzi\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/study/InheritanceTest.sol\":{\"keccak256\":\"0x3a8c032eb89da05730a7afdfb70e36c31d24da7d52416ee3e1a0ecb1d15562bf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d50e5eb8408b348d690ecaf1ee1eaaa58d7880e056febe9ccc36991865dbbcb9\",\"dweb:/ipfs/QmbbnnhFkSqTtCBfyoNqk2RhWQE9FhwSecbv5WxXa3nioF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Identifier": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_dividend",
									"type": "uint256"
								}
							],
							"name": "getExactDividedBy2And3",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_dividend",
									"type": "uint256"
								}
							],
							"name": "getExactDividedBy2And3WithoutModifier",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/study/InheritanceTest.sol\":1297:2067  contract Identifier is Base1 {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/study/InheritanceTest.sol\":1297:2067  contract Identifier is Base1 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x4534a438\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xd2406c78\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"contracts/study/InheritanceTest.sol\":1430:1659  function getExactDividedBy2And3(uint256 _dividend)... */\n    tag_3:\n      tag_5\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_6\n      swap2\n      swap1\n      tag_7\n      jump\t// in\n    tag_6:\n      tag_8\n      jump\t// in\n    tag_5:\n      mload(0x40)\n      tag_9\n      swap3\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/study/InheritanceTest.sol\":1716:1961  function getExactDividedBy2And3WithoutModifier(uint256 _dividend)... */\n    tag_4:\n      tag_11\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_12\n      swap2\n      swap1\n      tag_7\n      jump\t// in\n    tag_12:\n      tag_13\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      tag_14\n      swap3\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/study/InheritanceTest.sol\":1430:1659  function getExactDividedBy2And3(uint256 _dividend)... */\n    tag_8:\n        /* \"contracts/study/InheritanceTest.sol\":1565:1572  uint256 */\n      0x00\n        /* \"contracts/study/InheritanceTest.sol\":1574:1581  uint256 */\n      0x00\n        /* \"contracts/study/InheritanceTest.sol\":1537:1546  _dividend */\n      dup3\n        /* \"contracts/study/InheritanceTest.sol\":1604:1652  getExactDividedBy2And3WithoutModifier(_dividend) */\n      tag_17\n        /* \"contracts/study/InheritanceTest.sol\":1642:1651  _dividend */\n      dup5\n        /* \"contracts/study/InheritanceTest.sol\":1604:1641  getExactDividedBy2And3WithoutModifier */\n      tag_13\n        /* \"contracts/study/InheritanceTest.sol\":1604:1652  getExactDividedBy2And3WithoutModifier(_dividend) */\n      jump\t// in\n    tag_17:\n        /* \"contracts/study/InheritanceTest.sol\":1597:1652  return getExactDividedBy2And3WithoutModifier(_dividend) */\n      swap3\n      pop\n      swap3\n      pop\n        /* \"contracts/study/InheritanceTest.sol\":2056:2057  0 */\n      0x00\n        /* \"contracts/study/InheritanceTest.sol\":2051:2052  2 */\n      0x02\n        /* \"contracts/study/InheritanceTest.sol\":2046:2048  _a */\n      dup3\n        /* \"contracts/study/InheritanceTest.sol\":2046:2052  _a % 2 */\n      tag_18\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n        /* \"contracts/study/InheritanceTest.sol\":2046:2057  _a % 2 == 0 */\n      eq\n        /* \"contracts/study/InheritanceTest.sol\":2038:2058  require(_a % 2 == 0) */\n      tag_20\n      jumpi\n      revert(0x00, 0x00)\n    tag_20:\n        /* \"contracts/study/InheritanceTest.sol\":1430:1659  function getExactDividedBy2And3(uint256 _dividend)... */\n      pop\n      swap2\n      pop\n      swap2\n      jump\t// out\n        /* \"contracts/study/InheritanceTest.sol\":1716:1961  function getExactDividedBy2And3WithoutModifier(uint256 _dividend)... */\n    tag_13:\n        /* \"contracts/study/InheritanceTest.sol\":1827:1834  uint256 */\n      0x00\n        /* \"contracts/study/InheritanceTest.sol\":1836:1843  uint256 */\n      0x00\n        /* \"contracts/study/InheritanceTest.sol\":1859:1871  uint256 div2 */\n      0x00\n        /* \"contracts/study/InheritanceTest.sol\":1886:1887  2 */\n      0x02\n        /* \"contracts/study/InheritanceTest.sol\":1874:1883  _dividend */\n      dup5\n        /* \"contracts/study/InheritanceTest.sol\":1874:1887  _dividend / 2 */\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n        /* \"contracts/study/InheritanceTest.sol\":1859:1887  uint256 div2 = _dividend / 2 */\n      swap1\n      pop\n        /* \"contracts/study/InheritanceTest.sol\":1897:1909  uint256 div3 */\n      0x00\n        /* \"contracts/study/InheritanceTest.sol\":1924:1925  3 */\n      0x03\n        /* \"contracts/study/InheritanceTest.sol\":1912:1921  _dividend */\n      dup6\n        /* \"contracts/study/InheritanceTest.sol\":1912:1925  _dividend / 3 */\n      tag_24\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_24:\n        /* \"contracts/study/InheritanceTest.sol\":1897:1925  uint256 div3 = _dividend / 3 */\n      swap1\n      pop\n        /* \"contracts/study/InheritanceTest.sol\":1943:1947  div2 */\n      dup2\n        /* \"contracts/study/InheritanceTest.sol\":1949:1953  div3 */\n      dup2\n        /* \"contracts/study/InheritanceTest.sol\":1935:1954  return (div2, div3) */\n      swap4\n      pop\n      swap4\n      pop\n      pop\n      pop\n        /* \"contracts/study/InheritanceTest.sol\":1716:1961  function getExactDividedBy2And3WithoutModifier(uint256 _dividend)... */\n      swap2\n      pop\n      swap2\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_26:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      0x00\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_28:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_29:\n        /* \"#utility.yul\":490:514   */\n      tag_40\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_28\n      jump\t// in\n    tag_40:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_41\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      0x00\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_41:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:684   */\n    tag_30:\n        /* \"#utility.yul\":591:596   */\n      0x00\n        /* \"#utility.yul\":629:635   */\n      dup2\n        /* \"#utility.yul\":616:636   */\n      calldataload\n        /* \"#utility.yul\":607:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:678   */\n      tag_43\n        /* \"#utility.yul\":672:677   */\n      dup2\n        /* \"#utility.yul\":645:678   */\n      tag_29\n      jump\t// in\n    tag_43:\n        /* \"#utility.yul\":545:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:1019   */\n    tag_7:\n        /* \"#utility.yul\":749:755   */\n      0x00\n        /* \"#utility.yul\":798:800   */\n      0x20\n        /* \"#utility.yul\":786:795   */\n      dup3\n        /* \"#utility.yul\":777:784   */\n      dup5\n        /* \"#utility.yul\":773:796   */\n      sub\n        /* \"#utility.yul\":769:801   */\n      slt\n        /* \"#utility.yul\":766:885   */\n      iszero\n      tag_45\n      jumpi\n        /* \"#utility.yul\":804:883   */\n      tag_46\n      tag_26\n      jump\t// in\n    tag_46:\n        /* \"#utility.yul\":766:885   */\n    tag_45:\n        /* \"#utility.yul\":924:925   */\n      0x00\n        /* \"#utility.yul\":949:1002   */\n      tag_47\n        /* \"#utility.yul\":994:1001   */\n      dup5\n        /* \"#utility.yul\":985:991   */\n      dup3\n        /* \"#utility.yul\":974:983   */\n      dup6\n        /* \"#utility.yul\":970:992   */\n      add\n        /* \"#utility.yul\":949:1002   */\n      tag_30\n      jump\t// in\n    tag_47:\n        /* \"#utility.yul\":939:1002   */\n      swap2\n      pop\n        /* \"#utility.yul\":895:1012   */\n      pop\n        /* \"#utility.yul\":690:1019   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1025:1143   */\n    tag_31:\n        /* \"#utility.yul\":1112:1136   */\n      tag_49\n        /* \"#utility.yul\":1130:1135   */\n      dup2\n        /* \"#utility.yul\":1112:1136   */\n      tag_28\n      jump\t// in\n    tag_49:\n        /* \"#utility.yul\":1107:1110   */\n      dup3\n        /* \"#utility.yul\":1100:1137   */\n      mstore\n        /* \"#utility.yul\":1025:1143   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1149:1481   */\n    tag_10:\n        /* \"#utility.yul\":1270:1274   */\n      0x00\n        /* \"#utility.yul\":1308:1310   */\n      0x40\n        /* \"#utility.yul\":1297:1306   */\n      dup3\n        /* \"#utility.yul\":1293:1311   */\n      add\n        /* \"#utility.yul\":1285:1311   */\n      swap1\n      pop\n        /* \"#utility.yul\":1321:1392   */\n      tag_51\n        /* \"#utility.yul\":1389:1390   */\n      0x00\n        /* \"#utility.yul\":1378:1387   */\n      dup4\n        /* \"#utility.yul\":1374:1391   */\n      add\n        /* \"#utility.yul\":1365:1371   */\n      dup6\n        /* \"#utility.yul\":1321:1392   */\n      tag_31\n      jump\t// in\n    tag_51:\n        /* \"#utility.yul\":1402:1474   */\n      tag_52\n        /* \"#utility.yul\":1470:1472   */\n      0x20\n        /* \"#utility.yul\":1459:1468   */\n      dup4\n        /* \"#utility.yul\":1455:1473   */\n      add\n        /* \"#utility.yul\":1446:1452   */\n      dup5\n        /* \"#utility.yul\":1402:1474   */\n      tag_31\n      jump\t// in\n    tag_52:\n        /* \"#utility.yul\":1149:1481   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1487:1667   */\n    tag_32:\n        /* \"#utility.yul\":1535:1612   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":1532:1533   */\n      0x00\n        /* \"#utility.yul\":1525:1613   */\n      mstore\n        /* \"#utility.yul\":1632:1636   */\n      0x12\n        /* \"#utility.yul\":1629:1630   */\n      0x04\n        /* \"#utility.yul\":1622:1637   */\n      mstore\n        /* \"#utility.yul\":1656:1660   */\n      0x24\n        /* \"#utility.yul\":1653:1654   */\n      0x00\n        /* \"#utility.yul\":1646:1661   */\n      revert\n        /* \"#utility.yul\":1673:1849   */\n    tag_19:\n        /* \"#utility.yul\":1705:1706   */\n      0x00\n        /* \"#utility.yul\":1722:1742   */\n      tag_55\n        /* \"#utility.yul\":1740:1741   */\n      dup3\n        /* \"#utility.yul\":1722:1742   */\n      tag_28\n      jump\t// in\n    tag_55:\n        /* \"#utility.yul\":1717:1742   */\n      swap2\n      pop\n        /* \"#utility.yul\":1756:1776   */\n      tag_56\n        /* \"#utility.yul\":1774:1775   */\n      dup4\n        /* \"#utility.yul\":1756:1776   */\n      tag_28\n      jump\t// in\n    tag_56:\n        /* \"#utility.yul\":1751:1776   */\n      swap3\n      pop\n        /* \"#utility.yul\":1795:1796   */\n      dup3\n        /* \"#utility.yul\":1785:1820   */\n      tag_57\n      jumpi\n        /* \"#utility.yul\":1800:1818   */\n      tag_58\n      tag_32\n      jump\t// in\n    tag_58:\n        /* \"#utility.yul\":1785:1820   */\n    tag_57:\n        /* \"#utility.yul\":1841:1842   */\n      dup3\n        /* \"#utility.yul\":1838:1839   */\n      dup3\n        /* \"#utility.yul\":1834:1843   */\n      mod\n        /* \"#utility.yul\":1829:1843   */\n      swap1\n      pop\n        /* \"#utility.yul\":1673:1849   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2041:2226   */\n    tag_23:\n        /* \"#utility.yul\":2081:2082   */\n      0x00\n        /* \"#utility.yul\":2098:2118   */\n      tag_61\n        /* \"#utility.yul\":2116:2117   */\n      dup3\n        /* \"#utility.yul\":2098:2118   */\n      tag_28\n      jump\t// in\n    tag_61:\n        /* \"#utility.yul\":2093:2118   */\n      swap2\n      pop\n        /* \"#utility.yul\":2132:2152   */\n      tag_62\n        /* \"#utility.yul\":2150:2151   */\n      dup4\n        /* \"#utility.yul\":2132:2152   */\n      tag_28\n      jump\t// in\n    tag_62:\n        /* \"#utility.yul\":2127:2152   */\n      swap3\n      pop\n        /* \"#utility.yul\":2171:2172   */\n      dup3\n        /* \"#utility.yul\":2161:2196   */\n      tag_63\n      jumpi\n        /* \"#utility.yul\":2176:2194   */\n      tag_64\n      tag_32\n      jump\t// in\n    tag_64:\n        /* \"#utility.yul\":2161:2196   */\n    tag_63:\n        /* \"#utility.yul\":2218:2219   */\n      dup3\n        /* \"#utility.yul\":2215:2216   */\n      dup3\n        /* \"#utility.yul\":2211:2220   */\n      div\n        /* \"#utility.yul\":2206:2220   */\n      swap1\n      pop\n        /* \"#utility.yul\":2041:2226   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122071973e2b3c4b49500fe862cef3e46ac06e1bd78b54555ab8fd18354b1698db8b64736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f5ffd5b506102518061001c5f395ff3fe608060405234801561000f575f5ffd5b5060043610610034575f3560e01c80634534a43814610038578063d2406c7814610069575b5f5ffd5b610052600480360381019061004d919061012d565b61009a565b604051610060929190610167565b60405180910390f35b610083600480360381019061007e919061012d565b6100c7565b604051610091929190610167565b60405180910390f35b5f5f826100a6846100c7565b925092505f6002826100b891906101bb565b146100c1575f5ffd5b50915091565b5f5f5f6002846100d791906101eb565b90505f6003856100e791906101eb565b90508181935093505050915091565b5f5ffd5b5f819050919050565b61010c816100fa565b8114610116575f5ffd5b50565b5f8135905061012781610103565b92915050565b5f60208284031215610142576101416100f6565b5b5f61014f84828501610119565b91505092915050565b610161816100fa565b82525050565b5f60408201905061017a5f830185610158565b6101876020830184610158565b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f6101c5826100fa565b91506101d0836100fa565b9250826101e0576101df61018e565b5b828206905092915050565b5f6101f5826100fa565b9150610200836100fa565b9250826102105761020f61018e565b5b82820490509291505056fea264697066735822122071973e2b3c4b49500fe862cef3e46ac06e1bd78b54555ab8fd18354b1698db8b64736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x251 DUP1 PUSH2 0x1C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x34 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4534A438 EQ PUSH2 0x38 JUMPI DUP1 PUSH4 0xD2406C78 EQ PUSH2 0x69 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x52 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4D SWAP2 SWAP1 PUSH2 0x12D JUMP JUMPDEST PUSH2 0x9A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x60 SWAP3 SWAP2 SWAP1 PUSH2 0x167 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x83 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7E SWAP2 SWAP1 PUSH2 0x12D JUMP JUMPDEST PUSH2 0xC7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x91 SWAP3 SWAP2 SWAP1 PUSH2 0x167 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH0 DUP3 PUSH2 0xA6 DUP5 PUSH2 0xC7 JUMP JUMPDEST SWAP3 POP SWAP3 POP PUSH0 PUSH1 0x2 DUP3 PUSH2 0xB8 SWAP2 SWAP1 PUSH2 0x1BB JUMP JUMPDEST EQ PUSH2 0xC1 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x2 DUP5 PUSH2 0xD7 SWAP2 SWAP1 PUSH2 0x1EB JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x3 DUP6 PUSH2 0xE7 SWAP2 SWAP1 PUSH2 0x1EB JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SWAP4 POP SWAP4 POP POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10C DUP2 PUSH2 0xFA JUMP JUMPDEST DUP2 EQ PUSH2 0x116 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x127 DUP2 PUSH2 0x103 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x142 JUMPI PUSH2 0x141 PUSH2 0xF6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x14F DUP5 DUP3 DUP6 ADD PUSH2 0x119 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x161 DUP2 PUSH2 0xFA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x17A PUSH0 DUP4 ADD DUP6 PUSH2 0x158 JUMP JUMPDEST PUSH2 0x187 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x158 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1C5 DUP3 PUSH2 0xFA JUMP JUMPDEST SWAP2 POP PUSH2 0x1D0 DUP4 PUSH2 0xFA JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1E0 JUMPI PUSH2 0x1DF PUSH2 0x18E JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1F5 DUP3 PUSH2 0xFA JUMP JUMPDEST SWAP2 POP PUSH2 0x200 DUP4 PUSH2 0xFA JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x210 JUMPI PUSH2 0x20F PUSH2 0x18E JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH18 0x973E2B3C4B49500FE862CEF3E46AC06E1BD7 DUP12 SLOAD SSTORE GAS 0xB8 REVERT XOR CALLDATALOAD 0x4B AND SWAP9 0xDB DUP12 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
							"sourceMap": "1297:770:2:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@getExactDividedBy2And3WithoutModifier_348": {
									"entryPoint": 199,
									"id": 348,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"@getExactDividedBy2And3_322": {
									"entryPoint": 154,
									"id": 322,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"abi_decode_t_uint256": {
									"entryPoint": 281,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 301,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 344,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 359,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 491,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 250,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mod_t_uint256": {
									"entryPoint": 443,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 398,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 246,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 259,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:2229:6",
										"nodeType": "YulBlock",
										"src": "0:2229:6",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:6",
													"nodeType": "YulBlock",
													"src": "47:35:6",
													"statements": [
														{
															"nativeSrc": "57:19:6",
															"nodeType": "YulAssignment",
															"src": "57:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:6",
																		"nodeType": "YulLiteral",
																		"src": "73:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:6"
																},
																"nativeSrc": "67:9:6",
																"nodeType": "YulFunctionCall",
																"src": "67:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:6",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:6",
														"nodeType": "YulTypedName",
														"src": "40:6:6",
														"type": ""
													}
												],
												"src": "7:75:6"
											},
											{
												"body": {
													"nativeSrc": "177:28:6",
													"nodeType": "YulBlock",
													"src": "177:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:6",
																		"nodeType": "YulLiteral",
																		"src": "194:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:6",
																		"nodeType": "YulLiteral",
																		"src": "197:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:6"
																},
																"nativeSrc": "187:12:6",
																"nodeType": "YulFunctionCall",
																"src": "187:12:6"
															},
															"nativeSrc": "187:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:6"
											},
											{
												"body": {
													"nativeSrc": "300:28:6",
													"nodeType": "YulBlock",
													"src": "300:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:6",
																		"nodeType": "YulLiteral",
																		"src": "317:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:6",
																		"nodeType": "YulLiteral",
																		"src": "320:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:6"
																},
																"nativeSrc": "310:12:6",
																"nodeType": "YulFunctionCall",
																"src": "310:12:6"
															},
															"nativeSrc": "310:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:6"
											},
											{
												"body": {
													"nativeSrc": "379:32:6",
													"nodeType": "YulBlock",
													"src": "379:32:6",
													"statements": [
														{
															"nativeSrc": "389:16:6",
															"nodeType": "YulAssignment",
															"src": "389:16:6",
															"value": {
																"name": "value",
																"nativeSrc": "400:5:6",
																"nodeType": "YulIdentifier",
																"src": "400:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "334:77:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:6",
														"nodeType": "YulTypedName",
														"src": "361:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:6",
														"nodeType": "YulTypedName",
														"src": "371:7:6",
														"type": ""
													}
												],
												"src": "334:77:6"
											},
											{
												"body": {
													"nativeSrc": "460:79:6",
													"nodeType": "YulBlock",
													"src": "460:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "517:16:6",
																"nodeType": "YulBlock",
																"src": "517:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "526:1:6",
																					"nodeType": "YulLiteral",
																					"src": "526:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "529:1:6",
																					"nodeType": "YulLiteral",
																					"src": "529:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "519:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:6"
																			},
																			"nativeSrc": "519:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:6"
																		},
																		"nativeSrc": "519:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "483:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "508:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "490:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:6"
																				},
																				"nativeSrc": "490:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "480:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:6"
																		},
																		"nativeSrc": "480:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "473:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:6"
																},
																"nativeSrc": "473:43:6",
																"nodeType": "YulFunctionCall",
																"src": "473:43:6"
															},
															"nativeSrc": "470:63:6",
															"nodeType": "YulIf",
															"src": "470:63:6"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "417:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "453:5:6",
														"nodeType": "YulTypedName",
														"src": "453:5:6",
														"type": ""
													}
												],
												"src": "417:122:6"
											},
											{
												"body": {
													"nativeSrc": "597:87:6",
													"nodeType": "YulBlock",
													"src": "597:87:6",
													"statements": [
														{
															"nativeSrc": "607:29:6",
															"nodeType": "YulAssignment",
															"src": "607:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "629:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "616:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "616:12:6"
																},
																"nativeSrc": "616:20:6",
																"nodeType": "YulFunctionCall",
																"src": "616:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "607:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "607:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "672:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "645:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "645:26:6"
																},
																"nativeSrc": "645:33:6",
																"nodeType": "YulFunctionCall",
																"src": "645:33:6"
															},
															"nativeSrc": "645:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "645:33:6"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "545:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "575:6:6",
														"nodeType": "YulTypedName",
														"src": "575:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "583:3:6",
														"nodeType": "YulTypedName",
														"src": "583:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "591:5:6",
														"nodeType": "YulTypedName",
														"src": "591:5:6",
														"type": ""
													}
												],
												"src": "545:139:6"
											},
											{
												"body": {
													"nativeSrc": "756:263:6",
													"nodeType": "YulBlock",
													"src": "756:263:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "802:83:6",
																"nodeType": "YulBlock",
																"src": "802:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "804:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "804:77:6"
																			},
																			"nativeSrc": "804:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "804:79:6"
																		},
																		"nativeSrc": "804:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "804:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "777:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "777:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "786:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "786:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "773:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "773:3:6"
																		},
																		"nativeSrc": "773:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "773:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "798:2:6",
																		"nodeType": "YulLiteral",
																		"src": "798:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "769:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "769:3:6"
																},
																"nativeSrc": "769:32:6",
																"nodeType": "YulFunctionCall",
																"src": "769:32:6"
															},
															"nativeSrc": "766:119:6",
															"nodeType": "YulIf",
															"src": "766:119:6"
														},
														{
															"nativeSrc": "895:117:6",
															"nodeType": "YulBlock",
															"src": "895:117:6",
															"statements": [
																{
																	"nativeSrc": "910:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "910:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "924:1:6",
																		"nodeType": "YulLiteral",
																		"src": "924:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "914:6:6",
																			"nodeType": "YulTypedName",
																			"src": "914:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "939:63:6",
																	"nodeType": "YulAssignment",
																	"src": "939:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "974:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "974:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "985:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "985:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "970:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "970:3:6"
																				},
																				"nativeSrc": "970:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "970:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "994:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "994:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "949:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "949:20:6"
																		},
																		"nativeSrc": "949:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "949:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "939:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "939:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "690:329:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "726:9:6",
														"nodeType": "YulTypedName",
														"src": "726:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "737:7:6",
														"nodeType": "YulTypedName",
														"src": "737:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "749:6:6",
														"nodeType": "YulTypedName",
														"src": "749:6:6",
														"type": ""
													}
												],
												"src": "690:329:6"
											},
											{
												"body": {
													"nativeSrc": "1090:53:6",
													"nodeType": "YulBlock",
													"src": "1090:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1107:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "1107:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1130:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "1130:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "1112:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "1112:17:6"
																		},
																		"nativeSrc": "1112:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1112:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1100:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1100:6:6"
																},
																"nativeSrc": "1100:37:6",
																"nodeType": "YulFunctionCall",
																"src": "1100:37:6"
															},
															"nativeSrc": "1100:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "1100:37:6"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "1025:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1078:5:6",
														"nodeType": "YulTypedName",
														"src": "1078:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1085:3:6",
														"nodeType": "YulTypedName",
														"src": "1085:3:6",
														"type": ""
													}
												],
												"src": "1025:118:6"
											},
											{
												"body": {
													"nativeSrc": "1275:206:6",
													"nodeType": "YulBlock",
													"src": "1275:206:6",
													"statements": [
														{
															"nativeSrc": "1285:26:6",
															"nodeType": "YulAssignment",
															"src": "1285:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1297:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1297:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1308:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1308:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1293:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1293:3:6"
																},
																"nativeSrc": "1293:18:6",
																"nodeType": "YulFunctionCall",
																"src": "1293:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1285:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1285:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1365:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1365:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1378:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1378:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1389:1:6",
																				"nodeType": "YulLiteral",
																				"src": "1389:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1374:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1374:3:6"
																		},
																		"nativeSrc": "1374:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1374:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "1321:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "1321:43:6"
																},
																"nativeSrc": "1321:71:6",
																"nodeType": "YulFunctionCall",
																"src": "1321:71:6"
															},
															"nativeSrc": "1321:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "1321:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "1446:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1446:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1459:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1459:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1470:2:6",
																				"nodeType": "YulLiteral",
																				"src": "1470:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1455:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1455:3:6"
																		},
																		"nativeSrc": "1455:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1455:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "1402:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "1402:43:6"
																},
																"nativeSrc": "1402:72:6",
																"nodeType": "YulFunctionCall",
																"src": "1402:72:6"
															},
															"nativeSrc": "1402:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "1402:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "1149:332:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1239:9:6",
														"nodeType": "YulTypedName",
														"src": "1239:9:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1251:6:6",
														"nodeType": "YulTypedName",
														"src": "1251:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1259:6:6",
														"nodeType": "YulTypedName",
														"src": "1259:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1270:4:6",
														"nodeType": "YulTypedName",
														"src": "1270:4:6",
														"type": ""
													}
												],
												"src": "1149:332:6"
											},
											{
												"body": {
													"nativeSrc": "1515:152:6",
													"nodeType": "YulBlock",
													"src": "1515:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1532:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1532:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1535:77:6",
																		"nodeType": "YulLiteral",
																		"src": "1535:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1525:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1525:6:6"
																},
																"nativeSrc": "1525:88:6",
																"nodeType": "YulFunctionCall",
																"src": "1525:88:6"
															},
															"nativeSrc": "1525:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "1525:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1629:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1629:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1632:4:6",
																		"nodeType": "YulLiteral",
																		"src": "1632:4:6",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1622:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1622:6:6"
																},
																"nativeSrc": "1622:15:6",
																"nodeType": "YulFunctionCall",
																"src": "1622:15:6"
															},
															"nativeSrc": "1622:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "1622:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1653:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1653:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1656:4:6",
																		"nodeType": "YulLiteral",
																		"src": "1656:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1646:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1646:6:6"
																},
																"nativeSrc": "1646:15:6",
																"nodeType": "YulFunctionCall",
																"src": "1646:15:6"
															},
															"nativeSrc": "1646:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "1646:15:6"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "1487:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "1487:180:6"
											},
											{
												"body": {
													"nativeSrc": "1707:142:6",
													"nodeType": "YulBlock",
													"src": "1707:142:6",
													"statements": [
														{
															"nativeSrc": "1717:25:6",
															"nodeType": "YulAssignment",
															"src": "1717:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "1740:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "1740:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "1722:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "1722:17:6"
																},
																"nativeSrc": "1722:20:6",
																"nodeType": "YulFunctionCall",
																"src": "1722:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "1717:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "1717:1:6"
																}
															]
														},
														{
															"nativeSrc": "1751:25:6",
															"nodeType": "YulAssignment",
															"src": "1751:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "1774:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "1774:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "1756:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "1756:17:6"
																},
																"nativeSrc": "1756:20:6",
																"nodeType": "YulFunctionCall",
																"src": "1756:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "1751:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "1751:1:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1798:22:6",
																"nodeType": "YulBlock",
																"src": "1798:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "1800:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "1800:16:6"
																			},
																			"nativeSrc": "1800:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1800:18:6"
																		},
																		"nativeSrc": "1800:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1800:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "1795:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "1795:1:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1788:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1788:6:6"
																},
																"nativeSrc": "1788:9:6",
																"nodeType": "YulFunctionCall",
																"src": "1788:9:6"
															},
															"nativeSrc": "1785:35:6",
															"nodeType": "YulIf",
															"src": "1785:35:6"
														},
														{
															"nativeSrc": "1829:14:6",
															"nodeType": "YulAssignment",
															"src": "1829:14:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "1838:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "1838:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "1841:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "1841:1:6"
																	}
																],
																"functionName": {
																	"name": "mod",
																	"nativeSrc": "1834:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1834:3:6"
																},
																"nativeSrc": "1834:9:6",
																"nodeType": "YulFunctionCall",
																"src": "1834:9:6"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "1829:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "1829:1:6"
																}
															]
														}
													]
												},
												"name": "mod_t_uint256",
												"nativeSrc": "1673:176:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "1696:1:6",
														"nodeType": "YulTypedName",
														"src": "1696:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "1699:1:6",
														"nodeType": "YulTypedName",
														"src": "1699:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "1705:1:6",
														"nodeType": "YulTypedName",
														"src": "1705:1:6",
														"type": ""
													}
												],
												"src": "1673:176:6"
											},
											{
												"body": {
													"nativeSrc": "1883:152:6",
													"nodeType": "YulBlock",
													"src": "1883:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1900:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1900:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1903:77:6",
																		"nodeType": "YulLiteral",
																		"src": "1903:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1893:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1893:6:6"
																},
																"nativeSrc": "1893:88:6",
																"nodeType": "YulFunctionCall",
																"src": "1893:88:6"
															},
															"nativeSrc": "1893:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "1893:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1997:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1997:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2000:4:6",
																		"nodeType": "YulLiteral",
																		"src": "2000:4:6",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1990:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1990:6:6"
																},
																"nativeSrc": "1990:15:6",
																"nodeType": "YulFunctionCall",
																"src": "1990:15:6"
															},
															"nativeSrc": "1990:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "1990:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2021:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2021:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2024:4:6",
																		"nodeType": "YulLiteral",
																		"src": "2024:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2014:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2014:6:6"
																},
																"nativeSrc": "2014:15:6",
																"nodeType": "YulFunctionCall",
																"src": "2014:15:6"
															},
															"nativeSrc": "2014:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "2014:15:6"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "1855:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "1855:180:6"
											},
											{
												"body": {
													"nativeSrc": "2083:143:6",
													"nodeType": "YulBlock",
													"src": "2083:143:6",
													"statements": [
														{
															"nativeSrc": "2093:25:6",
															"nodeType": "YulAssignment",
															"src": "2093:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2116:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "2116:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "2098:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "2098:17:6"
																},
																"nativeSrc": "2098:20:6",
																"nodeType": "YulFunctionCall",
																"src": "2098:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "2093:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "2093:1:6"
																}
															]
														},
														{
															"nativeSrc": "2127:25:6",
															"nodeType": "YulAssignment",
															"src": "2127:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "2150:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "2150:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "2132:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "2132:17:6"
																},
																"nativeSrc": "2132:20:6",
																"nodeType": "YulFunctionCall",
																"src": "2132:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "2127:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "2127:1:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2174:22:6",
																"nodeType": "YulBlock",
																"src": "2174:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "2176:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "2176:16:6"
																			},
																			"nativeSrc": "2176:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2176:18:6"
																		},
																		"nativeSrc": "2176:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2176:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "2171:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "2171:1:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2164:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2164:6:6"
																},
																"nativeSrc": "2164:9:6",
																"nodeType": "YulFunctionCall",
																"src": "2164:9:6"
															},
															"nativeSrc": "2161:35:6",
															"nodeType": "YulIf",
															"src": "2161:35:6"
														},
														{
															"nativeSrc": "2206:14:6",
															"nodeType": "YulAssignment",
															"src": "2206:14:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2215:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "2215:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "2218:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "2218:1:6"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "2211:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2211:3:6"
																},
																"nativeSrc": "2211:9:6",
																"nodeType": "YulFunctionCall",
																"src": "2211:9:6"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "2206:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "2206:1:6"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "2041:185:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "2072:1:6",
														"nodeType": "YulTypedName",
														"src": "2072:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "2075:1:6",
														"nodeType": "YulTypedName",
														"src": "2075:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "2081:1:6",
														"nodeType": "YulTypedName",
														"src": "2081:1:6",
														"type": ""
													}
												],
												"src": "2041:185:6"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function mod_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b5060043610610034575f3560e01c80634534a43814610038578063d2406c7814610069575b5f5ffd5b610052600480360381019061004d919061012d565b61009a565b604051610060929190610167565b60405180910390f35b610083600480360381019061007e919061012d565b6100c7565b604051610091929190610167565b60405180910390f35b5f5f826100a6846100c7565b925092505f6002826100b891906101bb565b146100c1575f5ffd5b50915091565b5f5f5f6002846100d791906101eb565b90505f6003856100e791906101eb565b90508181935093505050915091565b5f5ffd5b5f819050919050565b61010c816100fa565b8114610116575f5ffd5b50565b5f8135905061012781610103565b92915050565b5f60208284031215610142576101416100f6565b5b5f61014f84828501610119565b91505092915050565b610161816100fa565b82525050565b5f60408201905061017a5f830185610158565b6101876020830184610158565b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f6101c5826100fa565b91506101d0836100fa565b9250826101e0576101df61018e565b5b828206905092915050565b5f6101f5826100fa565b9150610200836100fa565b9250826102105761020f61018e565b5b82820490509291505056fea264697066735822122071973e2b3c4b49500fe862cef3e46ac06e1bd78b54555ab8fd18354b1698db8b64736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x34 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4534A438 EQ PUSH2 0x38 JUMPI DUP1 PUSH4 0xD2406C78 EQ PUSH2 0x69 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x52 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4D SWAP2 SWAP1 PUSH2 0x12D JUMP JUMPDEST PUSH2 0x9A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x60 SWAP3 SWAP2 SWAP1 PUSH2 0x167 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x83 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7E SWAP2 SWAP1 PUSH2 0x12D JUMP JUMPDEST PUSH2 0xC7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x91 SWAP3 SWAP2 SWAP1 PUSH2 0x167 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH0 DUP3 PUSH2 0xA6 DUP5 PUSH2 0xC7 JUMP JUMPDEST SWAP3 POP SWAP3 POP PUSH0 PUSH1 0x2 DUP3 PUSH2 0xB8 SWAP2 SWAP1 PUSH2 0x1BB JUMP JUMPDEST EQ PUSH2 0xC1 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x2 DUP5 PUSH2 0xD7 SWAP2 SWAP1 PUSH2 0x1EB JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x3 DUP6 PUSH2 0xE7 SWAP2 SWAP1 PUSH2 0x1EB JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SWAP4 POP SWAP4 POP POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10C DUP2 PUSH2 0xFA JUMP JUMPDEST DUP2 EQ PUSH2 0x116 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x127 DUP2 PUSH2 0x103 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x142 JUMPI PUSH2 0x141 PUSH2 0xF6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x14F DUP5 DUP3 DUP6 ADD PUSH2 0x119 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x161 DUP2 PUSH2 0xFA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x17A PUSH0 DUP4 ADD DUP6 PUSH2 0x158 JUMP JUMPDEST PUSH2 0x187 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x158 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1C5 DUP3 PUSH2 0xFA JUMP JUMPDEST SWAP2 POP PUSH2 0x1D0 DUP4 PUSH2 0xFA JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1E0 JUMPI PUSH2 0x1DF PUSH2 0x18E JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1F5 DUP3 PUSH2 0xFA JUMP JUMPDEST SWAP2 POP PUSH2 0x200 DUP4 PUSH2 0xFA JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x210 JUMPI PUSH2 0x20F PUSH2 0x18E JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH18 0x973E2B3C4B49500FE862CEF3E46AC06E1BD7 DUP12 SLOAD SSTORE GAS 0xB8 REVERT XOR CALLDATALOAD 0x4B AND SWAP9 0xDB DUP12 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
							"sourceMap": "1297:770:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1430:229;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;1716:245;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;1430:229;1565:7;1574;1537:9;1604:48:::1;1642:9;1604:37;:48::i;:::-;1597:55;;;;2056:1:::0;2051;2046:2;:6;;;;:::i;:::-;:11;2038:20;;;;;;1430:229;;;;:::o;1716:245::-;1827:7;1836;1859:12;1886:1;1874:9;:13;;;;:::i;:::-;1859:28;;1897:12;1924:1;1912:9;:13;;;;:::i;:::-;1897:28;;1943:4;1949;1935:19;;;;;;1716:245;;;:::o;88:117:6:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o;1025:118::-;1112:24;1130:5;1112:24;:::i;:::-;1107:3;1100:37;1025:118;;:::o;1149:332::-;1270:4;1308:2;1297:9;1293:18;1285:26;;1321:71;1389:1;1378:9;1374:17;1365:6;1321:71;:::i;:::-;1402:72;1470:2;1459:9;1455:18;1446:6;1402:72;:::i;:::-;1149:332;;;;;:::o;1487:180::-;1535:77;1532:1;1525:88;1632:4;1629:1;1622:15;1656:4;1653:1;1646:15;1673:176;1705:1;1722:20;1740:1;1722:20;:::i;:::-;1717:25;;1756:20;1774:1;1756:20;:::i;:::-;1751:25;;1795:1;1785:35;;1800:18;;:::i;:::-;1785:35;1841:1;1838;1834:9;1829:14;;1673:176;;;;:::o;2041:185::-;2081:1;2098:20;2116:1;2098:20;:::i;:::-;2093:25;;2132:20;2150:1;2132:20;:::i;:::-;2127:25;;2171:1;2161:35;;2176:18;;:::i;:::-;2161:35;2218:1;2215;2211:9;2206:14;;2041:185;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "118600",
								"executionCost": "163",
								"totalCost": "118763"
							},
							"external": {
								"getExactDividedBy2And3(uint256)": "infinite",
								"getExactDividedBy2And3WithoutModifier(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1297,
									"end": 2067,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 1297,
									"end": 2067,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1297,
									"end": 2067,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1297,
									"end": 2067,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 1297,
									"end": 2067,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1297,
									"end": 2067,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1297,
									"end": 2067,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1297,
									"end": 2067,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1297,
									"end": 2067,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1297,
									"end": 2067,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1297,
									"end": 2067,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1297,
									"end": 2067,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1297,
									"end": 2067,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1297,
									"end": 2067,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1297,
									"end": 2067,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1297,
									"end": 2067,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1297,
									"end": 2067,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1297,
									"end": 2067,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1297,
									"end": 2067,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 1297,
									"end": 2067,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1297,
									"end": 2067,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122071973e2b3c4b49500fe862cef3e46ac06e1bd78b54555ab8fd18354b1698db8b64736f6c634300081c0033",
									".code": [
										{
											"begin": 1297,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1297,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1297,
											"end": 2067,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1297,
											"end": 2067,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1297,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1297,
											"end": 2067,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1297,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1297,
											"end": 2067,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1297,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1297,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1297,
											"end": 2067,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1297,
											"end": 2067,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1297,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1297,
											"end": 2067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1297,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1297,
											"end": 2067,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1297,
											"end": 2067,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1297,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1297,
											"end": 2067,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1297,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1297,
											"end": 2067,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 1297,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1297,
											"end": 2067,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 1297,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1297,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "4534A438"
										},
										{
											"begin": 1297,
											"end": 2067,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1297,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1297,
											"end": 2067,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1297,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1297,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "D2406C78"
										},
										{
											"begin": 1297,
											"end": 2067,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1297,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1297,
											"end": 2067,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1297,
											"end": 2067,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1297,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1297,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1297,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1297,
											"end": 2067,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1430,
											"end": 1659,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1430,
											"end": 1659,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1430,
											"end": 1659,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1430,
											"end": 1659,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1430,
											"end": 1659,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1430,
											"end": 1659,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1430,
											"end": 1659,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1430,
											"end": 1659,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1430,
											"end": 1659,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1430,
											"end": 1659,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1430,
											"end": 1659,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 1430,
											"end": 1659,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1430,
											"end": 1659,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1430,
											"end": 1659,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 1430,
											"end": 1659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1430,
											"end": 1659,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 1430,
											"end": 1659,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1430,
											"end": 1659,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 1430,
											"end": 1659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1430,
											"end": 1659,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1430,
											"end": 1659,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1430,
											"end": 1659,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1430,
											"end": 1659,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1430,
											"end": 1659,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 1430,
											"end": 1659,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1430,
											"end": 1659,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1430,
											"end": 1659,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1430,
											"end": 1659,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 1430,
											"end": 1659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1430,
											"end": 1659,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 1430,
											"end": 1659,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1430,
											"end": 1659,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1430,
											"end": 1659,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1430,
											"end": 1659,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1430,
											"end": 1659,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1430,
											"end": 1659,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1430,
											"end": 1659,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1430,
											"end": 1659,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1716,
											"end": 1961,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1716,
											"end": 1961,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1716,
											"end": 1961,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 1716,
											"end": 1961,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1716,
											"end": 1961,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1716,
											"end": 1961,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1716,
											"end": 1961,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1716,
											"end": 1961,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1716,
											"end": 1961,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1716,
											"end": 1961,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1716,
											"end": 1961,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1716,
											"end": 1961,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1716,
											"end": 1961,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1716,
											"end": 1961,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 1716,
											"end": 1961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1716,
											"end": 1961,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1716,
											"end": 1961,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1716,
											"end": 1961,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 1716,
											"end": 1961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1716,
											"end": 1961,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 1716,
											"end": 1961,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1716,
											"end": 1961,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1716,
											"end": 1961,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1716,
											"end": 1961,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1716,
											"end": 1961,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1716,
											"end": 1961,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1716,
											"end": 1961,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1716,
											"end": 1961,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 1716,
											"end": 1961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1716,
											"end": 1961,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1716,
											"end": 1961,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1716,
											"end": 1961,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1716,
											"end": 1961,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1716,
											"end": 1961,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1716,
											"end": 1961,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1716,
											"end": 1961,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1716,
											"end": 1961,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1716,
											"end": 1961,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1430,
											"end": 1659,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 1430,
											"end": 1659,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1565,
											"end": 1572,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1574,
											"end": 1581,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1537,
											"end": 1546,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1604,
											"end": 1652,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 1642,
											"end": 1651,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1604,
											"end": 1641,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 1604,
											"end": 1652,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1604,
											"end": 1652,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 1604,
											"end": 1652,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1597,
											"end": 1652,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1597,
											"end": 1652,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1597,
											"end": 1652,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1597,
											"end": 1652,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2056,
											"end": 2057,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2051,
											"end": 2052,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2046,
											"end": 2048,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2046,
											"end": 2052,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 2046,
											"end": 2052,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2046,
											"end": 2052,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2046,
											"end": 2052,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 2046,
											"end": 2052,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2046,
											"end": 2052,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 2046,
											"end": 2052,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2046,
											"end": 2057,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2038,
											"end": 2058,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2038,
											"end": 2058,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2038,
											"end": 2058,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2038,
											"end": 2058,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2038,
											"end": 2058,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2038,
											"end": 2058,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2038,
											"end": 2058,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1430,
											"end": 1659,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1430,
											"end": 1659,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1430,
											"end": 1659,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1430,
											"end": 1659,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1430,
											"end": 1659,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1716,
											"end": 1961,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 1716,
											"end": 1961,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1827,
											"end": 1834,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1836,
											"end": 1843,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1859,
											"end": 1871,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1886,
											"end": 1887,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1874,
											"end": 1883,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1874,
											"end": 1887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1874,
											"end": 1887,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1874,
											"end": 1887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1874,
											"end": 1887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1874,
											"end": 1887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1874,
											"end": 1887,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1874,
											"end": 1887,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1859,
											"end": 1887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1859,
											"end": 1887,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1897,
											"end": 1909,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1924,
											"end": 1925,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1912,
											"end": 1921,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1912,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1912,
											"end": 1925,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1912,
											"end": 1925,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1912,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1912,
											"end": 1925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1912,
											"end": 1925,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1912,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1897,
											"end": 1925,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1897,
											"end": 1925,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1943,
											"end": 1947,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1949,
											"end": 1953,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1935,
											"end": 1954,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1935,
											"end": 1954,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1935,
											"end": 1954,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1935,
											"end": 1954,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1935,
											"end": 1954,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1935,
											"end": 1954,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1716,
											"end": 1961,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1716,
											"end": 1961,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1716,
											"end": 1961,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1716,
											"end": 1961,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 334,
											"end": 411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 490,
											"end": 514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 417,
											"end": 539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 545,
											"end": 684,
											"name": "tag",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 645,
											"end": 678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 545,
											"end": 684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "tag",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 749,
											"end": 755,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 798,
											"end": 800,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 786,
											"end": 795,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 777,
											"end": 784,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 773,
											"end": 796,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 769,
											"end": 801,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 766,
											"end": 885,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 766,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 804,
											"end": 883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 804,
											"end": 883,
											"name": "tag",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 766,
											"end": 885,
											"name": "tag",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 924,
											"end": 925,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 994,
											"end": 1001,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 985,
											"end": 991,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 974,
											"end": 983,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 970,
											"end": 992,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 949,
											"end": 1002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "tag",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 895,
											"end": 1012,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 690,
											"end": 1019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "tag",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 1130,
											"end": 1135,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 1112,
											"end": 1136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "tag",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1107,
											"end": 1110,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1100,
											"end": 1137,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1025,
											"end": 1143,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1149,
											"end": 1481,
											"name": "tag",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 1149,
											"end": 1481,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1270,
											"end": 1274,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1308,
											"end": 1310,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1297,
											"end": 1306,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1293,
											"end": 1311,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1285,
											"end": 1311,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1285,
											"end": 1311,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1321,
											"end": 1392,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 1389,
											"end": 1390,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1378,
											"end": 1387,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1374,
											"end": 1391,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1365,
											"end": 1371,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1321,
											"end": 1392,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 1321,
											"end": 1392,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1321,
											"end": 1392,
											"name": "tag",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 1321,
											"end": 1392,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1402,
											"end": 1474,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 1470,
											"end": 1472,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1459,
											"end": 1468,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1455,
											"end": 1473,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1446,
											"end": 1452,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1402,
											"end": 1474,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 1402,
											"end": 1474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1402,
											"end": 1474,
											"name": "tag",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 1402,
											"end": 1474,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1149,
											"end": 1481,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1149,
											"end": 1481,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1149,
											"end": 1481,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1149,
											"end": 1481,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1149,
											"end": 1481,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1149,
											"end": 1481,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1667,
											"name": "tag",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 1487,
											"end": 1667,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1535,
											"end": 1612,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1532,
											"end": 1533,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1525,
											"end": 1613,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1632,
											"end": 1636,
											"name": "PUSH",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 1629,
											"end": 1630,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1622,
											"end": 1637,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1656,
											"end": 1660,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1653,
											"end": 1654,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1646,
											"end": 1661,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1673,
											"end": 1849,
											"name": "tag",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 1673,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1705,
											"end": 1706,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1722,
											"end": 1742,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 1740,
											"end": 1741,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1722,
											"end": 1742,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 1722,
											"end": 1742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1722,
											"end": 1742,
											"name": "tag",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 1722,
											"end": 1742,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1717,
											"end": 1742,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1717,
											"end": 1742,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1756,
											"end": 1776,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 1774,
											"end": 1775,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1756,
											"end": 1776,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 1756,
											"end": 1776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1756,
											"end": 1776,
											"name": "tag",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 1756,
											"end": 1776,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1751,
											"end": 1776,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1751,
											"end": 1776,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1795,
											"end": 1796,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1785,
											"end": 1820,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 1785,
											"end": 1820,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1800,
											"end": 1818,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 1800,
											"end": 1818,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 1800,
											"end": 1818,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1800,
											"end": 1818,
											"name": "tag",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 1800,
											"end": 1818,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1785,
											"end": 1820,
											"name": "tag",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 1785,
											"end": 1820,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1841,
											"end": 1842,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1838,
											"end": 1839,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1834,
											"end": 1843,
											"name": "MOD",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1843,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1843,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1673,
											"end": 1849,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1673,
											"end": 1849,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1673,
											"end": 1849,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1673,
											"end": 1849,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1673,
											"end": 1849,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2041,
											"end": 2226,
											"name": "tag",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 2041,
											"end": 2226,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2081,
											"end": 2082,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2098,
											"end": 2118,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 2116,
											"end": 2117,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2098,
											"end": 2118,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 2098,
											"end": 2118,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2098,
											"end": 2118,
											"name": "tag",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 2098,
											"end": 2118,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2093,
											"end": 2118,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2093,
											"end": 2118,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2132,
											"end": 2152,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 2150,
											"end": 2151,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2132,
											"end": 2152,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 2132,
											"end": 2152,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2132,
											"end": 2152,
											"name": "tag",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 2132,
											"end": 2152,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2127,
											"end": 2152,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2127,
											"end": 2152,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2171,
											"end": 2172,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2161,
											"end": 2196,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 2161,
											"end": 2196,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2176,
											"end": 2194,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 2176,
											"end": 2194,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 2176,
											"end": 2194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2176,
											"end": 2194,
											"name": "tag",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 2176,
											"end": 2194,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2161,
											"end": 2196,
											"name": "tag",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 2161,
											"end": 2196,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2218,
											"end": 2219,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2215,
											"end": 2216,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2211,
											"end": 2220,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2206,
											"end": 2220,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2206,
											"end": 2220,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2041,
											"end": 2226,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2041,
											"end": 2226,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2041,
											"end": 2226,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2041,
											"end": 2226,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2041,
											"end": 2226,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/study/InheritanceTest.sol",
								"contracts/study2/Import.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Errors.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"getExactDividedBy2And3(uint256)": "4534a438",
							"getExactDividedBy2And3WithoutModifier(uint256)": "d2406c78"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_dividend\",\"type\":\"uint256\"}],\"name\":\"getExactDividedBy2And3\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_dividend\",\"type\":\"uint256\"}],\"name\":\"getExactDividedBy2And3WithoutModifier\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/study/InheritanceTest.sol\":\"Identifier\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/study/InheritanceTest.sol\":{\"keccak256\":\"0x3a8c032eb89da05730a7afdfb70e36c31d24da7d52416ee3e1a0ecb1d15562bf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d50e5eb8408b348d690ecaf1ee1eaaa58d7880e056febe9ccc36991865dbbcb9\",\"dweb:/ipfs/QmbbnnhFkSqTtCBfyoNqk2RhWQE9FhwSecbv5WxXa3nioF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Yeye": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "msg",
									"type": "string"
								}
							],
							"name": "Log",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "hip",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pop",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "yeye",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/study/InheritanceTest.sol\":58:376  contract Yeye {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/study/InheritanceTest.sol\":58:376  contract Yeye {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x0ca21e9c\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x370ea142\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xa4ece52c\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"contracts/study/InheritanceTest.sol\":310:374  function yeye() public virtual {... */\n    tag_3:\n      tag_6\n      tag_7\n      jump\t// in\n    tag_6:\n      stop\n        /* \"contracts/study/InheritanceTest.sol\":172:235  function hip() public virtual {... */\n    tag_4:\n      tag_8\n      tag_9\n      jump\t// in\n    tag_8:\n      stop\n        /* \"contracts/study/InheritanceTest.sol\":241:304  function pop() public virtual {... */\n    tag_5:\n      tag_10\n      tag_11\n      jump\t// in\n    tag_10:\n      stop\n        /* \"contracts/study/InheritanceTest.sol\":310:374  function yeye() public virtual {... */\n    tag_7:\n        /* \"contracts/study/InheritanceTest.sol\":356:367  Log(\"Yeye\") */\n      0xcf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab\n      mload(0x40)\n      tag_13\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/study/InheritanceTest.sol\":310:374  function yeye() public virtual {... */\n      jump\t// out\n        /* \"contracts/study/InheritanceTest.sol\":172:235  function hip() public virtual {... */\n    tag_9:\n        /* \"contracts/study/InheritanceTest.sol\":217:228  Log(\"Yeye\") */\n      0xcf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab\n      mload(0x40)\n      tag_16\n      swap1\n      tag_14\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/study/InheritanceTest.sol\":172:235  function hip() public virtual {... */\n      jump\t// out\n        /* \"contracts/study/InheritanceTest.sol\":241:304  function pop() public virtual {... */\n    tag_11:\n        /* \"contracts/study/InheritanceTest.sol\":286:297  Log(\"Yeye\") */\n      0xcf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab\n      mload(0x40)\n      tag_18\n      swap1\n      tag_14\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/study/InheritanceTest.sol\":241:304  function pop() public virtual {... */\n      jump\t// out\n        /* \"#utility.yul\":7:176   */\n    tag_19:\n        /* \"#utility.yul\":91:102   */\n      0x00\n        /* \"#utility.yul\":125:131   */\n      dup3\n        /* \"#utility.yul\":120:123   */\n      dup3\n        /* \"#utility.yul\":113:132   */\n      mstore\n        /* \"#utility.yul\":165:169   */\n      0x20\n        /* \"#utility.yul\":160:163   */\n      dup3\n        /* \"#utility.yul\":156:170   */\n      add\n        /* \"#utility.yul\":141:170   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:176   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":182:336   */\n    tag_20:\n        /* \"#utility.yul\":322:328   */\n      0x5965796500000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":318:319   */\n      0x00\n        /* \"#utility.yul\":310:316   */\n      dup3\n        /* \"#utility.yul\":306:320   */\n      add\n        /* \"#utility.yul\":299:329   */\n      mstore\n        /* \"#utility.yul\":182:336   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":342:707   */\n    tag_21:\n        /* \"#utility.yul\":484:487   */\n      0x00\n        /* \"#utility.yul\":505:571   */\n      tag_26\n        /* \"#utility.yul\":569:570   */\n      0x04\n        /* \"#utility.yul\":564:567   */\n      dup4\n        /* \"#utility.yul\":505:571   */\n      tag_19\n      jump\t// in\n    tag_26:\n        /* \"#utility.yul\":498:571   */\n      swap2\n      pop\n        /* \"#utility.yul\":580:673   */\n      tag_27\n        /* \"#utility.yul\":669:672   */\n      dup3\n        /* \"#utility.yul\":580:673   */\n      tag_20\n      jump\t// in\n    tag_27:\n        /* \"#utility.yul\":698:700   */\n      0x20\n        /* \"#utility.yul\":693:696   */\n      dup3\n        /* \"#utility.yul\":689:701   */\n      add\n        /* \"#utility.yul\":682:701   */\n      swap1\n      pop\n        /* \"#utility.yul\":342:707   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":713:1132   */\n    tag_14:\n        /* \"#utility.yul\":879:883   */\n      0x00\n        /* \"#utility.yul\":917:919   */\n      0x20\n        /* \"#utility.yul\":906:915   */\n      dup3\n        /* \"#utility.yul\":902:920   */\n      add\n        /* \"#utility.yul\":894:920   */\n      swap1\n      pop\n        /* \"#utility.yul\":966:975   */\n      dup2\n        /* \"#utility.yul\":960:964   */\n      dup2\n        /* \"#utility.yul\":956:976   */\n      sub\n        /* \"#utility.yul\":952:953   */\n      0x00\n        /* \"#utility.yul\":941:950   */\n      dup4\n        /* \"#utility.yul\":937:954   */\n      add\n        /* \"#utility.yul\":930:977   */\n      mstore\n        /* \"#utility.yul\":994:1125   */\n      tag_29\n        /* \"#utility.yul\":1120:1124   */\n      dup2\n        /* \"#utility.yul\":994:1125   */\n      tag_21\n      jump\t// in\n    tag_29:\n        /* \"#utility.yul\":986:1125   */\n      swap1\n      pop\n        /* \"#utility.yul\":713:1132   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122090b33a65583f1578e957176be27f6807709beb4640e276c8e006d226644c769764736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f5ffd5b506101b48061001c5f395ff3fe608060405234801561000f575f5ffd5b506004361061003f575f3560e01c80630ca21e9c14610043578063370ea1421461004d578063a4ece52c14610057575b5f5ffd5b61004b610061565b005b610055610098565b005b61005f6100cf565b005b7fcf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab60405161008e90610160565b60405180910390a1565b7fcf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab6040516100c590610160565b60405180910390a1565b7fcf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab6040516100fc90610160565b60405180910390a1565b5f82825260208201905092915050565b7f59657965000000000000000000000000000000000000000000000000000000005f82015250565b5f61014a600483610106565b915061015582610116565b602082019050919050565b5f6020820190508181035f8301526101778161013e565b905091905056fea264697066735822122090b33a65583f1578e957176be27f6807709beb4640e276c8e006d226644c769764736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1B4 DUP1 PUSH2 0x1C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xCA21E9C EQ PUSH2 0x43 JUMPI DUP1 PUSH4 0x370EA142 EQ PUSH2 0x4D JUMPI DUP1 PUSH4 0xA4ECE52C EQ PUSH2 0x57 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x4B PUSH2 0x61 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x55 PUSH2 0x98 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5F PUSH2 0xCF JUMP JUMPDEST STOP JUMPDEST PUSH32 0xCF34EF537AC33EE1AC626CA1587A0A7E8E51561E5514F8CB36AFA1C5102B3BAB PUSH1 0x40 MLOAD PUSH2 0x8E SWAP1 PUSH2 0x160 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH32 0xCF34EF537AC33EE1AC626CA1587A0A7E8E51561E5514F8CB36AFA1C5102B3BAB PUSH1 0x40 MLOAD PUSH2 0xC5 SWAP1 PUSH2 0x160 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH32 0xCF34EF537AC33EE1AC626CA1587A0A7E8E51561E5514F8CB36AFA1C5102B3BAB PUSH1 0x40 MLOAD PUSH2 0xFC SWAP1 PUSH2 0x160 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5965796500000000000000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x14A PUSH1 0x4 DUP4 PUSH2 0x106 JUMP JUMPDEST SWAP2 POP PUSH2 0x155 DUP3 PUSH2 0x116 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x177 DUP2 PUSH2 0x13E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP1 0xB3 GASPRICE PUSH6 0x583F1578E957 OR PUSH12 0xE27F6807709BEB4640E276C8 0xE0 MOD 0xD2 0x26 PUSH5 0x4C76976473 PUSH16 0x6C634300081C00330000000000000000 ",
							"sourceMap": "58:318:2:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@hip_191": {
									"entryPoint": 152,
									"id": 191,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@pop_199": {
									"entryPoint": 207,
									"id": 199,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@yeye_207": {
									"entryPoint": 97,
									"id": 207,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_552f12338174ce6152a5d9af9e1035e4f5e814d72e8245416f12a96744f11caa_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 318,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_552f12338174ce6152a5d9af9e1035e4f5e814d72e8245416f12a96744f11caa__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 352,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 262,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"store_literal_in_memory_552f12338174ce6152a5d9af9e1035e4f5e814d72e8245416f12a96744f11caa": {
									"entryPoint": 278,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1135:6",
										"nodeType": "YulBlock",
										"src": "0:1135:6",
										"statements": [
											{
												"body": {
													"nativeSrc": "103:73:6",
													"nodeType": "YulBlock",
													"src": "103:73:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "120:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "120:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "125:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "125:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "113:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "113:6:6"
																},
																"nativeSrc": "113:19:6",
																"nodeType": "YulFunctionCall",
																"src": "113:19:6"
															},
															"nativeSrc": "113:19:6",
															"nodeType": "YulExpressionStatement",
															"src": "113:19:6"
														},
														{
															"nativeSrc": "141:29:6",
															"nodeType": "YulAssignment",
															"src": "141:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "160:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "160:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "165:4:6",
																		"nodeType": "YulLiteral",
																		"src": "165:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "156:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "156:3:6"
																},
																"nativeSrc": "156:14:6",
																"nodeType": "YulFunctionCall",
																"src": "156:14:6"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "141:11:6",
																	"nodeType": "YulIdentifier",
																	"src": "141:11:6"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "7:169:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "75:3:6",
														"nodeType": "YulTypedName",
														"src": "75:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "80:6:6",
														"nodeType": "YulTypedName",
														"src": "80:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "91:11:6",
														"nodeType": "YulTypedName",
														"src": "91:11:6",
														"type": ""
													}
												],
												"src": "7:169:6"
											},
											{
												"body": {
													"nativeSrc": "288:48:6",
													"nodeType": "YulBlock",
													"src": "288:48:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "310:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "310:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "318:1:6",
																				"nodeType": "YulLiteral",
																				"src": "318:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "306:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "306:3:6"
																		},
																		"nativeSrc": "306:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "306:14:6"
																	},
																	{
																		"hexValue": "59657965",
																		"kind": "string",
																		"nativeSrc": "322:6:6",
																		"nodeType": "YulLiteral",
																		"src": "322:6:6",
																		"type": "",
																		"value": "Yeye"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "299:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "299:6:6"
																},
																"nativeSrc": "299:30:6",
																"nodeType": "YulFunctionCall",
																"src": "299:30:6"
															},
															"nativeSrc": "299:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "299:30:6"
														}
													]
												},
												"name": "store_literal_in_memory_552f12338174ce6152a5d9af9e1035e4f5e814d72e8245416f12a96744f11caa",
												"nativeSrc": "182:154:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "280:6:6",
														"nodeType": "YulTypedName",
														"src": "280:6:6",
														"type": ""
													}
												],
												"src": "182:154:6"
											},
											{
												"body": {
													"nativeSrc": "488:219:6",
													"nodeType": "YulBlock",
													"src": "488:219:6",
													"statements": [
														{
															"nativeSrc": "498:73:6",
															"nodeType": "YulAssignment",
															"src": "498:73:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "564:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "564:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "569:1:6",
																		"nodeType": "YulLiteral",
																		"src": "569:1:6",
																		"type": "",
																		"value": "4"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "505:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "505:58:6"
																},
																"nativeSrc": "505:66:6",
																"nodeType": "YulFunctionCall",
																"src": "505:66:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "498:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "498:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "669:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "669:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_552f12338174ce6152a5d9af9e1035e4f5e814d72e8245416f12a96744f11caa",
																	"nativeSrc": "580:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "580:88:6"
																},
																"nativeSrc": "580:93:6",
																"nodeType": "YulFunctionCall",
																"src": "580:93:6"
															},
															"nativeSrc": "580:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "580:93:6"
														},
														{
															"nativeSrc": "682:19:6",
															"nodeType": "YulAssignment",
															"src": "682:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "693:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "693:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "698:2:6",
																		"nodeType": "YulLiteral",
																		"src": "698:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "689:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "689:3:6"
																},
																"nativeSrc": "689:12:6",
																"nodeType": "YulFunctionCall",
																"src": "689:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "682:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "682:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_552f12338174ce6152a5d9af9e1035e4f5e814d72e8245416f12a96744f11caa_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "342:365:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "476:3:6",
														"nodeType": "YulTypedName",
														"src": "476:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "484:3:6",
														"nodeType": "YulTypedName",
														"src": "484:3:6",
														"type": ""
													}
												],
												"src": "342:365:6"
											},
											{
												"body": {
													"nativeSrc": "884:248:6",
													"nodeType": "YulBlock",
													"src": "884:248:6",
													"statements": [
														{
															"nativeSrc": "894:26:6",
															"nodeType": "YulAssignment",
															"src": "894:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "906:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "906:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "917:2:6",
																		"nodeType": "YulLiteral",
																		"src": "917:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "902:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "902:3:6"
																},
																"nativeSrc": "902:18:6",
																"nodeType": "YulFunctionCall",
																"src": "902:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "894:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "894:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "941:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "941:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "952:1:6",
																				"nodeType": "YulLiteral",
																				"src": "952:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "937:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "937:3:6"
																		},
																		"nativeSrc": "937:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "937:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "960:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "960:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "966:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "966:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "956:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "956:3:6"
																		},
																		"nativeSrc": "956:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "956:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "930:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "930:6:6"
																},
																"nativeSrc": "930:47:6",
																"nodeType": "YulFunctionCall",
																"src": "930:47:6"
															},
															"nativeSrc": "930:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "930:47:6"
														},
														{
															"nativeSrc": "986:139:6",
															"nodeType": "YulAssignment",
															"src": "986:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "1120:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "1120:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_552f12338174ce6152a5d9af9e1035e4f5e814d72e8245416f12a96744f11caa_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "994:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "994:124:6"
																},
																"nativeSrc": "994:131:6",
																"nodeType": "YulFunctionCall",
																"src": "994:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "986:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "986:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_552f12338174ce6152a5d9af9e1035e4f5e814d72e8245416f12a96744f11caa__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "713:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "864:9:6",
														"nodeType": "YulTypedName",
														"src": "864:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "879:4:6",
														"nodeType": "YulTypedName",
														"src": "879:4:6",
														"type": ""
													}
												],
												"src": "713:419:6"
											}
										]
									},
									"contents": "{\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_552f12338174ce6152a5d9af9e1035e4f5e814d72e8245416f12a96744f11caa(memPtr) {\n\n        mstore(add(memPtr, 0), \"Yeye\")\n\n    }\n\n    function abi_encode_t_stringliteral_552f12338174ce6152a5d9af9e1035e4f5e814d72e8245416f12a96744f11caa_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 4)\n        store_literal_in_memory_552f12338174ce6152a5d9af9e1035e4f5e814d72e8245416f12a96744f11caa(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_552f12338174ce6152a5d9af9e1035e4f5e814d72e8245416f12a96744f11caa__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_552f12338174ce6152a5d9af9e1035e4f5e814d72e8245416f12a96744f11caa_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b506004361061003f575f3560e01c80630ca21e9c14610043578063370ea1421461004d578063a4ece52c14610057575b5f5ffd5b61004b610061565b005b610055610098565b005b61005f6100cf565b005b7fcf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab60405161008e90610160565b60405180910390a1565b7fcf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab6040516100c590610160565b60405180910390a1565b7fcf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab6040516100fc90610160565b60405180910390a1565b5f82825260208201905092915050565b7f59657965000000000000000000000000000000000000000000000000000000005f82015250565b5f61014a600483610106565b915061015582610116565b602082019050919050565b5f6020820190508181035f8301526101778161013e565b905091905056fea264697066735822122090b33a65583f1578e957176be27f6807709beb4640e276c8e006d226644c769764736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xCA21E9C EQ PUSH2 0x43 JUMPI DUP1 PUSH4 0x370EA142 EQ PUSH2 0x4D JUMPI DUP1 PUSH4 0xA4ECE52C EQ PUSH2 0x57 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x4B PUSH2 0x61 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x55 PUSH2 0x98 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5F PUSH2 0xCF JUMP JUMPDEST STOP JUMPDEST PUSH32 0xCF34EF537AC33EE1AC626CA1587A0A7E8E51561E5514F8CB36AFA1C5102B3BAB PUSH1 0x40 MLOAD PUSH2 0x8E SWAP1 PUSH2 0x160 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH32 0xCF34EF537AC33EE1AC626CA1587A0A7E8E51561E5514F8CB36AFA1C5102B3BAB PUSH1 0x40 MLOAD PUSH2 0xC5 SWAP1 PUSH2 0x160 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH32 0xCF34EF537AC33EE1AC626CA1587A0A7E8E51561E5514F8CB36AFA1C5102B3BAB PUSH1 0x40 MLOAD PUSH2 0xFC SWAP1 PUSH2 0x160 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5965796500000000000000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x14A PUSH1 0x4 DUP4 PUSH2 0x106 JUMP JUMPDEST SWAP2 POP PUSH2 0x155 DUP3 PUSH2 0x116 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x177 DUP2 PUSH2 0x13E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP1 0xB3 GASPRICE PUSH6 0x583F1578E957 OR PUSH12 0xE27F6807709BEB4640E276C8 0xE0 MOD 0xD2 0x26 PUSH5 0x4C76976473 PUSH16 0x6C634300081C00330000000000000000 ",
							"sourceMap": "58:318:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;310:64;;;:::i;:::-;;172:63;;;:::i;:::-;;241;;;:::i;:::-;;310:64;356:11;;;;;;:::i;:::-;;;;;;;;310:64::o;172:63::-;217:11;;;;;;:::i;:::-;;;;;;;;172:63::o;241:::-;286:11;;;;;;:::i;:::-;;;;;;;;241:63::o;7:169:6:-;91:11;125:6;120:3;113:19;165:4;160:3;156:14;141:29;;7:169;;;;:::o;182:154::-;322:6;318:1;310:6;306:14;299:30;182:154;:::o;342:365::-;484:3;505:66;569:1;564:3;505:66;:::i;:::-;498:73;;580:93;669:3;580:93;:::i;:::-;698:2;693:3;689:12;682:19;;342:365;;;:::o;713:419::-;879:4;917:2;906:9;902:18;894:26;;966:9;960:4;956:20;952:1;941:9;937:17;930:47;994:131;1120:4;994:131;:::i;:::-;986:139;;713:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "87200",
								"executionCost": "133",
								"totalCost": "87333"
							},
							"external": {
								"hip()": "1940",
								"pop()": "1962",
								"yeye()": "1918"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 58,
									"end": 376,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 58,
									"end": 376,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 58,
									"end": 376,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 58,
									"end": 376,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 58,
									"end": 376,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 58,
									"end": 376,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 58,
									"end": 376,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 58,
									"end": 376,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 58,
									"end": 376,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 58,
									"end": 376,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 58,
									"end": 376,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 58,
									"end": 376,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 58,
									"end": 376,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 58,
									"end": 376,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 58,
									"end": 376,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 58,
									"end": 376,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 58,
									"end": 376,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 58,
									"end": 376,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 58,
									"end": 376,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 58,
									"end": 376,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 58,
									"end": 376,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122090b33a65583f1578e957176be27f6807709beb4640e276c8e006d226644c769764736f6c634300081c0033",
									".code": [
										{
											"begin": 58,
											"end": 376,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 58,
											"end": 376,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 58,
											"end": 376,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 58,
											"end": 376,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 58,
											"end": 376,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 58,
											"end": 376,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 58,
											"end": 376,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 58,
											"end": 376,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 58,
											"end": 376,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 58,
											"end": 376,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 58,
											"end": 376,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 58,
											"end": 376,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 58,
											"end": 376,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 58,
											"end": 376,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 58,
											"end": 376,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 58,
											"end": 376,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 58,
											"end": 376,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 58,
											"end": 376,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 58,
											"end": 376,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 58,
											"end": 376,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 58,
											"end": 376,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 58,
											"end": 376,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 58,
											"end": 376,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 58,
											"end": 376,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 58,
											"end": 376,
											"name": "PUSH",
											"source": 2,
											"value": "CA21E9C"
										},
										{
											"begin": 58,
											"end": 376,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 58,
											"end": 376,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 58,
											"end": 376,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 58,
											"end": 376,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 58,
											"end": 376,
											"name": "PUSH",
											"source": 2,
											"value": "370EA142"
										},
										{
											"begin": 58,
											"end": 376,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 58,
											"end": 376,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 58,
											"end": 376,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 58,
											"end": 376,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 58,
											"end": 376,
											"name": "PUSH",
											"source": 2,
											"value": "A4ECE52C"
										},
										{
											"begin": 58,
											"end": 376,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 58,
											"end": 376,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 58,
											"end": 376,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 58,
											"end": 376,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 58,
											"end": 376,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 58,
											"end": 376,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 58,
											"end": 376,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 58,
											"end": 376,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 310,
											"end": 374,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 310,
											"end": 374,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 310,
											"end": 374,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 310,
											"end": 374,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 310,
											"end": 374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 310,
											"end": 374,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 310,
											"end": 374,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 310,
											"end": 374,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 172,
											"end": 235,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 172,
											"end": 235,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 172,
											"end": 235,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 172,
											"end": 235,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 172,
											"end": 235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 172,
											"end": 235,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 172,
											"end": 235,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 172,
											"end": 235,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 241,
											"end": 304,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 241,
											"end": 304,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 241,
											"end": 304,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 241,
											"end": 304,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 241,
											"end": 304,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 241,
											"end": 304,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 241,
											"end": 304,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 241,
											"end": 304,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 310,
											"end": 374,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 310,
											"end": 374,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 356,
											"end": 367,
											"name": "PUSH",
											"source": 2,
											"value": "CF34EF537AC33EE1AC626CA1587A0A7E8E51561E5514F8CB36AFA1C5102B3BAB"
										},
										{
											"begin": 356,
											"end": 367,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 356,
											"end": 367,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 356,
											"end": 367,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 356,
											"end": 367,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 356,
											"end": 367,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 356,
											"end": 367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 356,
											"end": 367,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 356,
											"end": 367,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 356,
											"end": 367,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 356,
											"end": 367,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 356,
											"end": 367,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 356,
											"end": 367,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 356,
											"end": 367,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 356,
											"end": 367,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 356,
											"end": 367,
											"name": "LOG1",
											"source": 2
										},
										{
											"begin": 310,
											"end": 374,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 172,
											"end": 235,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 172,
											"end": 235,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 217,
											"end": 228,
											"name": "PUSH",
											"source": 2,
											"value": "CF34EF537AC33EE1AC626CA1587A0A7E8E51561E5514F8CB36AFA1C5102B3BAB"
										},
										{
											"begin": 217,
											"end": 228,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 217,
											"end": 228,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 217,
											"end": 228,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 217,
											"end": 228,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 217,
											"end": 228,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 217,
											"end": 228,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 217,
											"end": 228,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 217,
											"end": 228,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 217,
											"end": 228,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 217,
											"end": 228,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 217,
											"end": 228,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 217,
											"end": 228,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 217,
											"end": 228,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 217,
											"end": 228,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 217,
											"end": 228,
											"name": "LOG1",
											"source": 2
										},
										{
											"begin": 172,
											"end": 235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 241,
											"end": 304,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 241,
											"end": 304,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 286,
											"end": 297,
											"name": "PUSH",
											"source": 2,
											"value": "CF34EF537AC33EE1AC626CA1587A0A7E8E51561E5514F8CB36AFA1C5102B3BAB"
										},
										{
											"begin": 286,
											"end": 297,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 286,
											"end": 297,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 286,
											"end": 297,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 286,
											"end": 297,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 286,
											"end": 297,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 286,
											"end": 297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 286,
											"end": 297,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 286,
											"end": 297,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 286,
											"end": 297,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 286,
											"end": 297,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 286,
											"end": 297,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 286,
											"end": 297,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 286,
											"end": 297,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 286,
											"end": 297,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 286,
											"end": 297,
											"name": "LOG1",
											"source": 2
										},
										{
											"begin": 241,
											"end": 304,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 176,
											"name": "tag",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 7,
											"end": 176,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 91,
											"end": 102,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 125,
											"end": 131,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 120,
											"end": 123,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 113,
											"end": 132,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 165,
											"end": 169,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 160,
											"end": 163,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 156,
											"end": 170,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 141,
											"end": 170,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 141,
											"end": 170,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7,
											"end": 176,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7,
											"end": 176,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7,
											"end": 176,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7,
											"end": 176,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7,
											"end": 176,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 182,
											"end": 336,
											"name": "tag",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 182,
											"end": 336,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 322,
											"end": 328,
											"name": "PUSH",
											"source": 6,
											"value": "5965796500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 318,
											"end": 319,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 310,
											"end": 316,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 306,
											"end": 320,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 299,
											"end": 329,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 182,
											"end": 336,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 182,
											"end": 336,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 342,
											"end": 707,
											"name": "tag",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 342,
											"end": 707,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 484,
											"end": 487,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 505,
											"end": 571,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 569,
											"end": 570,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 564,
											"end": 567,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 505,
											"end": 571,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 505,
											"end": 571,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 505,
											"end": 571,
											"name": "tag",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 505,
											"end": 571,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 498,
											"end": 571,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 498,
											"end": 571,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 580,
											"end": 673,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 669,
											"end": 672,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 580,
											"end": 673,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 580,
											"end": 673,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 580,
											"end": 673,
											"name": "tag",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 580,
											"end": 673,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 698,
											"end": 700,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 693,
											"end": 696,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 689,
											"end": 701,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 682,
											"end": 701,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 682,
											"end": 701,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 342,
											"end": 707,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 342,
											"end": 707,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 342,
											"end": 707,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 342,
											"end": 707,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 713,
											"end": 1132,
											"name": "tag",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 713,
											"end": 1132,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 879,
											"end": 883,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 917,
											"end": 919,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 906,
											"end": 915,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 902,
											"end": 920,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 894,
											"end": 920,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 894,
											"end": 920,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 966,
											"end": 975,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 960,
											"end": 964,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 956,
											"end": 976,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 952,
											"end": 953,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 941,
											"end": 950,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 937,
											"end": 954,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 930,
											"end": 977,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 994,
											"end": 1125,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 1120,
											"end": 1124,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 994,
											"end": 1125,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 994,
											"end": 1125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 994,
											"end": 1125,
											"name": "tag",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 994,
											"end": 1125,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 986,
											"end": 1125,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 986,
											"end": 1125,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 713,
											"end": 1132,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 713,
											"end": 1132,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 713,
											"end": 1132,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 713,
											"end": 1132,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/study/InheritanceTest.sol",
								"contracts/study2/Import.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Errors.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"hip()": "370ea142",
							"pop()": "a4ece52c",
							"yeye()": "0ca21e9c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"msg\",\"type\":\"string\"}],\"name\":\"Log\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"hip\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pop\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"yeye\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/study/InheritanceTest.sol\":\"Yeye\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/study/InheritanceTest.sol\":{\"keccak256\":\"0x3a8c032eb89da05730a7afdfb70e36c31d24da7d52416ee3e1a0ecb1d15562bf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d50e5eb8408b348d690ecaf1ee1eaaa58d7880e056febe9ccc36991865dbbcb9\",\"dweb:/ipfs/QmbbnnhFkSqTtCBfyoNqk2RhWQE9FhwSecbv5WxXa3nioF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/study2/Import.sol": {
				"Import": {
					"abi": [
						{
							"inputs": [],
							"name": "test",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/study2/Import.sol\":376:608  contract Import {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/study2/Import.sol\":495:505  new Yeye() */\n  mload(0x40)\n  tag_1\n  swap1\n  tag_2\n  jump\t// in\ntag_1:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  0x00\n  create\n  dup1\n  iszero\n  dup1\n  iszero\n  tag_3\n  jumpi\n  returndatacopy(0x00, 0x00, returndatasize)\n  revert(0x00, returndatasize)\ntag_3:\n  pop\n    /* \"contracts/study2/Import.sol\":483:505  Yeye yeye = new Yeye() */\n  0x00\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/study2/Import.sol\":376:608  contract Import {... */\n  callvalue\n  dup1\n  iszero\n  tag_4\n  jumpi\n  revert(0x00, 0x00)\ntag_4:\n  pop\n  jump(tag_5)\ntag_2:\n  dataSize(sub_1)\n  dup1\n  dataOffset(sub_1)\n  dup4\n  codecopy\n  add\n  swap1\n  jump\t// out\ntag_5:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/study2/Import.sol\":376:608  contract Import {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xf8a8fd6d\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"contracts/study2/Import.sol\":554:606  function test() external {... */\n    tag_3:\n      tag_4\n      tag_5\n      jump\t// in\n    tag_4:\n      stop\n    tag_5:\n        /* \"contracts/study2/Import.sol\":589:593  yeye */\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/study2/Import.sol\":589:597  yeye.hip */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x370ea142\n        /* \"contracts/study2/Import.sol\":589:599  yeye.hip() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_7\n      jumpi\n      revert(0x00, 0x00)\n    tag_7:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_9\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_9:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/study2/Import.sol\":554:606  function test() external {... */\n      jump\t// out\n\n    auxdata: 0xa26469706673582212200b429ee8bfb37f313652552d7c77f194af49a97ca29bfffc072313134e5c1ade64736f6c634300081c0033\n}\n\nsub_1: assembly {\n        /* \"contracts/study/InheritanceTest.sol\":58:376  contract Yeye {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      dataSize(sub_0)\n      dup1\n      dataOffset(sub_0)\n      0x00\n      codecopy\n      0x00\n      return\n    stop\n\n    sub_0: assembly {\n            /* \"contracts/study/InheritanceTest.sol\":58:376  contract Yeye {... */\n          mstore(0x40, 0x80)\n          callvalue\n          dup1\n          iszero\n          tag_1\n          jumpi\n          revert(0x00, 0x00)\n        tag_1:\n          pop\n          jumpi(tag_2, lt(calldatasize, 0x04))\n          shr(0xe0, calldataload(0x00))\n          dup1\n          0x0ca21e9c\n          eq\n          tag_3\n          jumpi\n          dup1\n          0x370ea142\n          eq\n          tag_4\n          jumpi\n          dup1\n          0xa4ece52c\n          eq\n          tag_5\n          jumpi\n        tag_2:\n          revert(0x00, 0x00)\n            /* \"contracts/study/InheritanceTest.sol\":310:374  function yeye() public virtual {... */\n        tag_3:\n          tag_6\n          tag_7\n          jump\t// in\n        tag_6:\n          stop\n            /* \"contracts/study/InheritanceTest.sol\":172:235  function hip() public virtual {... */\n        tag_4:\n          tag_8\n          tag_9\n          jump\t// in\n        tag_8:\n          stop\n            /* \"contracts/study/InheritanceTest.sol\":241:304  function pop() public virtual {... */\n        tag_5:\n          tag_10\n          tag_11\n          jump\t// in\n        tag_10:\n          stop\n            /* \"contracts/study/InheritanceTest.sol\":310:374  function yeye() public virtual {... */\n        tag_7:\n            /* \"contracts/study/InheritanceTest.sol\":356:367  Log(\"Yeye\") */\n          0xcf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab\n          mload(0x40)\n          tag_13\n          swap1\n          tag_14\n          jump\t// in\n        tag_13:\n          mload(0x40)\n          dup1\n          swap2\n          sub\n          swap1\n          log1\n            /* \"contracts/study/InheritanceTest.sol\":310:374  function yeye() public virtual {... */\n          jump\t// out\n            /* \"contracts/study/InheritanceTest.sol\":172:235  function hip() public virtual {... */\n        tag_9:\n            /* \"contracts/study/InheritanceTest.sol\":217:228  Log(\"Yeye\") */\n          0xcf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab\n          mload(0x40)\n          tag_16\n          swap1\n          tag_14\n          jump\t// in\n        tag_16:\n          mload(0x40)\n          dup1\n          swap2\n          sub\n          swap1\n          log1\n            /* \"contracts/study/InheritanceTest.sol\":172:235  function hip() public virtual {... */\n          jump\t// out\n            /* \"contracts/study/InheritanceTest.sol\":241:304  function pop() public virtual {... */\n        tag_11:\n            /* \"contracts/study/InheritanceTest.sol\":286:297  Log(\"Yeye\") */\n          0xcf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab\n          mload(0x40)\n          tag_18\n          swap1\n          tag_14\n          jump\t// in\n        tag_18:\n          mload(0x40)\n          dup1\n          swap2\n          sub\n          swap1\n          log1\n            /* \"contracts/study/InheritanceTest.sol\":241:304  function pop() public virtual {... */\n          jump\t// out\n            /* \"#utility.yul\":7:176   */\n        tag_19:\n            /* \"#utility.yul\":91:102   */\n          0x00\n            /* \"#utility.yul\":125:131   */\n          dup3\n            /* \"#utility.yul\":120:123   */\n          dup3\n            /* \"#utility.yul\":113:132   */\n          mstore\n            /* \"#utility.yul\":165:169   */\n          0x20\n            /* \"#utility.yul\":160:163   */\n          dup3\n            /* \"#utility.yul\":156:170   */\n          add\n            /* \"#utility.yul\":141:170   */\n          swap1\n          pop\n            /* \"#utility.yul\":7:176   */\n          swap3\n          swap2\n          pop\n          pop\n          jump\t// out\n            /* \"#utility.yul\":182:336   */\n        tag_20:\n            /* \"#utility.yul\":322:328   */\n          0x5965796500000000000000000000000000000000000000000000000000000000\n            /* \"#utility.yul\":318:319   */\n          0x00\n            /* \"#utility.yul\":310:316   */\n          dup3\n            /* \"#utility.yul\":306:320   */\n          add\n            /* \"#utility.yul\":299:329   */\n          mstore\n            /* \"#utility.yul\":182:336   */\n          pop\n          jump\t// out\n            /* \"#utility.yul\":342:707   */\n        tag_21:\n            /* \"#utility.yul\":484:487   */\n          0x00\n            /* \"#utility.yul\":505:571   */\n          tag_26\n            /* \"#utility.yul\":569:570   */\n          0x04\n            /* \"#utility.yul\":564:567   */\n          dup4\n            /* \"#utility.yul\":505:571   */\n          tag_19\n          jump\t// in\n        tag_26:\n            /* \"#utility.yul\":498:571   */\n          swap2\n          pop\n            /* \"#utility.yul\":580:673   */\n          tag_27\n            /* \"#utility.yul\":669:672   */\n          dup3\n            /* \"#utility.yul\":580:673   */\n          tag_20\n          jump\t// in\n        tag_27:\n            /* \"#utility.yul\":698:700   */\n          0x20\n            /* \"#utility.yul\":693:696   */\n          dup3\n            /* \"#utility.yul\":689:701   */\n          add\n            /* \"#utility.yul\":682:701   */\n          swap1\n          pop\n            /* \"#utility.yul\":342:707   */\n          swap2\n          swap1\n          pop\n          jump\t// out\n            /* \"#utility.yul\":713:1132   */\n        tag_14:\n            /* \"#utility.yul\":879:883   */\n          0x00\n            /* \"#utility.yul\":917:919   */\n          0x20\n            /* \"#utility.yul\":906:915   */\n          dup3\n            /* \"#utility.yul\":902:920   */\n          add\n            /* \"#utility.yul\":894:920   */\n          swap1\n          pop\n            /* \"#utility.yul\":966:975   */\n          dup2\n            /* \"#utility.yul\":960:964   */\n          dup2\n            /* \"#utility.yul\":956:976   */\n          sub\n            /* \"#utility.yul\":952:953   */\n          0x00\n            /* \"#utility.yul\":941:950   */\n          dup4\n            /* \"#utility.yul\":937:954   */\n          add\n            /* \"#utility.yul\":930:977   */\n          mstore\n            /* \"#utility.yul\":994:1125   */\n          tag_29\n            /* \"#utility.yul\":1120:1124   */\n          dup2\n            /* \"#utility.yul\":994:1125   */\n          tag_21\n          jump\t// in\n        tag_29:\n            /* \"#utility.yul\":986:1125   */\n          swap1\n          pop\n            /* \"#utility.yul\":713:1132   */\n          swap2\n          swap1\n          pop\n          jump\t// out\n\n        auxdata: 0xa264697066735822122090b33a65583f1578e957176be27f6807709beb4640e276c8e006d226644c769764736f6c634300081c0033\n    }\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052604051600e906074565b604051809103905ff0801580156026573d5f5f3e3d5ffd5b505f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550348015606f575f5ffd5b506081565b6101d08061017083390190565b60e38061008d5f395ff3fe6080604052348015600e575f5ffd5b50600436106026575f3560e01c8063f8a8fd6d14602a575b5f5ffd5b60306032565b005b5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663370ea1426040518163ffffffff1660e01b81526004015f604051808303815f87803b1580156096575f5ffd5b505af115801560a7573d5f5f3e3d5ffd5b5050505056fea26469706673582212200b429ee8bfb37f313652552d7c77f194af49a97ca29bfffc072313134e5c1ade64736f6c634300081c00336080604052348015600e575f5ffd5b506101b48061001c5f395ff3fe608060405234801561000f575f5ffd5b506004361061003f575f3560e01c80630ca21e9c14610043578063370ea1421461004d578063a4ece52c14610057575b5f5ffd5b61004b610061565b005b610055610098565b005b61005f6100cf565b005b7fcf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab60405161008e90610160565b60405180910390a1565b7fcf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab6040516100c590610160565b60405180910390a1565b7fcf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab6040516100fc90610160565b60405180910390a1565b5f82825260208201905092915050565b7f59657965000000000000000000000000000000000000000000000000000000005f82015250565b5f61014a600483610106565b915061015582610116565b602082019050919050565b5f6020820190508181035f8301526101778161013e565b905091905056fea264697066735822122090b33a65583f1578e957176be27f6807709beb4640e276c8e006d226644c769764736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH1 0xE SWAP1 PUSH1 0x74 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH1 0x26 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH1 0x6F JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x81 JUMP JUMPDEST PUSH2 0x1D0 DUP1 PUSH2 0x170 DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH1 0xE3 DUP1 PUSH2 0x8D PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x26 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xF8A8FD6D EQ PUSH1 0x2A JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH1 0x30 PUSH1 0x32 JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x370EA142 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH1 0x96 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH1 0xA7 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SIGNEXTEND TIMESTAMP SWAP15 0xE8 0xBF 0xB3 PUSH32 0x313652552D7C77F194AF49A97CA29BFFFC072313134E5C1ADE64736F6C634300 ADDMOD SHR STOP CALLER PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1B4 DUP1 PUSH2 0x1C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xCA21E9C EQ PUSH2 0x43 JUMPI DUP1 PUSH4 0x370EA142 EQ PUSH2 0x4D JUMPI DUP1 PUSH4 0xA4ECE52C EQ PUSH2 0x57 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x4B PUSH2 0x61 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x55 PUSH2 0x98 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5F PUSH2 0xCF JUMP JUMPDEST STOP JUMPDEST PUSH32 0xCF34EF537AC33EE1AC626CA1587A0A7E8E51561E5514F8CB36AFA1C5102B3BAB PUSH1 0x40 MLOAD PUSH2 0x8E SWAP1 PUSH2 0x160 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH32 0xCF34EF537AC33EE1AC626CA1587A0A7E8E51561E5514F8CB36AFA1C5102B3BAB PUSH1 0x40 MLOAD PUSH2 0xC5 SWAP1 PUSH2 0x160 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH32 0xCF34EF537AC33EE1AC626CA1587A0A7E8E51561E5514F8CB36AFA1C5102B3BAB PUSH1 0x40 MLOAD PUSH2 0xFC SWAP1 PUSH2 0x160 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5965796500000000000000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x14A PUSH1 0x4 DUP4 PUSH2 0x106 JUMP JUMPDEST SWAP2 POP PUSH2 0x155 DUP3 PUSH2 0x116 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x177 DUP2 PUSH2 0x13E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP1 0xB3 GASPRICE PUSH6 0x583F1578E957 OR PUSH12 0xE27F6807709BEB4640E276C8 0xE0 MOD 0xD2 0x26 PUSH5 0x4C76976473 PUSH16 0x6C634300081C00330000000000000000 ",
							"sourceMap": "376:232:3:-:0;;;495:10;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;483:22;;;;;;;;;;;;;;;;;;;;376:232;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@test_390": {
									"entryPoint": 50,
									"id": 390,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052348015600e575f5ffd5b50600436106026575f3560e01c8063f8a8fd6d14602a575b5f5ffd5b60306032565b005b5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663370ea1426040518163ffffffff1660e01b81526004015f604051808303815f87803b1580156096575f5ffd5b505af115801560a7573d5f5f3e3d5ffd5b5050505056fea26469706673582212200b429ee8bfb37f313652552d7c77f194af49a97ca29bfffc072313134e5c1ade64736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x26 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xF8A8FD6D EQ PUSH1 0x2A JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH1 0x30 PUSH1 0x32 JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x370EA142 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH1 0x96 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH1 0xA7 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SIGNEXTEND TIMESTAMP SWAP15 0xE8 0xBF 0xB3 PUSH32 0x313652552D7C77F194AF49A97CA29BFFFC072313134E5C1ADE64736F6C634300 ADDMOD SHR STOP CALLER ",
							"sourceMap": "376:232:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;554:52;;;:::i;:::-;;;589:4;;;;;;;;;;;:8;;;:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;554:52::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "45400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"test()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 376,
									"end": 608,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 376,
									"end": 608,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 376,
									"end": 608,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 495,
									"end": 505,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 495,
									"end": 505,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 495,
									"end": 505,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 495,
									"end": 505,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 495,
									"end": 505,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 495,
									"end": 505,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 495,
									"end": 505,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 495,
									"end": 505,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 495,
									"end": 505,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 495,
									"end": 505,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 495,
									"end": 505,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 495,
									"end": 505,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 495,
									"end": 505,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 495,
									"end": 505,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 495,
									"end": 505,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 495,
									"end": 505,
									"name": "CREATE",
									"source": 3
								},
								{
									"begin": 495,
									"end": 505,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 495,
									"end": 505,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 495,
									"end": 505,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 495,
									"end": 505,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 495,
									"end": 505,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 495,
									"end": 505,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 495,
									"end": 505,
									"name": "RETURNDATASIZE",
									"source": 3
								},
								{
									"begin": 495,
									"end": 505,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 495,
									"end": 505,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 495,
									"end": 505,
									"name": "RETURNDATACOPY",
									"source": 3
								},
								{
									"begin": 495,
									"end": 505,
									"name": "RETURNDATASIZE",
									"source": 3
								},
								{
									"begin": 495,
									"end": 505,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 495,
									"end": 505,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 495,
									"end": 505,
									"name": "tag",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 495,
									"end": 505,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 495,
									"end": 505,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 483,
									"end": 505,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 483,
									"end": 505,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 483,
									"end": 505,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 483,
									"end": 505,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 483,
									"end": 505,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 483,
									"end": 505,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 483,
									"end": 505,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 483,
									"end": 505,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 483,
									"end": 505,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 483,
									"end": 505,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 483,
									"end": 505,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 483,
									"end": 505,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 483,
									"end": 505,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 483,
									"end": 505,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 483,
									"end": 505,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 483,
									"end": 505,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 483,
									"end": 505,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 483,
									"end": 505,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 483,
									"end": 505,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 483,
									"end": 505,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 376,
									"end": 608,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 376,
									"end": 608,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 376,
									"end": 608,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 376,
									"end": 608,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 376,
									"end": 608,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 376,
									"end": 608,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 376,
									"end": 608,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 376,
									"end": 608,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 376,
									"end": 608,
									"name": "tag",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 376,
									"end": 608,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 376,
									"end": 608,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 376,
									"end": 608,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "5"
								},
								{
									"begin": 376,
									"end": 608,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 376,
									"end": 608,
									"name": "tag",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 376,
									"end": 608,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 376,
									"end": 608,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000001"
								},
								{
									"begin": 376,
									"end": 608,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 376,
									"end": 608,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000001"
								},
								{
									"begin": 376,
									"end": 608,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 376,
									"end": 608,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 376,
									"end": 608,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 376,
									"end": 608,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 376,
									"end": 608,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 376,
									"end": 608,
									"name": "tag",
									"source": 3,
									"value": "5"
								},
								{
									"begin": 376,
									"end": 608,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 376,
									"end": 608,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 376,
									"end": 608,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 376,
									"end": 608,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 376,
									"end": 608,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 376,
									"end": 608,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 376,
									"end": 608,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 376,
									"end": 608,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200b429ee8bfb37f313652552d7c77f194af49a97ca29bfffc072313134e5c1ade64736f6c634300081c0033",
									".code": [
										{
											"begin": 376,
											"end": 608,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 376,
											"end": 608,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 376,
											"end": 608,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 376,
											"end": 608,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 376,
											"end": 608,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 376,
											"end": 608,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 376,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 376,
											"end": 608,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 376,
											"end": 608,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 376,
											"end": 608,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 376,
											"end": 608,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 376,
											"end": 608,
											"name": "tag",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 376,
											"end": 608,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 376,
											"end": 608,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 376,
											"end": 608,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 376,
											"end": 608,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 376,
											"end": 608,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 376,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 376,
											"end": 608,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 376,
											"end": 608,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 376,
											"end": 608,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 376,
											"end": 608,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 376,
											"end": 608,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 376,
											"end": 608,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 376,
											"end": 608,
											"name": "PUSH",
											"source": 3,
											"value": "F8A8FD6D"
										},
										{
											"begin": 376,
											"end": 608,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 376,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 376,
											"end": 608,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 376,
											"end": 608,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 376,
											"end": 608,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 376,
											"end": 608,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 376,
											"end": 608,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 376,
											"end": 608,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 554,
											"end": 606,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 554,
											"end": 606,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 554,
											"end": 606,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 554,
											"end": 606,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 554,
											"end": 606,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 554,
											"end": 606,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 554,
											"end": 606,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 554,
											"end": 606,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 554,
											"end": 606,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 554,
											"end": 606,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 589,
											"end": 593,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 589,
											"end": 593,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 589,
											"end": 593,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 589,
											"end": 593,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 589,
											"end": 593,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 589,
											"end": 593,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 589,
											"end": 593,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 589,
											"end": 593,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 589,
											"end": 593,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 589,
											"end": 593,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 589,
											"end": 593,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 589,
											"end": 597,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 589,
											"end": 597,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 589,
											"end": 597,
											"name": "PUSH",
											"source": 3,
											"value": "370EA142"
										},
										{
											"begin": 589,
											"end": 599,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 589,
											"end": 599,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 589,
											"end": 599,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 589,
											"end": 599,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 589,
											"end": 599,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 589,
											"end": 599,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 589,
											"end": 599,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 589,
											"end": 599,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 589,
											"end": 599,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 589,
											"end": 599,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 589,
											"end": 599,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 589,
											"end": 599,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 589,
											"end": 599,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 589,
											"end": 599,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 589,
											"end": 599,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 589,
											"end": 599,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 589,
											"end": 599,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 589,
											"end": 599,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 589,
											"end": 599,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 589,
											"end": 599,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 589,
											"end": 599,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 589,
											"end": 599,
											"name": "EXTCODESIZE",
											"source": 3
										},
										{
											"begin": 589,
											"end": 599,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 589,
											"end": 599,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 589,
											"end": 599,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 589,
											"end": 599,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 589,
											"end": 599,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 589,
											"end": 599,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 589,
											"end": 599,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 589,
											"end": 599,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 589,
											"end": 599,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 589,
											"end": 599,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 589,
											"end": 599,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 589,
											"end": 599,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 589,
											"end": 599,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 589,
											"end": 599,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 589,
											"end": 599,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 589,
											"end": 599,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 589,
											"end": 599,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 589,
											"end": 599,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 589,
											"end": 599,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 589,
											"end": 599,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 589,
											"end": 599,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 589,
											"end": 599,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 589,
											"end": 599,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 589,
											"end": 599,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 589,
											"end": 599,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 589,
											"end": 599,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 589,
											"end": 599,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 589,
											"end": 599,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 589,
											"end": 599,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 589,
											"end": 599,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 589,
											"end": 599,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 554,
											"end": 606,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										}
									]
								},
								"1": {
									".code": [
										{
											"begin": 58,
											"end": 376,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 58,
											"end": 376,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 58,
											"end": 376,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 58,
											"end": 376,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 58,
											"end": 376,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 58,
											"end": 376,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 58,
											"end": 376,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 58,
											"end": 376,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 58,
											"end": 376,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 58,
											"end": 376,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 58,
											"end": 376,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 58,
											"end": 376,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 58,
											"end": 376,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 58,
											"end": 376,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 58,
											"end": 376,
											"name": "PUSH #[$]",
											"source": 2,
											"value": "0000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 58,
											"end": 376,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 58,
											"end": 376,
											"name": "PUSH [$]",
											"source": 2,
											"value": "0000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 58,
											"end": 376,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 58,
											"end": 376,
											"name": "CODECOPY",
											"source": 2
										},
										{
											"begin": 58,
											"end": 376,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 58,
											"end": 376,
											"name": "RETURN",
											"source": 2
										}
									],
									".data": {
										"0": {
											".auxdata": "a264697066735822122090b33a65583f1578e957176be27f6807709beb4640e276c8e006d226644c769764736f6c634300081c0033",
											".code": [
												{
													"begin": 58,
													"end": 376,
													"name": "PUSH",
													"source": 2,
													"value": "80"
												},
												{
													"begin": 58,
													"end": 376,
													"name": "PUSH",
													"source": 2,
													"value": "40"
												},
												{
													"begin": 58,
													"end": 376,
													"name": "MSTORE",
													"source": 2
												},
												{
													"begin": 58,
													"end": 376,
													"name": "CALLVALUE",
													"source": 2
												},
												{
													"begin": 58,
													"end": 376,
													"name": "DUP1",
													"source": 2
												},
												{
													"begin": 58,
													"end": 376,
													"name": "ISZERO",
													"source": 2
												},
												{
													"begin": 58,
													"end": 376,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "1"
												},
												{
													"begin": 58,
													"end": 376,
													"name": "JUMPI",
													"source": 2
												},
												{
													"begin": 58,
													"end": 376,
													"name": "PUSH",
													"source": 2,
													"value": "0"
												},
												{
													"begin": 58,
													"end": 376,
													"name": "PUSH",
													"source": 2,
													"value": "0"
												},
												{
													"begin": 58,
													"end": 376,
													"name": "REVERT",
													"source": 2
												},
												{
													"begin": 58,
													"end": 376,
													"name": "tag",
													"source": 2,
													"value": "1"
												},
												{
													"begin": 58,
													"end": 376,
													"name": "JUMPDEST",
													"source": 2
												},
												{
													"begin": 58,
													"end": 376,
													"name": "POP",
													"source": 2
												},
												{
													"begin": 58,
													"end": 376,
													"name": "PUSH",
													"source": 2,
													"value": "4"
												},
												{
													"begin": 58,
													"end": 376,
													"name": "CALLDATASIZE",
													"source": 2
												},
												{
													"begin": 58,
													"end": 376,
													"name": "LT",
													"source": 2
												},
												{
													"begin": 58,
													"end": 376,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "2"
												},
												{
													"begin": 58,
													"end": 376,
													"name": "JUMPI",
													"source": 2
												},
												{
													"begin": 58,
													"end": 376,
													"name": "PUSH",
													"source": 2,
													"value": "0"
												},
												{
													"begin": 58,
													"end": 376,
													"name": "CALLDATALOAD",
													"source": 2
												},
												{
													"begin": 58,
													"end": 376,
													"name": "PUSH",
													"source": 2,
													"value": "E0"
												},
												{
													"begin": 58,
													"end": 376,
													"name": "SHR",
													"source": 2
												},
												{
													"begin": 58,
													"end": 376,
													"name": "DUP1",
													"source": 2
												},
												{
													"begin": 58,
													"end": 376,
													"name": "PUSH",
													"source": 2,
													"value": "CA21E9C"
												},
												{
													"begin": 58,
													"end": 376,
													"name": "EQ",
													"source": 2
												},
												{
													"begin": 58,
													"end": 376,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "3"
												},
												{
													"begin": 58,
													"end": 376,
													"name": "JUMPI",
													"source": 2
												},
												{
													"begin": 58,
													"end": 376,
													"name": "DUP1",
													"source": 2
												},
												{
													"begin": 58,
													"end": 376,
													"name": "PUSH",
													"source": 2,
													"value": "370EA142"
												},
												{
													"begin": 58,
													"end": 376,
													"name": "EQ",
													"source": 2
												},
												{
													"begin": 58,
													"end": 376,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "4"
												},
												{
													"begin": 58,
													"end": 376,
													"name": "JUMPI",
													"source": 2
												},
												{
													"begin": 58,
													"end": 376,
													"name": "DUP1",
													"source": 2
												},
												{
													"begin": 58,
													"end": 376,
													"name": "PUSH",
													"source": 2,
													"value": "A4ECE52C"
												},
												{
													"begin": 58,
													"end": 376,
													"name": "EQ",
													"source": 2
												},
												{
													"begin": 58,
													"end": 376,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "5"
												},
												{
													"begin": 58,
													"end": 376,
													"name": "JUMPI",
													"source": 2
												},
												{
													"begin": 58,
													"end": 376,
													"name": "tag",
													"source": 2,
													"value": "2"
												},
												{
													"begin": 58,
													"end": 376,
													"name": "JUMPDEST",
													"source": 2
												},
												{
													"begin": 58,
													"end": 376,
													"name": "PUSH",
													"source": 2,
													"value": "0"
												},
												{
													"begin": 58,
													"end": 376,
													"name": "PUSH",
													"source": 2,
													"value": "0"
												},
												{
													"begin": 58,
													"end": 376,
													"name": "REVERT",
													"source": 2
												},
												{
													"begin": 310,
													"end": 374,
													"name": "tag",
													"source": 2,
													"value": "3"
												},
												{
													"begin": 310,
													"end": 374,
													"name": "JUMPDEST",
													"source": 2
												},
												{
													"begin": 310,
													"end": 374,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "6"
												},
												{
													"begin": 310,
													"end": 374,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "7"
												},
												{
													"begin": 310,
													"end": 374,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 2
												},
												{
													"begin": 310,
													"end": 374,
													"name": "tag",
													"source": 2,
													"value": "6"
												},
												{
													"begin": 310,
													"end": 374,
													"name": "JUMPDEST",
													"source": 2
												},
												{
													"begin": 310,
													"end": 374,
													"name": "STOP",
													"source": 2
												},
												{
													"begin": 172,
													"end": 235,
													"name": "tag",
													"source": 2,
													"value": "4"
												},
												{
													"begin": 172,
													"end": 235,
													"name": "JUMPDEST",
													"source": 2
												},
												{
													"begin": 172,
													"end": 235,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "8"
												},
												{
													"begin": 172,
													"end": 235,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "9"
												},
												{
													"begin": 172,
													"end": 235,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 2
												},
												{
													"begin": 172,
													"end": 235,
													"name": "tag",
													"source": 2,
													"value": "8"
												},
												{
													"begin": 172,
													"end": 235,
													"name": "JUMPDEST",
													"source": 2
												},
												{
													"begin": 172,
													"end": 235,
													"name": "STOP",
													"source": 2
												},
												{
													"begin": 241,
													"end": 304,
													"name": "tag",
													"source": 2,
													"value": "5"
												},
												{
													"begin": 241,
													"end": 304,
													"name": "JUMPDEST",
													"source": 2
												},
												{
													"begin": 241,
													"end": 304,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "10"
												},
												{
													"begin": 241,
													"end": 304,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "11"
												},
												{
													"begin": 241,
													"end": 304,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 2
												},
												{
													"begin": 241,
													"end": 304,
													"name": "tag",
													"source": 2,
													"value": "10"
												},
												{
													"begin": 241,
													"end": 304,
													"name": "JUMPDEST",
													"source": 2
												},
												{
													"begin": 241,
													"end": 304,
													"name": "STOP",
													"source": 2
												},
												{
													"begin": 310,
													"end": 374,
													"name": "tag",
													"source": 2,
													"value": "7"
												},
												{
													"begin": 310,
													"end": 374,
													"name": "JUMPDEST",
													"source": 2
												},
												{
													"begin": 356,
													"end": 367,
													"name": "PUSH",
													"source": 2,
													"value": "CF34EF537AC33EE1AC626CA1587A0A7E8E51561E5514F8CB36AFA1C5102B3BAB"
												},
												{
													"begin": 356,
													"end": 367,
													"name": "PUSH",
													"source": 2,
													"value": "40"
												},
												{
													"begin": 356,
													"end": 367,
													"name": "MLOAD",
													"source": 2
												},
												{
													"begin": 356,
													"end": 367,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "13"
												},
												{
													"begin": 356,
													"end": 367,
													"name": "SWAP1",
													"source": 2
												},
												{
													"begin": 356,
													"end": 367,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "14"
												},
												{
													"begin": 356,
													"end": 367,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 2
												},
												{
													"begin": 356,
													"end": 367,
													"name": "tag",
													"source": 2,
													"value": "13"
												},
												{
													"begin": 356,
													"end": 367,
													"name": "JUMPDEST",
													"source": 2
												},
												{
													"begin": 356,
													"end": 367,
													"name": "PUSH",
													"source": 2,
													"value": "40"
												},
												{
													"begin": 356,
													"end": 367,
													"name": "MLOAD",
													"source": 2
												},
												{
													"begin": 356,
													"end": 367,
													"name": "DUP1",
													"source": 2
												},
												{
													"begin": 356,
													"end": 367,
													"name": "SWAP2",
													"source": 2
												},
												{
													"begin": 356,
													"end": 367,
													"name": "SUB",
													"source": 2
												},
												{
													"begin": 356,
													"end": 367,
													"name": "SWAP1",
													"source": 2
												},
												{
													"begin": 356,
													"end": 367,
													"name": "LOG1",
													"source": 2
												},
												{
													"begin": 310,
													"end": 374,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 2
												},
												{
													"begin": 172,
													"end": 235,
													"name": "tag",
													"source": 2,
													"value": "9"
												},
												{
													"begin": 172,
													"end": 235,
													"name": "JUMPDEST",
													"source": 2
												},
												{
													"begin": 217,
													"end": 228,
													"name": "PUSH",
													"source": 2,
													"value": "CF34EF537AC33EE1AC626CA1587A0A7E8E51561E5514F8CB36AFA1C5102B3BAB"
												},
												{
													"begin": 217,
													"end": 228,
													"name": "PUSH",
													"source": 2,
													"value": "40"
												},
												{
													"begin": 217,
													"end": 228,
													"name": "MLOAD",
													"source": 2
												},
												{
													"begin": 217,
													"end": 228,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "16"
												},
												{
													"begin": 217,
													"end": 228,
													"name": "SWAP1",
													"source": 2
												},
												{
													"begin": 217,
													"end": 228,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "14"
												},
												{
													"begin": 217,
													"end": 228,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 2
												},
												{
													"begin": 217,
													"end": 228,
													"name": "tag",
													"source": 2,
													"value": "16"
												},
												{
													"begin": 217,
													"end": 228,
													"name": "JUMPDEST",
													"source": 2
												},
												{
													"begin": 217,
													"end": 228,
													"name": "PUSH",
													"source": 2,
													"value": "40"
												},
												{
													"begin": 217,
													"end": 228,
													"name": "MLOAD",
													"source": 2
												},
												{
													"begin": 217,
													"end": 228,
													"name": "DUP1",
													"source": 2
												},
												{
													"begin": 217,
													"end": 228,
													"name": "SWAP2",
													"source": 2
												},
												{
													"begin": 217,
													"end": 228,
													"name": "SUB",
													"source": 2
												},
												{
													"begin": 217,
													"end": 228,
													"name": "SWAP1",
													"source": 2
												},
												{
													"begin": 217,
													"end": 228,
													"name": "LOG1",
													"source": 2
												},
												{
													"begin": 172,
													"end": 235,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 2
												},
												{
													"begin": 241,
													"end": 304,
													"name": "tag",
													"source": 2,
													"value": "11"
												},
												{
													"begin": 241,
													"end": 304,
													"name": "JUMPDEST",
													"source": 2
												},
												{
													"begin": 286,
													"end": 297,
													"name": "PUSH",
													"source": 2,
													"value": "CF34EF537AC33EE1AC626CA1587A0A7E8E51561E5514F8CB36AFA1C5102B3BAB"
												},
												{
													"begin": 286,
													"end": 297,
													"name": "PUSH",
													"source": 2,
													"value": "40"
												},
												{
													"begin": 286,
													"end": 297,
													"name": "MLOAD",
													"source": 2
												},
												{
													"begin": 286,
													"end": 297,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "18"
												},
												{
													"begin": 286,
													"end": 297,
													"name": "SWAP1",
													"source": 2
												},
												{
													"begin": 286,
													"end": 297,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "14"
												},
												{
													"begin": 286,
													"end": 297,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 2
												},
												{
													"begin": 286,
													"end": 297,
													"name": "tag",
													"source": 2,
													"value": "18"
												},
												{
													"begin": 286,
													"end": 297,
													"name": "JUMPDEST",
													"source": 2
												},
												{
													"begin": 286,
													"end": 297,
													"name": "PUSH",
													"source": 2,
													"value": "40"
												},
												{
													"begin": 286,
													"end": 297,
													"name": "MLOAD",
													"source": 2
												},
												{
													"begin": 286,
													"end": 297,
													"name": "DUP1",
													"source": 2
												},
												{
													"begin": 286,
													"end": 297,
													"name": "SWAP2",
													"source": 2
												},
												{
													"begin": 286,
													"end": 297,
													"name": "SUB",
													"source": 2
												},
												{
													"begin": 286,
													"end": 297,
													"name": "SWAP1",
													"source": 2
												},
												{
													"begin": 286,
													"end": 297,
													"name": "LOG1",
													"source": 2
												},
												{
													"begin": 241,
													"end": 304,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 2
												},
												{
													"begin": 7,
													"end": 176,
													"name": "tag",
													"source": 6,
													"value": "19"
												},
												{
													"begin": 7,
													"end": 176,
													"name": "JUMPDEST",
													"source": 6
												},
												{
													"begin": 91,
													"end": 102,
													"name": "PUSH",
													"source": 6,
													"value": "0"
												},
												{
													"begin": 125,
													"end": 131,
													"name": "DUP3",
													"source": 6
												},
												{
													"begin": 120,
													"end": 123,
													"name": "DUP3",
													"source": 6
												},
												{
													"begin": 113,
													"end": 132,
													"name": "MSTORE",
													"source": 6
												},
												{
													"begin": 165,
													"end": 169,
													"name": "PUSH",
													"source": 6,
													"value": "20"
												},
												{
													"begin": 160,
													"end": 163,
													"name": "DUP3",
													"source": 6
												},
												{
													"begin": 156,
													"end": 170,
													"name": "ADD",
													"source": 6
												},
												{
													"begin": 141,
													"end": 170,
													"name": "SWAP1",
													"source": 6
												},
												{
													"begin": 141,
													"end": 170,
													"name": "POP",
													"source": 6
												},
												{
													"begin": 7,
													"end": 176,
													"name": "SWAP3",
													"source": 6
												},
												{
													"begin": 7,
													"end": 176,
													"name": "SWAP2",
													"source": 6
												},
												{
													"begin": 7,
													"end": 176,
													"name": "POP",
													"source": 6
												},
												{
													"begin": 7,
													"end": 176,
													"name": "POP",
													"source": 6
												},
												{
													"begin": 7,
													"end": 176,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 6
												},
												{
													"begin": 182,
													"end": 336,
													"name": "tag",
													"source": 6,
													"value": "20"
												},
												{
													"begin": 182,
													"end": 336,
													"name": "JUMPDEST",
													"source": 6
												},
												{
													"begin": 322,
													"end": 328,
													"name": "PUSH",
													"source": 6,
													"value": "5965796500000000000000000000000000000000000000000000000000000000"
												},
												{
													"begin": 318,
													"end": 319,
													"name": "PUSH",
													"source": 6,
													"value": "0"
												},
												{
													"begin": 310,
													"end": 316,
													"name": "DUP3",
													"source": 6
												},
												{
													"begin": 306,
													"end": 320,
													"name": "ADD",
													"source": 6
												},
												{
													"begin": 299,
													"end": 329,
													"name": "MSTORE",
													"source": 6
												},
												{
													"begin": 182,
													"end": 336,
													"name": "POP",
													"source": 6
												},
												{
													"begin": 182,
													"end": 336,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 6
												},
												{
													"begin": 342,
													"end": 707,
													"name": "tag",
													"source": 6,
													"value": "21"
												},
												{
													"begin": 342,
													"end": 707,
													"name": "JUMPDEST",
													"source": 6
												},
												{
													"begin": 484,
													"end": 487,
													"name": "PUSH",
													"source": 6,
													"value": "0"
												},
												{
													"begin": 505,
													"end": 571,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "26"
												},
												{
													"begin": 569,
													"end": 570,
													"name": "PUSH",
													"source": 6,
													"value": "4"
												},
												{
													"begin": 564,
													"end": 567,
													"name": "DUP4",
													"source": 6
												},
												{
													"begin": 505,
													"end": 571,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "19"
												},
												{
													"begin": 505,
													"end": 571,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 6
												},
												{
													"begin": 505,
													"end": 571,
													"name": "tag",
													"source": 6,
													"value": "26"
												},
												{
													"begin": 505,
													"end": 571,
													"name": "JUMPDEST",
													"source": 6
												},
												{
													"begin": 498,
													"end": 571,
													"name": "SWAP2",
													"source": 6
												},
												{
													"begin": 498,
													"end": 571,
													"name": "POP",
													"source": 6
												},
												{
													"begin": 580,
													"end": 673,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "27"
												},
												{
													"begin": 669,
													"end": 672,
													"name": "DUP3",
													"source": 6
												},
												{
													"begin": 580,
													"end": 673,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "20"
												},
												{
													"begin": 580,
													"end": 673,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 6
												},
												{
													"begin": 580,
													"end": 673,
													"name": "tag",
													"source": 6,
													"value": "27"
												},
												{
													"begin": 580,
													"end": 673,
													"name": "JUMPDEST",
													"source": 6
												},
												{
													"begin": 698,
													"end": 700,
													"name": "PUSH",
													"source": 6,
													"value": "20"
												},
												{
													"begin": 693,
													"end": 696,
													"name": "DUP3",
													"source": 6
												},
												{
													"begin": 689,
													"end": 701,
													"name": "ADD",
													"source": 6
												},
												{
													"begin": 682,
													"end": 701,
													"name": "SWAP1",
													"source": 6
												},
												{
													"begin": 682,
													"end": 701,
													"name": "POP",
													"source": 6
												},
												{
													"begin": 342,
													"end": 707,
													"name": "SWAP2",
													"source": 6
												},
												{
													"begin": 342,
													"end": 707,
													"name": "SWAP1",
													"source": 6
												},
												{
													"begin": 342,
													"end": 707,
													"name": "POP",
													"source": 6
												},
												{
													"begin": 342,
													"end": 707,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 6
												},
												{
													"begin": 713,
													"end": 1132,
													"name": "tag",
													"source": 6,
													"value": "14"
												},
												{
													"begin": 713,
													"end": 1132,
													"name": "JUMPDEST",
													"source": 6
												},
												{
													"begin": 879,
													"end": 883,
													"name": "PUSH",
													"source": 6,
													"value": "0"
												},
												{
													"begin": 917,
													"end": 919,
													"name": "PUSH",
													"source": 6,
													"value": "20"
												},
												{
													"begin": 906,
													"end": 915,
													"name": "DUP3",
													"source": 6
												},
												{
													"begin": 902,
													"end": 920,
													"name": "ADD",
													"source": 6
												},
												{
													"begin": 894,
													"end": 920,
													"name": "SWAP1",
													"source": 6
												},
												{
													"begin": 894,
													"end": 920,
													"name": "POP",
													"source": 6
												},
												{
													"begin": 966,
													"end": 975,
													"name": "DUP2",
													"source": 6
												},
												{
													"begin": 960,
													"end": 964,
													"name": "DUP2",
													"source": 6
												},
												{
													"begin": 956,
													"end": 976,
													"name": "SUB",
													"source": 6
												},
												{
													"begin": 952,
													"end": 953,
													"name": "PUSH",
													"source": 6,
													"value": "0"
												},
												{
													"begin": 941,
													"end": 950,
													"name": "DUP4",
													"source": 6
												},
												{
													"begin": 937,
													"end": 954,
													"name": "ADD",
													"source": 6
												},
												{
													"begin": 930,
													"end": 977,
													"name": "MSTORE",
													"source": 6
												},
												{
													"begin": 994,
													"end": 1125,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "29"
												},
												{
													"begin": 1120,
													"end": 1124,
													"name": "DUP2",
													"source": 6
												},
												{
													"begin": 994,
													"end": 1125,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "21"
												},
												{
													"begin": 994,
													"end": 1125,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 6
												},
												{
													"begin": 994,
													"end": 1125,
													"name": "tag",
													"source": 6,
													"value": "29"
												},
												{
													"begin": 994,
													"end": 1125,
													"name": "JUMPDEST",
													"source": 6
												},
												{
													"begin": 986,
													"end": 1125,
													"name": "SWAP1",
													"source": 6
												},
												{
													"begin": 986,
													"end": 1125,
													"name": "POP",
													"source": 6
												},
												{
													"begin": 713,
													"end": 1132,
													"name": "SWAP2",
													"source": 6
												},
												{
													"begin": 713,
													"end": 1132,
													"name": "SWAP1",
													"source": 6
												},
												{
													"begin": 713,
													"end": 1132,
													"name": "POP",
													"source": 6
												},
												{
													"begin": 713,
													"end": 1132,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 6
												}
											]
										}
									}
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/study/InheritanceTest.sol",
								"contracts/study2/Import.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Errors.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"test()": "f8a8fd6d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"test\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/study2/Import.sol\":\"Import\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/study/InheritanceTest.sol\":{\"keccak256\":\"0x3a8c032eb89da05730a7afdfb70e36c31d24da7d52416ee3e1a0ecb1d15562bf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d50e5eb8408b348d690ecaf1ee1eaaa58d7880e056febe9ccc36991865dbbcb9\",\"dweb:/ipfs/QmbbnnhFkSqTtCBfyoNqk2RhWQE9FhwSecbv5WxXa3nioF\"]},\"contracts/study2/Import.sol\":{\"keccak256\":\"0xd4ebdf496e72ea44e0b753e3b7ac9650ea2b15d13fea8cdbe226d634368342a8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c0b54a429aacb686e293510136b00042674940b34d380d43183c5864c1b67cf2\",\"dweb:/ipfs/QmcpEHQorVnFQqxHQgF9sc5VHmZcpXBArNnkZZGsQu5Q56\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":{\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23\",\"dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 381,
								"contract": "contracts/study2/Import.sol:Import",
								"label": "yeye",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(Yeye)208"
							}
						],
						"types": {
							"t_contract(Yeye)208": {
								"encoding": "inplace",
								"label": "contract Yeye",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol": {
				"Address": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":233:6032  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":233:6032  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa2646970667358221220083553e5d7722819e70fc612fb9e4a2b8e01c78614c566d7fc66d906fe31858d64736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220083553e5d7722819e70fc612fb9e4a2b8e01c78614c566d7fc66d906fe31858d64736f6c634300081c0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADDMOD CALLDATALOAD MSTORE8 0xE5 0xD7 PUSH19 0x2819E70FC612FB9E4A2B8E01C78614C566D7FC PUSH7 0xD906FE31858D64 PUSH20 0x6F6C634300081C00330000000000000000000000 ",
							"sourceMap": "233:5799:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220083553e5d7722819e70fc612fb9e4a2b8e01c78614c566d7fc66d906fe31858d64736f6c634300081c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADDMOD CALLDATALOAD MSTORE8 0xE5 0xD7 PUSH19 0x2819E70FC612FB9E4A2B8E01C78614C566D7FC PUSH7 0xD906FE31858D64 PUSH20 0x6F6C634300081C00330000000000000000000000 ",
							"sourceMap": "233:5799:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_revert(bytes memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220083553e5d7722819e70fc612fb9e4a2b8e01c78614c566d7fc66d906fe31858d64736f6c634300081c0033",
									".code": [
										{
											"begin": 233,
											"end": 6032,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/study/InheritanceTest.sol",
								"contracts/study2/Import.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Errors.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":{\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23\",\"dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Errors.sol": {
				"Errors": {
					"abi": [
						{
							"inputs": [],
							"name": "FailedCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedDeployment",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "MissingPrecompile",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._",
						"errors": {
							"FailedCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"FailedDeployment()": [
								{
									"details": "The deployment failed."
								}
							],
							"InsufficientBalance(uint256,uint256)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"MissingPrecompile(address)": [
								{
									"details": "A necessary precompile is missing."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Errors.sol\":411:895  library Errors {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Errors.sol\":411:895  library Errors {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa2646970667358221220e5cd7c386cfc50960b9fa26495e551e2211f7ac5d923d0a332876f25278245eb64736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220e5cd7c386cfc50960b9fa26495e551e2211f7ac5d923d0a332876f25278245eb64736f6c634300081c0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE5 0xCD PUSH29 0x386CFC50960B9FA26495E551E2211F7AC5D923D0A332876F25278245EB PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
							"sourceMap": "411:484:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220e5cd7c386cfc50960b9fa26495e551e2211f7ac5d923d0a332876f25278245eb64736f6c634300081c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE5 0xCD PUSH29 0x386CFC50960B9FA26495E551E2211F7AC5D923D0A332876F25278245EB PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
							"sourceMap": "411:484:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 411,
									"end": 895,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 411,
									"end": 895,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 411,
									"end": 895,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 411,
									"end": 895,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e5cd7c386cfc50960b9fa26495e551e2211f7ac5d923d0a332876f25278245eb64736f6c634300081c0033",
									".code": [
										{
											"begin": 411,
											"end": 895,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 411,
											"end": 895,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 411,
											"end": 895,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/study/InheritanceTest.sol",
								"contracts/study2/Import.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Errors.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedDeployment\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"MissingPrecompile\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._\",\"errors\":{\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"FailedDeployment()\":[{\"details\":\"The deployment failed.\"}],\"InsufficientBalance(uint256,uint256)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"MissingPrecompile(address)\":[{\"details\":\"A necessary precompile is missing.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Errors.sol\":\"Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							177
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 178,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 177,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 177,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								177
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 159,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 159,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							177
						]
					},
					"id": 178,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:1",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 177,
							"linearizedBaseContracts": [
								177
							],
							"name": "Context",
							"nameLocation": "642:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 158,
										"nodeType": "Block",
										"src": "718:34:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 155,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 156,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:1",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 154,
												"id": 157,
												"nodeType": "Return",
												"src": "728:17:1"
											}
										]
									},
									"id": 159,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:1"
									},
									"returnParameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "709:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:1"
									},
									"scope": 177,
									"src": "656:96:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 167,
										"nodeType": "Block",
										"src": "825:32:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 164,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:1",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 163,
												"id": 166,
												"nodeType": "Return",
												"src": "835:15:1"
											}
										]
									},
									"id": 168,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:1"
									},
									"returnParameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "809:14:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 161,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:1"
									},
									"scope": 177,
									"src": "758:99:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 175,
										"nodeType": "Block",
										"src": "935:25:1",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 173,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 172,
												"id": 174,
												"nodeType": "Return",
												"src": "945:8:1"
											}
										]
									},
									"id": 176,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:1"
									},
									"returnParameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "926:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 170,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:1"
									},
									"scope": 177,
									"src": "863:97:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 178,
							"src": "624:338:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:1"
				},
				"id": 1
			},
			"contracts/study/InheritanceTest.sol": {
				"ast": {
					"absolutePath": "contracts/study/InheritanceTest.sol",
					"exportedSymbols": {
						"Baba": [
							237
						],
						"Base1": [
							303
						],
						"Erzi": [
							282
						],
						"Identifier": [
							364
						],
						"Yeye": [
							208
						]
					},
					"id": 365,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 179,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".21"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Yeye",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 208,
							"linearizedBaseContracts": [
								208
							],
							"name": "Yeye",
							"nameLocation": "67:4:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "cf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab",
									"id": 183,
									"name": "Log",
									"nameLocation": "84:3:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"indexed": false,
												"mutability": "mutable",
												"name": "msg",
												"nameLocation": "95:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "88:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 180,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "88:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "87:12:2"
									},
									"src": "78:22:2"
								},
								{
									"body": {
										"id": 190,
										"nodeType": "Block",
										"src": "202:33:2",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"hexValue": "59657965",
															"id": 187,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "221:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_552f12338174ce6152a5d9af9e1035e4f5e814d72e8245416f12a96744f11caa",
																"typeString": "literal_string \"Yeye\""
															},
															"value": "Yeye"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_552f12338174ce6152a5d9af9e1035e4f5e814d72e8245416f12a96744f11caa",
																"typeString": "literal_string \"Yeye\""
															}
														],
														"id": 186,
														"name": "Log",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 183,
														"src": "217:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory)"
														}
													},
													"id": 188,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "217:11:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 189,
												"nodeType": "EmitStatement",
												"src": "212:16:2"
											}
										]
									},
									"functionSelector": "370ea142",
									"id": 191,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hip",
									"nameLocation": "181:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "184:2:2"
									},
									"returnParameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "202:0:2"
									},
									"scope": 208,
									"src": "172:63:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 198,
										"nodeType": "Block",
										"src": "271:33:2",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"hexValue": "59657965",
															"id": 195,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "290:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_552f12338174ce6152a5d9af9e1035e4f5e814d72e8245416f12a96744f11caa",
																"typeString": "literal_string \"Yeye\""
															},
															"value": "Yeye"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_552f12338174ce6152a5d9af9e1035e4f5e814d72e8245416f12a96744f11caa",
																"typeString": "literal_string \"Yeye\""
															}
														],
														"id": 194,
														"name": "Log",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 183,
														"src": "286:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory)"
														}
													},
													"id": 196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "286:11:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 197,
												"nodeType": "EmitStatement",
												"src": "281:16:2"
											}
										]
									},
									"functionSelector": "a4ece52c",
									"id": 199,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "pop",
									"nameLocation": "250:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 192,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "253:2:2"
									},
									"returnParameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "271:0:2"
									},
									"scope": 208,
									"src": "241:63:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 206,
										"nodeType": "Block",
										"src": "341:33:2",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"hexValue": "59657965",
															"id": 203,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "360:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_552f12338174ce6152a5d9af9e1035e4f5e814d72e8245416f12a96744f11caa",
																"typeString": "literal_string \"Yeye\""
															},
															"value": "Yeye"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_552f12338174ce6152a5d9af9e1035e4f5e814d72e8245416f12a96744f11caa",
																"typeString": "literal_string \"Yeye\""
															}
														],
														"id": 202,
														"name": "Log",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 183,
														"src": "356:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory)"
														}
													},
													"id": 204,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "356:11:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 205,
												"nodeType": "EmitStatement",
												"src": "351:16:2"
											}
										]
									},
									"functionSelector": "0ca21e9c",
									"id": 207,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "yeye",
									"nameLocation": "319:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 200,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "323:2:2"
									},
									"returnParameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "341:0:2"
									},
									"scope": 208,
									"src": "310:64:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 365,
							"src": "58:318:2",
							"usedErrors": [],
							"usedEvents": [
								183
							]
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 209,
										"name": "Yeye",
										"nameLocations": [
											"395:4:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 208,
										"src": "395:4:2"
									},
									"id": 210,
									"nodeType": "InheritanceSpecifier",
									"src": "395:4:2"
								}
							],
							"canonicalName": "Baba",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 237,
							"linearizedBaseContracts": [
								237,
								208
							],
							"name": "Baba",
							"nameLocation": "387:4:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										191
									],
									"body": {
										"id": 218,
										"nodeType": "Block",
										"src": "510:33:2",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"hexValue": "42616261",
															"id": 215,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "529:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_860eea7158d3e1f75d549e2d9b523582079ba1f73523ab92bd1d9cc4a280f619",
																"typeString": "literal_string \"Baba\""
															},
															"value": "Baba"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_860eea7158d3e1f75d549e2d9b523582079ba1f73523ab92bd1d9cc4a280f619",
																"typeString": "literal_string \"Baba\""
															}
														],
														"id": 214,
														"name": "Log",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 183,
														"src": "525:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory)"
														}
													},
													"id": 216,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "525:11:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 217,
												"nodeType": "EmitStatement",
												"src": "520:16:2"
											}
										]
									},
									"functionSelector": "370ea142",
									"id": 219,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hip",
									"nameLocation": "480:3:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 212,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "501:8:2"
									},
									"parameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "483:2:2"
									},
									"returnParameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "510:0:2"
									},
									"scope": 237,
									"src": "471:72:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										199
									],
									"body": {
										"id": 227,
										"nodeType": "Block",
										"src": "588:33:2",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"hexValue": "42616261",
															"id": 224,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "607:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_860eea7158d3e1f75d549e2d9b523582079ba1f73523ab92bd1d9cc4a280f619",
																"typeString": "literal_string \"Baba\""
															},
															"value": "Baba"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_860eea7158d3e1f75d549e2d9b523582079ba1f73523ab92bd1d9cc4a280f619",
																"typeString": "literal_string \"Baba\""
															}
														],
														"id": 223,
														"name": "Log",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 183,
														"src": "603:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory)"
														}
													},
													"id": 225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "603:11:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 226,
												"nodeType": "EmitStatement",
												"src": "598:16:2"
											}
										]
									},
									"functionSelector": "a4ece52c",
									"id": 228,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "pop",
									"nameLocation": "558:3:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 221,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "579:8:2"
									},
									"parameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "561:2:2"
									},
									"returnParameters": {
										"id": 222,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "588:0:2"
									},
									"scope": 237,
									"src": "549:72:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 235,
										"nodeType": "Block",
										"src": "658:33:2",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"hexValue": "42616261",
															"id": 232,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "677:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_860eea7158d3e1f75d549e2d9b523582079ba1f73523ab92bd1d9cc4a280f619",
																"typeString": "literal_string \"Baba\""
															},
															"value": "Baba"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_860eea7158d3e1f75d549e2d9b523582079ba1f73523ab92bd1d9cc4a280f619",
																"typeString": "literal_string \"Baba\""
															}
														],
														"id": 231,
														"name": "Log",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 183,
														"src": "673:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory)"
														}
													},
													"id": 233,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "673:11:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 234,
												"nodeType": "EmitStatement",
												"src": "668:16:2"
											}
										]
									},
									"functionSelector": "fa030ef1",
									"id": 236,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "baba",
									"nameLocation": "636:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "640:2:2"
									},
									"returnParameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "658:0:2"
									},
									"scope": 237,
									"src": "627:64:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 365,
							"src": "378:315:2",
							"usedErrors": [],
							"usedEvents": [
								183
							]
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 238,
										"name": "Yeye",
										"nameLocations": [
											"712:4:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 208,
										"src": "712:4:2"
									},
									"id": 239,
									"nodeType": "InheritanceSpecifier",
									"src": "712:4:2"
								},
								{
									"baseName": {
										"id": 240,
										"name": "Baba",
										"nameLocations": [
											"718:4:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 237,
										"src": "718:4:2"
									},
									"id": 241,
									"nodeType": "InheritanceSpecifier",
									"src": "718:4:2"
								}
							],
							"canonicalName": "Erzi",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 282,
							"linearizedBaseContracts": [
								282,
								237,
								208
							],
							"name": "Erzi",
							"nameLocation": "704:4:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										191,
										219
									],
									"body": {
										"id": 251,
										"nodeType": "Block",
										"src": "845:33:2",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"hexValue": "45727a69",
															"id": 248,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "864:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_abcea0b146a5d767912de24970d2ab9faa1ae8de2e77c56f53d919e46e4be3f4",
																"typeString": "literal_string \"Erzi\""
															},
															"value": "Erzi"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_abcea0b146a5d767912de24970d2ab9faa1ae8de2e77c56f53d919e46e4be3f4",
																"typeString": "literal_string \"Erzi\""
															}
														],
														"id": 247,
														"name": "Log",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 183,
														"src": "860:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory)"
														}
													},
													"id": 249,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "860:11:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 250,
												"nodeType": "EmitStatement",
												"src": "855:16:2"
											}
										]
									},
									"functionSelector": "370ea142",
									"id": 252,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hip",
									"nameLocation": "803:3:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 245,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 243,
												"name": "Yeye",
												"nameLocations": [
													"833:4:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 208,
												"src": "833:4:2"
											},
											{
												"id": 244,
												"name": "Baba",
												"nameLocations": [
													"839:4:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 237,
												"src": "839:4:2"
											}
										],
										"src": "824:20:2"
									},
									"parameters": {
										"id": 242,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "806:2:2"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "845:0:2"
									},
									"scope": 282,
									"src": "794:84:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										199,
										228
									],
									"body": {
										"id": 262,
										"nodeType": "Block",
										"src": "935:33:2",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"hexValue": "45727a69",
															"id": 259,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "954:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_abcea0b146a5d767912de24970d2ab9faa1ae8de2e77c56f53d919e46e4be3f4",
																"typeString": "literal_string \"Erzi\""
															},
															"value": "Erzi"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_abcea0b146a5d767912de24970d2ab9faa1ae8de2e77c56f53d919e46e4be3f4",
																"typeString": "literal_string \"Erzi\""
															}
														],
														"id": 258,
														"name": "Log",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 183,
														"src": "950:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory)"
														}
													},
													"id": 260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "950:11:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 261,
												"nodeType": "EmitStatement",
												"src": "945:16:2"
											}
										]
									},
									"functionSelector": "a4ece52c",
									"id": 263,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "pop",
									"nameLocation": "893:3:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 256,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 254,
												"name": "Yeye",
												"nameLocations": [
													"923:4:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 208,
												"src": "923:4:2"
											},
											{
												"id": 255,
												"name": "Baba",
												"nameLocations": [
													"929:4:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 237,
												"src": "929:4:2"
											}
										],
										"src": "914:20:2"
									},
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "896:2:2"
									},
									"returnParameters": {
										"id": 257,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "935:0:2"
									},
									"scope": 282,
									"src": "884:84:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 271,
										"nodeType": "Block",
										"src": "1003:27:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 266,
															"name": "Yeye",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 208,
															"src": "1013:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_Yeye_$208_$",
																"typeString": "type(contract Yeye)"
															}
														},
														"id": 268,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1018:3:2",
														"memberName": "pop",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 199,
														"src": "1013:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1013:10:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 270,
												"nodeType": "ExpressionStatement",
												"src": "1013:10:2"
											}
										]
									},
									"functionSelector": "572e47ae",
									"id": 272,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "callParent",
									"nameLocation": "983:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 264,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "993:2:2"
									},
									"returnParameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1003:0:2"
									},
									"scope": 282,
									"src": "974:56:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 280,
										"nodeType": "Block",
										"src": "1070:86:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 275,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "1138:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_Erzi_$282_$",
																"typeString": "type(contract super Erzi)"
															}
														},
														"id": 277,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1144:3:2",
														"memberName": "pop",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 228,
														"src": "1138:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 278,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1138:11:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 279,
												"nodeType": "ExpressionStatement",
												"src": "1138:11:2"
											}
										]
									},
									"functionSelector": "b92a50e0",
									"id": 281,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "callParentSuper",
									"nameLocation": "1045:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1060:2:2"
									},
									"returnParameters": {
										"id": 274,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1070:0:2"
									},
									"scope": 282,
									"src": "1036:120:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 365,
							"src": "695:463:2",
							"usedErrors": [],
							"usedEvents": [
								183
							]
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Base1",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 303,
							"linearizedBaseContracts": [
								303
							],
							"name": "Base1",
							"nameLocation": "1169:5:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "1230:63:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 297,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 291,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 289,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 287,
																		"name": "_a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 284,
																		"src": "1248:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"hexValue": "32",
																		"id": 288,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1253:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "1248:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 290,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1258:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1248:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 296,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 294,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 292,
																		"name": "_a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 284,
																		"src": "1263:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"hexValue": "33",
																		"id": 293,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1268:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_3_by_1",
																			"typeString": "int_const 3"
																		},
																		"value": "3"
																	},
																	"src": "1263:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 295,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1273:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1263:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1248:26:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 286,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1240:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1240:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 299,
												"nodeType": "ExpressionStatement",
												"src": "1240:35:2"
											},
											{
												"id": 300,
												"nodeType": "PlaceholderStatement",
												"src": "1285:1:2"
											}
										]
									},
									"id": 302,
									"name": "exactDividedBy2And3",
									"nameLocation": "1190:19:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 284,
												"mutability": "mutable",
												"name": "_a",
												"nameLocation": "1218:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "1210:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 283,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1210:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1209:12:2"
									},
									"src": "1181:112:2",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 365,
							"src": "1160:135:2",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 304,
										"name": "Base1",
										"nameLocations": [
											"1320:5:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 303,
										"src": "1320:5:2"
									},
									"id": 305,
									"nodeType": "InheritanceSpecifier",
									"src": "1320:5:2"
								}
							],
							"canonicalName": "Identifier",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 364,
							"linearizedBaseContracts": [
								364,
								303
							],
							"name": "Identifier",
							"nameLocation": "1306:10:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 321,
										"nodeType": "Block",
										"src": "1587:72:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 318,
															"name": "_dividend",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 307,
															"src": "1642:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 317,
														"name": "getExactDividedBy2And3WithoutModifier",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 348,
														"src": "1604:37:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
															"typeString": "function (uint256) pure returns (uint256,uint256)"
														}
													},
													"id": 319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1604:48:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"functionReturnParameters": 316,
												"id": 320,
												"nodeType": "Return",
												"src": "1597:55:2"
											}
										]
									},
									"functionSelector": "4534a438",
									"id": 322,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 310,
													"name": "_dividend",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 307,
													"src": "1537:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 311,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 309,
												"name": "exactDividedBy2And3",
												"nameLocations": [
													"1517:19:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 363,
												"src": "1517:19:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "1517:30:2"
										}
									],
									"name": "getExactDividedBy2And3",
									"nameLocation": "1439:22:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 308,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "_dividend",
												"nameLocation": "1470:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 322,
												"src": "1462:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 306,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1462:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1461:19:2"
									},
									"returnParameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 313,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 322,
												"src": "1565:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 312,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1565:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 322,
												"src": "1574:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 314,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1574:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1564:18:2"
									},
									"scope": 364,
									"src": "1430:229:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 347,
										"nodeType": "Block",
										"src": "1849:112:2",
										"statements": [
											{
												"assignments": [
													332
												],
												"declarations": [
													{
														"constant": false,
														"id": 332,
														"mutability": "mutable",
														"name": "div2",
														"nameLocation": "1867:4:2",
														"nodeType": "VariableDeclaration",
														"scope": 347,
														"src": "1859:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 331,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1859:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 336,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 333,
														"name": "_dividend",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 324,
														"src": "1874:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "32",
														"id": 334,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1886:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"src": "1874:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1859:28:2"
											},
											{
												"assignments": [
													338
												],
												"declarations": [
													{
														"constant": false,
														"id": 338,
														"mutability": "mutable",
														"name": "div3",
														"nameLocation": "1905:4:2",
														"nodeType": "VariableDeclaration",
														"scope": 347,
														"src": "1897:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 337,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1897:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 342,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 341,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 339,
														"name": "_dividend",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 324,
														"src": "1912:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "33",
														"id": 340,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1924:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3_by_1",
															"typeString": "int_const 3"
														},
														"value": "3"
													},
													"src": "1912:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1897:28:2"
											},
											{
												"expression": {
													"components": [
														{
															"id": 343,
															"name": "div2",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 332,
															"src": "1943:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 344,
															"name": "div3",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 338,
															"src": "1949:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 345,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1942:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"functionReturnParameters": 330,
												"id": 346,
												"nodeType": "Return",
												"src": "1935:19:2"
											}
										]
									},
									"functionSelector": "d2406c78",
									"id": 348,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getExactDividedBy2And3WithoutModifier",
									"nameLocation": "1725:37:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "_dividend",
												"nameLocation": "1771:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "1763:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 323,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1763:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1762:19:2"
									},
									"returnParameters": {
										"id": 330,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 327,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "1827:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 326,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1827:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 329,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "1836:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 328,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1836:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1826:18:2"
									},
									"scope": 364,
									"src": "1716:245:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseModifiers": [
										302
									],
									"body": {
										"id": 362,
										"nodeType": "Block",
										"src": "2017:48:2",
										"statements": [
											{
												"id": 353,
												"nodeType": "PlaceholderStatement",
												"src": "2027:1:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 359,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 357,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 355,
																	"name": "_a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 350,
																	"src": "2046:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "%",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 356,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2051:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "2046:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 358,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2056:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2046:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 354,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2038:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 360,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2038:20:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 361,
												"nodeType": "ExpressionStatement",
												"src": "2038:20:2"
											}
										]
									},
									"id": 363,
									"name": "exactDividedBy2And3",
									"nameLocation": "1976:19:2",
									"nodeType": "ModifierDefinition",
									"overrides": {
										"id": 352,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2008:8:2"
									},
									"parameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 350,
												"mutability": "mutable",
												"name": "_a",
												"nameLocation": "2004:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "1996:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 349,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1996:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1995:12:2"
									},
									"src": "1967:98:2",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 365,
							"src": "1297:770:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:2036:2"
				},
				"id": 2
			},
			"contracts/study2/Import.sol": {
				"ast": {
					"absolutePath": "contracts/study2/Import.sol",
					"exportedSymbols": {
						"Address": [
							650
						],
						"Baba": [
							237
						],
						"Context": [
							177
						],
						"Errors": [
							672
						],
						"Import": [
							391
						],
						"Ownable": [
							147
						],
						"Yeye": [
							208
						]
					},
					"id": 392,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 366,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".21"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:3"
						},
						{
							"absolutePath": "contracts/study/InheritanceTest.sol",
							"file": "contracts/study/InheritanceTest.sol",
							"id": 369,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 392,
							"sourceUnit": 365,
							"src": "103:63:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 367,
										"name": "Yeye",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 208,
										"src": "111:4:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 368,
										"name": "Baba",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 237,
										"src": "117:4:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol",
							"id": 370,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 392,
							"sourceUnit": 651,
							"src": "189:104:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 371,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 392,
							"sourceUnit": 148,
							"src": "322:52:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Import",
							"contractDependencies": [
								208
							],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 391,
							"linearizedBaseContracts": [
								391
							],
							"name": "Import",
							"nameLocation": "385:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 374,
									"libraryName": {
										"id": 372,
										"name": "Address",
										"nameLocations": [
											"434:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 650,
										"src": "434:7:3"
									},
									"nodeType": "UsingForDirective",
									"src": "428:26:3",
									"typeName": {
										"id": 373,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "446:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"constant": false,
									"id": 381,
									"mutability": "mutable",
									"name": "yeye",
									"nameLocation": "488:4:3",
									"nodeType": "VariableDeclaration",
									"scope": 391,
									"src": "483:22:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_Yeye_$208",
										"typeString": "contract Yeye"
									},
									"typeName": {
										"id": 376,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 375,
											"name": "Yeye",
											"nameLocations": [
												"483:4:3"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 208,
											"src": "483:4:3"
										},
										"referencedDeclaration": 208,
										"src": "483:4:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Yeye_$208",
											"typeString": "contract Yeye"
										}
									},
									"value": {
										"arguments": [],
										"expression": {
											"argumentTypes": [],
											"id": 379,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"nodeType": "NewExpression",
											"src": "495:8:3",
											"typeDescriptions": {
												"typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_Yeye_$208_$",
												"typeString": "function () returns (contract Yeye)"
											},
											"typeName": {
												"id": 378,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 377,
													"name": "Yeye",
													"nameLocations": [
														"499:4:3"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 208,
													"src": "499:4:3"
												},
												"referencedDeclaration": 208,
												"src": "499:4:3",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_Yeye_$208",
													"typeString": "contract Yeye"
												}
											}
										},
										"id": 380,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "495:10:3",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Yeye_$208",
											"typeString": "contract Yeye"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 389,
										"nodeType": "Block",
										"src": "579:27:3",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 384,
															"name": "yeye",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 381,
															"src": "589:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_Yeye_$208",
																"typeString": "contract Yeye"
															}
														},
														"id": 386,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "594:3:3",
														"memberName": "hip",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 191,
														"src": "589:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
															"typeString": "function () external"
														}
													},
													"id": 387,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "589:10:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 388,
												"nodeType": "ExpressionStatement",
												"src": "589:10:3"
											}
										]
									},
									"functionSelector": "f8a8fd6d",
									"id": 390,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "test",
									"nameLocation": "563:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 382,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "567:2:3"
									},
									"returnParameters": {
										"id": 383,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "579:0:3"
									},
									"scope": 391,
									"src": "554:52:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 392,
							"src": "376:232:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:577:3"
				},
				"id": 3
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							650
						],
						"Errors": [
							672
						]
					},
					"id": 651,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 393,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:4"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Errors.sol",
							"file": "./Errors.sol",
							"id": 395,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 651,
							"sourceUnit": 673,
							"src": "127:36:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 394,
										"name": "Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 672,
										"src": "135:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 396,
								"nodeType": "StructuredDocumentation",
								"src": "165:67:4",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 650,
							"linearizedBaseContracts": [
								650
							],
							"name": "Address",
							"nameLocation": "241:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 397,
										"nodeType": "StructuredDocumentation",
										"src": "255:75:4",
										"text": " @dev There's no code at `target` (it is not a contract)."
									},
									"errorSelector": "9996b315",
									"id": 401,
									"name": "AddressEmptyCode",
									"nameLocation": "341:16:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 399,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "366:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "358:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 398,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "358:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "357:16:4"
									},
									"src": "335:39:4"
								},
								{
									"body": {
										"id": 447,
										"nodeType": "Block",
										"src": "1361:278:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 415,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 411,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1383:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$650",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$650",
																		"typeString": "library Address"
																	}
																],
																"id": 410,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1375:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 409,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1375:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 412,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1375:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 413,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1389:7:4",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1375:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 414,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 406,
														"src": "1399:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1375:30:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 428,
												"nodeType": "IfStatement",
												"src": "1371:125:4",
												"trueBody": {
													"id": 427,
													"nodeType": "Block",
													"src": "1407:89:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 421,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "1463:4:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Address_$650",
																						"typeString": "library Address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Address_$650",
																						"typeString": "library Address"
																					}
																				],
																				"id": 420,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "1455:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 419,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "1455:7:4",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 422,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1455:13:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 423,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1469:7:4",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "1455:21:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 424,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 406,
																		"src": "1478:6:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 416,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 672,
																		"src": "1428:6:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$672_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 418,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1435:19:4",
																	"memberName": "InsufficientBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 660,
																	"src": "1428:26:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 425,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1428:57:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 426,
															"nodeType": "RevertStatement",
															"src": "1421:64:4"
														}
													]
												}
											},
											{
												"assignments": [
													430,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 430,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1512:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 447,
														"src": "1507:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 429,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1507:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 437,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 435,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1555:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 431,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 404,
																"src": "1525:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 432,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1535:4:4",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1525:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 434,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 433,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 406,
																"src": "1547:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1525:29:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 436,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1525:33:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1506:52:4"
											},
											{
												"condition": {
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1572:8:4",
													"subExpression": {
														"id": 438,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 430,
														"src": "1573:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 446,
												"nodeType": "IfStatement",
												"src": "1568:65:4",
												"trueBody": {
													"id": 445,
													"nodeType": "Block",
													"src": "1582:51:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 440,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 672,
																		"src": "1603:6:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$672_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 442,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1610:10:4",
																	"memberName": "FailedCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 663,
																	"src": "1603:17:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 443,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1603:19:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 444,
															"nodeType": "RevertStatement",
															"src": "1596:26:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 402,
										"nodeType": "StructuredDocumentation",
										"src": "380:905:4",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 448,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "1299:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 404,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1325:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 448,
												"src": "1309:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 403,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1309:15:4",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 406,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1344:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 448,
												"src": "1336:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 405,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1336:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1308:43:4"
									},
									"returnParameters": {
										"id": 408,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1361:0:4"
									},
									"scope": 650,
									"src": "1290:349:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 464,
										"nodeType": "Block",
										"src": "2573:62:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 459,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 451,
															"src": "2612:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 460,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "2620:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 461,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2626:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 458,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 515,
														"src": "2590:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256) returns (bytes memory)"
														}
													},
													"id": 462,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2590:38:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 457,
												"id": 463,
												"nodeType": "Return",
												"src": "2583:45:4"
											}
										]
									},
									"documentation": {
										"id": 449,
										"nodeType": "StructuredDocumentation",
										"src": "1645:834:4",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {Errors.FailedCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."
									},
									"id": 465,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "2493:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 454,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 451,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2514:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 465,
												"src": "2506:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 450,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2506:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2535:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 465,
												"src": "2522:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 452,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2522:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2505:35:4"
									},
									"returnParameters": {
										"id": 457,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 456,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 465,
												"src": "2559:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 455,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2559:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2558:14:4"
									},
									"scope": 650,
									"src": "2484:151:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 514,
										"nodeType": "Block",
										"src": "3072:294:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 483,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 479,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3094:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$650",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$650",
																		"typeString": "library Address"
																	}
																],
																"id": 478,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3086:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 477,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3086:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 480,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3086:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 481,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3100:7:4",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "3086:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 482,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 472,
														"src": "3110:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3086:29:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 496,
												"nodeType": "IfStatement",
												"src": "3082:123:4",
												"trueBody": {
													"id": 495,
													"nodeType": "Block",
													"src": "3117:88:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 489,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "3173:4:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Address_$650",
																						"typeString": "library Address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Address_$650",
																						"typeString": "library Address"
																					}
																				],
																				"id": 488,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "3165:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 487,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "3165:7:4",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 490,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3165:13:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 491,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3179:7:4",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "3165:21:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 492,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 472,
																		"src": "3188:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 484,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 672,
																		"src": "3138:6:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$672_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 486,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3145:19:4",
																	"memberName": "InsufficientBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 660,
																	"src": "3138:26:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 493,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3138:56:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 494,
															"nodeType": "RevertStatement",
															"src": "3131:63:4"
														}
													]
												}
											},
											{
												"assignments": [
													498,
													500
												],
												"declarations": [
													{
														"constant": false,
														"id": 498,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3220:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 514,
														"src": "3215:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 497,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3215:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 500,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3242:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 514,
														"src": "3229:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 499,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3229:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 507,
												"initialValue": {
													"arguments": [
														{
															"id": 505,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 470,
															"src": "3282:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 501,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 468,
																"src": "3256:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 502,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3263:4:4",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "3256:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 504,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 503,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 472,
																"src": "3275:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3256:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 506,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3256:31:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3214:73:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 509,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 468,
															"src": "3331:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 510,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 498,
															"src": "3339:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 511,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 500,
															"src": "3348:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 508,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 607,
														"src": "3304:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3304:55:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 476,
												"id": 513,
												"nodeType": "Return",
												"src": "3297:62:4"
											}
										]
									},
									"documentation": {
										"id": 466,
										"nodeType": "StructuredDocumentation",
										"src": "2641:313:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."
									},
									"id": 515,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "2968:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 473,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 468,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2998:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "2990:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 467,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2990:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 470,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3019:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "3006:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 469,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3006:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 472,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3033:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "3025:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 471,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3025:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2989:50:4"
									},
									"returnParameters": {
										"id": 476,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 475,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "3058:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 474,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3058:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3057:14:4"
									},
									"scope": 650,
									"src": "2959:407:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 540,
										"nodeType": "Block",
										"src": "3605:154:4",
										"statements": [
											{
												"assignments": [
													526,
													528
												],
												"declarations": [
													{
														"constant": false,
														"id": 526,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3621:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 540,
														"src": "3616:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 525,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3616:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 528,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3643:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 540,
														"src": "3630:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 527,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3630:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 533,
												"initialValue": {
													"arguments": [
														{
															"id": 531,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 520,
															"src": "3675:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 529,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 518,
															"src": "3657:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 530,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3664:10:4",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "3657:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 532,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3657:23:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3615:65:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 535,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 518,
															"src": "3724:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 536,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 526,
															"src": "3732:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 537,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 528,
															"src": "3741:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 534,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 607,
														"src": "3697:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 538,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3697:55:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 524,
												"id": 539,
												"nodeType": "Return",
												"src": "3690:62:4"
											}
										]
									},
									"documentation": {
										"id": 516,
										"nodeType": "StructuredDocumentation",
										"src": "3372:128:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."
									},
									"id": 541,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "3514:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 521,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 518,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3541:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 541,
												"src": "3533:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 517,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3533:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 520,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3562:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 541,
												"src": "3549:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 519,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3549:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3532:35:4"
									},
									"returnParameters": {
										"id": 524,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 523,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 541,
												"src": "3591:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 522,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3591:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3590:14:4"
									},
									"scope": 650,
									"src": "3505:254:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 566,
										"nodeType": "Block",
										"src": "3997:156:4",
										"statements": [
											{
												"assignments": [
													552,
													554
												],
												"declarations": [
													{
														"constant": false,
														"id": 552,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4013:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 566,
														"src": "4008:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 551,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4008:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 554,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4035:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 566,
														"src": "4022:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 553,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4022:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 559,
												"initialValue": {
													"arguments": [
														{
															"id": 557,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 546,
															"src": "4069:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 555,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 544,
															"src": "4049:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 556,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4056:12:4",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "4049:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 558,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4049:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4007:67:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 561,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 544,
															"src": "4118:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 562,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 552,
															"src": "4126:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 563,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 554,
															"src": "4135:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 560,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 607,
														"src": "4091:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 564,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4091:55:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 550,
												"id": 565,
												"nodeType": "Return",
												"src": "4084:62:4"
											}
										]
									},
									"documentation": {
										"id": 542,
										"nodeType": "StructuredDocumentation",
										"src": "3765:130:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."
									},
									"id": 567,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "3909:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 544,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3938:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "3930:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 543,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3930:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 546,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3959:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "3946:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 545,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3946:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3929:35:4"
									},
									"returnParameters": {
										"id": 550,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "3983:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 548,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3983:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3982:14:4"
									},
									"scope": 650,
									"src": "3900:253:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 606,
										"nodeType": "Block",
										"src": "4579:424:4",
										"statements": [
											{
												"condition": {
													"id": 580,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4593:8:4",
													"subExpression": {
														"id": 579,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 572,
														"src": "4594:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 604,
													"nodeType": "Block",
													"src": "4653:344:4",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 595,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 589,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 586,
																			"name": "returndata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 574,
																			"src": "4841:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 587,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4852:6:4",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "4841:17:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 588,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4862:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "4841:22:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 594,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"id": 590,
																				"name": "target",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 570,
																				"src": "4867:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 591,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "4874:4:4",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "4867:11:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 592,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4879:6:4",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "4867:18:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 593,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4889:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "4867:23:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "4841:49:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 601,
															"nodeType": "IfStatement",
															"src": "4837:119:4",
															"trueBody": {
																"id": 600,
																"nodeType": "Block",
																"src": "4892:64:4",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 597,
																					"name": "target",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 570,
																					"src": "4934:6:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 596,
																				"name": "AddressEmptyCode",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 401,
																				"src": "4917:16:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																					"typeString": "function (address) pure returns (error)"
																				}
																			},
																			"id": 598,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4917:24:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 599,
																		"nodeType": "RevertStatement",
																		"src": "4910:31:4"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 602,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 574,
																"src": "4976:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 578,
															"id": 603,
															"nodeType": "Return",
															"src": "4969:17:4"
														}
													]
												},
												"id": 605,
												"nodeType": "IfStatement",
												"src": "4589:408:4",
												"trueBody": {
													"id": 585,
													"nodeType": "Block",
													"src": "4603:44:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 582,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 574,
																		"src": "4625:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 581,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 649,
																	"src": "4617:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 583,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4617:19:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 584,
															"nodeType": "ExpressionStatement",
															"src": "4617:19:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 568,
										"nodeType": "StructuredDocumentation",
										"src": "4159:257:4",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n of an unsuccessful call."
									},
									"id": 607,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "4430:26:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 575,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 570,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4474:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 607,
												"src": "4466:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 569,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4466:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 572,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "4495:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 607,
												"src": "4490:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 571,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4490:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 574,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "4525:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 607,
												"src": "4512:23:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 573,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4512:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:85:4"
									},
									"returnParameters": {
										"id": 578,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 577,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 607,
												"src": "4565:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 576,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4565:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4564:14:4"
									},
									"scope": 650,
									"src": "4421:582:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 628,
										"nodeType": "Block",
										"src": "5307:122:4",
										"statements": [
											{
												"condition": {
													"id": 618,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5321:8:4",
													"subExpression": {
														"id": 617,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 610,
														"src": "5322:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 626,
													"nodeType": "Block",
													"src": "5381:42:4",
													"statements": [
														{
															"expression": {
																"id": 624,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 612,
																"src": "5402:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 616,
															"id": 625,
															"nodeType": "Return",
															"src": "5395:17:4"
														}
													]
												},
												"id": 627,
												"nodeType": "IfStatement",
												"src": "5317:106:4",
												"trueBody": {
													"id": 623,
													"nodeType": "Block",
													"src": "5331:44:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 620,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 612,
																		"src": "5353:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 619,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 649,
																	"src": "5345:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 621,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5345:19:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 622,
															"nodeType": "ExpressionStatement",
															"src": "5345:19:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 608,
										"nodeType": "StructuredDocumentation",
										"src": "5009:191:4",
										"text": " @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {Errors.FailedCall} error."
									},
									"id": 629,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "5214:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 610,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "5236:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 629,
												"src": "5231:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 609,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5231:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 612,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5258:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 629,
												"src": "5245:23:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 611,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5245:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5230:39:4"
									},
									"returnParameters": {
										"id": 616,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 615,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 629,
												"src": "5293:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 614,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5293:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5292:14:4"
									},
									"scope": 650,
									"src": "5205:224:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 648,
										"nodeType": "Block",
										"src": "5598:432:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 638,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 635,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 632,
															"src": "5674:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 636,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5685:6:4",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5674:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 637,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5694:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5674:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 646,
													"nodeType": "Block",
													"src": "5973:51:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 641,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 672,
																		"src": "5994:6:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$672_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 643,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6001:10:4",
																	"memberName": "FailedCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 663,
																	"src": "5994:17:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 644,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5994:19:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 645,
															"nodeType": "RevertStatement",
															"src": "5987:26:4"
														}
													]
												},
												"id": 647,
												"nodeType": "IfStatement",
												"src": "5670:354:4",
												"trueBody": {
													"id": 640,
													"nodeType": "Block",
													"src": "5697:270:4",
													"statements": [
														{
															"AST": {
																"nativeSrc": "5824:133:4",
																"nodeType": "YulBlock",
																"src": "5824:133:4",
																"statements": [
																	{
																		"nativeSrc": "5842:40:4",
																		"nodeType": "YulVariableDeclaration",
																		"src": "5842:40:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nativeSrc": "5871:10:4",
																					"nodeType": "YulIdentifier",
																					"src": "5871:10:4"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "5865:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "5865:5:4"
																			},
																			"nativeSrc": "5865:17:4",
																			"nodeType": "YulFunctionCall",
																			"src": "5865:17:4"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nativeSrc": "5846:15:4",
																				"nodeType": "YulTypedName",
																				"src": "5846:15:4",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "5910:2:4",
																							"nodeType": "YulLiteral",
																							"src": "5910:2:4",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nativeSrc": "5914:10:4",
																							"nodeType": "YulIdentifier",
																							"src": "5914:10:4"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "5906:3:4",
																						"nodeType": "YulIdentifier",
																						"src": "5906:3:4"
																					},
																					"nativeSrc": "5906:19:4",
																					"nodeType": "YulFunctionCall",
																					"src": "5906:19:4"
																				},
																				{
																					"name": "returndata_size",
																					"nativeSrc": "5927:15:4",
																					"nodeType": "YulIdentifier",
																					"src": "5927:15:4"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5899:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "5899:6:4"
																			},
																			"nativeSrc": "5899:44:4",
																			"nodeType": "YulFunctionCall",
																			"src": "5899:44:4"
																		},
																		"nativeSrc": "5899:44:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "5899:44:4"
																	}
																]
															},
															"evmVersion": "cancun",
															"externalReferences": [
																{
																	"declaration": 632,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5871:10:4",
																	"valueSize": 1
																},
																{
																	"declaration": 632,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5914:10:4",
																	"valueSize": 1
																}
															],
															"flags": [
																"memory-safe"
															],
															"id": 639,
															"nodeType": "InlineAssembly",
															"src": "5799:158:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 630,
										"nodeType": "StructuredDocumentation",
										"src": "5435:103:4",
										"text": " @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}."
									},
									"id": 649,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "5552:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 633,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 632,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5573:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 649,
												"src": "5560:23:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 631,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5560:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5559:25:4"
									},
									"returnParameters": {
										"id": 634,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5598:0:4"
									},
									"scope": 650,
									"src": "5543:487:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 651,
							"src": "233:5799:4",
							"usedErrors": [
								401
							],
							"usedEvents": []
						}
					],
					"src": "101:5932:4"
				},
				"id": 4
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Errors.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Errors.sol",
					"exportedSymbols": {
						"Errors": [
							672
						]
					},
					"id": 673,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 652,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "100:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Errors",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 653,
								"nodeType": "StructuredDocumentation",
								"src": "126:284:5",
								"text": " @dev Collection of common custom errors used in multiple contracts\n IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n It is recommended to avoid relying on the error API for critical functionality.\n _Available since v5.1._"
							},
							"fullyImplemented": true,
							"id": 672,
							"linearizedBaseContracts": [
								672
							],
							"name": "Errors",
							"nameLocation": "419:6:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 654,
										"nodeType": "StructuredDocumentation",
										"src": "432:94:5",
										"text": " @dev The ETH balance of the account is not enough to perform the operation."
									},
									"errorSelector": "cf479181",
									"id": 660,
									"name": "InsufficientBalance",
									"nameLocation": "537:19:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 659,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 656,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "565:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 660,
												"src": "557:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 655,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "557:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 658,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "582:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 660,
												"src": "574:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 657,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "574:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "556:33:5"
									},
									"src": "531:59:5"
								},
								{
									"documentation": {
										"id": 661,
										"nodeType": "StructuredDocumentation",
										"src": "596:89:5",
										"text": " @dev A call to an address target failed. The target may have reverted."
									},
									"errorSelector": "d6bda275",
									"id": 663,
									"name": "FailedCall",
									"nameLocation": "696:10:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "706:2:5"
									},
									"src": "690:19:5"
								},
								{
									"documentation": {
										"id": 664,
										"nodeType": "StructuredDocumentation",
										"src": "715:46:5",
										"text": " @dev The deployment failed."
									},
									"errorSelector": "b06ebf3d",
									"id": 666,
									"name": "FailedDeployment",
									"nameLocation": "772:16:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 665,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "788:2:5"
									},
									"src": "766:25:5"
								},
								{
									"documentation": {
										"id": 667,
										"nodeType": "StructuredDocumentation",
										"src": "797:58:5",
										"text": " @dev A necessary precompile is missing."
									},
									"errorSelector": "42b01bce",
									"id": 671,
									"name": "MissingPrecompile",
									"nameLocation": "866:17:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 670,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 669,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "884:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 668,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "884:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "883:9:5"
									},
									"src": "860:33:5"
								}
							],
							"scope": 673,
							"src": "411:484:5",
							"usedErrors": [
								660,
								663,
								666,
								671
							],
							"usedEvents": []
						}
					],
					"src": "100:796:5"
				},
				"id": 5
			}
		}
	}
}