/**
 * Minified by jsDelivr using Terser v5.19.2.
 * Original file: /npm/x@0.1.2/index.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
"use strict";const path=require("path"),Denque=require("denque"),Parser=require("parse5/lib/parser"),vinylFile=require("vinyl-file"),pify=require("pify"),async=pify(require("async")),fs=pify(require("fs")),util=require("./lib/util");module.exports=class{constructor(e){this.opts=e||{},this.opts.format=e.format||/^x-(.+)$/,this.opts.resolvers=e.resolvers||["."],this.opts.cwd=e.cwd||process.cwd(),this.opts.base=e.base||this.opts.cwd,this.opts.directives=e.directives||{},this._resolvePathMemo=Object.create(null),this._resolveFileMemo=Object.create(null),this._parser=new Parser,this._parser._bootstrap=(e,t)=>{Parser.prototype._bootstrap.call(this._parser,e,t),this._parser.tokenizer._isDuplicateAttr=()=>!1},this.ast=Symbol(),this.file=Symbol(),this.dirtyNodes=Symbol(),this.pipeline=Symbol(),this.linkAttr=Symbol(),this.lastFile=Symbol()}resolvePath(e,t=[]){let s=this.opts.resolvers.concat(t),i=JSON.stringify({filePath:e,paths:s});if(i in this._resolvePathMemo)return this._resolvePathMemo[i];let r=s.map((t=>path.join(this.opts.cwd,t,e)));return async.detect(r,((e,t)=>{fs.access(e,(e=>t(null,!e)))})).then((t=>{if(t)return path.normalize(path.resolve(t));throw new Error(`Could not resolve ${e}`)}))}resolveFile(e){return e in this._resolveFileMemo?this._resolveFileMemo[e]:this._resolveFileMemo[e]=vinylFile.read(e,{cwd:this.opts.cwd,base:this.opts.base})}getDirective(e){return(this.opts.format.exec(e)||[])[1]}_initPipeline(e,t){return e[this.dirtyNodes]=new Denque,async.each(util.walkNodes(e),((s,i)=>{let r,l;async.filterSeries(s.attrs,((o,h)=>{let n=this.getDirective(o.name);if(n){if(!(n in this.opts.directives))return i(new Error(`Unknown directive: ${n}`));r||(r=s[this.pipeline]=new Denque,e[this.dirtyNodes].push(s)),r.push(this.opts.directives[n](o.value,t,this))}else"src"!==o.name&&"href"!==o.name||util.isExternal(o.value)||(s[this.linkAttr]=o,l=o.value);h(null,!n)})).then((t=>{if(s.attrs=t,r&&l){let t=[];l.startsWith("/")||(t=path.relative(this.opts.cwd,e[this.file].dirname)),this.resolvePath(l,t).then((e=>this.resolveFile(e))).then((e=>s[this.lastFile]=e)).then((()=>i()),(e=>i(e)))}else i()}))})).then((()=>e))}_execPipeline(e){let t=e[this.dirtyNodes];if(t){let e;return async.whilst((()=>e=t.shift()),(t=>{let s,i=e[this.pipeline];i?async.whilst((()=>s=i.shift()),(t=>s(e,t))).then((()=>t()),(e=>t(e))):t()}))}}_processTargets(e,t){return async.each(e,((e,s)=>{let i;i="string"==typeof e?this.resolvePath(e).then((e=>this.resolveFile(e))):Promise.resolve(e),i.then((e=>{t.output.add(e);let s=this._parser.parse(e.contents.toString());return e[this.ast]=s,s[this.file]=e,s})).then((e=>this._initPipeline(e,t))).then((e=>this._execPipeline(e))).then((()=>s()),(e=>s(e)))}))}_runPostHooks(e){let t;return async.whilst((()=>t=e.postHooks.shift()),(e=>t(e)))}_serializeASTs(e){return async.each(e.output,((e,t)=>{e[this.ast]&&(e.contents=new Buffer(util.parse5.serialize(e[this.ast]))),t()}))}process(e){let t={output:new Set,postHooks:new Denque};return Array.isArray(e)||(e=[e]),this._processTargets(e,t).then((()=>this._runPostHooks(t))).then((()=>this._serializeASTs(t))).then((()=>[...t.output]))}};
//# sourceMappingURL=/sm/efce3b4b98248e6aab1fdd9156d32baf93ed68fa1a0811d249dc4be981b29449.map